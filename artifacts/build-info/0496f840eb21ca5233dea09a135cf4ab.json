{"id":"0496f840eb21ca5233dea09a135cf4ab","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/core/BasePaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.20;\r\n\r\n/* solhint-disable reason-string */\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../interfaces/IPaymaster.sol\";\r\nimport \"../interfaces/IEntryPoint.sol\";\r\nimport \"./Helpers.sol\";\r\n\r\n/**\r\n * Helper class for creating a paymaster.\r\n * provides helper methods for staking.\r\n * Validates that the postOp is called only by the entryPoint.\r\n */\r\nabstract contract BasePaymaster is IPaymaster, Ownable {\r\n    IEntryPoint public immutable entryPoint;\r\n\r\n    constructor(IEntryPoint _entryPoint) Ownable(tx.origin) {\r\n        entryPoint = _entryPoint;\r\n    }\r\n\r\n    /// @inheritdoc IPaymaster\r\n    function validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external override returns (bytes memory context, uint256 validationData) {\r\n        _requireFromEntryPoint();\r\n        return _validatePaymasterUserOp(userOp, userOpHash, maxCost);\r\n    }\r\n\r\n    /**\r\n     * Validate a user operation.\r\n     * @param userOp     - The user operation.\r\n     * @param userOpHash - The hash of the user operation.\r\n     * @param maxCost    - The maximum cost of the user operation.\r\n     */\r\n    function _validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) internal virtual returns (bytes memory context, uint256 validationData);\r\n\r\n    /// @inheritdoc IPaymaster\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) external override {\r\n        _requireFromEntryPoint();\r\n        _postOp(mode, context, actualGasCost);\r\n    }\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * (verified to be called only through the entryPoint)\r\n     * @dev If subclass returns a non-empty context from validatePaymasterUserOp,\r\n     *      it must also implement this method.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. still has to pay for gas.\r\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\r\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\r\n     */\r\n    function _postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) internal virtual {\r\n        (mode, context, actualGasCost); // unused params\r\n        // subclass must override this method if validatePaymasterUserOp returns a context\r\n        revert(\"must override\");\r\n    }\r\n\r\n    /**\r\n     * Add a deposit for this paymaster, used for paying for transaction fees.\r\n     */\r\n    function deposit() public payable {\r\n        entryPoint.depositTo{value: msg.value}(address(this));\r\n    }\r\n\r\n    /**\r\n     * Withdraw value from the deposit.\r\n     * @param withdrawAddress - Target to send to.\r\n     * @param amount          - Amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 amount\r\n    ) public onlyOwner {\r\n        entryPoint.withdrawTo(withdrawAddress, amount);\r\n    }\r\n\r\n    /**\r\n     * Add stake for this paymaster.\r\n     * This method can also carry eth value to add to the current stake.\r\n     * @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased.\r\n     */\r\n    function addStake(uint32 unstakeDelaySec) external payable onlyOwner {\r\n        entryPoint.addStake{value: msg.value}(unstakeDelaySec);\r\n    }\r\n\r\n    /**\r\n     * Return current paymaster's deposit on the entryPoint.\r\n     */\r\n    function getDeposit() public view returns (uint256) {\r\n        return entryPoint.balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * Unlock the stake, in order to withdraw it.\r\n     * The paymaster can't serve requests once unlocked, until it calls addStake again\r\n     */\r\n    function unlockStake() external onlyOwner {\r\n        entryPoint.unlockStake();\r\n    }\r\n\r\n    /**\r\n     * Withdraw the entire paymaster's stake.\r\n     * stake must be unlocked first (and then wait for the unstakeDelay to be over)\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external onlyOwner {\r\n        entryPoint.withdrawStake(withdrawAddress);\r\n    }\r\n\r\n    /**\r\n     * Validate the call is made from a valid entrypoint\r\n     */\r\n    function _requireFromEntryPoint() internal virtual {\r\n        require(msg.sender == address(entryPoint), \"Sender not EntryPoint\");\r\n    }\r\n}"},"contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\n/**\r\n * Returned data from validateUserOp.\r\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and\r\n * parsed by `_parseValidationData`.\r\n * @param aggregator  - address(0) - The account validated the signature by itself.\r\n *                      address(1) - The account failed to validate the signature.\r\n *                      otherwise - This is an address of a signature aggregator that must\r\n *                                  be used to validate the signature.\r\n * @param validAfter  - This UserOp is valid only after this timestamp.\r\n * @param validaUntil - This UserOp is valid only up to this timestamp.\r\n */\r\nstruct ValidationData {\r\n    address aggregator;\r\n    uint48 validAfter;\r\n    uint48 validUntil;\r\n}\r\n\r\n/**\r\n * Extract sigFailed, validAfter, validUntil.\r\n * Also convert zero validUntil to type(uint48).max.\r\n * @param validationData - The packed validation data.\r\n */\r\nfunction _parseValidationData(\r\n    uint validationData\r\n) pure returns (ValidationData memory data) {\r\n    address aggregator = address(uint160(validationData));\r\n    uint48 validUntil = uint48(validationData >> 160);\r\n    if (validUntil == 0) {\r\n        validUntil = type(uint48).max;\r\n    }\r\n    uint48 validAfter = uint48(validationData >> (48 + 160));\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Intersect account and paymaster ranges.\r\n * @param validationData          - The packed validation data of the account.\r\n * @param paymasterValidationData - The packed validation data of the paymaster.\r\n */\r\nfunction _intersectTimeRange(\r\n    uint256 validationData,\r\n    uint256 paymasterValidationData\r\n) pure returns (ValidationData memory) {\r\n    ValidationData memory accountValidationData = _parseValidationData(\r\n        validationData\r\n    );\r\n    ValidationData memory pmValidationData = _parseValidationData(\r\n        paymasterValidationData\r\n    );\r\n    address aggregator = accountValidationData.aggregator;\r\n    if (aggregator == address(0)) {\r\n        aggregator = pmValidationData.aggregator;\r\n    }\r\n    uint48 validAfter = accountValidationData.validAfter;\r\n    uint48 validUntil = accountValidationData.validUntil;\r\n    uint48 pmValidAfter = pmValidationData.validAfter;\r\n    uint48 pmValidUntil = pmValidationData.validUntil;\r\n\r\n    if (validAfter < pmValidAfter) validAfter = pmValidAfter;\r\n    if (validUntil > pmValidUntil) validUntil = pmValidUntil;\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp.\r\n * @param data - The ValidationData to pack.\r\n */\r\nfunction _packValidationData(\r\n    ValidationData memory data\r\n) pure returns (uint256) {\r\n    return\r\n        uint160(data.aggregator) |\r\n        (uint256(data.validUntil) << 160) |\r\n        (uint256(data.validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\r\n * @param sigFailed  - True for signature failure, false for success.\r\n * @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\r\n * @param validAfter - First timestamp this UserOperation is valid.\r\n */\r\nfunction _packValidationData(\r\n    bool sigFailed,\r\n    uint48 validUntil,\r\n    uint48 validAfter\r\n) pure returns (uint256) {\r\n    return\r\n        (sigFailed ? 1 : 0) |\r\n        (uint256(validUntil) << 160) |\r\n        (uint256(validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * keccak function over calldata.\r\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\r\n */\r\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\r\n        assembly {\r\n            let mem := mload(0x40)\r\n            let len := data.length\r\n            calldatacopy(mem, data.offset, len)\r\n            ret := keccak256(mem, len)\r\n        }\r\n    }"},"contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\n/**\r\n * Aggregated Signatures validator.\r\n */\r\ninterface IAggregator {\r\n    /**\r\n     * Validate aggregated signature.\r\n     * Revert if the aggregated signature does not match the given list of operations.\r\n     * @param userOps   - Array of UserOperations to validate the signature for.\r\n     * @param signature - The aggregated signature.\r\n     */\r\n    function validateSignatures(\r\n        UserOperation[] calldata userOps,\r\n        bytes calldata signature\r\n    ) external view;\r\n\r\n    /**\r\n     * Validate signature of a single userOp.\r\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\r\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\r\n     * @param userOp        - The userOperation received from the user.\r\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\r\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\r\n     */\r\n    function validateUserOpSignature(\r\n        UserOperation calldata userOp\r\n    ) external view returns (bytes memory sigForUserOp);\r\n\r\n    /**\r\n     * Aggregate multiple signatures into a single value.\r\n     * This method is called off-chain to calculate the signature to pass with handleOps()\r\n     * bundler MAY use optimized custom code perform this aggregation.\r\n     * @param userOps              - Array of UserOperations to collect the signatures from.\r\n     * @return aggregatedSignature - The aggregated signature.\r\n     */\r\n    function aggregateSignatures(\r\n        UserOperation[] calldata userOps\r\n    ) external view returns (bytes memory aggregatedSignature);\r\n}\r\n"},"contracts/interfaces/IEntryPoint.sol":{"content":"/**\r\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\r\n ** Only one instance required on each chain.\r\n **/\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable reason-string */\r\n\r\nimport \"./UserOperation.sol\";\r\nimport \"./IStakeManager.sol\";\r\nimport \"./IAggregator.sol\";\r\nimport \"./INonceManager.sol\";\r\n\r\ninterface IEntryPoint is IStakeManager, INonceManager {\r\n    /***\r\n     * An event emitted after each successful request.\r\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\r\n     * @param sender        - The account that generates this request.\r\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\r\n     * @param nonce         - The nonce value from the request.\r\n     * @param success       - True if the sender transaction succeeded, false if reverted.\r\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\r\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\r\n     *                        validation and execution).\r\n     */\r\n    event UserOperationEvent(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address indexed paymaster,\r\n        uint256 nonce,\r\n        bool success,\r\n        uint256 actualGasCost,\r\n        uint256 actualGasUsed\r\n    );\r\n\r\n    /**\r\n     * Account \"sender\" was deployed.\r\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\r\n     * @param sender     - The account that is deployed\r\n     * @param factory    - The factory used to deploy this account (in the initCode)\r\n     * @param paymaster  - The paymaster used by this UserOp\r\n     */\r\n    event AccountDeployed(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address factory,\r\n        address paymaster\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event UserOperationRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event PostOpRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted by handleOps(), before starting the execution loop.\r\n     * Any event emitted before this event, is part of the validation.\r\n     */\r\n    event BeforeExecution();\r\n\r\n    /**\r\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\r\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\r\n     */\r\n    event SignatureAggregatorChanged(address indexed aggregator);\r\n\r\n    /**\r\n     * A custom revert error of handleOps, to identify the offending op.\r\n     * Should be caught in off-chain handleOps simulation and not happen on-chain.\r\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\r\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\r\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\r\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\r\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\r\n     *                  so a failure can be attributed to the correct entity.\r\n     */\r\n    error FailedOp(uint256 opIndex, string reason);\r\n\r\n    error PostOpReverted(bytes returnData);\r\n\r\n    /**\r\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\r\n     * @param aggregator The aggregator that failed to verify the signature\r\n     */\r\n    error SignatureValidationFailed(address aggregator);\r\n\r\n    // Return value of getSenderAddress.\r\n    error SenderAddressResult(address sender);\r\n\r\n    // UserOps handled, per aggregator.\r\n    struct UserOpsPerAggregator {\r\n        UserOperation[] userOps;\r\n        // Aggregator address\r\n        IAggregator aggregator;\r\n        // Aggregated signature\r\n        bytes signature;\r\n    }\r\n\r\n    /**\r\n     * Execute a batch of UserOperations.\r\n     * No signature aggregator is used.\r\n     * If any account requires an aggregator (that is, it returned an aggregator when\r\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\r\n     * @param ops         - The operations to execute.\r\n     * @param beneficiary - The address to receive the fees.\r\n     */\r\n    function handleOps(\r\n        UserOperation[] calldata ops,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Execute a batch of UserOperation with Aggregators\r\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\r\n     * @param beneficiary      - The address to receive the fees.\r\n     */\r\n    function handleAggregatedOps(\r\n        UserOpsPerAggregator[] calldata opsPerAggregator,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Generate a request Id - unique identifier for this request.\r\n     * The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\r\n     * @param userOp - The user operation to generate the request ID for.\r\n     */\r\n    function getUserOpHash(\r\n        UserOperation calldata userOp\r\n    ) external view returns (bytes32);\r\n\r\n    /**\r\n     * Gas and return values during simulation.\r\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\r\n     * @param prefund          - The required prefund for this operation\r\n     * @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\r\n     * @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\r\n     */\r\n    struct ReturnInfo {\r\n        uint256 preOpGas;\r\n        uint256 prefund;\r\n        bool sigFailed;\r\n        uint48 validAfter;\r\n        uint48 validUntil;\r\n        bytes paymasterContext;\r\n    }\r\n\r\n    /**\r\n     * Returned aggregated signature info:\r\n     * The aggregator returned by the account, and its current stake.\r\n     */\r\n    struct AggregatorStakeInfo {\r\n        address aggregator;\r\n        StakeInfo stakeInfo;\r\n    }\r\n\r\n    /**\r\n     * Get counterfactual sender address.\r\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\r\n     * This method always revert, and returns the address in SenderAddressResult error\r\n     * @param initCode - The constructor code to be passed into the UserOperation.\r\n     */\r\n    function getSenderAddress(bytes memory initCode) external;\r\n\r\n}\r\n"},"contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\ninterface INonceManager {\r\n\r\n    /**\r\n     * Return the next nonce for this sender.\r\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\r\n     * But UserOp with different keys can come with arbitrary order.\r\n     *\r\n     * @param sender the account address\r\n     * @param key the high 192 bit of the nonce\r\n     * @return nonce a full nonce to pass for next UserOp with this sender.\r\n     */\r\n    function getNonce(address sender, uint192 key)\r\n    external view returns (uint256 nonce);\r\n\r\n    /**\r\n     * Manually increment the nonce of the sender.\r\n     * This method is exposed just for completeness..\r\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\r\n     * as the EntryPoint will update the nonce regardless.\r\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\r\n     * UserOperations will not pay extra for the first transaction with a given key.\r\n     */\r\n    function incrementNonce(uint192 key) external;\r\n}\r\n"},"contracts/interfaces/IOracle.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\ninterface IOracle {\r\n\r\n    /**\r\n     * return amount of tokens that are required to receive that much eth.\r\n     */\r\n    function getTokenValueOfEth(uint256 ethOutput) external view returns (uint256 tokenInput);\r\n    function decimals() external view returns (uint8);\r\n\r\n    function latestRoundData()\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n\r\n}"},"contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\n/**\r\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\r\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\r\n */\r\ninterface IPaymaster {\r\n    enum PostOpMode {\r\n        // User op succeeded.\r\n        opSucceeded,\r\n        // User op reverted. Still has to pay for gas.\r\n        opReverted,\r\n        // User op succeeded, but caused postOp to revert.\r\n        // Only used internally in the EntryPoint - Paymasters will not be called again.\r\n        postOpReverted\r\n    }\r\n\r\n    /**\r\n     * Payment validation: check if paymaster agrees to pay.\r\n     * Must verify sender is the entryPoint.\r\n     * Revert to reject this request.\r\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\r\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\r\n     * @param userOp          - The user operation.\r\n     * @param userOpHash      - Hash of the user's request data.\r\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\r\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\r\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\r\n     *                          value of validateUserOperation.\r\n     *                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\r\n     *                                                    otherwise, an address of an \"authorizer\" contract.\r\n     *                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\r\n     *                          <6-byte> validAfter - first timestamp this operation is valid\r\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external returns (bytes memory context, uint256 validationData);\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * Must verify sender is the entryPoint.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. still has to pay for gas.\r\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\r\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\r\n     */\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * Manage deposits and stakes.\r\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\r\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\r\n */\r\ninterface IStakeManager {\r\n    event Deposited(address indexed account, uint256 totalDeposit);\r\n\r\n    event Withdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    // Emitted when stake or unstake delay are modified.\r\n    event StakeLocked(\r\n        address indexed account,\r\n        uint256 totalStaked,\r\n        uint256 unstakeDelaySec\r\n    );\r\n\r\n    // Emitted once a stake is scheduled for withdrawal.\r\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\r\n\r\n    event StakeWithdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @param deposit         - The entity's deposit.\r\n     * @param staked          - True if this entity is staked.\r\n     * @param stake           - Actual amount of ether staked for this entity.\r\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\r\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\r\n     * @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\r\n     *      and the rest fit into a 2nd cell.\r\n     *      - 112 bit allows for 10^15 eth\r\n     *      - 48 bit for full timestamp\r\n     *      - 32 bit allows 150 years for unstake delay\r\n     */\r\n    struct DepositInfo {\r\n        uint112 deposit;\r\n        bool staked;\r\n        uint112 stake;\r\n        uint32 unstakeDelaySec;\r\n        uint48 withdrawTime;\r\n    }\r\n\r\n    // API struct used by getStakeInfo and simulateValidation.\r\n    struct StakeInfo {\r\n        uint256 stake;\r\n        uint256 unstakeDelaySec;\r\n    }\r\n\r\n    /**\r\n     * Get deposit info.\r\n     * @param account - The account to query.\r\n     * @return info   - Full deposit information of given account.\r\n     */\r\n    function getDepositInfo(\r\n        address account\r\n    ) external view returns (DepositInfo memory info);\r\n\r\n    /**\r\n     * Get account balance.\r\n     * @param account - The account to query.\r\n     * @return        - The deposit (for gas payment) of the account.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * Add to the deposit of the given account.\r\n     * @param account - The account to add to.\r\n     */\r\n    function depositTo(address account) external payable;\r\n\r\n    /**\r\n     * Add to the account's stake - amount and delay\r\n     * any pending unstake is first cancelled.\r\n     * @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\r\n     */\r\n    function addStake(uint32 _unstakeDelaySec) external payable;\r\n\r\n    /**\r\n     * Attempt to unlock the stake.\r\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\r\n     */\r\n    function unlockStake() external;\r\n\r\n    /**\r\n     * Withdraw from the (unlocked) stake.\r\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external;\r\n\r\n    /**\r\n     * Withdraw from the deposit.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     * @param withdrawAmount  - The amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 withdrawAmount\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * User Operation struct\r\n * @param sender                - The sender account of this request.\r\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\r\n * @param initCode              - If set, the account contract will be created by this constructor/\r\n * @param callData              - The method call to execute on this account.\r\n * @param callGasLimit          - The gas limit passed to the callData method call.\r\n * @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\r\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\r\n *                                Covers batch overhead.\r\n * @param maxFeePerGas          - Same as EIP-1559 gas parameter.\r\n * @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\r\n * @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\r\n *                                The paymaster will pay for the transaction instead of the sender.\r\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\r\n */\r\nstruct UserOperation {\r\n    address sender;\r\n    uint256 nonce;\r\n    bytes initCode;\r\n    bytes callData;\r\n    uint256 callGasLimit;\r\n    uint256 verificationGasLimit;\r\n    uint256 preVerificationGas;\r\n    uint256 maxFeePerGas;\r\n    uint256 maxPriorityFeePerGas;\r\n    bytes paymasterAndData;\r\n    bytes signature;\r\n}\r\n"},"contracts/utils/OracleHelper.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable not-rely-on-time */\r\n\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\r\nimport \"../interfaces/IOracle.sol\";\r\n\r\n/// @title Helper functions for dealing with various forms of price feed oracles.\r\n/// @notice Maintains a price cache and updates the current price if needed.\r\n/// In the best case scenario we have a direct oracle from the token to the native asset.\r\n/// Also support tokens that have no direct price oracle to the native asset.\r\n/// Sometimes oracles provide the price in the opposite direction of what we need in the moment.\r\nabstract contract OracleHelper {\r\n\r\n    event TokenPriceUpdated(uint256 currentPrice, uint256 previousPrice, uint256 cachedPriceTimestamp);\r\n\r\n    uint256 private constant PRICE_DENOMINATOR = 1e26;\r\n\r\n    struct OracleHelperConfig {\r\n        /// @notice The Oracle contract used to fetch the latest token prices\r\n        IOracle tokenOracle;\r\n\r\n        /// @notice The Oracle contract used to fetch the latest ETH prices\r\n        IOracle nativeOracle;\r\n\r\n        /// @notice If 'true' we will fetch price directly from tokenOracle\r\n        /// @notice If 'false' we will use nativeOracle to establish a token price through a shared third currency\r\n        bool tokenToNativeOracle;\r\n\r\n        /// @notice 'false' if price is dollars-per-token (or ether-per-token), 'true' if price is tokens-per-dollar\r\n        bool tokenOracleReverse;\r\n\r\n        /// @notice 'false' if price is dollars-per-ether, 'true' if price is ether-per-dollar\r\n        bool nativeOracleReverse;\r\n\r\n        /// @notice The price update threshold percentage that triggers a price update (1e6 = 100%)\r\n        uint256 priceUpdateThreshold;\r\n\r\n        /// @notice The price cache will be returned without even fetching the oracles for this number of seconds\r\n        uint256 cacheTimeToLive;\r\n    }\r\n\r\n    /// @notice The cached token price from the Oracle, always in (ether-per-token) * PRICE_DENOMINATOR format\r\n    uint256 public cachedPrice;\r\n\r\n    /// @notice The timestamp of a block when the cached price was updated\r\n    uint256 public cachedPriceTimestamp;\r\n\r\n    OracleHelperConfig private oracleHelperConfig;\r\n\r\n    /// @notice The \"10^(tokenOracle.decimals)\" value used for the price calculation\r\n    uint256 private tokenOracleDecimalPower;\r\n\r\n    /// @notice The \"10^(nativeOracle.decimals)\" value used for the price calculation\r\n    uint256 private nativeOracleDecimalPower;\r\n\r\n    constructor (\r\n        OracleHelperConfig memory _oracleHelperConfig\r\n    ) {\r\n        cachedPrice = type(uint256).max; // initialize the storage slot to invalid value\r\n        _setOracleConfiguration(\r\n            _oracleHelperConfig\r\n        );\r\n    }\r\n\r\n    function _setOracleConfiguration(\r\n        OracleHelperConfig memory _oracleHelperConfig\r\n    ) private {\r\n        oracleHelperConfig = _oracleHelperConfig;\r\n        require(_oracleHelperConfig.priceUpdateThreshold <= 1e6, \"TPM: update threshold too high\");\r\n        tokenOracleDecimalPower = 10 ** oracleHelperConfig.tokenOracle.decimals();\r\n        nativeOracleDecimalPower = 10 ** oracleHelperConfig.nativeOracle.decimals();\r\n    }\r\n\r\n    /// @notice Updates the token price by fetching the latest price from the Oracle.\r\n    function updateCachedPrice(bool force) public returns (uint256 newPrice) {\r\n        uint256 cacheTimeToLive = oracleHelperConfig.cacheTimeToLive;\r\n        uint256 cacheAge = block.timestamp - cachedPriceTimestamp;\r\n        if (!force && cacheAge <= cacheTimeToLive) {\r\n            return cachedPrice;\r\n        }\r\n        uint256 priceUpdateThreshold = oracleHelperConfig.priceUpdateThreshold;\r\n        IOracle tokenOracle = oracleHelperConfig.tokenOracle;\r\n        IOracle nativeOracle = oracleHelperConfig.nativeOracle;\r\n\r\n        uint256 _cachedPrice = cachedPrice;\r\n        uint256 tokenPrice = fetchPrice(tokenOracle);\r\n        uint256 nativeAssetPrice = 1;\r\n        // If the 'TokenOracle' returns the price in the native asset units there is no need to fetch native asset price\r\n        if (!oracleHelperConfig.tokenToNativeOracle) {\r\n            nativeAssetPrice = fetchPrice(nativeOracle);\r\n        }\r\n        uint256 price = calculatePrice(\r\n            tokenPrice,\r\n            nativeAssetPrice,\r\n            oracleHelperConfig.tokenOracleReverse,\r\n            oracleHelperConfig.nativeOracleReverse\r\n        );\r\n        uint256 priceNewByOld = price * PRICE_DENOMINATOR / _cachedPrice;\r\n\r\n        bool updateRequired = force ||\r\n            priceNewByOld > PRICE_DENOMINATOR + priceUpdateThreshold ||\r\n            priceNewByOld < PRICE_DENOMINATOR - priceUpdateThreshold;\r\n        if (!updateRequired) {\r\n            return _cachedPrice;\r\n        }\r\n        uint256 previousPrice = _cachedPrice;\r\n        _cachedPrice = price;\r\n        cachedPrice = _cachedPrice;\r\n        cachedPriceTimestamp = block.timestamp;\r\n        emit TokenPriceUpdated(_cachedPrice, previousPrice, cachedPriceTimestamp);\r\n        return _cachedPrice;\r\n    }\r\n\r\n    /**\r\n     * Calculate the effective price of the selected token denominated in native asset.\r\n     *\r\n     * @param tokenPrice - the price of the token relative to a native asset or a bridging asset like the U.S. dollar.\r\n     * @param nativeAssetPrice - the price of the native asset relative to a bridging asset or 1 if no bridging needed.\r\n     * @param tokenOracleReverse - flag indicating direction of the \"tokenPrice\".\r\n     * @param nativeOracleReverse - flag indicating direction of the \"nativeAssetPrice\".\r\n     * @return the ether-per-token price multiplied by the PRICE_DENOMINATOR constant.\r\n     */\r\n    function calculatePrice(\r\n        uint256 tokenPrice,\r\n        uint256 nativeAssetPrice,\r\n        bool tokenOracleReverse,\r\n        bool nativeOracleReverse\r\n    ) private view returns (uint256){\r\n        // tokenPrice is normalized as dollars-per-token\r\n        if (tokenOracleReverse) {\r\n            // inverting tokenPrice that was tokens-per-dollar (or tokens-per-ether)\r\n            tokenPrice = PRICE_DENOMINATOR * tokenOracleDecimalPower / tokenPrice;\r\n        } else {\r\n            // tokenPrice already dollars-per-token (or ethers-per-token)\r\n            tokenPrice = PRICE_DENOMINATOR * tokenPrice / tokenOracleDecimalPower;\r\n        }\r\n\r\n        if (nativeOracleReverse) {\r\n            // multiplying by nativeAssetPrice that is  ethers-per-dollar\r\n            // => result = (dollar / token) * (ether / dollar) = ether / token\r\n            return nativeAssetPrice * tokenPrice / nativeOracleDecimalPower;\r\n        } else {\r\n            // dividing by nativeAssetPrice that is dollars-per-ether\r\n            // => result = (dollar / token) / (dollar / ether) = ether / token\r\n            return tokenPrice * nativeOracleDecimalPower / nativeAssetPrice;\r\n        }\r\n    }\r\n\r\n    /// @notice Fetches the latest price from the given Oracle.\r\n    /// @dev This function is used to get the latest price from the tokenOracle or nativeOracle.\r\n    /// @param _oracle The Oracle contract to fetch the price from.\r\n    /// @return price The latest price fetched from the Oracle.\r\n    function fetchPrice(IOracle _oracle) internal view returns (uint256 price) {\r\n        \r\n        (,int256 answer,,,) = _oracle.latestRoundData();\r\n        // (uint80 roundId, int256 answer,, uint256 updatedAt, uint80 answeredInRound) = _oracle.latestRoundData();\r\n        require(answer > 0, \"TPM: Chainlink price <= 0\");\r\n        // 2 days old price is considered stale since the price is updated every 24 hours\r\n        // require(updatedAt >= block.timestamp - 60 * 60 * 24 * 2, \"TPM: Incomplete round\");\r\n        // require(answeredInRound >= roundId, \"TPM: Stale price\");\r\n        \r\n        price = uint256(answer);\r\n    }\r\n}"},"contracts/utils/TokenPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n// Import the required libraries and contracts\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\n\r\n// import \"./OracleHelper.sol\";\r\nimport \"../interfaces/IEntryPoint.sol\";\r\nimport \"../core/BasePaymaster.sol\";\r\n\r\n/// @title Sample ERC-20 Token Paymaster for ERC-4337\r\n/// This Paymaster covers gas fees in exchange for ERC20 tokens charged using allowance pre-issued by ERC-4337 accounts.\r\n/// The contract refunds excess tokens if the actual gas cost is lower than the initially provided amount.\r\n/// The token price cannot be queried in the validation code due to storage access restrictions of ERC-4337.\r\n/// The price is cached inside the contract and is updated in the 'postOp' stage if the change is >10%.\r\n/// It is theoretically possible the token has depreciated so much since th  e last 'postOp' the refund becomes negative.\r\n/// The contract reverts the inner user transaction in that case but keeps the charge.\r\n/// The contract also allows honest clients to prepay tokens at a higher price to avoid getting reverted.\r\n/// It also allows updating price configuration and withdrawing tokens by the contract owner.\r\n/// The contract uses an Oracle to fetch the latest token prices.\r\n/// @dev Inherits from BasePaymaster.\r\n\r\ncontract TokenPaymaster is BasePaymaster {\r\n\r\n    struct TokenPaymasterConfig {\r\n        /// @notice The price markup percentage applied to the token price (1e6 = 100%)\r\n        uint256 priceMarkup;\r\n\r\n        // @notice Exchange tokens to native currency if the EntryPoint balance of this Paymaster falls below this value\r\n        // uint256 minEntryPointBalance;\r\n\r\n        /// @notice Estimated gas cost for refunding tokens after the transaction is completed\r\n        uint256 refundPostopCost;\r\n\r\n        /// @notice Transactions are only valid as long as the cached price is not older than this value\r\n        uint256 priceMaxAge;\r\n    }\r\n\r\n    event ConfigUpdated(TokenPaymasterConfig tokenPaymasterConfig);\r\n\r\n    event UserOperationSponsored(address indexed user, uint256 actualTokenCharge, uint256 actualGasCost, uint256 actualTokenPrice);\r\n\r\n    event PostOpReverted(address indexed user, uint256 preCharge);\r\n\r\n    event Received(address indexed sender, uint256 value);\r\n\r\n    /// @notice All 'price' variables are multiplied by this value to avoid rounding up\r\n    uint256 private constant PRICE_DENOMINATOR = 1e26;\r\n    TokenPaymasterConfig private tokenPaymasterConfig;\r\n\r\n    uint256 public cachedPriceTimestamp;\r\n\r\n    // Fixed price: 10 CORE = 1 MATIC\r\n    uint256 private constant TOKEN_PRICE = 1e17; // 0.1 MATIC per CORE, assuming MATIC has 18 decimals\r\n\r\n\r\n    /// @notice The ERC20 token used for transaction fee payments\r\n    IERC20 public immutable token;\r\n\r\n\r\n    constructor(\r\n        IERC20Metadata _token,\r\n        IEntryPoint _entryPoint,\r\n        TokenPaymasterConfig memory _tokenPaymasterConfig,\r\n        address _owner\r\n    )\r\n    BasePaymaster(\r\n    _entryPoint\r\n    )\r\n    {\r\n        setTokenPaymasterConfig(_tokenPaymasterConfig);\r\n        transferOwnership(_owner);\r\n        token = _token;\r\n        cachedPriceTimestamp = block.timestamp;\r\n    }\r\n\r\n    /// @notice Updates the configuration for the Token Paymaster.\r\n    /// @param _tokenPaymasterConfig The new configuration struct.\r\n    function setTokenPaymasterConfig(\r\n        TokenPaymasterConfig memory _tokenPaymasterConfig\r\n    ) public onlyOwner {\r\n        require(_tokenPaymasterConfig.priceMarkup <= 2 * PRICE_DENOMINATOR, \"TPM: price markup too high\");\r\n        require(_tokenPaymasterConfig.priceMarkup >= PRICE_DENOMINATOR, \"TPM: price markup too low\");\r\n        tokenPaymasterConfig = _tokenPaymasterConfig;\r\n        emit ConfigUpdated(_tokenPaymasterConfig);\r\n    }\r\n\r\n    function weiToToken(uint256 amount, uint256 price) public pure returns (uint256) {\r\n        return amount * PRICE_DENOMINATOR / price;\r\n    }\r\n\r\n    /// @notice Validates a paymaster user operation and calculates the required token amount for the transaction.\r\n    /// @param userOp The user operation data.\r\n    /// @param requiredPreFund The amount of tokens required for pre-funding.\r\n    /// @return context The context containing the token amount and user sender address (if applicable).\r\n    /// @return validationResult A uint256 value indicating the result of the validation (always 0 in this implementation).\r\n    function _validatePaymasterUserOp(UserOperation calldata userOp, bytes32, uint256 requiredPreFund)\r\n    internal\r\n    override\r\n    returns (bytes memory context, uint256 validationResult) {unchecked {\r\n\r\n            uint256 priceMarkup = tokenPaymasterConfig.priceMarkup;\r\n            uint256 paymasterAndDataLength = userOp.paymasterAndData.length - 20;\r\n            require(paymasterAndDataLength == 0 || paymasterAndDataLength == 32,\r\n                \"TPM: invalid data length\"\r\n            );\r\n            uint256 preChargeNative = requiredPreFund + (tokenPaymasterConfig.refundPostopCost * userOp.maxFeePerGas);\r\n        // note: as price is in ether-per-token and we want more tokens increasing it means dividing it by markup\r\n            uint256 cachedPriceWithMarkup = TOKEN_PRICE * PRICE_DENOMINATOR / priceMarkup;\r\n            if (paymasterAndDataLength == 32) {\r\n                uint256 clientSuppliedPrice = uint256(bytes32(userOp.paymasterAndData[20 : 52]));\r\n                if (clientSuppliedPrice < cachedPriceWithMarkup) {\r\n                    // note: smaller number means 'more ether per token'\r\n                    cachedPriceWithMarkup = clientSuppliedPrice;\r\n                }\r\n            }\r\n            uint256 tokenAmount = weiToToken(preChargeNative, cachedPriceWithMarkup);\r\n            SafeERC20.safeTransferFrom(token, userOp.sender, address(this), tokenAmount);\r\n            context = abi.encode(tokenAmount, userOp.maxFeePerGas, userOp.maxPriorityFeePerGas, userOp.sender);\r\n            validationResult = _packValidationData(\r\n                false,\r\n                uint48(cachedPriceTimestamp + tokenPaymasterConfig.priceMaxAge),\r\n                0\r\n            );\r\n        }\r\n    }\r\n\r\n    /// @notice Performs post-operation tasks, such as updating the token price and refunding excess tokens.\r\n    /// @dev This function is called after a user operation has been executed or reverted.\r\n    /// @param context The context containing the token amount and user sender address.\r\n    /// @param actualGasCost The actual gas cost of the transaction.\r\n    function _postOp(PostOpMode, bytes calldata context, uint256 actualGasCost) internal override {\r\n        unchecked {\r\n            uint256 priceMarkup = tokenPaymasterConfig.priceMarkup;\r\n            (\r\n                uint256 preCharge,\r\n                uint256 maxFeePerGas,\r\n                uint256 maxPriorityFeePerGas,\r\n                address userOpSender\r\n            ) = abi.decode(context, (uint256, uint256, uint256, address));\r\n            uint256 gasPrice = getGasPrice(maxFeePerGas, maxPriorityFeePerGas);\r\n            // uint256 _cachedPrice = updateCachedPrice(false);\r\n        // note: as price is in ether-per-token and we want more tokens increasing it means dividing it by markup\r\n            uint256 cachedPriceWithMarkup = TOKEN_PRICE * PRICE_DENOMINATOR / priceMarkup;\r\n            cachedPriceTimestamp = block.timestamp;\r\n        // Refund tokens based on actual gas cost\r\n            uint256 actualChargeNative = actualGasCost + tokenPaymasterConfig.refundPostopCost * gasPrice;\r\n            uint256 actualTokenNeeded = weiToToken(actualChargeNative, cachedPriceWithMarkup);\r\n            if (preCharge > actualTokenNeeded) {\r\n                // If the initially provided token amount is greater than the actual amount needed, refund the difference\r\n                SafeERC20.safeTransfer(\r\n                    token,\r\n                    userOpSender,\r\n                    preCharge - actualTokenNeeded\r\n                );\r\n            } else if (preCharge < actualTokenNeeded) {\r\n                // Attempt to cover Paymaster's gas expenses by withdrawing the 'overdraft' from the client\r\n                // If the transfer reverts also revert the 'postOp' to remove the incentive to cheat\r\n                SafeERC20.safeTransferFrom(\r\n                    token,\r\n                    userOpSender,\r\n                    address(this),\r\n                    actualTokenNeeded - preCharge\r\n                );\r\n            }\r\n\r\n            emit UserOperationSponsored(userOpSender, actualTokenNeeded, actualGasCost, TOKEN_PRICE);\r\n            // refillEntryPointDeposit(_cachedPrice);  🚨\r\n        }\r\n    }\r\n\r\n    // @notice If necessary this function uses this Paymaster's token balance to refill the deposit on EntryPoint\r\n    // @param _cachedPrice the token price that will be used to calculate the swap amount.\r\n    // function refillEntryPointDeposit(uint256 _cachedPrice) private {\r\n    //     uint256 currentEntryPointBalance = entryPoint.balanceOf(address(this));\r\n    //     if (\r\n    //         currentEntryPointBalance < tokenPaymasterConfig.minEntryPointBalance\r\n    //     ) {\r\n    //         uint256 swappedWeth = _maybeSwapTokenToWeth(token, _cachedPrice);\r\n    //         unwrapWeth(swappedWeth);\r\n    //         entryPoint.depositTo{value: address(this).balance}(address(this));\r\n    //     }\r\n    // }\r\n\r\n    function getGasPrice(uint256 maxFeePerGas, uint256 maxPriorityFeePerGas) internal view returns (uint256) {\r\n        if (maxFeePerGas == maxPriorityFeePerGas) {\r\n            // legacy mode (for networks that don't support the 'basefee' opcode)\r\n            return maxFeePerGas;\r\n        }\r\n        return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\r\n    }\r\n\r\n    \r\n    /// @notice Allows the contract owner to withdraw a specified amount of tokens from the contract.\r\n    /// @param to The address to transfer the tokens to.\r\n    /// @param amount The amount of tokens to transfer.\r\n    function withdrawToken(address to, uint256 amount) external onlyOwner {\r\n        SafeERC20.safeTransfer(token, to, amount);\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    receive() external payable {\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[877],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":878,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,877],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[250]},"id":251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":250,"linearizedBaseContracts":[250],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":184,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":184,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":184,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":184,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":193,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":193,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":189,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":193,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":191,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":193,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":250,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":207,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":207,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":250,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":217,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":217,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":217,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":217,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":214,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":250,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":227,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":227,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":227,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":250,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":237,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":237,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":237,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":234,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":250,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":249,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":249,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":249,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":249,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":249,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":246,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":250,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":251,"src":"203:2575:2","usedErrors":[],"usedEvents":[184,193]}],"src":"106:2673:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[250],"IERC20Metadata":[276]},"id":277,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":252,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":277,"sourceUnit":251,"src":"151:37:3","symbolAliases":[{"foreign":{"id":253,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":256,"name":"IERC20","nameLocations":["305:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"305:6:3"},"id":257,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"190:86:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":276,"linearizedBaseContracts":[276,250],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":263,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":260,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":276,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":269,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":266,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":276,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":275,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":275,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":272,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":276,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":277,"src":"277:405:3","usedErrors":[],"usedEvents":[184,193]}],"src":"125:558:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[312]},"id":313,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":278,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"149:1963:4","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":312,"linearizedBaseContracts":[312],"name":"IERC20Permit","nameLocation":"2123:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"2142:850:4","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":297,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:4","nodeType":"FunctionDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"owner","nameLocation":"3030:5:4","nodeType":"VariableDeclaration","scope":297,"src":"3022:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"spender","nameLocation":"3053:7:4","nodeType":"VariableDeclaration","scope":297,"src":"3045:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"value","nameLocation":"3078:5:4","nodeType":"VariableDeclaration","scope":297,"src":"3070:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:4","nodeType":"VariableDeclaration","scope":297,"src":"3093:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"v","nameLocation":"3125:1:4","nodeType":"VariableDeclaration","scope":297,"src":"3119:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":289,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"r","nameLocation":"3144:1:4","nodeType":"VariableDeclaration","scope":297,"src":"3136:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"s","nameLocation":"3163:1:4","nodeType":"VariableDeclaration","scope":297,"src":"3155:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:4"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"3179:0:4"},"scope":312,"src":"2997:183:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"3186:294:4","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":305,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:4","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"owner","nameLocation":"3509:5:4","nodeType":"VariableDeclaration","scope":305,"src":"3501:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:4"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":305,"src":"3539:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:4"},"scope":312,"src":"3485:63:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"3554:128:4","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":311,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:4","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"3765:2:4"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":311,"src":"3791:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:4"},"scope":312,"src":"3740:60:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":313,"src":"2113:1689:4","usedErrors":[],"usedEvents":[]}],"src":"123:3680:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[855],"IERC20":[250],"IERC20Permit":[312],"SafeERC20":[602]},"id":603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":314,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":316,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":603,"sourceUnit":251,"src":"141:37:5","symbolAliases":[{"foreign":{"id":315,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"149:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":603,"sourceUnit":313,"src":"179:60:5","symbolAliases":[{"foreign":{"id":317,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"187:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":603,"sourceUnit":856,"src":"240:51:5","symbolAliases":[{"foreign":{"id":319,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"248:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"293:457:5","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":602,"linearizedBaseContracts":[602],"name":"SafeERC20","nameLocation":"759:9:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":324,"libraryName":{"id":322,"name":"Address","nameLocations":["781:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"781:7:5"},"nodeType":"UsingForDirective","src":"775:26:5","typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"807:64:5","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":329,"name":"SafeERC20FailedOperation","nameLocation":"882:24:5","nodeType":"ErrorDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"token","nameLocation":"915:5:5","nodeType":"VariableDeclaration","scope":329,"src":"907:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:5"},"src":"876:46:5"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"928:71:5","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":338,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:5","nodeType":"ErrorDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"spender","nameLocation":"1051:7:5","nodeType":"VariableDeclaration","scope":338,"src":"1043:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:5","nodeType":"VariableDeclaration","scope":338,"src":"1060:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:5","nodeType":"VariableDeclaration","scope":338,"src":"1086:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:5"},"src":"1004:109:5"},{"body":{"id":361,"nodeType":"Block","src":"1375:88:5","statements":[{"expression":{"arguments":[{"id":350,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1405:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":353,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1427:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":217,"src":"1427:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1444:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"1448:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":351,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":349,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1385:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"ExpressionStatement","src":"1385:71:5"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"1119:179:5","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":362,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:5","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"token","nameLocation":"1332:5:5","nodeType":"VariableDeclaration","scope":362,"src":"1325:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},"typeName":{"id":341,"nodeType":"UserDefinedTypeName","pathNode":{"id":340,"name":"IERC20","nameLocations":["1325:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"1325:6:5"},"referencedDeclaration":250,"src":"1325:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"to","nameLocation":"1347:2:5","nodeType":"VariableDeclaration","scope":362,"src":"1339:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"value","nameLocation":"1359:5:5","nodeType":"VariableDeclaration","scope":362,"src":"1351:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:5"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[],"src":"1375:0:5"},"scope":602,"src":"1303:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":388,"nodeType":"Block","src":"1792:98:5","statements":[{"expression":{"arguments":[{"id":376,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1822:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":379,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1844:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":249,"src":"1844:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":381,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1865:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":382,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"1871:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1875:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":377,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":375,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1802:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"ExpressionStatement","src":"1802:81:5"}]},"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"1469:228:5","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":389,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:5","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"token","nameLocation":"1735:5:5","nodeType":"VariableDeclaration","scope":389,"src":"1728:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},"typeName":{"id":365,"nodeType":"UserDefinedTypeName","pathNode":{"id":364,"name":"IERC20","nameLocations":["1728:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"1728:6:5"},"referencedDeclaration":250,"src":"1728:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"from","nameLocation":"1750:4:5","nodeType":"VariableDeclaration","scope":389,"src":"1742:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"to","nameLocation":"1764:2:5","nodeType":"VariableDeclaration","scope":389,"src":"1756:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"value","nameLocation":"1776:5:5","nodeType":"VariableDeclaration","scope":389,"src":"1768:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:5"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"1792:0:5"},"scope":602,"src":"1702:188:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"2167:139:5","statements":[{"assignments":[401],"declarations":[{"constant":false,"id":401,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:5","nodeType":"VariableDeclaration","scope":419,"src":"2177:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":410,"initialValue":{"arguments":[{"arguments":[{"id":406,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$602","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$602","typeString":"library SafeERC20"}],"id":405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:5","typeDescriptions":{}}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":408,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2231:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":402,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2200:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":227,"src":"2200:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:5"},{"expression":{"arguments":[{"id":412,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2262:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"id":413,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2269:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":414,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2278:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2293:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"2249:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":418,"nodeType":"ExpressionStatement","src":"2249:50:5"}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"1896:180:5","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:5","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"token","nameLocation":"2119:5:5","nodeType":"VariableDeclaration","scope":420,"src":"2112:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},"typeName":{"id":392,"nodeType":"UserDefinedTypeName","pathNode":{"id":391,"name":"IERC20","nameLocations":["2112:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"2112:6:5"},"referencedDeclaration":250,"src":"2112:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"spender","nameLocation":"2134:7:5","nodeType":"VariableDeclaration","scope":420,"src":"2126:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"value","nameLocation":"2151:5:5","nodeType":"VariableDeclaration","scope":420,"src":"2143:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:5"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"2167:0:5"},"scope":602,"src":"2081:225:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":462,"nodeType":"Block","src":"2607:370:5","statements":[{"id":461,"nodeType":"UncheckedBlock","src":"2617:354:5","statements":[{"assignments":[432],"declarations":[{"constant":false,"id":432,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:5","nodeType":"VariableDeclaration","scope":461,"src":"2641:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":441,"initialValue":{"arguments":[{"arguments":[{"id":437,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$602","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$602","typeString":"library SafeERC20"}],"id":436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:5","typeDescriptions":{}}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2699:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":433,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2668:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":227,"src":"2668:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":442,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2725:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":443,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2744:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":452,"nodeType":"IfStatement","src":"2721:160:5","trueBody":{"id":451,"nodeType":"Block","src":"2763:118:5","statements":[{"errorCall":{"arguments":[{"id":446,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2821:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":447,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2830:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":448,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2848:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":445,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2788:32:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"RevertStatement","src":"2781:85:5"}]}},{"expression":{"arguments":[{"id":454,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2907:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"id":455,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2914:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":456,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2923:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":457,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2942:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":453,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"2894:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"ExpressionStatement","src":"2894:66:5"}]}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"2312:192:5","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:5","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"token","nameLocation":"2547:5:5","nodeType":"VariableDeclaration","scope":463,"src":"2540:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},"typeName":{"id":423,"nodeType":"UserDefinedTypeName","pathNode":{"id":422,"name":"IERC20","nameLocations":["2540:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"2540:6:5"},"referencedDeclaration":250,"src":"2540:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"spender","nameLocation":"2562:7:5","nodeType":"VariableDeclaration","scope":463,"src":"2554:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:5","nodeType":"VariableDeclaration","scope":463,"src":"2571:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:5"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"2607:0:5"},"scope":602,"src":"2509:468:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"3373:303:5","statements":[{"assignments":[475],"declarations":[{"constant":false,"id":475,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:5","nodeType":"VariableDeclaration","scope":509,"src":"3383:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":474,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":484,"initialValue":{"arguments":[{"expression":{"id":478,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"3426:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":237,"src":"3426:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":480,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"3442:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3451:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":476,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:5"},{"condition":{"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:5","subExpression":{"arguments":[{"id":486,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"3498:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"id":487,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3505:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":485,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"3474:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":508,"nodeType":"IfStatement","src":"3469:201:5","trueBody":{"id":507,"nodeType":"Block","src":"3520:150:5","statements":[{"expression":{"arguments":[{"id":491,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"3554:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":494,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"3576:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":237,"src":"3576:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":496,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"3592:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":492,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":490,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3534:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"ExpressionStatement","src":"3534:71:5"},{"expression":{"arguments":[{"id":503,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"3639:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"id":504,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3646:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":502,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3619:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"3619:40:5"}]}}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"2983:308:5","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:5","nodeType":"FunctionDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"token","nameLocation":"3325:5:5","nodeType":"VariableDeclaration","scope":510,"src":"3318:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},"typeName":{"id":466,"nodeType":"UserDefinedTypeName","pathNode":{"id":465,"name":"IERC20","nameLocations":["3318:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"3318:6:5"},"referencedDeclaration":250,"src":"3318:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":469,"mutability":"mutable","name":"spender","nameLocation":"3340:7:5","nodeType":"VariableDeclaration","scope":510,"src":"3332:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"value","nameLocation":"3357:5:5","nodeType":"VariableDeclaration","scope":510,"src":"3349:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:5"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[],"src":"3373:0:5"},"scope":602,"src":"3296:380:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":551,"nodeType":"Block","src":"4129:559:5","statements":[{"assignments":[520],"declarations":[{"constant":false,"id":520,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:5","nodeType":"VariableDeclaration","scope":551,"src":"4478:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":519,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":528,"initialValue":{"arguments":[{"id":526,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"4532:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":523,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4512:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}],"id":522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:5","typeDescriptions":{}}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:5","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":676,"src":"4504:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":529,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4551:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:5","memberName":"length","nodeType":"MemberAccess","src":"4551:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:5","subExpression":{"arguments":[{"id":535,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4589:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":536,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:5","typeDescriptions":{}}}],"id":538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":533,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:5","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":550,"nodeType":"IfStatement","src":"4547:135:5","trueBody":{"id":549,"nodeType":"Block","src":"4610:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":545,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4664:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}],"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:5","typeDescriptions":{}}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":542,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"4631:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":548,"nodeType":"RevertStatement","src":"4624:47:5"}]}}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"3682:372:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":552,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:5","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"token","nameLocation":"4095:5:5","nodeType":"VariableDeclaration","scope":552,"src":"4088:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},"typeName":{"id":513,"nodeType":"UserDefinedTypeName","pathNode":{"id":512,"name":"IERC20","nameLocations":["4088:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"4088:6:5"},"referencedDeclaration":250,"src":"4088:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"data","nameLocation":"4115:4:5","nodeType":"VariableDeclaration","scope":552,"src":"4102:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":515,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:5"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"4129:0:5"},"scope":602,"src":"4059:629:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":600,"nodeType":"Block","src":"5278:489:5","statements":[{"assignments":[564,566],"declarations":[{"constant":false,"id":564,"mutability":"mutable","name":"success","nameLocation":"5579:7:5","nodeType":"VariableDeclaration","scope":600,"src":"5574:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":563,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:5","nodeType":"VariableDeclaration","scope":600,"src":"5588:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":565,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":574,"initialValue":{"arguments":[{"id":572,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"5635:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":569,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"5623:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}],"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:5","typeDescriptions":{}}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:5","memberName":"call","nodeType":"MemberAccess","src":"5615:19:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"5657:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":576,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"5669:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:5","memberName":"length","nodeType":"MemberAccess","src":"5669:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":582,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"5706:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":583,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:5","typeDescriptions":{}}}],"id":585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":580,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:5","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":592,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"5738:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}],"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:5","typeDescriptions":{}}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:5","memberName":"code","nodeType":"MemberAccess","src":"5730:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:5","memberName":"length","nodeType":"MemberAccess","src":"5730:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":562,"id":599,"nodeType":"Return","src":"5650:110:5"}]},"documentation":{"id":553,"nodeType":"StructuredDocumentation","src":"4694:490:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":601,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:5","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"token","nameLocation":"5229:5:5","nodeType":"VariableDeclaration","scope":601,"src":"5222:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},"typeName":{"id":555,"nodeType":"UserDefinedTypeName","pathNode":{"id":554,"name":"IERC20","nameLocations":["5222:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"5222:6:5"},"referencedDeclaration":250,"src":"5222:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"data","nameLocation":"5249:4:5","nodeType":"VariableDeclaration","scope":601,"src":"5236:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":557,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:5"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"5272:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":560,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:5"},"scope":602,"src":"5189:578:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":603,"src":"751:5018:5","usedErrors":[329,338],"usedEvents":[]}],"src":"115:5655:5"},"id":5},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[855]},"id":856,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":604,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"127:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":855,"linearizedBaseContracts":[855],"name":"Address","nameLocation":"203:7:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"217:94:6","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":610,"name":"AddressInsufficientBalance","nameLocation":"322:26:6","nodeType":"ErrorDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"account","nameLocation":"357:7:6","nodeType":"VariableDeclaration","scope":610,"src":"349:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:6"},"src":"316:50:6"},{"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"372:75:6","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":615,"name":"AddressEmptyCode","nameLocation":"458:16:6","nodeType":"ErrorDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"target","nameLocation":"483:6:6","nodeType":"VariableDeclaration","scope":615,"src":"475:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:6"},"src":"452:39:6"},{"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"497:89:6","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":618,"name":"FailedInnerCall","nameLocation":"597:15:6","nodeType":"ErrorDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[],"src":"612:2:6"},"src":"591:24:6"},{"body":{"id":658,"nodeType":"Block","src":"1602:260:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":628,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$855","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$855","typeString":"library Address"}],"id":627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:6","typeDescriptions":{}}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:6","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":631,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"1640:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":641,"nodeType":"IfStatement","src":"1612:109:6","trueBody":{"id":640,"nodeType":"Block","src":"1648:73:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":636,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$855","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$855","typeString":"library Address"}],"id":635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:6","typeDescriptions":{}}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":633,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"1669:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"RevertStatement","src":"1662:48:6"}]}},{"assignments":[643,null],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"success","nameLocation":"1737:7:6","nodeType":"VariableDeclaration","scope":658,"src":"1732:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":642,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":650,"initialValue":{"arguments":[{"hexValue":"","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":644,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"1750:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:6","memberName":"call","nodeType":"MemberAccess","src":"1750:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":646,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"1772:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:6"},{"condition":{"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:6","subExpression":{"id":651,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"1798:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":657,"nodeType":"IfStatement","src":"1793:63:6","trueBody":{"id":656,"nodeType":"Block","src":"1807:49:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":653,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1828:15:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"RevertStatement","src":"1821:24:6"}]}}]},"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"621:905:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":659,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:6","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:6","nodeType":"VariableDeclaration","scope":659,"src":"1550:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"amount","nameLocation":"1585:6:6","nodeType":"VariableDeclaration","scope":659,"src":"1577:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:6"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[],"src":"1602:0:6"},"scope":855,"src":"1531:331:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"2794:62:6","statements":[{"expression":{"arguments":[{"id":670,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"2833:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":671,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2841:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":669,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"2811:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":668,"id":674,"nodeType":"Return","src":"2804:45:6"}]},"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"1868:832:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:6","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"target","nameLocation":"2735:6:6","nodeType":"VariableDeclaration","scope":676,"src":"2727:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"data","nameLocation":"2756:4:6","nodeType":"VariableDeclaration","scope":676,"src":"2743:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":663,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:6"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"2780:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":666,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:6"},"scope":855,"src":"2705:151:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":721,"nodeType":"Block","src":"3293:279:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":690,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$855","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$855","typeString":"library Address"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:6","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:6","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3331:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":703,"nodeType":"IfStatement","src":"3303:108:6","trueBody":{"id":702,"nodeType":"Block","src":"3338:73:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":698,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$855","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$855","typeString":"library Address"}],"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:6","typeDescriptions":{}}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":695,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"3359:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"RevertStatement","src":"3352:48:6"}]}},{"assignments":[705,707],"declarations":[{"constant":false,"id":705,"mutability":"mutable","name":"success","nameLocation":"3426:7:6","nodeType":"VariableDeclaration","scope":721,"src":"3421:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":704,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:6","nodeType":"VariableDeclaration","scope":721,"src":"3435:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":706,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":714,"initialValue":{"arguments":[{"id":712,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"3488:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":708,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"3462:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:6","memberName":"call","nodeType":"MemberAccess","src":"3462:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3481:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:6"},{"expression":{"arguments":[{"id":716,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"3537:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"3545:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":718,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"3554:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":715,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3510:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":687,"id":720,"nodeType":"Return","src":"3503:62:6"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"2862:313:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":722,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:6","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"target","nameLocation":"3219:6:6","nodeType":"VariableDeclaration","scope":722,"src":"3211:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"data","nameLocation":"3240:4:6","nodeType":"VariableDeclaration","scope":722,"src":"3227:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":680,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"value","nameLocation":"3254:5:6","nodeType":"VariableDeclaration","scope":722,"src":"3246:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:6"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":722,"src":"3279:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":685,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:6"},"scope":855,"src":"3180:392:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"3811:154:6","statements":[{"assignments":[733,735],"declarations":[{"constant":false,"id":733,"mutability":"mutable","name":"success","nameLocation":"3827:7:6","nodeType":"VariableDeclaration","scope":747,"src":"3822:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":732,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:6","nodeType":"VariableDeclaration","scope":747,"src":"3836:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":734,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":740,"initialValue":{"arguments":[{"id":738,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3881:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":736,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"3863:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:6"},{"expression":{"arguments":[{"id":742,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"3930:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"3938:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":744,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"3947:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":741,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3903:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":731,"id":746,"nodeType":"Return","src":"3896:62:6"}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"3578:128:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:6","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"target","nameLocation":"3747:6:6","nodeType":"VariableDeclaration","scope":748,"src":"3739:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"data","nameLocation":"3768:4:6","nodeType":"VariableDeclaration","scope":748,"src":"3755:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":726,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:6"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"3797:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":729,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:6"},"scope":855,"src":"3711:254:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":773,"nodeType":"Block","src":"4203:156:6","statements":[{"assignments":[759,761],"declarations":[{"constant":false,"id":759,"mutability":"mutable","name":"success","nameLocation":"4219:7:6","nodeType":"VariableDeclaration","scope":773,"src":"4214:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":758,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:6","nodeType":"VariableDeclaration","scope":773,"src":"4228:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":760,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":764,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4275:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":762,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"4255:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:6","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:6"},{"expression":{"arguments":[{"id":768,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"4324:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"4332:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":770,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"4341:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":767,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4297:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":757,"id":772,"nodeType":"Return","src":"4290:62:6"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"3971:130:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":774,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:6","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"target","nameLocation":"4144:6:6","nodeType":"VariableDeclaration","scope":774,"src":"4136:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"data","nameLocation":"4165:4:6","nodeType":"VariableDeclaration","scope":774,"src":"4152:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":752,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:6"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":774,"src":"4189:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":755,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:6"},"scope":855,"src":"4106:253:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":813,"nodeType":"Block","src":"4783:424:6","statements":[{"condition":{"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:6","subExpression":{"id":786,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"4798:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":811,"nodeType":"Block","src":"4857:344:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":793,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"5045:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:6","memberName":"length","nodeType":"MemberAccess","src":"5045:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":797,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5071:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:6","memberName":"code","nodeType":"MemberAccess","src":"5071:11:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:6","memberName":"length","nodeType":"MemberAccess","src":"5071:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":808,"nodeType":"IfStatement","src":"5041:119:6","trueBody":{"id":807,"nodeType":"Block","src":"5096:64:6","statements":[{"errorCall":{"arguments":[{"id":804,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5138:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":803,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"5121:16:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"RevertStatement","src":"5114:31:6"}]}},{"expression":{"id":809,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"5180:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":785,"id":810,"nodeType":"Return","src":"5173:17:6"}]},"id":812,"nodeType":"IfStatement","src":"4793:408:6","trueBody":{"id":792,"nodeType":"Block","src":"4807:44:6","statements":[{"expression":{"arguments":[{"id":789,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4829:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":788,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4821:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":791,"nodeType":"ExpressionStatement","src":"4821:19:6"}]}}]},"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"4365:255:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:6","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"target","nameLocation":"4678:6:6","nodeType":"VariableDeclaration","scope":814,"src":"4670:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"success","nameLocation":"4699:7:6","nodeType":"VariableDeclaration","scope":814,"src":"4694:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":778,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:6","nodeType":"VariableDeclaration","scope":814,"src":"4716:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":780,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:6"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"4769:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":783,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:6"},"scope":855,"src":"4625:582:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":835,"nodeType":"Block","src":"5509:122:6","statements":[{"condition":{"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:6","subExpression":{"id":824,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"5524:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":833,"nodeType":"Block","src":"5583:42:6","statements":[{"expression":{"id":831,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5604:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":823,"id":832,"nodeType":"Return","src":"5597:17:6"}]},"id":834,"nodeType":"IfStatement","src":"5519:106:6","trueBody":{"id":830,"nodeType":"Block","src":"5533:44:6","statements":[{"expression":{"arguments":[{"id":827,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5555:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":826,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"5547:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"ExpressionStatement","src":"5547:19:6"}]}}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"5213:189:6","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":836,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:6","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"success","nameLocation":"5438:7:6","nodeType":"VariableDeclaration","scope":836,"src":"5433:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":816,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:6","nodeType":"VariableDeclaration","scope":836,"src":"5447:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":818,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:6"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":836,"src":"5495:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":821,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:6"},"scope":855,"src":"5407:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"5798:461:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":842,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5874:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:6","memberName":"length","nodeType":"MemberAccess","src":"5874:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":851,"nodeType":"Block","src":"6204:49:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":848,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"6225:15:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"RevertStatement","src":"6218:24:6"}]},"id":852,"nodeType":"IfStatement","src":"5870:383:6","trueBody":{"id":847,"nodeType":"Block","src":"5897:301:6","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:6"},"nodeType":"YulFunctionCall","src":"6096:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:6"},"nodeType":"YulFunctionCall","src":"6137:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:6"},"nodeType":"YulFunctionCall","src":"6130:44:6"},"nodeType":"YulExpressionStatement","src":"6130:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":839,"isOffset":false,"isSlot":false,"src":"6102:10:6","valueSize":1},{"declaration":839,"isOffset":false,"isSlot":false,"src":"6145:10:6","valueSize":1}],"id":846,"nodeType":"InlineAssembly","src":"6046:142:6"}]}}]},"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"5637:101:6","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:6","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:6","nodeType":"VariableDeclaration","scope":854,"src":"5760:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":838,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:6"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"5798:0:6"},"scope":855,"src":"5743:516:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":856,"src":"195:6066:6","usedErrors":[610,615,618],"usedEvents":[]}],"src":"101:6161:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":857,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"127:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":877,"linearizedBaseContracts":[877],"name":"Context","nameLocation":"642:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":866,"nodeType":"Block","src":"718:34:7","statements":[{"expression":{"expression":{"id":863,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:7","memberName":"sender","nodeType":"MemberAccess","src":"735:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":862,"id":865,"nodeType":"Return","src":"728:17:7"}]},"id":867,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:7","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"675:2:7"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":867,"src":"709:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:7"},"scope":877,"src":"656:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":875,"nodeType":"Block","src":"825:32:7","statements":[{"expression":{"expression":{"id":872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:7","memberName":"data","nodeType":"MemberAccess","src":"842:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":871,"id":874,"nodeType":"Return","src":"835:15:7"}]},"id":876,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:7","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"775:2:7"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"809:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":869,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:7"},"scope":877,"src":"758:99:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":878,"src":"624:235:7","usedErrors":[],"usedEvents":[]}],"src":"101:759:7"},"id":7},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[883],"ShortStrings":[1094],"StorageSlot":[1204]},"id":1095,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1095,"sourceUnit":1205,"src":"132:46:8","symbolAliases":[{"foreign":{"id":880,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"140:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":883,"name":"ShortString","nameLocation":"353:11:8","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:8","underlyingType":{"id":882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"378:876:8","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1094,"linearizedBaseContracts":[1094],"name":"ShortStrings","nameLocation":"1263:12:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":887,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:8","nodeType":"VariableDeclaration","scope":1094,"src":"1345:111:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":891,"name":"StringTooLong","nameLocation":"1469:13:8","nodeType":"ErrorDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"str","nameLocation":"1490:3:8","nodeType":"VariableDeclaration","scope":891,"src":"1483:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":888,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:8"},"src":"1463:32:8"},{"errorSelector":"b3512b0c","id":893,"name":"InvalidShortString","nameLocation":"1506:18:8","nodeType":"ErrorDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"1524:2:8"},"src":"1500:27:8"},{"body":{"id":936,"nodeType":"Block","src":"1786:208:8","statements":[{"assignments":[903],"declarations":[{"constant":false,"id":903,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:8","nodeType":"VariableDeclaration","scope":936,"src":"1796:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":902,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":908,"initialValue":{"arguments":[{"id":906,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1822:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":904,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:8","typeDescriptions":{}}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":909,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1840:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:8","memberName":"length","nodeType":"MemberAccess","src":"1840:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:8","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":918,"nodeType":"IfStatement","src":"1836:72:8","trueBody":{"id":917,"nodeType":"Block","src":"1858:50:8","statements":[{"errorCall":{"arguments":[{"id":914,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1893:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":913,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"1879:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"RevertStatement","src":"1872:25:8"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":927,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1965:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:8","typeDescriptions":{}}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:8","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":930,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1974:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:8","memberName":"length","nodeType":"MemberAccess","src":"1974:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:8","typeDescriptions":{}}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":919,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"1924:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$883_$","typeString":"type(ShortString)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:8","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:8","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$883_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"functionReturnParameters":901,"id":935,"nodeType":"Return","src":"1917:70:8"}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"1533:170:8","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":937,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:8","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"str","nameLocation":"1745:3:8","nodeType":"VariableDeclaration","scope":937,"src":"1731:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":895,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:8"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":937,"src":"1773:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"},"typeName":{"id":899,"nodeType":"UserDefinedTypeName","pathNode":{"id":898,"name":"ShortString","nameLocations":["1773:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"1773:11:8"},"referencedDeclaration":883,"src":"1773:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:8"},"scope":1094,"src":"1708:286:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":962,"nodeType":"Block","src":"2152:331:8","statements":[{"assignments":[947],"declarations":[{"constant":false,"id":947,"mutability":"mutable","name":"len","nameLocation":"2170:3:8","nodeType":"VariableDeclaration","scope":962,"src":"2162:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":951,"initialValue":{"arguments":[{"id":949,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"2187:4:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}],"id":948,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"2176:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$883_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:8"},{"assignments":[953],"declarations":[{"constant":false,"id":953,"mutability":"mutable","name":"str","nameLocation":"2294:3:8","nodeType":"VariableDeclaration","scope":962,"src":"2280:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":952,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":958,"initialValue":{"arguments":[{"hexValue":"3332","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":954,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:8"},{"AST":{"nodeType":"YulBlock","src":"2376:81:8","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2397:3:8"},{"name":"len","nodeType":"YulIdentifier","src":"2402:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2390:6:8"},"nodeType":"YulFunctionCall","src":"2390:16:8"},"nodeType":"YulExpressionStatement","src":"2390:16:8"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2430:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2435:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2426:3:8"},"nodeType":"YulFunctionCall","src":"2426:14:8"},{"name":"sstr","nodeType":"YulIdentifier","src":"2442:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2419:6:8"},"nodeType":"YulFunctionCall","src":"2419:28:8"},"nodeType":"YulExpressionStatement","src":"2419:28:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":947,"isOffset":false,"isSlot":false,"src":"2402:3:8","valueSize":1},{"declaration":941,"isOffset":false,"isSlot":false,"src":"2442:4:8","valueSize":1},{"declaration":953,"isOffset":false,"isSlot":false,"src":"2397:3:8","valueSize":1},{"declaration":953,"isOffset":false,"isSlot":false,"src":"2430:3:8","valueSize":1}],"id":959,"nodeType":"InlineAssembly","src":"2367:90:8"},{"expression":{"id":960,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2473:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":945,"id":961,"nodeType":"Return","src":"2466:10:8"}]},"documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"2000:73:8","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":963,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:8","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:8","nodeType":"VariableDeclaration","scope":963,"src":"2096:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"},"typeName":{"id":940,"nodeType":"UserDefinedTypeName","pathNode":{"id":939,"name":"ShortString","nameLocations":["2096:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"2096:11:8"},"referencedDeclaration":883,"src":"2096:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:8"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":963,"src":"2137:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":943,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:8"},"scope":1094,"src":"2078:405:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":994,"nodeType":"Block","src":"2625:175:8","statements":[{"assignments":[973],"declarations":[{"constant":false,"id":973,"mutability":"mutable","name":"result","nameLocation":"2643:6:8","nodeType":"VariableDeclaration","scope":994,"src":"2635:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":983,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":978,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"2679:4:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}],"expression":{"id":976,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"2660:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$883_$","typeString":"type(ShortString)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$883_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:8","typeDescriptions":{}}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2706:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:8","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":991,"nodeType":"IfStatement","src":"2702:69:8","trueBody":{"id":990,"nodeType":"Block","src":"2719:52:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":987,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"2740:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"RevertStatement","src":"2733:27:8"}]}},{"expression":{"id":992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2787:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":971,"id":993,"nodeType":"Return","src":"2780:13:8"}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"2489:61:8","text":" @dev Return the length of a `ShortString`."},"id":995,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:8","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:8","nodeType":"VariableDeclaration","scope":995,"src":"2575:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"},"typeName":{"id":966,"nodeType":"UserDefinedTypeName","pathNode":{"id":965,"name":"ShortString","nameLocations":["2575:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"2575:11:8"},"referencedDeclaration":883,"src":"2575:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:8"},"returnParameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":995,"src":"2616:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:8"},"scope":1094,"src":"2555:245:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1034,"nodeType":"Block","src":"3023:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3043:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1006,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:8","typeDescriptions":{}}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:8","memberName":"length","nodeType":"MemberAccess","src":"3037:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1032,"nodeType":"Block","src":"3121:127:8","statements":[{"expression":{"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1021,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"3161:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1018,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"3135:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1204_$","typeString":"type(library StorageSlot)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:8","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1181,"src":"3135:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1112_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1112_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1111,"src":"3135:38:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3176:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1026,"nodeType":"ExpressionStatement","src":"3135:46:8"},{"expression":{"arguments":[{"id":1029,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"3219:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1027,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"3202:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$883_$","typeString":"type(ShortString)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:8","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:8","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$883_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"functionReturnParameters":1005,"id":1031,"nodeType":"Return","src":"3195:42:8"}]},"id":1033,"nodeType":"IfStatement","src":"3033:215:8","trueBody":{"id":1017,"nodeType":"Block","src":"3063:52:8","statements":[{"expression":{"arguments":[{"id":1014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3098:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1013,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3084:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$883_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"functionReturnParameters":1005,"id":1016,"nodeType":"Return","src":"3077:27:8"}]}}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"2806:103:8","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:8","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"value","nameLocation":"2963:5:8","nodeType":"VariableDeclaration","scope":1035,"src":"2949:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":997,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"store","nameLocation":"2985:5:8","nodeType":"VariableDeclaration","scope":1035,"src":"2970:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":999,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:8"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1035,"src":"3010:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"},"typeName":{"id":1003,"nodeType":"UserDefinedTypeName","pathNode":{"id":1002,"name":"ShortString","nameLocations":["3010:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"3010:11:8"},"referencedDeclaration":883,"src":"3010:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:8"},"scope":1094,"src":"2914:340:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1061,"nodeType":"Block","src":"3494:158:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"3527:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}],"expression":{"id":1046,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"3508:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$883_$","typeString":"type(ShortString)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$883_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1050,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"3537:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1059,"nodeType":"Block","src":"3609:37:8","statements":[{"expression":{"id":1057,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"3630:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1045,"id":1058,"nodeType":"Return","src":"3623:12:8"}]},"id":1060,"nodeType":"IfStatement","src":"3504:142:8","trueBody":{"id":1056,"nodeType":"Block","src":"3556:47:8","statements":[{"expression":{"arguments":[{"id":1053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"3586:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}],"id":1052,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"3577:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$883_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1045,"id":1055,"nodeType":"Return","src":"3570:22:8"}]}}]},"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"3260:120:8","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1062,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:8","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"value","nameLocation":"3427:5:8","nodeType":"VariableDeclaration","scope":1062,"src":"3415:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"},"typeName":{"id":1038,"nodeType":"UserDefinedTypeName","pathNode":{"id":1037,"name":"ShortString","nameLocations":["3415:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"3415:11:8"},"referencedDeclaration":883,"src":"3415:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"store","nameLocation":"3449:5:8","nodeType":"VariableDeclaration","scope":1062,"src":"3434:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1040,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:8"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"3479:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1043,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:8"},"scope":1094,"src":"3385:267:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1092,"nodeType":"Block","src":"4132:174:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"4165:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}],"expression":{"id":1073,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"4146:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$883_$","typeString":"type(ShortString)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$883_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1077,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4175:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1090,"nodeType":"Block","src":"4249:51:8","statements":[{"expression":{"expression":{"arguments":[{"id":1086,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"4276:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:8","typeDescriptions":{}}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:8","memberName":"length","nodeType":"MemberAccess","src":"4270:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1072,"id":1089,"nodeType":"Return","src":"4263:26:8"}]},"id":1091,"nodeType":"IfStatement","src":"4142:158:8","trueBody":{"id":1083,"nodeType":"Block","src":"4194:49:8","statements":[{"expression":{"arguments":[{"id":1080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"4226:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}],"id":1079,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"4215:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$883_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1072,"id":1082,"nodeType":"Return","src":"4208:24:8"}]}}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"3658:364:8","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1093,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:8","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"value","nameLocation":"4071:5:8","nodeType":"VariableDeclaration","scope":1093,"src":"4059:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"},"typeName":{"id":1065,"nodeType":"UserDefinedTypeName","pathNode":{"id":1064,"name":"ShortString","nameLocations":["4059:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"4059:11:8"},"referencedDeclaration":883,"src":"4059:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"store","nameLocation":"4093:5:8","nodeType":"VariableDeclaration","scope":1093,"src":"4078:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1067,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:8"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1093,"src":"4123:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:8"},"scope":1094,"src":"4027:279:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1095,"src":"1255:3053:8","usedErrors":[891,893],"usedEvents":[]}],"src":"106:4203:8"},"id":8},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1204]},"id":1205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1096,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"219:1025:9","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1204,"linearizedBaseContracts":[1204],"name":"StorageSlot","nameLocation":"1253:11:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1100,"members":[{"constant":false,"id":1099,"mutability":"mutable","name":"value","nameLocation":"1308:5:9","nodeType":"VariableDeclaration","scope":1100,"src":"1300:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:9","nodeType":"StructDefinition","scope":1204,"src":"1271:49:9","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1103,"members":[{"constant":false,"id":1102,"mutability":"mutable","name":"value","nameLocation":"1360:5:9","nodeType":"VariableDeclaration","scope":1103,"src":"1355:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1101,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:9","nodeType":"StructDefinition","scope":1204,"src":"1326:46:9","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1106,"members":[{"constant":false,"id":1105,"mutability":"mutable","name":"value","nameLocation":"1415:5:9","nodeType":"VariableDeclaration","scope":1106,"src":"1407:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:9","nodeType":"StructDefinition","scope":1204,"src":"1378:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1109,"members":[{"constant":false,"id":1108,"mutability":"mutable","name":"value","nameLocation":"1470:5:9","nodeType":"VariableDeclaration","scope":1109,"src":"1462:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:9","nodeType":"StructDefinition","scope":1204,"src":"1433:49:9","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1112,"members":[{"constant":false,"id":1111,"mutability":"mutable","name":"value","nameLocation":"1523:5:9","nodeType":"VariableDeclaration","scope":1112,"src":"1516:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1110,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:9","nodeType":"StructDefinition","scope":1204,"src":"1488:47:9","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1115,"members":[{"constant":false,"id":1114,"mutability":"mutable","name":"value","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1115,"src":"1568:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1113,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:9","nodeType":"StructDefinition","scope":1204,"src":"1541:45:9","visibility":"public"},{"body":{"id":1125,"nodeType":"Block","src":"1768:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1830:38:9","statements":[{"nodeType":"YulAssignment","src":"1844:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"1854:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1844:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1122,"isOffset":false,"isSlot":true,"src":"1844:6:9","suffix":"slot","valueSize":1},{"declaration":1118,"isOffset":false,"isSlot":false,"src":"1854:4:9","valueSize":1}],"id":1124,"nodeType":"InlineAssembly","src":"1821:47:9"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"1592:87:9","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:9","nodeType":"FunctionDefinition","parameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"slot","nameLocation":"1716:4:9","nodeType":"VariableDeclaration","scope":1126,"src":"1708:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:9"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"r","nameLocation":"1765:1:9","nodeType":"VariableDeclaration","scope":1126,"src":"1745:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1100_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1121,"nodeType":"UserDefinedTypeName","pathNode":{"id":1120,"name":"AddressSlot","nameLocations":["1745:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1100,"src":"1745:11:9"},"referencedDeclaration":1100,"src":"1745:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1100_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:9"},"scope":1204,"src":"1684:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1136,"nodeType":"Block","src":"2056:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2118:38:9","statements":[{"nodeType":"YulAssignment","src":"2132:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2142:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2132:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1133,"isOffset":false,"isSlot":true,"src":"2132:6:9","suffix":"slot","valueSize":1},{"declaration":1129,"isOffset":false,"isSlot":false,"src":"2142:4:9","valueSize":1}],"id":1135,"nodeType":"InlineAssembly","src":"2109:47:9"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"1880:87:9","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:9","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"slot","nameLocation":"2004:4:9","nodeType":"VariableDeclaration","scope":1137,"src":"1996:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:9"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"r","nameLocation":"2053:1:9","nodeType":"VariableDeclaration","scope":1137,"src":"2033:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1103_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1132,"nodeType":"UserDefinedTypeName","pathNode":{"id":1131,"name":"BooleanSlot","nameLocations":["2033:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1103,"src":"2033:11:9"},"referencedDeclaration":1103,"src":"2033:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1103_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:9"},"scope":1204,"src":"1972:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1147,"nodeType":"Block","src":"2344:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2406:38:9","statements":[{"nodeType":"YulAssignment","src":"2420:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2430:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2420:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1144,"isOffset":false,"isSlot":true,"src":"2420:6:9","suffix":"slot","valueSize":1},{"declaration":1140,"isOffset":false,"isSlot":false,"src":"2430:4:9","valueSize":1}],"id":1146,"nodeType":"InlineAssembly","src":"2397:47:9"}]},"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"2168:87:9","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1148,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:9","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"slot","nameLocation":"2292:4:9","nodeType":"VariableDeclaration","scope":1148,"src":"2284:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:9"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"r","nameLocation":"2341:1:9","nodeType":"VariableDeclaration","scope":1148,"src":"2321:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1106_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"Bytes32Slot","nameLocations":["2321:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1106,"src":"2321:11:9"},"referencedDeclaration":1106,"src":"2321:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1106_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:9"},"scope":1204,"src":"2260:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"2632:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2694:38:9","statements":[{"nodeType":"YulAssignment","src":"2708:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2718:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2708:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1155,"isOffset":false,"isSlot":true,"src":"2708:6:9","suffix":"slot","valueSize":1},{"declaration":1151,"isOffset":false,"isSlot":false,"src":"2718:4:9","valueSize":1}],"id":1157,"nodeType":"InlineAssembly","src":"2685:47:9"}]},"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"2456:87:9","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:9","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"slot","nameLocation":"2580:4:9","nodeType":"VariableDeclaration","scope":1159,"src":"2572:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:9"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"r","nameLocation":"2629:1:9","nodeType":"VariableDeclaration","scope":1159,"src":"2609:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1109_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1154,"nodeType":"UserDefinedTypeName","pathNode":{"id":1153,"name":"Uint256Slot","nameLocations":["2609:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"2609:11:9"},"referencedDeclaration":1109,"src":"2609:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1109_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:9"},"scope":1204,"src":"2548:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1169,"nodeType":"Block","src":"2917:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2979:38:9","statements":[{"nodeType":"YulAssignment","src":"2993:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3003:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2993:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1166,"isOffset":false,"isSlot":true,"src":"2993:6:9","suffix":"slot","valueSize":1},{"declaration":1162,"isOffset":false,"isSlot":false,"src":"3003:4:9","valueSize":1}],"id":1168,"nodeType":"InlineAssembly","src":"2970:47:9"}]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"2744:86:9","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1170,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:9","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"slot","nameLocation":"2866:4:9","nodeType":"VariableDeclaration","scope":1170,"src":"2858:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:9"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"r","nameLocation":"2914:1:9","nodeType":"VariableDeclaration","scope":1170,"src":"2895:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1112_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1165,"nodeType":"UserDefinedTypeName","pathNode":{"id":1164,"name":"StringSlot","nameLocations":["2895:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"2895:10:9"},"referencedDeclaration":1112,"src":"2895:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1112_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:9"},"scope":1204,"src":"2835:188:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1180,"nodeType":"Block","src":"3225:112:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3287:44:9","statements":[{"nodeType":"YulAssignment","src":"3301:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3311:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3301:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1177,"isOffset":false,"isSlot":true,"src":"3301:6:9","suffix":"slot","valueSize":1},{"declaration":1173,"isOffset":false,"isSlot":true,"src":"3311:10:9","suffix":"slot","valueSize":1}],"id":1179,"nodeType":"InlineAssembly","src":"3278:53:9"}]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"3029:101:9","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:9","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"store","nameLocation":"3173:5:9","nodeType":"VariableDeclaration","scope":1181,"src":"3158:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1172,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:9"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"r","nameLocation":"3222:1:9","nodeType":"VariableDeclaration","scope":1181,"src":"3203:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1112_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1176,"nodeType":"UserDefinedTypeName","pathNode":{"id":1175,"name":"StringSlot","nameLocations":["3203:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"3203:10:9"},"referencedDeclaration":1112,"src":"3203:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1112_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:9"},"scope":1204,"src":"3135:202:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1191,"nodeType":"Block","src":"3513:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3575:38:9","statements":[{"nodeType":"YulAssignment","src":"3589:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3599:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3589:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1188,"isOffset":false,"isSlot":true,"src":"3589:6:9","suffix":"slot","valueSize":1},{"declaration":1184,"isOffset":false,"isSlot":false,"src":"3599:4:9","valueSize":1}],"id":1190,"nodeType":"InlineAssembly","src":"3566:47:9"}]},"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"3343:85:9","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1192,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:9","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"slot","nameLocation":"3463:4:9","nodeType":"VariableDeclaration","scope":1192,"src":"3455:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:9"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"r","nameLocation":"3510:1:9","nodeType":"VariableDeclaration","scope":1192,"src":"3492:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1115_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1187,"nodeType":"UserDefinedTypeName","pathNode":{"id":1186,"name":"BytesSlot","nameLocations":["3492:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"3492:9:9"},"referencedDeclaration":1115,"src":"3492:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1115_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:9"},"scope":1204,"src":"3433:186:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1202,"nodeType":"Block","src":"3816:112:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3878:44:9","statements":[{"nodeType":"YulAssignment","src":"3892:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3902:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3892:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1199,"isOffset":false,"isSlot":true,"src":"3892:6:9","suffix":"slot","valueSize":1},{"declaration":1195,"isOffset":false,"isSlot":true,"src":"3902:10:9","suffix":"slot","valueSize":1}],"id":1201,"nodeType":"InlineAssembly","src":"3869:53:9"}]},"documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"3625:99:9","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1203,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:9","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"store","nameLocation":"3765:5:9","nodeType":"VariableDeclaration","scope":1203,"src":"3751:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1194,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:9"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"r","nameLocation":"3813:1:9","nodeType":"VariableDeclaration","scope":1203,"src":"3795:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1115_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1198,"nodeType":"UserDefinedTypeName","pathNode":{"id":1197,"name":"BytesSlot","nameLocations":["3795:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"3795:9:9"},"referencedDeclaration":1115,"src":"3795:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1115_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:9"},"scope":1204,"src":"3729:199:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1205,"src":"1245:2685:9","usedErrors":[],"usedEvents":[]}],"src":"193:3738:9"},"id":9},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2814],"SignedMath":[2919],"Strings":[1459]},"id":1460,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1206,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":2815,"src":"127:37:10","symbolAliases":[{"foreign":{"id":1207,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"135:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":2920,"src":"165:49:10","symbolAliases":[{"foreign":{"id":1209,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"173:10:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"216:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":1459,"linearizedBaseContracts":[1459],"name":"Strings","nameLocation":"259:7:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1214,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:10","nodeType":"VariableDeclaration","scope":1459,"src":"273:56:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1212,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1217,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:10","nodeType":"VariableDeclaration","scope":1459,"src":"335:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1215,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"384:81:10","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1224,"name":"StringsInsufficientHexLength","nameLocation":"476:28:10","nodeType":"ErrorDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"value","nameLocation":"513:5:10","nodeType":"VariableDeclaration","scope":1224,"src":"505:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"length","nameLocation":"528:6:10","nodeType":"VariableDeclaration","scope":1224,"src":"520:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:10"},"src":"470:66:10"},{"body":{"id":1271,"nodeType":"Block","src":"708:627:10","statements":[{"id":1270,"nodeType":"UncheckedBlock","src":"718:611:10","statements":[{"assignments":[1233],"declarations":[{"constant":false,"id":1233,"mutability":"mutable","name":"length","nameLocation":"750:6:10","nodeType":"VariableDeclaration","scope":1270,"src":"742:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1240,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"770:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1234,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"759:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2814_$","typeString":"type(library Math)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:10","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2634,"src":"759:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:10"},{"assignments":[1242],"declarations":[{"constant":false,"id":1242,"mutability":"mutable","name":"buffer","nameLocation":"808:6:10","nodeType":"VariableDeclaration","scope":1270,"src":"794:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1241,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1247,"initialValue":{"arguments":[{"id":1245,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"828:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1243,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:10"},{"assignments":[1249],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"ptr","nameLocation":"857:3:10","nodeType":"VariableDeclaration","scope":1270,"src":"849:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1250,"nodeType":"VariableDeclarationStatement","src":"849:11:10"},{"AST":{"nodeType":"YulBlock","src":"930:67:10","statements":[{"nodeType":"YulAssignment","src":"948:35:10","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:10","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:10"},"nodeType":"YulFunctionCall","src":"967:15:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:10"},"nodeType":"YulFunctionCall","src":"955:28:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1242,"isOffset":false,"isSlot":false,"src":"959:6:10","valueSize":1},{"declaration":1233,"isOffset":false,"isSlot":false,"src":"975:6:10","valueSize":1},{"declaration":1249,"isOffset":false,"isSlot":false,"src":"948:3:10","valueSize":1}],"id":1251,"nodeType":"InlineAssembly","src":"921:76:10"},{"body":{"id":1266,"nodeType":"Block","src":"1023:269:10","statements":[{"expression":{"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:10","subExpression":{"id":1253,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"1041:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1255,"nodeType":"ExpressionStatement","src":"1041:5:10"},{"AST":{"nodeType":"YulBlock","src":"1124:86:10","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:10"},"nodeType":"YulFunctionCall","src":"1164:14:10"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:10"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:10"},"nodeType":"YulFunctionCall","src":"1159:32:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:10"},"nodeType":"YulFunctionCall","src":"1146:46:10"},"nodeType":"YulExpressionStatement","src":"1146:46:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1214,"isOffset":false,"isSlot":false,"src":"1180:10:10","valueSize":1},{"declaration":1249,"isOffset":false,"isSlot":false,"src":"1154:3:10","valueSize":1},{"declaration":1227,"isOffset":false,"isSlot":false,"src":"1168:5:10","valueSize":1}],"id":1256,"nodeType":"InlineAssembly","src":"1115:95:10"},{"expression":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"1227:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1260,"nodeType":"ExpressionStatement","src":"1227:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"1260:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1265,"nodeType":"IfStatement","src":"1256:21:10","trueBody":{"id":1264,"nodeType":"Break","src":"1272:5:10"}}]},"condition":{"hexValue":"74727565","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1267,"nodeType":"WhileStatement","src":"1010:282:10"},{"expression":{"id":1268,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1312:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1231,"id":1269,"nodeType":"Return","src":"1305:13:10"}]}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"542:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1272,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:10","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"value","nameLocation":"663:5:10","nodeType":"VariableDeclaration","scope":1272,"src":"655:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:10"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1272,"src":"693:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1229,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:10"},"scope":1459,"src":"637:698:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1297,"nodeType":"Block","src":"1511:92:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"1542:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:10","trueExpression":{"hexValue":"2d","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"1588:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1290,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"1573:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2919_$","typeString":"type(library SignedMath)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:10","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2918,"src":"1573:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1289,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"1564:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1280,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:10","typeDescriptions":{}}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:10","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1279,"id":1296,"nodeType":"Return","src":"1521:75:10"}]},"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"1341:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:10","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"value","nameLocation":"1466:5:10","nodeType":"VariableDeclaration","scope":1298,"src":"1459:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1274,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:10"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1298,"src":"1496:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1277,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:10"},"scope":1459,"src":"1435:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1317,"nodeType":"Block","src":"1782:100:10","statements":[{"id":1316,"nodeType":"UncheckedBlock","src":"1792:84:10","statements":[{"expression":{"arguments":[{"id":1307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"1835:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"1854:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1308,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"1842:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2814_$","typeString":"type(library Math)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:10","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"1842:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1306,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1318,1401,1421],"referencedDeclaration":1401,"src":"1823:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1305,"id":1315,"nodeType":"Return","src":"1816:49:10"}]}]},"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"1609:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:10","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"value","nameLocation":"1737:5:10","nodeType":"VariableDeclaration","scope":1318,"src":"1729:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:10"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"1767:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1303,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:10"},"scope":1459,"src":"1708:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1400,"nodeType":"Block","src":"2095:435:10","statements":[{"assignments":[1329],"declarations":[{"constant":false,"id":1329,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:10","nodeType":"VariableDeclaration","scope":1400,"src":"2105:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1331,"initialValue":{"id":1330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2126:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:10"},{"assignments":[1333],"declarations":[{"constant":false,"id":1333,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:10","nodeType":"VariableDeclaration","scope":1400,"src":"2141:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1342,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1337,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2177:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1334,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:10"},{"expression":{"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1343,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2198:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1345,"indexExpression":{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1348,"nodeType":"ExpressionStatement","src":"2198:15:10"},{"expression":{"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1349,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2223:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1351,"indexExpression":{"hexValue":"31","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1354,"nodeType":"ExpressionStatement","src":"2223:15:10"},{"body":{"id":1383,"nodeType":"Block","src":"2293:95:10","statements":[{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1369,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2307:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1371,"indexExpression":{"id":1370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"2314:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1372,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"2319:10:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1376,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1373,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"2330:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1378,"nodeType":"ExpressionStatement","src":"2307:40:10"},{"expression":{"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1379,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"2361:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1382,"nodeType":"ExpressionStatement","src":"2361:16:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"2281:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1384,"initializationExpression":{"assignments":[1356],"declarations":[{"constant":false,"id":1356,"mutability":"mutable","name":"i","nameLocation":"2261:1:10","nodeType":"VariableDeclaration","scope":1384,"src":"2253:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1362,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1358,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2269:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:10"},"loopExpression":{"expression":{"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:10","subExpression":{"id":1366,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"2290:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1368,"nodeType":"ExpressionStatement","src":"2288:3:10"},"nodeType":"ForStatement","src":"2248:140:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1385,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"2401:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1394,"nodeType":"IfStatement","src":"2397:96:10","trueBody":{"id":1393,"nodeType":"Block","src":"2418:75:10","statements":[{"errorCall":{"arguments":[{"id":1389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2468:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1390,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2475:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1388,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"2439:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1392,"nodeType":"RevertStatement","src":"2432:50:10"}]}},{"expression":{"arguments":[{"id":1397,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2516:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1395,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:10","typeDescriptions":{}}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1327,"id":1399,"nodeType":"Return","src":"2502:21:10"}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"1888:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:10","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"value","nameLocation":"2034:5:10","nodeType":"VariableDeclaration","scope":1401,"src":"2026:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"length","nameLocation":"2049:6:10","nodeType":"VariableDeclaration","scope":1401,"src":"2041:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:10"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1401,"src":"2080:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1325,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:10"},"scope":1459,"src":"2005:525:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1420,"nodeType":"Block","src":"2762:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1414,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"2807:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1412,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:10","typeDescriptions":{}}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:10","typeDescriptions":{}}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1417,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2815:14:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1409,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1318,1401,1421],"referencedDeclaration":1401,"src":"2779:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1408,"id":1419,"nodeType":"Return","src":"2772:58:10"}]},"documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"2536:148:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:10","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"addr","nameLocation":"2718:4:10","nodeType":"VariableDeclaration","scope":1421,"src":"2710:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:10"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"2747:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1406,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:10"},"scope":1459,"src":"2689:148:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"2992:104:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3015:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1431,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:10","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:10","memberName":"length","nodeType":"MemberAccess","src":"3009:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1438,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3034:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1436,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:10","typeDescriptions":{}}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:10","memberName":"length","nodeType":"MemberAccess","src":"3028:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3063:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1443,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:10","typeDescriptions":{}}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1442,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1451,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3086:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1449,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:10","typeDescriptions":{}}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1448,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1430,"id":1456,"nodeType":"Return","src":"3002:87:10"}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"2843:66:10","text":" @dev Returns true if the two strings are equal."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:10","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"a","nameLocation":"2943:1:10","nodeType":"VariableDeclaration","scope":1458,"src":"2929:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1423,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"b","nameLocation":"2960:1:10","nodeType":"VariableDeclaration","scope":1458,"src":"2946:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1425,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:10"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1458,"src":"2986:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1428,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:10"},"scope":1459,"src":"2914:182:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1460,"src":"251:2847:10","usedErrors":[1224],"usedEvents":[]}],"src":"101:2998:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[1686],"IERC5267":[172],"MessageHashUtils":[1760],"ShortString":[883],"ShortStrings":[1094]},"id":1687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1461,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":1463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1687,"sourceUnit":1761,"src":"139:56:11","symbolAliases":[{"foreign":{"id":1462,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"147:16:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":1466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1687,"sourceUnit":1095,"src":"196:62:11","symbolAliases":[{"foreign":{"id":1464,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"204:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1465,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"218:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":1468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1687,"sourceUnit":173,"src":"259:55:11","symbolAliases":[{"foreign":{"id":1467,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1470,"name":"IERC5267","nameLocations":["1988:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:11"},"id":1471,"nodeType":"InheritanceSpecifier","src":"1988:8:11"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"316:1643:11","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":1686,"linearizedBaseContracts":[1686,172],"name":"EIP712","nameLocation":"1978:6:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1473,"libraryName":{"id":1472,"name":"ShortStrings","nameLocations":["2009:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1094,"src":"2009:12:11"},"nodeType":"UsingForDirective","src":"2003:25:11"},{"constant":true,"id":1478,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:11","nodeType":"VariableDeclaration","scope":1686,"src":"2034:140:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":1475,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1480,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:11","nodeType":"VariableDeclaration","scope":1686,"src":"2373:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1482,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:11","nodeType":"VariableDeclaration","scope":1686,"src":"2427:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1484,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:11","nodeType":"VariableDeclaration","scope":1686,"src":"2473:37:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1486,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:11","nodeType":"VariableDeclaration","scope":1686,"src":"2517:37:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1488,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:11","nodeType":"VariableDeclaration","scope":1686,"src":"2560:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1491,"mutability":"immutable","name":"_name","nameLocation":"2637:5:11","nodeType":"VariableDeclaration","scope":1686,"src":"2607:35:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"},"typeName":{"id":1490,"nodeType":"UserDefinedTypeName","pathNode":{"id":1489,"name":"ShortString","nameLocations":["2607:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"2607:11:11"},"referencedDeclaration":883,"src":"2607:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":1494,"mutability":"immutable","name":"_version","nameLocation":"2678:8:11","nodeType":"VariableDeclaration","scope":1686,"src":"2648:38:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"},"typeName":{"id":1493,"nodeType":"UserDefinedTypeName","pathNode":{"id":1492,"name":"ShortString","nameLocations":["2648:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"2648:11:11"},"referencedDeclaration":883,"src":"2648:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":1496,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:11","nodeType":"VariableDeclaration","scope":1686,"src":"2692:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1495,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1498,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:11","nodeType":"VariableDeclaration","scope":1686,"src":"2726:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1497,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1555,"nodeType":"Block","src":"3383:376:11","statements":[{"expression":{"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1506,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"3393:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1509,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"3432:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":1507,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"3401:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:11","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1035,"src":"3401:30:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$883_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"src":"3393:53:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"id":1512,"nodeType":"ExpressionStatement","src":"3393:53:11"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1513,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"3456:8:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1516,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"3501:16:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":1514,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3467:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:11","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1035,"src":"3467:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$883_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"src":"3456:62:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"id":1519,"nodeType":"ExpressionStatement","src":"3456:62:11"},{"expression":{"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1520,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"3528:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1524,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"3558:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1522,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:11","typeDescriptions":{}}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1521,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1528,"nodeType":"ExpressionStatement","src":"3528:36:11"},{"expression":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1529,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"3574:14:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1533,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3607:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1531,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:11","typeDescriptions":{}}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1530,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1537,"nodeType":"ExpressionStatement","src":"3574:42:11"},{"expression":{"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1538,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"3627:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1539,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:11","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1542,"nodeType":"ExpressionStatement","src":"3627:30:11"},{"expression":{"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1543,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"3667:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1544,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"3692:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1547,"nodeType":"ExpressionStatement","src":"3667:48:11"},{"expression":{"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1548,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"3725:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1551,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$1686","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$1686","typeString":"contract EIP712"}],"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","typeDescriptions":{}}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1554,"nodeType":"ExpressionStatement","src":"3725:27:11"}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"2764:559:11","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":1556,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"name","nameLocation":"3354:4:11","nodeType":"VariableDeclaration","scope":1556,"src":"3340:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1500,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"version","nameLocation":"3374:7:11","nodeType":"VariableDeclaration","scope":1556,"src":"3360:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1502,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:11"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"3383:0:11"},"scope":1686,"src":"3328:431:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1581,"nodeType":"Block","src":"3907:200:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1564,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$1686","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$1686","typeString":"contract EIP712"}],"id":1563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1562,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:11","typeDescriptions":{}}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1566,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"3938:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1568,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:11","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1570,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"3970:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1579,"nodeType":"Block","src":"4046:55:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1576,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"4067:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1561,"id":1578,"nodeType":"Return","src":"4060:30:11"}]},"id":1580,"nodeType":"IfStatement","src":"3917:184:11","trueBody":{"id":1575,"nodeType":"Block","src":"3986:54:11","statements":[{"expression":{"id":1573,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"4007:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1561,"id":1574,"nodeType":"Return","src":"4000:29:11"}]}}]},"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"3765:75:11","text":" @dev Returns the domain separator for the current chain."},"id":1582,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:11","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"3872:2:11"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1582,"src":"3898:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:11"},"scope":1686,"src":"3845:262:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1602,"nodeType":"Block","src":"4177:115:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":1590,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"4215:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1591,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"4226:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1592,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"4239:14:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1593,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:11","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1597,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$1686","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$1686","typeString":"contract EIP712"}],"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:11","typeDescriptions":{}}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1588,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:11","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1587,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1586,"id":1601,"nodeType":"Return","src":"4187:98:11"}]},"id":1603,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:11","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[],"src":"4143:2:11"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1603,"src":"4168:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:11"},"scope":1686,"src":"4113:179:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1618,"nodeType":"Block","src":"5003:90:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1613,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5053:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1615,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"5075:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1611,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5020:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$1760_$","typeString":"type(library MessageHashUtils)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:11","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"5020:32:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1610,"id":1617,"nodeType":"Return","src":"5013:73:11"}]},"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"4298:614:11","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":1619,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:11","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:11","nodeType":"VariableDeclaration","scope":1619,"src":"4943:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:11"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1619,"src":"4994:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:11"},"scope":1686,"src":"4917:176:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":1660,"nodeType":"Block","src":"5472:229:11","statements":[{"expression":{"components":[{"hexValue":"0f","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":1639,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5533:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1641,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"5560:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1643,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:11","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1647,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$1686","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$1686","typeString":"contract EIP712"}],"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:11","typeDescriptions":{}}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:11","typeDescriptions":{}}},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1654,"nodeType":"ArrayTypeName","src":"5672:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":1658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":1637,"id":1659,"nodeType":"Return","src":"5482:212:11"}]},"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"5099:40:11","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:11","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[],"src":"5165:2:11"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"fields","nameLocation":"5249:6:11","nodeType":"VariableDeclaration","scope":1661,"src":"5242:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1622,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"name","nameLocation":"5283:4:11","nodeType":"VariableDeclaration","scope":1661,"src":"5269:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1624,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"version","nameLocation":"5315:7:11","nodeType":"VariableDeclaration","scope":1661,"src":"5301:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1626,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:11","nodeType":"VariableDeclaration","scope":1661,"src":"5336:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:11","nodeType":"VariableDeclaration","scope":1661,"src":"5365:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"salt","nameLocation":"5412:4:11","nodeType":"VariableDeclaration","scope":1661,"src":"5404:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:11","nodeType":"VariableDeclaration","scope":1661,"src":"5430:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1635,"nodeType":"ArrayTypeName","src":"5430:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:11"},"scope":1686,"src":"5144:557:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1672,"nodeType":"Block","src":"6082:65:11","statements":[{"expression":{"arguments":[{"id":1669,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"6126:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":1667,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"6099:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:11","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1062,"src":"6099:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$883_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$883_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1666,"id":1671,"nodeType":"Return","src":"6092:48:11"}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"5707:256:11","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":1673,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:11","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"6041:2:11"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1673,"src":"6067:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1664,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:11"},"scope":1686,"src":"6021:126:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1684,"nodeType":"Block","src":"6537:71:11","statements":[{"expression":{"arguments":[{"id":1681,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"6584:16:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":1679,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"6554:8:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$883","typeString":"ShortString"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:11","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1062,"src":"6554:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$883_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$883_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1678,"id":1683,"nodeType":"Return","src":"6547:54:11"}]},"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"6153:262:11","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:11","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[],"src":"6496:2:11"},"returnParameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1685,"src":"6522:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1676,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:11"},"scope":1686,"src":"6473:135:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1687,"src":"1960:4650:11","usedErrors":[891,893],"usedEvents":[152]}],"src":"113:6498:11"},"id":11},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[1760],"Strings":[1459]},"id":1761,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1761,"sourceUnit":1460,"src":"149:39:12","symbolAliases":[{"foreign":{"id":1689,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"157:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"190:330:12","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":1760,"linearizedBaseContracts":[1760],"name":"MessageHashUtils","nameLocation":"529:16:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1700,"nodeType":"Block","src":"1314:368:12","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:12","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:12","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:12"},"nodeType":"YulFunctionCall","src":"1390:48:12"},"nodeType":"YulExpressionStatement","src":"1390:48:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:12","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:12"},"nodeType":"YulFunctionCall","src":"1492:25:12"},"nodeType":"YulExpressionStatement","src":"1492:25:12"},{"nodeType":"YulAssignment","src":"1571:31:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:12","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:12","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:12"},"nodeType":"YulFunctionCall","src":"1581:21:12"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1697,"isOffset":false,"isSlot":false,"src":"1571:6:12","valueSize":1},{"declaration":1694,"isOffset":false,"isSlot":false,"src":"1505:11:12","valueSize":1}],"id":1699,"nodeType":"InlineAssembly","src":"1367:309:12"}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"552:665:12","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":1701,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:12","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:12","nodeType":"VariableDeclaration","scope":1701,"src":"1254:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:12"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"digest","nameLocation":"1306:6:12","nodeType":"VariableDeclaration","scope":1701,"src":"1298:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:12"},"scope":1760,"src":"1222:460:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1726,"nodeType":"Block","src":"2234:143:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":1718,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2343:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:12","memberName":"length","nodeType":"MemberAccess","src":"2343:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1716,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"2326:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1459_$","typeString":"type(library Strings)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:12","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1272,"src":"2326:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1714,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:12","typeDescriptions":{}}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1722,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2361:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1710,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:12","typeDescriptions":{}}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:12","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1709,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1708,"id":1725,"nodeType":"Return","src":"2244:126:12"}]},"documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"1688:455:12","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:12","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"message","nameLocation":"2193:7:12","nodeType":"VariableDeclaration","scope":1727,"src":"2180:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1703,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:12"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"2225:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:12"},"scope":1760,"src":"2148:229:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1746,"nodeType":"Block","src":"2831:80:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":1741,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2887:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1742,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2898:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1738,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1737,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1736,"id":1745,"nodeType":"Return","src":"2841:63:12"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"2383:332:12","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":1747,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:12","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"validator","nameLocation":"2769:9:12","nodeType":"VariableDeclaration","scope":1747,"src":"2761:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"data","nameLocation":"2793:4:12","nodeType":"VariableDeclaration","scope":1747,"src":"2780:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1731,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:12"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1747,"src":"2822:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:12"},"scope":1760,"src":"2720:191:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1758,"nodeType":"Block","src":"3462:292:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:12"},"nodeType":"YulFunctionCall","src":"3549:11:12"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:12"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:12","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:12"},"nodeType":"YulFunctionCall","src":"3573:23:12"},"nodeType":"YulExpressionStatement","src":"3573:23:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:12","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:12"},"nodeType":"YulFunctionCall","src":"3616:14:12"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:12"},"nodeType":"YulFunctionCall","src":"3609:39:12"},"nodeType":"YulExpressionStatement","src":"3609:39:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:12","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:12"},"nodeType":"YulFunctionCall","src":"3668:14:12"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:12"},"nodeType":"YulFunctionCall","src":"3661:34:12"},"nodeType":"YulExpressionStatement","src":"3661:34:12"},{"nodeType":"YulAssignment","src":"3708:30:12","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:12","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:12"},"nodeType":"YulFunctionCall","src":"3718:20:12"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1755,"isOffset":false,"isSlot":false,"src":"3708:6:12","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"3632:15:12","valueSize":1},{"declaration":1752,"isOffset":false,"isSlot":false,"src":"3684:10:12","valueSize":1}],"id":1757,"nodeType":"InlineAssembly","src":"3515:233:12"}]},"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"2917:431:12","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":1759,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:12","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:12","nodeType":"VariableDeclaration","scope":1759,"src":"3378:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:12","nodeType":"VariableDeclaration","scope":1759,"src":"3403:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:12"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"digest","nameLocation":"3454:6:12","nodeType":"VariableDeclaration","scope":1759,"src":"3446:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:12"},"scope":1760,"src":"3353:401:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1761,"src":"521:3235:12","usedErrors":[],"usedEvents":[]}],"src":"123:3634:12"},"id":12},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2814]},"id":2815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1762,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"129:73:13","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2814,"linearizedBaseContracts":[2814],"name":"Math","nameLocation":"211:4:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"222:50:13","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":1766,"name":"MathOverflowedMulDiv","nameLocation":"283:20:13","nodeType":"ErrorDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[],"src":"303:2:13"},"src":"277:29:13"},{"canonicalName":"Math.Rounding","id":1771,"members":[{"id":1767,"name":"Floor","nameLocation":"336:5:13","nodeType":"EnumValue","src":"336:5:13"},{"id":1768,"name":"Ceil","nameLocation":"379:4:13","nodeType":"EnumValue","src":"379:4:13"},{"id":1769,"name":"Trunc","nameLocation":"421:5:13","nodeType":"EnumValue","src":"421:5:13"},{"id":1770,"name":"Expand","nameLocation":"451:6:13","nodeType":"EnumValue","src":"451:6:13"}],"name":"Rounding","nameLocation":"317:8:13","nodeType":"EnumDefinition","src":"312:169:13"},{"body":{"id":1802,"nodeType":"Block","src":"661:140:13","statements":[{"id":1801,"nodeType":"UncheckedBlock","src":"671:124:13","statements":[{"assignments":[1784],"declarations":[{"constant":false,"id":1784,"mutability":"mutable","name":"c","nameLocation":"703:1:13","nodeType":"VariableDeclaration","scope":1801,"src":"695:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1788,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"707:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1786,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"711:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1789,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"730:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1790,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"734:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1796,"nodeType":"IfStatement","src":"726:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1782,"id":1795,"nodeType":"Return","src":"737:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1798,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"782:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1782,"id":1800,"nodeType":"Return","src":"768:16:13"}]}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"487:93:13","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":1803,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:13","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"a","nameLocation":"609:1:13","nodeType":"VariableDeclaration","scope":1803,"src":"601:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"b","nameLocation":"620:1:13","nodeType":"VariableDeclaration","scope":1803,"src":"612:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:13"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"646:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1778,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"652:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:13"},"scope":2814,"src":"585:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1830,"nodeType":"Block","src":"984:113:13","statements":[{"id":1829,"nodeType":"UncheckedBlock","src":"994:97:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"1022:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1816,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"1026:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1822,"nodeType":"IfStatement","src":"1018:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1814,"id":1821,"nodeType":"Return","src":"1029:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"1074:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1825,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"1078:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1814,"id":1828,"nodeType":"Return","src":"1060:20:13"}]}]},"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"807:96:13","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:13","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"a","nameLocation":"932:1:13","nodeType":"VariableDeclaration","scope":1831,"src":"924:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"b","nameLocation":"943:1:13","nodeType":"VariableDeclaration","scope":1831,"src":"935:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:13"},"returnParameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"969:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1810,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"975:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:13"},"scope":2814,"src":"908:189:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1872,"nodeType":"Block","src":"1283:417:13","statements":[{"id":1871,"nodeType":"UncheckedBlock","src":"1293:401:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"1551:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1850,"nodeType":"IfStatement","src":"1547:28:13","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1842,"id":1849,"nodeType":"Return","src":"1559:16:13"}},{"assignments":[1852],"declarations":[{"constant":false,"id":1852,"mutability":"mutable","name":"c","nameLocation":"1597:1:13","nodeType":"VariableDeclaration","scope":1871,"src":"1589:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1856,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"1601:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1854,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"1605:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1857,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"1624:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"1628:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1860,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"1633:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1866,"nodeType":"IfStatement","src":"1620:33:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1842,"id":1865,"nodeType":"Return","src":"1636:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1868,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"1681:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1842,"id":1870,"nodeType":"Return","src":"1667:16:13"}]}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"1103:99:13","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:13","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"a","nameLocation":"1231:1:13","nodeType":"VariableDeclaration","scope":1873,"src":"1223:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"b","nameLocation":"1242:1:13","nodeType":"VariableDeclaration","scope":1873,"src":"1234:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:13"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1873,"src":"1268:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1838,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1873,"src":"1274:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:13"},"scope":2814,"src":"1207:493:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"1887:114:13","statements":[{"id":1899,"nodeType":"UncheckedBlock","src":"1897:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1885,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1925:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1892,"nodeType":"IfStatement","src":"1921:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1884,"id":1891,"nodeType":"Return","src":"1933:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"1978:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1982:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1884,"id":1898,"nodeType":"Return","src":"1964:20:13"}]}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"1706:100:13","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:13","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"a","nameLocation":"1835:1:13","nodeType":"VariableDeclaration","scope":1901,"src":"1827:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"b","nameLocation":"1846:1:13","nodeType":"VariableDeclaration","scope":1901,"src":"1838:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:13"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"1872:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1880,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"1878:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:13"},"scope":2814,"src":"1811:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1928,"nodeType":"Block","src":"2198:114:13","statements":[{"id":1927,"nodeType":"UncheckedBlock","src":"2208:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1913,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"2236:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1920,"nodeType":"IfStatement","src":"2232:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1912,"id":1919,"nodeType":"Return","src":"2244:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"2289:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"2293:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1912,"id":1926,"nodeType":"Return","src":"2275:20:13"}]}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"2007:110:13","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":1929,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:13","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"a","nameLocation":"2146:1:13","nodeType":"VariableDeclaration","scope":1929,"src":"2138:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"b","nameLocation":"2157:1:13","nodeType":"VariableDeclaration","scope":1929,"src":"2149:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:13"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1929,"src":"2183:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1908,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1929,"src":"2189:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:13"},"scope":2814,"src":"2122:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1946,"nodeType":"Block","src":"2449:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"2466:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2470:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2478:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:13","trueExpression":{"id":1942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"2474:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1938,"id":1945,"nodeType":"Return","src":"2459:20:13"}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"2318:59:13","text":" @dev Returns the largest of two numbers."},"id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:13","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"a","nameLocation":"2403:1:13","nodeType":"VariableDeclaration","scope":1947,"src":"2395:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"b","nameLocation":"2414:1:13","nodeType":"VariableDeclaration","scope":1947,"src":"2406:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:13"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"2440:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:13"},"scope":2814,"src":"2382:104:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1964,"nodeType":"Block","src":"2624:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1957,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2641:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1958,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"2645:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1961,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"2653:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:13","trueExpression":{"id":1960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2649:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1956,"id":1963,"nodeType":"Return","src":"2634:20:13"}]},"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"2492:60:13","text":" @dev Returns the smallest of two numbers."},"id":1965,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:13","nodeType":"FunctionDefinition","parameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"a","nameLocation":"2578:1:13","nodeType":"VariableDeclaration","scope":1965,"src":"2570:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"b","nameLocation":"2589:1:13","nodeType":"VariableDeclaration","scope":1965,"src":"2581:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:13"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1965,"src":"2615:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:13"},"scope":2814,"src":"2557:104:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1987,"nodeType":"Block","src":"2845:82:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2900:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1976,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2904:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2910:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1980,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2914:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1974,"id":1986,"nodeType":"Return","src":"2892:28:13"}]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"2667:102:13","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1988,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:13","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"a","nameLocation":"2799:1:13","nodeType":"VariableDeclaration","scope":1988,"src":"2791:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"b","nameLocation":"2810:1:13","nodeType":"VariableDeclaration","scope":1988,"src":"2802:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:13"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1988,"src":"2836:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:13"},"scope":2814,"src":"2774:153:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2021,"nodeType":"Block","src":"3219:260:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1998,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"3233:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2006,"nodeType":"IfStatement","src":"3229:127:13","trueBody":{"id":2005,"nodeType":"Block","src":"3241:115:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"3340:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2002,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"3344:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1997,"id":2004,"nodeType":"Return","src":"3333:12:13"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"3444:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2011,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"3458:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2015,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"3467:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:13","trueExpression":{"hexValue":"30","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1997,"id":2020,"nodeType":"Return","src":"3437:35:13"}]},"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"2933:210:13","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:13","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"a","nameLocation":"3173:1:13","nodeType":"VariableDeclaration","scope":2022,"src":"3165:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"b","nameLocation":"3184:1:13","nodeType":"VariableDeclaration","scope":2022,"src":"3176:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:13"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2022,"src":"3210:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:13"},"scope":2814,"src":"3148:331:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2147,"nodeType":"Block","src":"3901:4018:13","statements":[{"id":2146,"nodeType":"UncheckedBlock","src":"3911:4002:13","statements":[{"assignments":[2035],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:13","nodeType":"VariableDeclaration","scope":2146,"src":"4232:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2039,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"4248:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2037,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"4252:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:13"},{"assignments":[2041],"declarations":[{"constant":false,"id":2041,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:13","nodeType":"VariableDeclaration","scope":2146,"src":"4312:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2042,"nodeType":"VariableDeclarationStatement","src":"4312:13:13"},{"AST":{"nodeType":"YulBlock","src":"4392:122:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:13"},"nodeType":"YulFunctionCall","src":"4433:6:13"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:13"},"nodeType":"YulFunctionCall","src":"4420:20:13"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:13","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:13","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:13"},"nodeType":"YulFunctionCall","src":"4470:14:13"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:13"},"nodeType":"YulFunctionCall","src":"4486:13:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:13"},"nodeType":"YulFunctionCall","src":"4466:34:13"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2035,"isOffset":false,"isSlot":false,"src":"4478:5:13","valueSize":1},{"declaration":2035,"isOffset":false,"isSlot":false,"src":"4493:5:13","valueSize":1},{"declaration":2041,"isOffset":false,"isSlot":false,"src":"4457:5:13","valueSize":1},{"declaration":2025,"isOffset":false,"isSlot":false,"src":"4427:1:13","valueSize":1},{"declaration":2027,"isOffset":false,"isSlot":false,"src":"4430:1:13","valueSize":1}],"id":2043,"nodeType":"InlineAssembly","src":"4383:131:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"4595:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2052,"nodeType":"IfStatement","src":"4591:368:13","trueBody":{"id":2051,"nodeType":"Block","src":"4607:352:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2047,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"4925:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2048,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"4933:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2033,"id":2050,"nodeType":"Return","src":"4918:26:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"5065:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2054,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"5080:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2060,"nodeType":"IfStatement","src":"5061:88:13","trueBody":{"id":2059,"nodeType":"Block","src":"5087:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2056,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"5112:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2058,"nodeType":"RevertStatement","src":"5105:29:13"}]}},{"assignments":[2062],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:13","nodeType":"VariableDeclaration","scope":2146,"src":"5404:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2063,"nodeType":"VariableDeclarationStatement","src":"5404:17:13"},{"AST":{"nodeType":"YulBlock","src":"5444:291:13","statements":[{"nodeType":"YulAssignment","src":"5513:38:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:13"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:13"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:13"},"nodeType":"YulFunctionCall","src":"5526:25:13"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:13"}]},{"nodeType":"YulAssignment","src":"5633:41:13","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:13"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:13"},"nodeType":"YulFunctionCall","src":"5653:20:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:13"},"nodeType":"YulFunctionCall","src":"5642:32:13"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:13"}]},{"nodeType":"YulAssignment","src":"5691:30:13","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:13"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:13"},"nodeType":"YulFunctionCall","src":"5700:21:13"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2029,"isOffset":false,"isSlot":false,"src":"5539:11:13","valueSize":1},{"declaration":2035,"isOffset":false,"isSlot":false,"src":"5667:5:13","valueSize":1},{"declaration":2035,"isOffset":false,"isSlot":false,"src":"5691:5:13","valueSize":1},{"declaration":2035,"isOffset":false,"isSlot":false,"src":"5704:5:13","valueSize":1},{"declaration":2041,"isOffset":false,"isSlot":false,"src":"5633:5:13","valueSize":1},{"declaration":2041,"isOffset":false,"isSlot":false,"src":"5646:5:13","valueSize":1},{"declaration":2062,"isOffset":false,"isSlot":false,"src":"5513:9:13","valueSize":1},{"declaration":2062,"isOffset":false,"isSlot":false,"src":"5656:9:13","valueSize":1},{"declaration":2062,"isOffset":false,"isSlot":false,"src":"5711:9:13","valueSize":1},{"declaration":2025,"isOffset":false,"isSlot":false,"src":"5533:1:13","valueSize":1},{"declaration":2027,"isOffset":false,"isSlot":false,"src":"5536:1:13","valueSize":1}],"id":2064,"nodeType":"InlineAssembly","src":"5435:300:13"},{"assignments":[2066],"declarations":[{"constant":false,"id":2066,"mutability":"mutable","name":"twos","nameLocation":"5947:4:13","nodeType":"VariableDeclaration","scope":2146,"src":"5939:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2073,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"5954:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2069,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"5973:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:13"},{"AST":{"nodeType":"YulBlock","src":"6008:362:13","statements":[{"nodeType":"YulAssignment","src":"6073:37:13","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:13"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:13"},"nodeType":"YulFunctionCall","src":"6088:22:13"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:13"}]},{"nodeType":"YulAssignment","src":"6177:25:13","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:13"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:13"},"nodeType":"YulFunctionCall","src":"6186:16:13"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:13"}]},{"nodeType":"YulAssignment","src":"6317:39:13","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:13","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:13"},"nodeType":"YulFunctionCall","src":"6333:12:13"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:13"},"nodeType":"YulFunctionCall","src":"6329:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:13"},"nodeType":"YulFunctionCall","src":"6325:31:13"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2029,"isOffset":false,"isSlot":false,"src":"6073:11:13","valueSize":1},{"declaration":2029,"isOffset":false,"isSlot":false,"src":"6092:11:13","valueSize":1},{"declaration":2035,"isOffset":false,"isSlot":false,"src":"6177:5:13","valueSize":1},{"declaration":2035,"isOffset":false,"isSlot":false,"src":"6190:5:13","valueSize":1},{"declaration":2066,"isOffset":false,"isSlot":false,"src":"6105:4:13","valueSize":1},{"declaration":2066,"isOffset":false,"isSlot":false,"src":"6197:4:13","valueSize":1},{"declaration":2066,"isOffset":false,"isSlot":false,"src":"6317:4:13","valueSize":1},{"declaration":2066,"isOffset":false,"isSlot":false,"src":"6340:4:13","valueSize":1},{"declaration":2066,"isOffset":false,"isSlot":false,"src":"6347:4:13","valueSize":1}],"id":2074,"nodeType":"InlineAssembly","src":"5999:371:13"},{"expression":{"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2075,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"6436:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"6445:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2077,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"6453:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2080,"nodeType":"ExpressionStatement","src":"6436:21:13"},{"assignments":[2082],"declarations":[{"constant":false,"id":2082,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:13","nodeType":"VariableDeclaration","scope":2146,"src":"6775:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2089,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2084,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"6798:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:13"},{"expression":{"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2090,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2092,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7046:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2093,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7060:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2097,"nodeType":"ExpressionStatement","src":"7031:36:13"},{"expression":{"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2098,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7100:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7115:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2101,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7129:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2105,"nodeType":"ExpressionStatement","src":"7100:36:13"},{"expression":{"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2106,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7170:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7185:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2109,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7199:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2113,"nodeType":"ExpressionStatement","src":"7170:36:13"},{"expression":{"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2114,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7240:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2116,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7255:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2117,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7269:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2121,"nodeType":"ExpressionStatement","src":"7240:36:13"},{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2122,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7310:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7325:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2125,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7339:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2129,"nodeType":"ExpressionStatement","src":"7310:36:13"},{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2130,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7381:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2132,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7396:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2133,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7410:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2137,"nodeType":"ExpressionStatement","src":"7381:36:13"},{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"7851:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"7860:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2140,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7868:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2143,"nodeType":"ExpressionStatement","src":"7851:24:13"},{"expression":{"id":2144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"7896:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2033,"id":2145,"nodeType":"Return","src":"7889:13:13"}]}]},"documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"3485:313:13","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2148,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:13","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"x","nameLocation":"3827:1:13","nodeType":"VariableDeclaration","scope":2148,"src":"3819:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"y","nameLocation":"3838:1:13","nodeType":"VariableDeclaration","scope":2148,"src":"3830:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:13","nodeType":"VariableDeclaration","scope":2148,"src":"3841:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:13"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"result","nameLocation":"3893:6:13","nodeType":"VariableDeclaration","scope":2148,"src":"3885:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:13"},"scope":2814,"src":"3803:4116:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2190,"nodeType":"Block","src":"8161:192:13","statements":[{"assignments":[2164],"declarations":[{"constant":false,"id":2164,"mutability":"mutable","name":"result","nameLocation":"8179:6:13","nodeType":"VariableDeclaration","scope":2190,"src":"8171:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2170,"initialValue":{"arguments":[{"id":2166,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"8195:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2167,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"8198:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2168,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"8201:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2165,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2148,2191],"referencedDeclaration":2148,"src":"8188:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2172,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"8244:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}],"id":2171,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"8227:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1771_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2175,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"8264:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2176,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"8267:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2177,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"8270:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2174,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:13","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2187,"nodeType":"IfStatement","src":"8223:101:13","trueBody":{"id":2186,"nodeType":"Block","src":"8288:36:13","statements":[{"expression":{"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"8302:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2185,"nodeType":"ExpressionStatement","src":"8302:11:13"}]}},{"expression":{"id":2188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"8340:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2162,"id":2189,"nodeType":"Return","src":"8333:13:13"}]},"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"7925:121:13","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:13","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"x","nameLocation":"8075:1:13","nodeType":"VariableDeclaration","scope":2191,"src":"8067:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"y","nameLocation":"8086:1:13","nodeType":"VariableDeclaration","scope":2191,"src":"8078:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:13","nodeType":"VariableDeclaration","scope":2191,"src":"8089:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:13","nodeType":"VariableDeclaration","scope":2191,"src":"8110:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"},"typeName":{"id":2157,"nodeType":"UserDefinedTypeName","pathNode":{"id":2156,"name":"Rounding","nameLocations":["8110:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"8110:8:13"},"referencedDeclaration":1771,"src":"8110:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:13"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2191,"src":"8152:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:13"},"scope":2814,"src":"8051:302:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"8644:1585:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"8658:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2205,"nodeType":"IfStatement","src":"8654:45:13","trueBody":{"id":2204,"nodeType":"Block","src":"8666:33:13","statements":[{"expression":{"hexValue":"30","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2198,"id":2203,"nodeType":"Return","src":"8680:8:13"}]}},{"assignments":[2207],"declarations":[{"constant":false,"id":2207,"mutability":"mutable","name":"result","nameLocation":"9386:6:13","nodeType":"VariableDeclaration","scope":2302,"src":"9378:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2216,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"9406:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2209,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2470,2505],"referencedDeclaration":2470,"src":"9401:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:13"},{"id":2301,"nodeType":"UncheckedBlock","src":"9815:408:13","statements":[{"expression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9839:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9849:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"9858:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9862:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"nodeType":"ExpressionStatement","src":"9839:35:13"},{"expression":{"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9888:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9898:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"9907:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9911:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2238,"nodeType":"ExpressionStatement","src":"9888:35:13"},{"expression":{"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9937:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9947:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"9956:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9960:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2249,"nodeType":"ExpressionStatement","src":"9937:35:13"},{"expression":{"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9986:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9996:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"10005:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2253,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10009:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"nodeType":"ExpressionStatement","src":"9986:35:13"},{"expression":{"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10035:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10045:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"10054:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10058:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2271,"nodeType":"ExpressionStatement","src":"10035:35:13"},{"expression":{"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10084:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2273,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10094:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"10103:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10107:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2282,"nodeType":"ExpressionStatement","src":"10084:35:13"},{"expression":{"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10133:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10143:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"10152:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10156:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2293,"nodeType":"ExpressionStatement","src":"10133:35:13"},{"expression":{"arguments":[{"id":2295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10193:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2296,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"10201:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10205:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2294,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"10189:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2198,"id":2300,"nodeType":"Return","src":"10182:30:13"}]}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"8359:223:13","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:13","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"a","nameLocation":"8609:1:13","nodeType":"VariableDeclaration","scope":2303,"src":"8601:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:13"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2303,"src":"8635:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:13"},"scope":2814,"src":"8587:1642:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2337,"nodeType":"Block","src":"10405:164:13","statements":[{"id":2336,"nodeType":"UncheckedBlock","src":"10415:148:13","statements":[{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"result","nameLocation":"10447:6:13","nodeType":"VariableDeclaration","scope":2336,"src":"10439:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2319,"initialValue":{"arguments":[{"id":2317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"10461:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2316,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2303,2338],"referencedDeclaration":2303,"src":"10456:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"10484:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2322,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"10511:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}],"id":2321,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"10494:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1771_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"10524:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2325,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"10533:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"10542:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:13","trueExpression":{"hexValue":"31","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2313,"id":2335,"nodeType":"Return","src":"10477:75:13"}]}]},"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"10235:89:13","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:13","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"a","nameLocation":"10351:1:13","nodeType":"VariableDeclaration","scope":2338,"src":"10343:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:13","nodeType":"VariableDeclaration","scope":2338,"src":"10354:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"},"typeName":{"id":2308,"nodeType":"UserDefinedTypeName","pathNode":{"id":2307,"name":"Rounding","nameLocations":["10354:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"10354:8:13"},"referencedDeclaration":1771,"src":"10354:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:13"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"10396:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:13"},"scope":2814,"src":"10329:240:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2469,"nodeType":"Block","src":"10760:922:13","statements":[{"assignments":[2347],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"result","nameLocation":"10778:6:13","nodeType":"VariableDeclaration","scope":2469,"src":"10770:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2349,"initialValue":{"hexValue":"30","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:13"},{"id":2466,"nodeType":"UncheckedBlock","src":"10798:855:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"10826:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2364,"nodeType":"IfStatement","src":"10822:99:13","trueBody":{"id":2363,"nodeType":"Block","src":"10844:77:13","statements":[{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"10862:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2358,"nodeType":"ExpressionStatement","src":"10862:13:13"},{"expression":{"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"10893:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2362,"nodeType":"ExpressionStatement","src":"10893:13:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"10938:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2379,"nodeType":"IfStatement","src":"10934:96:13","trueBody":{"id":2378,"nodeType":"Block","src":"10955:75:13","statements":[{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"10973:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2373,"nodeType":"ExpressionStatement","src":"10973:12:13"},{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"11003:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2377,"nodeType":"ExpressionStatement","src":"11003:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11047:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2394,"nodeType":"IfStatement","src":"11043:96:13","trueBody":{"id":2393,"nodeType":"Block","src":"11064:75:13","statements":[{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11082:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"11082:12:13"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"11112:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"11112:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11156:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2409,"nodeType":"IfStatement","src":"11152:96:13","trueBody":{"id":2408,"nodeType":"Block","src":"11173:75:13","statements":[{"expression":{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11191:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2403,"nodeType":"ExpressionStatement","src":"11191:12:13"},{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"11221:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2407,"nodeType":"ExpressionStatement","src":"11221:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11265:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2424,"nodeType":"IfStatement","src":"11261:93:13","trueBody":{"id":2423,"nodeType":"Block","src":"11281:73:13","statements":[{"expression":{"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11299:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2418,"nodeType":"ExpressionStatement","src":"11299:11:13"},{"expression":{"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"11328:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2422,"nodeType":"ExpressionStatement","src":"11328:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11371:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2439,"nodeType":"IfStatement","src":"11367:93:13","trueBody":{"id":2438,"nodeType":"Block","src":"11387:73:13","statements":[{"expression":{"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11405:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2433,"nodeType":"ExpressionStatement","src":"11405:11:13"},{"expression":{"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2434,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"11434:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2437,"nodeType":"ExpressionStatement","src":"11434:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11477:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2454,"nodeType":"IfStatement","src":"11473:93:13","trueBody":{"id":2453,"nodeType":"Block","src":"11493:73:13","statements":[{"expression":{"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11511:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2448,"nodeType":"ExpressionStatement","src":"11511:11:13"},{"expression":{"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"11540:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2452,"nodeType":"ExpressionStatement","src":"11540:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"11583:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2465,"nodeType":"IfStatement","src":"11579:64:13","trueBody":{"id":2464,"nodeType":"Block","src":"11599:44:13","statements":[{"expression":{"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"11617:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2463,"nodeType":"ExpressionStatement","src":"11617:11:13"}]}}]},{"expression":{"id":2467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"11669:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2345,"id":2468,"nodeType":"Return","src":"11662:13:13"}]},"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"10575:119:13","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:13","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"value","nameLocation":"10721:5:13","nodeType":"VariableDeclaration","scope":2470,"src":"10713:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:13"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2470,"src":"10751:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:13"},"scope":2814,"src":"10699:983:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2504,"nodeType":"Block","src":"11915:168:13","statements":[{"id":2503,"nodeType":"UncheckedBlock","src":"11925:152:13","statements":[{"assignments":[2482],"declarations":[{"constant":false,"id":2482,"mutability":"mutable","name":"result","nameLocation":"11957:6:13","nodeType":"VariableDeclaration","scope":2503,"src":"11949:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2486,"initialValue":{"arguments":[{"id":2484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11971:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2483,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2470,2505],"referencedDeclaration":2470,"src":"11966:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"11998:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2489,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12025:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}],"id":2488,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"12008:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1771_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"12043:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"12052:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:13","trueExpression":{"hexValue":"31","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2480,"id":2502,"nodeType":"Return","src":"11991:75:13"}]}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"11688:142:13","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2505,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:13","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"value","nameLocation":"11857:5:13","nodeType":"VariableDeclaration","scope":2505,"src":"11849:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:13","nodeType":"VariableDeclaration","scope":2505,"src":"11864:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"},"typeName":{"id":2475,"nodeType":"UserDefinedTypeName","pathNode":{"id":2474,"name":"Rounding","nameLocations":["11864:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"11864:8:13"},"referencedDeclaration":1771,"src":"11864:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:13"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2505,"src":"11906:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:13"},"scope":2814,"src":"11835:248:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2633,"nodeType":"Block","src":"12276:854:13","statements":[{"assignments":[2514],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"result","nameLocation":"12294:6:13","nodeType":"VariableDeclaration","scope":2633,"src":"12286:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2516,"initialValue":{"hexValue":"30","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:13"},{"id":2630,"nodeType":"UncheckedBlock","src":"12314:787:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12342:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2533,"nodeType":"IfStatement","src":"12338:103:13","trueBody":{"id":2532,"nodeType":"Block","src":"12361:80:13","statements":[{"expression":{"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2527,"nodeType":"ExpressionStatement","src":"12379:17:13"},{"expression":{"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2528,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"12414:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2531,"nodeType":"ExpressionStatement","src":"12414:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12458:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2550,"nodeType":"IfStatement","src":"12454:103:13","trueBody":{"id":2549,"nodeType":"Block","src":"12477:80:13","statements":[{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12495:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2544,"nodeType":"ExpressionStatement","src":"12495:17:13"},{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"12530:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2548,"nodeType":"ExpressionStatement","src":"12530:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12574:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2567,"nodeType":"IfStatement","src":"12570:103:13","trueBody":{"id":2566,"nodeType":"Block","src":"12593:80:13","statements":[{"expression":{"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12611:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2561,"nodeType":"ExpressionStatement","src":"12611:17:13"},{"expression":{"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"12646:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2565,"nodeType":"ExpressionStatement","src":"12646:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12690:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2584,"nodeType":"IfStatement","src":"12686:100:13","trueBody":{"id":2583,"nodeType":"Block","src":"12708:78:13","statements":[{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12726:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2578,"nodeType":"ExpressionStatement","src":"12726:16:13"},{"expression":{"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"12760:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2582,"nodeType":"ExpressionStatement","src":"12760:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12803:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2601,"nodeType":"IfStatement","src":"12799:100:13","trueBody":{"id":2600,"nodeType":"Block","src":"12821:78:13","statements":[{"expression":{"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12839:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"nodeType":"ExpressionStatement","src":"12839:16:13"},{"expression":{"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"12873:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2599,"nodeType":"ExpressionStatement","src":"12873:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12916:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"nodeType":"IfStatement","src":"12912:100:13","trueBody":{"id":2617,"nodeType":"Block","src":"12934:78:13","statements":[{"expression":{"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12952:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2612,"nodeType":"ExpressionStatement","src":"12952:16:13"},{"expression":{"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"12986:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2616,"nodeType":"ExpressionStatement","src":"12986:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"13029:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2629,"nodeType":"IfStatement","src":"13025:66:13","trueBody":{"id":2628,"nodeType":"Block","src":"13047:44:13","statements":[{"expression":{"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13065:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2627,"nodeType":"ExpressionStatement","src":"13065:11:13"}]}}]},{"expression":{"id":2631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13117:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2512,"id":2632,"nodeType":"Return","src":"13110:13:13"}]},"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"12089:120:13","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:13","nodeType":"FunctionDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"value","nameLocation":"12237:5:13","nodeType":"VariableDeclaration","scope":2634,"src":"12229:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:13"},"returnParameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"12267:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:13"},"scope":2814,"src":"12214:916:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2668,"nodeType":"Block","src":"13365:170:13","statements":[{"id":2667,"nodeType":"UncheckedBlock","src":"13375:154:13","statements":[{"assignments":[2646],"declarations":[{"constant":false,"id":2646,"mutability":"mutable","name":"result","nameLocation":"13407:6:13","nodeType":"VariableDeclaration","scope":2667,"src":"13399:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2650,"initialValue":{"arguments":[{"id":2648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"13422:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2647,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2634,2669],"referencedDeclaration":2634,"src":"13416:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"13449:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2653,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"13476:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}],"id":2652,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"13459:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1771_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"13495:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"13504:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:13","trueExpression":{"hexValue":"31","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2644,"id":2666,"nodeType":"Return","src":"13442:76:13"}]}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"13136:143:13","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:13","nodeType":"FunctionDefinition","parameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"value","nameLocation":"13307:5:13","nodeType":"VariableDeclaration","scope":2669,"src":"13299:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:13","nodeType":"VariableDeclaration","scope":2669,"src":"13314:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"},"typeName":{"id":2639,"nodeType":"UserDefinedTypeName","pathNode":{"id":2638,"name":"Rounding","nameLocations":["13314:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"13314:8:13"},"referencedDeclaration":1771,"src":"13314:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:13"},"returnParameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"13356:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:13"},"scope":2814,"src":"13284:251:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2755,"nodeType":"Block","src":"13855:600:13","statements":[{"assignments":[2678],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"result","nameLocation":"13873:6:13","nodeType":"VariableDeclaration","scope":2755,"src":"13865:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2680,"initialValue":{"hexValue":"30","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:13"},{"id":2752,"nodeType":"UncheckedBlock","src":"13893:533:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"13921:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2695,"nodeType":"IfStatement","src":"13917:98:13","trueBody":{"id":2694,"nodeType":"Block","src":"13939:76:13","statements":[{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"13957:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"nodeType":"ExpressionStatement","src":"13957:13:13"},{"expression":{"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"13988:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2693,"nodeType":"ExpressionStatement","src":"13988:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"14032:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2710,"nodeType":"IfStatement","src":"14028:95:13","trueBody":{"id":2709,"nodeType":"Block","src":"14049:74:13","statements":[{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"14067:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"14067:12:13"},{"expression":{"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"14097:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2708,"nodeType":"ExpressionStatement","src":"14097:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"14140:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2725,"nodeType":"IfStatement","src":"14136:95:13","trueBody":{"id":2724,"nodeType":"Block","src":"14157:74:13","statements":[{"expression":{"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"14175:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2719,"nodeType":"ExpressionStatement","src":"14175:12:13"},{"expression":{"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"14205:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2723,"nodeType":"ExpressionStatement","src":"14205:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"14248:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2740,"nodeType":"IfStatement","src":"14244:95:13","trueBody":{"id":2739,"nodeType":"Block","src":"14265:74:13","statements":[{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"14283:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2734,"nodeType":"ExpressionStatement","src":"14283:12:13"},{"expression":{"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"14313:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2738,"nodeType":"ExpressionStatement","src":"14313:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"14356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2751,"nodeType":"IfStatement","src":"14352:64:13","trueBody":{"id":2750,"nodeType":"Block","src":"14372:44:13","statements":[{"expression":{"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"14390:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2749,"nodeType":"ExpressionStatement","src":"14390:11:13"}]}}]},{"expression":{"id":2753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"14442:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2676,"id":2754,"nodeType":"Return","src":"14435:13:13"}]},"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"13541:246:13","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2756,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:13","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"value","nameLocation":"13816:5:13","nodeType":"VariableDeclaration","scope":2756,"src":"13808:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:13"},"returnParameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2756,"src":"13846:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:13"},"scope":2814,"src":"13792:663:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2793,"nodeType":"Block","src":"14692:177:13","statements":[{"id":2792,"nodeType":"UncheckedBlock","src":"14702:161:13","statements":[{"assignments":[2768],"declarations":[{"constant":false,"id":2768,"mutability":"mutable","name":"result","nameLocation":"14734:6:13","nodeType":"VariableDeclaration","scope":2792,"src":"14726:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2772,"initialValue":{"arguments":[{"id":2770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"14750:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2769,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2756,2794],"referencedDeclaration":2756,"src":"14743:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"14777:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2775,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"14804:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}],"id":2774,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"14787:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1771_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"14823:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"14838:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:13","trueExpression":{"hexValue":"31","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2766,"id":2791,"nodeType":"Return","src":"14770:82:13"}]}]},"documentation":{"id":2757,"nodeType":"StructuredDocumentation","src":"14461:144:13","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2794,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:13","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"value","nameLocation":"14634:5:13","nodeType":"VariableDeclaration","scope":2794,"src":"14626:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:13","nodeType":"VariableDeclaration","scope":2794,"src":"14641:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"},"typeName":{"id":2761,"nodeType":"UserDefinedTypeName","pathNode":{"id":2760,"name":"Rounding","nameLocations":["14641:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"14641:8:13"},"referencedDeclaration":1771,"src":"14641:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:13"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2794,"src":"14683:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:13"},"scope":2814,"src":"14610:259:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2812,"nodeType":"Block","src":"15067:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2805,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"15090:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}],"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2803,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:13","typeDescriptions":{}}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2802,"id":2811,"nodeType":"Return","src":"15077:31:13"}]},"documentation":{"id":2795,"nodeType":"StructuredDocumentation","src":"14875:113:13","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2813,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:13","nodeType":"FunctionDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:13","nodeType":"VariableDeclaration","scope":2813,"src":"15019:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"},"typeName":{"id":2797,"nodeType":"UserDefinedTypeName","pathNode":{"id":2796,"name":"Rounding","nameLocations":["15019:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"15019:8:13"},"referencedDeclaration":1771,"src":"15019:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1771","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:13"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2813,"src":"15061:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2800,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:13"},"scope":2814,"src":"14993:122:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2815,"src":"203:14914:13","usedErrors":[1766],"usedEvents":[]}],"src":"103:15015:13"},"id":13},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2919]},"id":2920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2816,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"135:80:14","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2919,"linearizedBaseContracts":[2919],"name":"SignedMath","nameLocation":"224:10:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2834,"nodeType":"Block","src":"376:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"393:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"397:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"405:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:14","trueExpression":{"id":2830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"401:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2826,"id":2833,"nodeType":"Return","src":"386:20:14"}]},"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"241:66:14","text":" @dev Returns the largest of two signed numbers."},"id":2835,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:14","nodeType":"FunctionDefinition","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"a","nameLocation":"332:1:14","nodeType":"VariableDeclaration","scope":2835,"src":"325:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2819,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"b","nameLocation":"342:1:14","nodeType":"VariableDeclaration","scope":2835,"src":"335:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2821,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:14"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2835,"src":"368:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2824,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:14"},"scope":2919,"src":"312:101:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2852,"nodeType":"Block","src":"555:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"572:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2846,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"576:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"584:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:14","trueExpression":{"id":2848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"580:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2844,"id":2851,"nodeType":"Return","src":"565:20:14"}]},"documentation":{"id":2836,"nodeType":"StructuredDocumentation","src":"419:67:14","text":" @dev Returns the smallest of two signed numbers."},"id":2853,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:14","nodeType":"FunctionDefinition","parameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"a","nameLocation":"511:1:14","nodeType":"VariableDeclaration","scope":2853,"src":"504:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2837,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"b","nameLocation":"521:1:14","nodeType":"VariableDeclaration","scope":2853,"src":"514:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2839,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:14"},"returnParameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2853,"src":"547:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2842,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:14"},"scope":2919,"src":"491:101:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2896,"nodeType":"Block","src":"797:162:14","statements":[{"assignments":[2864],"declarations":[{"constant":false,"id":2864,"mutability":"mutable","name":"x","nameLocation":"866:1:14","nodeType":"VariableDeclaration","scope":2896,"src":"859:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2863,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2877,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"871:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"875:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"882:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"886:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:14"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"911:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2883,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"931:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:14","typeDescriptions":{}}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2879,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:14","typeDescriptions":{}}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"945:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2889,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"949:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2862,"id":2895,"nodeType":"Return","src":"904:48:14"}]},"documentation":{"id":2854,"nodeType":"StructuredDocumentation","src":"598:126:14","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2897,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:14","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"a","nameLocation":"753:1:14","nodeType":"VariableDeclaration","scope":2897,"src":"746:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2855,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"b","nameLocation":"763:1:14","nodeType":"VariableDeclaration","scope":2897,"src":"756:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2857,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:14"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2897,"src":"789:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2860,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:14"},"scope":2919,"src":"729:230:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2917,"nodeType":"Block","src":"1103:158:14","statements":[{"id":2916,"nodeType":"UncheckedBlock","src":"1113:142:14","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2907,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"1228:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:14","subExpression":{"id":2911,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"1242:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:14","trueExpression":{"id":2910,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"1237:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:14","typeDescriptions":{}}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2904,"id":2915,"nodeType":"Return","src":"1213:31:14"}]}]},"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"965:78:14","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2918,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:14","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"n","nameLocation":"1068:1:14","nodeType":"VariableDeclaration","scope":2918,"src":"1061:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2899,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:14"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2918,"src":"1094:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:14"},"scope":2919,"src":"1048:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2920,"src":"216:1047:14","usedErrors":[],"usedEvents":[]}],"src":"109:1155:14"},"id":14},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[2933]},"id":2934,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2921,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"71:144:15","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":2933,"linearizedBaseContracts":[2933],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2923,"nodeType":"StructuredDocumentation","src":"254:898:15","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":2932,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:15","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:15","nodeType":"VariableDeclaration","scope":2932,"src":"1197:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2924,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:15","nodeType":"VariableDeclaration","scope":2932,"src":"1226:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2926,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"data","nameLocation":"1270:4:15","nodeType":"VariableDeclaration","scope":2932,"src":"1255:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2928,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:15"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[],"src":"1289:0:15"},"scope":2933,"src":"1157:133:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2934,"src":"215:1077:15","usedErrors":[],"usedEvents":[]}],"src":"45:1248:15"},"id":15},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[3033],"IUniswapV3SwapCallback":[2933]},"id":3034,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2935,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:16"},{"id":2936,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:16"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":2937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3034,"sourceUnit":2934,"src":"91:83:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2939,"name":"IUniswapV3SwapCallback","nameLocations":["305:22:16"],"nodeType":"IdentifierPath","referencedDeclaration":2933,"src":"305:22:16"},"id":2940,"nodeType":"InheritanceSpecifier","src":"305:22:16"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"176:104:16","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":3033,"linearizedBaseContracts":[3033,2933],"name":"ISwapRouter","nameLocation":"290:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":2957,"members":[{"constant":false,"id":2942,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:16","nodeType":"VariableDeclaration","scope":2957,"src":"374:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2941,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:16","nodeType":"VariableDeclaration","scope":2957,"src":"399:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2943,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2946,"mutability":"mutable","name":"fee","nameLocation":"432:3:16","nodeType":"VariableDeclaration","scope":2957,"src":"425:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2945,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"recipient","nameLocation":"453:9:16","nodeType":"VariableDeclaration","scope":2957,"src":"445:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2947,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"deadline","nameLocation":"480:8:16","nodeType":"VariableDeclaration","scope":2957,"src":"472:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:16","nodeType":"VariableDeclaration","scope":2957,"src":"498:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2954,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:16","nodeType":"VariableDeclaration","scope":2957,"src":"524:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2953,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:16","nodeType":"VariableDeclaration","scope":2957,"src":"558:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2955,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:16","nodeType":"StructDefinition","scope":3033,"src":"334:256:16","visibility":"public"},{"documentation":{"id":2958,"nodeType":"StructuredDocumentation","src":"596:250:16","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":2966,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:16","nodeType":"FunctionDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"params","nameLocation":"909:6:16","nodeType":"VariableDeclaration","scope":2966,"src":"877:38:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2957_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":2960,"nodeType":"UserDefinedTypeName","pathNode":{"id":2959,"name":"ExactInputSingleParams","nameLocations":["877:22:16"],"nodeType":"IdentifierPath","referencedDeclaration":2957,"src":"877:22:16"},"referencedDeclaration":2957,"src":"877:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2957_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:16"},"returnParameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:16","nodeType":"VariableDeclaration","scope":2966,"src":"943:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:16"},"scope":3033,"src":"851:111:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":2977,"members":[{"constant":false,"id":2968,"mutability":"mutable","name":"path","nameLocation":"1008:4:16","nodeType":"VariableDeclaration","scope":2977,"src":"1002:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2967,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:16","nodeType":"VariableDeclaration","scope":2977,"src":"1022:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2969,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:16","nodeType":"VariableDeclaration","scope":2977,"src":"1049:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:16","nodeType":"VariableDeclaration","scope":2977,"src":"1075:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:16","nodeType":"VariableDeclaration","scope":2977,"src":"1101:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:16","nodeType":"StructDefinition","scope":3033,"src":"968:164:16","visibility":"public"},{"documentation":{"id":2978,"nodeType":"StructuredDocumentation","src":"1138:273:16","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":2986,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:16","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"params","nameLocation":"1462:6:16","nodeType":"VariableDeclaration","scope":2986,"src":"1436:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2977_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":2980,"nodeType":"UserDefinedTypeName","pathNode":{"id":2979,"name":"ExactInputParams","nameLocations":["1436:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":2977,"src":"1436:16:16"},"referencedDeclaration":2977,"src":"1436:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2977_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:16"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:16","nodeType":"VariableDeclaration","scope":2986,"src":"1496:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:16"},"scope":3033,"src":"1416:99:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":3003,"members":[{"constant":false,"id":2988,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:16","nodeType":"VariableDeclaration","scope":3003,"src":"1562:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2987,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:16","nodeType":"VariableDeclaration","scope":3003,"src":"1587:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2989,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2992,"mutability":"mutable","name":"fee","nameLocation":"1620:3:16","nodeType":"VariableDeclaration","scope":3003,"src":"1613:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2991,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2994,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:16","nodeType":"VariableDeclaration","scope":3003,"src":"1633:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:16","nodeType":"VariableDeclaration","scope":3003,"src":"1660:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:16","nodeType":"VariableDeclaration","scope":3003,"src":"1686:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:16","nodeType":"VariableDeclaration","scope":3003,"src":"1713:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:16","nodeType":"VariableDeclaration","scope":3003,"src":"1746:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3001,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:16","nodeType":"StructDefinition","scope":3033,"src":"1521:257:16","visibility":"public"},{"documentation":{"id":3004,"nodeType":"StructuredDocumentation","src":"1784:250:16","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":3012,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:16","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"params","nameLocation":"2099:6:16","nodeType":"VariableDeclaration","scope":3012,"src":"2066:39:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$3003_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":3006,"nodeType":"UserDefinedTypeName","pathNode":{"id":3005,"name":"ExactOutputSingleParams","nameLocations":["2066:23:16"],"nodeType":"IdentifierPath","referencedDeclaration":3003,"src":"2066:23:16"},"referencedDeclaration":3003,"src":"2066:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$3003_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:16"},"returnParameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:16","nodeType":"VariableDeclaration","scope":3012,"src":"2133:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:16"},"scope":3033,"src":"2039:112:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":3023,"members":[{"constant":false,"id":3014,"mutability":"mutable","name":"path","nameLocation":"2198:4:16","nodeType":"VariableDeclaration","scope":3023,"src":"2192:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3013,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:16","nodeType":"VariableDeclaration","scope":3023,"src":"2212:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3015,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:16","nodeType":"VariableDeclaration","scope":3023,"src":"2239:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:16","nodeType":"VariableDeclaration","scope":3023,"src":"2265:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:16","nodeType":"VariableDeclaration","scope":3023,"src":"2292:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:16","nodeType":"StructDefinition","scope":3033,"src":"2157:165:16","visibility":"public"},{"documentation":{"id":3024,"nodeType":"StructuredDocumentation","src":"2328:284:16","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":3032,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:16","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"params","nameLocation":"2665:6:16","nodeType":"VariableDeclaration","scope":3032,"src":"2638:33:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$3023_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":3026,"nodeType":"UserDefinedTypeName","pathNode":{"id":3025,"name":"ExactOutputParams","nameLocations":["2638:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"2638:17:16"},"referencedDeclaration":3023,"src":"2638:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$3023_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:16"},"returnParameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:16","nodeType":"VariableDeclaration","scope":3032,"src":"2699:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:16"},"scope":3033,"src":"2617:100:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3034,"src":"280:2439:16","usedErrors":[],"usedEvents":[]}],"src":"45:2675:16"},"id":16},"contracts/core/BasePaymaster.sol":{"ast":{"absolutePath":"contracts/core/BasePaymaster.sol","exportedSymbols":{"BasePaymaster":[3258],"Context":[877],"IAggregator":[3533],"IEntryPoint":[3687],"INonceManager":[3706],"IPaymaster":[3770],"IStakeManager":[3874],"Ownable":[147],"UserOperation":[3900],"ValidationData":[3268],"_intersectTimeRange":[3414],"_packValidationData":[3451,3489],"_parseValidationData":[3328],"calldataKeccak":[3499]},"id":3259,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3035,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:17"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3036,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3259,"sourceUnit":148,"src":"104:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","id":3037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3259,"sourceUnit":3771,"src":"158:38:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":3038,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3259,"sourceUnit":3688,"src":"198:39:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":3039,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3259,"sourceUnit":3500,"src":"239:23:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3041,"name":"IPaymaster","nameLocations":["459:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3770,"src":"459:10:17"},"id":3042,"nodeType":"InheritanceSpecifier","src":"459:10:17"},{"baseName":{"id":3043,"name":"Ownable","nameLocations":["471:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"471:7:17"},"id":3044,"nodeType":"InheritanceSpecifier","src":"471:7:17"}],"canonicalName":"BasePaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"266:156:17","text":" Helper class for creating a paymaster.\n provides helper methods for staking.\n Validates that the postOp is called only by the entryPoint."},"fullyImplemented":false,"id":3258,"linearizedBaseContracts":[3258,147,877,3770],"name":"BasePaymaster","nameLocation":"442:13:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b0d691fe","id":3047,"mutability":"immutable","name":"entryPoint","nameLocation":"515:10:17","nodeType":"VariableDeclaration","scope":3258,"src":"486:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"},"typeName":{"id":3046,"nodeType":"UserDefinedTypeName","pathNode":{"id":3045,"name":"IEntryPoint","nameLocations":["486:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"486:11:17"},"referencedDeclaration":3687,"src":"486:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"visibility":"public"},{"body":{"id":3061,"nodeType":"Block","src":"590:43:17","statements":[{"expression":{"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3057,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"601:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3058,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"614:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"src":"601:24:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"id":3060,"nodeType":"ExpressionStatement","src":"601:24:17"}]},"id":3062,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":3053,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"579:2:17","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"582:6:17","memberName":"origin","nodeType":"MemberAccess","src":"579:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3055,"kind":"baseConstructorSpecifier","modifierName":{"id":3052,"name":"Ownable","nameLocations":["571:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"571:7:17"},"nodeType":"ModifierInvocation","src":"571:18:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"_entryPoint","nameLocation":"558:11:17","nodeType":"VariableDeclaration","scope":3062,"src":"546:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"},"typeName":{"id":3049,"nodeType":"UserDefinedTypeName","pathNode":{"id":3048,"name":"IEntryPoint","nameLocations":["546:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"546:11:17"},"referencedDeclaration":3687,"src":"546:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"545:25:17"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[],"src":"590:0:17"},"scope":3258,"src":"534:99:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3758],"body":{"id":3087,"nodeType":"Block","src":"881:114:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3078,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"892:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"892:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3080,"nodeType":"ExpressionStatement","src":"892:24:17"},{"expression":{"arguments":[{"id":3082,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"959:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":3083,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"967:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3084,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"979:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"_validatePaymasterUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"934:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$3900_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":3077,"id":3086,"nodeType":"Return","src":"927:60:17"}]},"documentation":{"id":3063,"nodeType":"StructuredDocumentation","src":"641:26:17","text":"@inheritdoc IPaymaster"},"functionSelector":"f465c77e","id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"682:23:17","nodeType":"FunctionDefinition","overrides":{"id":3072,"nodeType":"OverrideSpecifier","overrides":[],"src":"817:8:17"},"parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"userOp","nameLocation":"739:6:17","nodeType":"VariableDeclaration","scope":3088,"src":"716:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3065,"nodeType":"UserDefinedTypeName","pathNode":{"id":3064,"name":"UserOperation","nameLocations":["716:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"716:13:17"},"referencedDeclaration":3900,"src":"716:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"userOpHash","nameLocation":"764:10:17","nodeType":"VariableDeclaration","scope":3088,"src":"756:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"756:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"maxCost","nameLocation":"793:7:17","nodeType":"VariableDeclaration","scope":3088,"src":"785:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"785:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"705:102:17"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"context","nameLocation":"848:7:17","nodeType":"VariableDeclaration","scope":3088,"src":"835:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3073,"name":"bytes","nodeType":"ElementaryTypeName","src":"835:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"validationData","nameLocation":"865:14:17","nodeType":"VariableDeclaration","scope":3088,"src":"857:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3075,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"834:46:17"},"scope":3258,"src":"673:322:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"1003:223:17","text":" Validate a user operation.\n @param userOp     - The user operation.\n @param userOpHash - The hash of the user operation.\n @param maxCost    - The maximum cost of the user operation."},"id":3103,"implemented":false,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"1241:24:17","nodeType":"FunctionDefinition","parameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"userOp","nameLocation":"1299:6:17","nodeType":"VariableDeclaration","scope":3103,"src":"1276:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3091,"nodeType":"UserDefinedTypeName","pathNode":{"id":3090,"name":"UserOperation","nameLocations":["1276:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"1276:13:17"},"referencedDeclaration":3900,"src":"1276:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"userOpHash","nameLocation":"1324:10:17","nodeType":"VariableDeclaration","scope":3103,"src":"1316:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1316:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"maxCost","nameLocation":"1353:7:17","nodeType":"VariableDeclaration","scope":3103,"src":"1345:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1265:102:17"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"context","nameLocation":"1407:7:17","nodeType":"VariableDeclaration","scope":3103,"src":"1394:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3098,"name":"bytes","nodeType":"ElementaryTypeName","src":"1394:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"validationData","nameLocation":"1424:14:17","nodeType":"VariableDeclaration","scope":3103,"src":"1416:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1416:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1393:46:17"},"scope":3258,"src":"1232:208:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[3769],"body":{"id":3124,"nodeType":"Block","src":"1612:91:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3115,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"1623:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3117,"nodeType":"ExpressionStatement","src":"1623:24:17"},{"expression":{"arguments":[{"id":3119,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"1666:4:17","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"}},{"id":3120,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"1672:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3121,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"1681:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3118,"name":"_postOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"1658:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_PostOpMode_$3743_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3123,"nodeType":"ExpressionStatement","src":"1658:37:17"}]},"documentation":{"id":3104,"nodeType":"StructuredDocumentation","src":"1448:26:17","text":"@inheritdoc IPaymaster"},"functionSelector":"a9a23409","id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"1489:6:17","nodeType":"FunctionDefinition","overrides":{"id":3113,"nodeType":"OverrideSpecifier","overrides":[],"src":"1603:8:17"},"parameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"mode","nameLocation":"1517:4:17","nodeType":"VariableDeclaration","scope":3125,"src":"1506:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":3106,"nodeType":"UserDefinedTypeName","pathNode":{"id":3105,"name":"PostOpMode","nameLocations":["1506:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3743,"src":"1506:10:17"},"referencedDeclaration":3743,"src":"1506:10:17","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"context","nameLocation":"1547:7:17","nodeType":"VariableDeclaration","scope":3125,"src":"1532:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3108,"name":"bytes","nodeType":"ElementaryTypeName","src":"1532:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"actualGasCost","nameLocation":"1573:13:17","nodeType":"VariableDeclaration","scope":3125,"src":"1565:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1565:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:98:17"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[],"src":"1612:0:17"},"scope":3258,"src":"1480:223:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3145,"nodeType":"Block","src":"2711:192:17","statements":[{"expression":{"components":[{"id":3136,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"2723:4:17","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"}},{"id":3137,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"2729:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3138,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"2738:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2722:30:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_PostOpMode_$3743_$_t_bytes_calldata_ptr_$_t_uint256_$","typeString":"tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":3140,"nodeType":"ExpressionStatement","src":"2722:30:17"},{"expression":{"arguments":[{"hexValue":"6d757374206f76657272696465","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2879:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""},"value":"must override"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""}],"id":3141,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2872:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2872:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3144,"nodeType":"ExpressionStatement","src":"2872:23:17"}]},"documentation":{"id":3126,"nodeType":"StructuredDocumentation","src":"1711:862:17","text":" Post-operation handler.\n (verified to be called only through the entryPoint)\n @dev If subclass returns a non-empty context from validatePaymasterUserOp,\n      it must also implement this method.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call)."},"id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"2588:7:17","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"mode","nameLocation":"2617:4:17","nodeType":"VariableDeclaration","scope":3146,"src":"2606:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":3128,"nodeType":"UserDefinedTypeName","pathNode":{"id":3127,"name":"PostOpMode","nameLocations":["2606:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3743,"src":"2606:10:17"},"referencedDeclaration":3743,"src":"2606:10:17","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"context","nameLocation":"2647:7:17","nodeType":"VariableDeclaration","scope":3146,"src":"2632:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3130,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"actualGasCost","nameLocation":"2673:13:17","nodeType":"VariableDeclaration","scope":3146,"src":"2665:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3132,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2595:98:17"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[],"src":"2711:0:17"},"scope":3258,"src":"2579:324:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3162,"nodeType":"Block","src":"3043:72:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3158,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3101:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$3258","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$3258","typeString":"contract BasePaymaster"}],"id":3157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3093:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3156,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:17","typeDescriptions":{}}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3150,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"3054:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3065:9:17","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"3054:20:17","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3153,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3082:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3086:5:17","memberName":"value","nodeType":"MemberAccess","src":"3082:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3054:38:17","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3161,"nodeType":"ExpressionStatement","src":"3054:53:17"}]},"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"2911:92:17","text":" Add a deposit for this paymaster, used for paying for transaction fees."},"functionSelector":"d0e30db0","id":3163,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3018:7:17","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[],"src":"3025:2:17"},"returnParameters":{"id":3149,"nodeType":"ParameterList","parameters":[],"src":"3043:0:17"},"scope":3258,"src":"3009:106:17","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3180,"nodeType":"Block","src":"3398:65:17","statements":[{"expression":{"arguments":[{"id":3176,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"3431:15:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3177,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"3448:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3173,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"3409:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3420:10:17","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":3873,"src":"3409:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3409:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3179,"nodeType":"ExpressionStatement","src":"3409:46:17"}]},"documentation":{"id":3164,"nodeType":"StructuredDocumentation","src":"3123:158:17","text":" Withdraw value from the deposit.\n @param withdrawAddress - Target to send to.\n @param amount          - Amount to withdraw."},"functionSelector":"205c2878","id":3181,"implemented":true,"kind":"function","modifiers":[{"id":3171,"kind":"modifierInvocation","modifierName":{"id":3170,"name":"onlyOwner","nameLocations":["3388:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3388:9:17"},"nodeType":"ModifierInvocation","src":"3388:9:17"}],"name":"withdrawTo","nameLocation":"3296:10:17","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3333:15:17","nodeType":"VariableDeclaration","scope":3181,"src":"3317:31:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3165,"name":"address","nodeType":"ElementaryTypeName","src":"3317:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"amount","nameLocation":"3367:6:17","nodeType":"VariableDeclaration","scope":3181,"src":"3359:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"3359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3306:74:17"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[],"src":"3398:0:17"},"scope":3258,"src":"3287:176:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3198,"nodeType":"Block","src":"3764:73:17","statements":[{"expression":{"arguments":[{"id":3195,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"3813:15:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3189,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"3775:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3786:8:17","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":3855,"src":"3775:19:17","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3192,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3802:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3806:5:17","memberName":"value","nodeType":"MemberAccess","src":"3802:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3775:37:17","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3775:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3197,"nodeType":"ExpressionStatement","src":"3775:54:17"}]},"documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"3471:218:17","text":" Add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased."},"functionSelector":"0396cb60","id":3199,"implemented":true,"kind":"function","modifiers":[{"id":3187,"kind":"modifierInvocation","modifierName":{"id":3186,"name":"onlyOwner","nameLocations":["3754:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3754:9:17"},"nodeType":"ModifierInvocation","src":"3754:9:17"}],"name":"addStake","nameLocation":"3704:8:17","nodeType":"FunctionDefinition","parameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"3720:15:17","nodeType":"VariableDeclaration","scope":3199,"src":"3713:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3183,"name":"uint32","nodeType":"ElementaryTypeName","src":"3713:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3712:24:17"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[],"src":"3764:0:17"},"scope":3258,"src":"3695:142:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3213,"nodeType":"Block","src":"3977:61:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3209,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4024:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$3258","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$3258","typeString":"contract BasePaymaster"}],"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4016:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"4016:7:17","typeDescriptions":{}}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3205,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"3995:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4006:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"3995:20:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3995:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3204,"id":3212,"nodeType":"Return","src":"3988:42:17"}]},"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"3845:74:17","text":" Return current paymaster's deposit on the entryPoint."},"functionSelector":"c399ec88","id":3214,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"3934:10:17","nodeType":"FunctionDefinition","parameters":{"id":3201,"nodeType":"ParameterList","parameters":[],"src":"3944:2:17"},"returnParameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3214,"src":"3968:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3967:9:17"},"scope":3258,"src":"3925:113:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3225,"nodeType":"Block","src":"4245:43:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3220,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"4256:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4267:11:17","memberName":"unlockStake","nodeType":"MemberAccess","referencedDeclaration":3859,"src":"4256:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4256:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3224,"nodeType":"ExpressionStatement","src":"4256:24:17"}]},"documentation":{"id":3215,"nodeType":"StructuredDocumentation","src":"4046:151:17","text":" Unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"},"functionSelector":"bb9fe6bf","id":3226,"implemented":true,"kind":"function","modifiers":[{"id":3218,"kind":"modifierInvocation","modifierName":{"id":3217,"name":"onlyOwner","nameLocations":["4235:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4235:9:17"},"nodeType":"ModifierInvocation","src":"4235:9:17"}],"name":"unlockStake","nameLocation":"4212:11:17","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[],"src":"4223:2:17"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[],"src":"4245:0:17"},"scope":3258,"src":"4203:85:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3240,"nodeType":"Block","src":"4591:60:17","statements":[{"expression":{"arguments":[{"id":3237,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"4627:15:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":3234,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"4602:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4613:13:17","memberName":"withdrawStake","nodeType":"MemberAccess","referencedDeclaration":3865,"src":"4602:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable) external"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3239,"nodeType":"ExpressionStatement","src":"4602:41:17"}]},"documentation":{"id":3227,"nodeType":"StructuredDocumentation","src":"4296:214:17","text":" Withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":3241,"implemented":true,"kind":"function","modifiers":[{"id":3232,"kind":"modifierInvocation","modifierName":{"id":3231,"name":"onlyOwner","nameLocations":["4581:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4581:9:17"},"nodeType":"ModifierInvocation","src":"4581:9:17"}],"name":"withdrawStake","nameLocation":"4525:13:17","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4555:15:17","nodeType":"VariableDeclaration","scope":3241,"src":"4539:31:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"4539:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"4538:33:17"},"returnParameters":{"id":3233,"nodeType":"ParameterList","parameters":[],"src":"4591:0:17"},"scope":3258,"src":"4516:135:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3256,"nodeType":"Block","src":"4786:86:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3246,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4805:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4809:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4805:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3250,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"4827:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}],"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4819:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3248,"name":"address","nodeType":"ElementaryTypeName","src":"4819:7:17","typeDescriptions":{}}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4819:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4805:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4840:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""},"value":"Sender not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""}],"id":3245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4797:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4797:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3255,"nodeType":"ExpressionStatement","src":"4797:67:17"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"4659:70:17","text":" Validate the call is made from a valid entrypoint"},"id":3257,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"4744:22:17","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[],"src":"4766:2:17"},"returnParameters":{"id":3244,"nodeType":"ParameterList","parameters":[],"src":"4786:0:17"},"scope":3258,"src":"4735:137:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3259,"src":"424:4451:17","usedErrors":[13,18],"usedEvents":[24]}],"src":"37:4838:17"},"id":17},"contracts/core/Helpers.sol":{"ast":{"absolutePath":"contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[3268],"_intersectTimeRange":[3414],"_packValidationData":[3451,3489],"_parseValidationData":[3328],"calldataKeccak":[3499]},"id":3500,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3260,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:18"},{"canonicalName":"ValidationData","documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"109:649:18","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, with is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validaUntil - This UserOp is valid only up to this timestamp."},"id":3268,"members":[{"constant":false,"id":3263,"mutability":"mutable","name":"aggregator","nameLocation":"797:10:18","nodeType":"VariableDeclaration","scope":3268,"src":"789:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3262,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"validAfter","nameLocation":"821:10:18","nodeType":"VariableDeclaration","scope":3268,"src":"814:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3264,"name":"uint48","nodeType":"ElementaryTypeName","src":"814:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"validUntil","nameLocation":"845:10:18","nodeType":"VariableDeclaration","scope":3268,"src":"838:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3266,"name":"uint48","nodeType":"ElementaryTypeName","src":"838:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"767:14:18","nodeType":"StructDefinition","scope":3500,"src":"760:99:18","visibility":"public"},{"body":{"id":3327,"nodeType":"Block","src":"1131:322:18","statements":[{"assignments":[3278],"declarations":[{"constant":false,"id":3278,"mutability":"mutable","name":"aggregator","nameLocation":"1146:10:18","nodeType":"VariableDeclaration","scope":3327,"src":"1138:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3277,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3286,"initialValue":{"arguments":[{"arguments":[{"id":3283,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"1175:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1167:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3281,"name":"uint160","nodeType":"ElementaryTypeName","src":"1167:7:18","typeDescriptions":{}}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1159:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:18","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1138:53:18"},{"assignments":[3288],"declarations":[{"constant":false,"id":3288,"mutability":"mutable","name":"validUntil","nameLocation":"1205:10:18","nodeType":"VariableDeclaration","scope":3327,"src":"1198:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3287,"name":"uint48","nodeType":"ElementaryTypeName","src":"1198:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3295,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3291,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"1225:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1225:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1218:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3289,"name":"uint48","nodeType":"ElementaryTypeName","src":"1218:6:18","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1218:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1198:49:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3296,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1258:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1272:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1258:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3308,"nodeType":"IfStatement","src":"1254:69:18","trueBody":{"id":3307,"nodeType":"Block","src":"1275:48:18","statements":[{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3299,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1286:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1304:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3301,"name":"uint48","nodeType":"ElementaryTypeName","src":"1304:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3300,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1299:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1299:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1312:3:18","memberName":"max","nodeType":"MemberAccess","src":"1299:16:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1286:29:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3306,"nodeType":"ExpressionStatement","src":"1286:29:18"}]}},{"assignments":[3310],"declarations":[{"constant":false,"id":3310,"mutability":"mutable","name":"validAfter","nameLocation":"1336:10:18","nodeType":"VariableDeclaration","scope":3327,"src":"1329:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3309,"name":"uint48","nodeType":"ElementaryTypeName","src":"1329:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3320,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"1356:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1375:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1380:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1375:8:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":3317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1374:10:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1356:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1349:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3311,"name":"uint48","nodeType":"ElementaryTypeName","src":"1349:6:18","typeDescriptions":{}}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1329:56:18"},{"expression":{"arguments":[{"id":3322,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"1414:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3323,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"1426:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3324,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1438:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3321,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"1399:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$3268_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":3276,"id":3326,"nodeType":"Return","src":"1392:57:18"}]},"documentation":{"id":3269,"nodeType":"StructuredDocumentation","src":"863:165:18","text":" Extract sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data."},"id":3328,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1039:20:18","nodeType":"FunctionDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"validationData","nameLocation":"1071:14:18","nodeType":"VariableDeclaration","scope":3328,"src":"1066:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint","nodeType":"ElementaryTypeName","src":"1066:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1059:29:18"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"data","nameLocation":"1125:4:18","nodeType":"VariableDeclaration","scope":3328,"src":"1103:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3274,"nodeType":"UserDefinedTypeName","pathNode":{"id":3273,"name":"ValidationData","nameLocations":["1103:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":3268,"src":"1103:14:18"},"referencedDeclaration":3268,"src":"1103:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1102:28:18"},"scope":3500,"src":"1030:423:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3413,"nodeType":"Block","src":"1809:795:18","statements":[{"assignments":[3341],"declarations":[{"constant":false,"id":3341,"mutability":"mutable","name":"accountValidationData","nameLocation":"1838:21:18","nodeType":"VariableDeclaration","scope":3413,"src":"1816:43:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3340,"nodeType":"UserDefinedTypeName","pathNode":{"id":3339,"name":"ValidationData","nameLocations":["1816:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":3268,"src":"1816:14:18"},"referencedDeclaration":3268,"src":"1816:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":3345,"initialValue":{"arguments":[{"id":3343,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"1893:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3342,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"1862:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$3268_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1816:98:18"},{"assignments":[3348],"declarations":[{"constant":false,"id":3348,"mutability":"mutable","name":"pmValidationData","nameLocation":"1943:16:18","nodeType":"VariableDeclaration","scope":3413,"src":"1921:38:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3347,"nodeType":"UserDefinedTypeName","pathNode":{"id":3346,"name":"ValidationData","nameLocations":["1921:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":3268,"src":"1921:14:18"},"referencedDeclaration":3268,"src":"1921:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":3352,"initialValue":{"arguments":[{"id":3350,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"1993:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3349,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"1962:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$3268_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1921:102:18"},{"assignments":[3354],"declarations":[{"constant":false,"id":3354,"mutability":"mutable","name":"aggregator","nameLocation":"2038:10:18","nodeType":"VariableDeclaration","scope":3413,"src":"2030:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3353,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3357,"initialValue":{"expression":{"id":3355,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"2051:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"id":3356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2073:10:18","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3263,"src":"2051:32:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2030:53:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"2094:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2116:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2108:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3359,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:18","typeDescriptions":{}}},"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2108:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2094:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3370,"nodeType":"IfStatement","src":"2090:89:18","trueBody":{"id":3369,"nodeType":"Block","src":"2120:59:18","statements":[{"expression":{"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3364,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"2131:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3365,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"2144:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"id":3366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2161:10:18","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3263,"src":"2144:27:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2131:40:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3368,"nodeType":"ExpressionStatement","src":"2131:40:18"}]}},{"assignments":[3372],"declarations":[{"constant":false,"id":3372,"mutability":"mutable","name":"validAfter","nameLocation":"2192:10:18","nodeType":"VariableDeclaration","scope":3413,"src":"2185:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3371,"name":"uint48","nodeType":"ElementaryTypeName","src":"2185:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3375,"initialValue":{"expression":{"id":3373,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"2205:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"id":3374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2227:10:18","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"2205:32:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2185:52:18"},{"assignments":[3377],"declarations":[{"constant":false,"id":3377,"mutability":"mutable","name":"validUntil","nameLocation":"2251:10:18","nodeType":"VariableDeclaration","scope":3413,"src":"2244:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3376,"name":"uint48","nodeType":"ElementaryTypeName","src":"2244:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3380,"initialValue":{"expression":{"id":3378,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"2264:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"id":3379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2286:10:18","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3267,"src":"2264:32:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2244:52:18"},{"assignments":[3382],"declarations":[{"constant":false,"id":3382,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2310:12:18","nodeType":"VariableDeclaration","scope":3413,"src":"2303:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3381,"name":"uint48","nodeType":"ElementaryTypeName","src":"2303:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3385,"initialValue":{"expression":{"id":3383,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"2325:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"id":3384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2342:10:18","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"2325:27:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2303:49:18"},{"assignments":[3387],"declarations":[{"constant":false,"id":3387,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2366:12:18","nodeType":"VariableDeclaration","scope":3413,"src":"2359:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3386,"name":"uint48","nodeType":"ElementaryTypeName","src":"2359:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3390,"initialValue":{"expression":{"id":3388,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"2381:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"id":3389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:10:18","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3267,"src":"2381:27:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2359:49:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"2421:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3392,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"2434:12:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2421:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3398,"nodeType":"IfStatement","src":"2417:56:18","trueBody":{"expression":{"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3394,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"2448:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3395,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"2461:12:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2448:25:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3397,"nodeType":"ExpressionStatement","src":"2448:25:18"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3399,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"2484:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3400,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"2497:12:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2484:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3406,"nodeType":"IfStatement","src":"2480:56:18","trueBody":{"expression":{"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3402,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"2511:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3403,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"2524:12:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2511:25:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3405,"nodeType":"ExpressionStatement","src":"2511:25:18"}},{"expression":{"arguments":[{"id":3408,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"2565:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3409,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"2577:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3410,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"2589:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3407,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"2550:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$3268_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":3338,"id":3412,"nodeType":"Return","src":"2543:57:18"}]},"documentation":{"id":3329,"nodeType":"StructuredDocumentation","src":"1457:214:18","text":" Intersect account and paymaster ranges.\n @param validationData          - The packed validation data of the account.\n @param paymasterValidationData - The packed validation data of the paymaster."},"id":3414,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1682:19:18","nodeType":"FunctionDefinition","parameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"validationData","nameLocation":"1716:14:18","nodeType":"VariableDeclaration","scope":3414,"src":"1708:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3333,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1745:23:18","nodeType":"VariableDeclaration","scope":3414,"src":"1737:31:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1701:70:18"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3414,"src":"1786:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3336,"nodeType":"UserDefinedTypeName","pathNode":{"id":3335,"name":"ValidationData","nameLocations":["1786:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":3268,"src":"1786:14:18"},"referencedDeclaration":3268,"src":"1786:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1785:23:18"},"scope":3500,"src":"1673:931:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3450,"nodeType":"Block","src":"2808:148:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3425,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"2839:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"id":3426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2844:10:18","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3263,"src":"2839:15:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2831:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3423,"name":"uint160","nodeType":"ElementaryTypeName","src":"2831:7:18","typeDescriptions":{}}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3430,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"2876:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"id":3431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2881:10:18","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3267,"src":"2876:15:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2868:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:18","typeDescriptions":{}}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2868:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2896:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2868:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2867:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:69:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3439,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"2921:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData memory"}},"id":3440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2926:10:18","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"2921:15:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2913:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2913:7:18","typeDescriptions":{}}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2942:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2942:8:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":3445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2941:10:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2913:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3447,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2912:40:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:121:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3422,"id":3449,"nodeType":"Return","src":"2815:137:18"}]},"documentation":{"id":3415,"nodeType":"StructuredDocumentation","src":"2608:110:18","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack."},"id":3451,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2729:19:18","nodeType":"FunctionDefinition","parameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"data","nameLocation":"2777:4:18","nodeType":"VariableDeclaration","scope":3451,"src":"2755:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3417,"nodeType":"UserDefinedTypeName","pathNode":{"id":3416,"name":"ValidationData","nameLocations":["2755:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":3268,"src":"2755:14:18"},"referencedDeclaration":3268,"src":"2755:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3268_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2748:36:18"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3451,"src":"2799:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2799:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2798:9:18"},"scope":3500,"src":"2720:236:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3488,"nodeType":"Block","src":"3411:133:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":3463,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"3435:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3451:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3435:17:18","trueExpression":{"hexValue":"31","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3447:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3434:19:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3470,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3474:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3466:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:18","typeDescriptions":{}}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3466:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3489:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3466:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3465:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:59:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3478,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"3514:10:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3506:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3506:7:18","typeDescriptions":{}}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3506:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3530:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3536:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3530:8:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":3483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3529:10:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3506:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3505:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:106:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3462,"id":3487,"nodeType":"Return","src":"3418:122:18"}]},"documentation":{"id":3452,"nodeType":"StructuredDocumentation","src":"2960:325:18","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n @param validAfter - First timestamp this UserOperation is valid."},"id":3489,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"3296:19:18","nodeType":"FunctionDefinition","parameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"sigFailed","nameLocation":"3327:9:18","nodeType":"VariableDeclaration","scope":3489,"src":"3322:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3453,"name":"bool","nodeType":"ElementaryTypeName","src":"3322:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3456,"mutability":"mutable","name":"validUntil","nameLocation":"3350:10:18","nodeType":"VariableDeclaration","scope":3489,"src":"3343:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3455,"name":"uint48","nodeType":"ElementaryTypeName","src":"3343:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3458,"mutability":"mutable","name":"validAfter","nameLocation":"3374:10:18","nodeType":"VariableDeclaration","scope":3489,"src":"3367:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3457,"name":"uint48","nodeType":"ElementaryTypeName","src":"3367:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3315:72:18"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3489,"src":"3402:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3401:9:18"},"scope":3500,"src":"3287:257:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3498,"nodeType":"Block","src":"3805:200:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3825:173:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3840:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3857:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3851:5:18"},"nodeType":"YulFunctionCall","src":"3851:11:18"},"variables":[{"name":"mem","nodeType":"YulTypedName","src":"3844:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3876:22:18","value":{"name":"data.length","nodeType":"YulIdentifier","src":"3887:11:18"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3880:3:18","type":""}]},{"expression":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3925:3:18"},{"name":"data.offset","nodeType":"YulIdentifier","src":"3930:11:18"},{"name":"len","nodeType":"YulIdentifier","src":"3943:3:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3912:12:18"},"nodeType":"YulFunctionCall","src":"3912:35:18"},"nodeType":"YulExpressionStatement","src":"3912:35:18"},{"nodeType":"YulAssignment","src":"3961:26:18","value":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3978:3:18"},{"name":"len","nodeType":"YulIdentifier","src":"3983:3:18"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3968:9:18"},"nodeType":"YulFunctionCall","src":"3968:19:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3961:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3492,"isOffset":false,"isSlot":false,"src":"3887:11:18","suffix":"length","valueSize":1},{"declaration":3492,"isOffset":true,"isSlot":false,"src":"3930:11:18","suffix":"offset","valueSize":1},{"declaration":3495,"isOffset":false,"isSlot":false,"src":"3961:3:18","valueSize":1}],"id":3497,"nodeType":"InlineAssembly","src":"3816:182:18"}]},"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"3548:179:18","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":3499,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3742:14:18","nodeType":"FunctionDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"data","nameLocation":"3772:4:18","nodeType":"VariableDeclaration","scope":3499,"src":"3757:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3491,"name":"bytes","nodeType":"ElementaryTypeName","src":"3757:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3756:21:18"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"ret","nameLocation":"3800:3:18","nodeType":"VariableDeclaration","scope":3499,"src":"3792:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3792:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3791:13:18"},"scope":3500,"src":"3733:272:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"37:3968:18"},"id":18},"contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[3533],"UserOperation":[3900]},"id":3534,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3501,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:19"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3534,"sourceUnit":3901,"src":"65:29:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"98:45:19","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":3533,"linearizedBaseContracts":[3533],"name":"IAggregator","nameLocation":"155:11:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"174:274:19","text":" Validate aggregated signature.\n Revert if the aggregated signature does not match the given list of operations.\n @param userOps   - Array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"e3563a4f","id":3513,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"463:18:19","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"userOps","nameLocation":"517:7:19","nodeType":"VariableDeclaration","scope":3513,"src":"492:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3900_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3506,"nodeType":"UserDefinedTypeName","pathNode":{"id":3505,"name":"UserOperation","nameLocations":["492:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"492:13:19"},"referencedDeclaration":3900,"src":"492:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_storage_ptr","typeString":"struct UserOperation"}},"id":3507,"nodeType":"ArrayTypeName","src":"492:15:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3900_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"signature","nameLocation":"550:9:19","nodeType":"VariableDeclaration","scope":3513,"src":"535:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3509,"name":"bytes","nodeType":"ElementaryTypeName","src":"535:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"481:85:19"},"returnParameters":{"id":3512,"nodeType":"ParameterList","parameters":[],"src":"580:0:19"},"scope":3533,"src":"454:127:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"589:616:19","text":" Validate signature of a single userOp.\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"64c530cd","id":3522,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1220:23:19","nodeType":"FunctionDefinition","parameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"userOp","nameLocation":"1277:6:19","nodeType":"VariableDeclaration","scope":3522,"src":"1254:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3516,"nodeType":"UserDefinedTypeName","pathNode":{"id":3515,"name":"UserOperation","nameLocations":["1254:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"1254:13:19"},"referencedDeclaration":3900,"src":"1254:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1243:47:19"},"returnParameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1327:12:19","nodeType":"VariableDeclaration","scope":3522,"src":"1314:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3519,"name":"bytes","nodeType":"ElementaryTypeName","src":"1314:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1313:27:19"},"scope":3533,"src":"1211:130:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3523,"nodeType":"StructuredDocumentation","src":"1349:393:19","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation.\n @param userOps              - Array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"275e2d79","id":3532,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1757:19:19","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"userOps","nameLocation":"1812:7:19","nodeType":"VariableDeclaration","scope":3532,"src":"1787:32:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3900_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3525,"nodeType":"UserDefinedTypeName","pathNode":{"id":3524,"name":"UserOperation","nameLocations":["1787:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"1787:13:19"},"referencedDeclaration":3900,"src":"1787:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_storage_ptr","typeString":"struct UserOperation"}},"id":3526,"nodeType":"ArrayTypeName","src":"1787:15:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3900_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1776:50:19"},"returnParameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1863:19:19","nodeType":"VariableDeclaration","scope":3532,"src":"1850:32:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3529,"name":"bytes","nodeType":"ElementaryTypeName","src":"1850:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1849:34:19"},"scope":3533,"src":"1748:136:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3534,"src":"145:1742:19","usedErrors":[],"usedEvents":[]}],"src":"37:1852:19"},"id":19},"contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[3533],"IEntryPoint":[3687],"INonceManager":[3706],"IStakeManager":[3874],"UserOperation":[3900]},"id":3688,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3535,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"168:24:20"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":3901,"src":"322:29:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":3537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":3875,"src":"353:29:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":3538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":3534,"src":"384:27:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":3539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":3707,"src":"413:29:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3540,"name":"IStakeManager","nameLocations":["471:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3874,"src":"471:13:20"},"id":3541,"nodeType":"InheritanceSpecifier","src":"471:13:20"},{"baseName":{"id":3542,"name":"INonceManager","nameLocations":["486:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3706,"src":"486:13:20"},"id":3543,"nodeType":"InheritanceSpecifier","src":"486:13:20"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3687,"linearizedBaseContracts":[3687,3706,3874],"name":"IEntryPoint","nameLocation":"456:11:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":3559,"name":"UserOperationEvent","nameLocation":"1277:18:20","nodeType":"EventDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1322:10:20","nodeType":"VariableDeclaration","scope":3559,"src":"1306:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1306:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3547,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1359:6:20","nodeType":"VariableDeclaration","scope":3559,"src":"1343:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3546,"name":"address","nodeType":"ElementaryTypeName","src":"1343:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3549,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1392:9:20","nodeType":"VariableDeclaration","scope":3559,"src":"1376:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3548,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3551,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1420:5:20","nodeType":"VariableDeclaration","scope":3559,"src":"1412:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3553,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1441:7:20","nodeType":"VariableDeclaration","scope":3559,"src":"1436:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3552,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3555,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1467:13:20","nodeType":"VariableDeclaration","scope":3559,"src":"1459:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3557,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1499:13:20","nodeType":"VariableDeclaration","scope":3559,"src":"1491:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1295:224:20"},"src":"1271:249:20"},{"anonymous":false,"documentation":{"id":3560,"nodeType":"StructuredDocumentation","src":"1528:355:20","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":3570,"name":"AccountDeployed","nameLocation":"1895:15:20","nodeType":"EventDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1937:10:20","nodeType":"VariableDeclaration","scope":3570,"src":"1921:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1921:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3564,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1974:6:20","nodeType":"VariableDeclaration","scope":3570,"src":"1958:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3563,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3566,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1999:7:20","nodeType":"VariableDeclaration","scope":3570,"src":"1991:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3565,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3568,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"2025:9:20","nodeType":"VariableDeclaration","scope":3570,"src":"2017:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3567,"name":"address","nodeType":"ElementaryTypeName","src":"2017:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1910:131:20"},"src":"1889:153:20"},{"anonymous":false,"documentation":{"id":3571,"nodeType":"StructuredDocumentation","src":"2050:367:20","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":3581,"name":"UserOperationRevertReason","nameLocation":"2429:25:20","nodeType":"EventDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2481:10:20","nodeType":"VariableDeclaration","scope":3581,"src":"2465:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2465:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3575,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2518:6:20","nodeType":"VariableDeclaration","scope":3581,"src":"2502:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3574,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3577,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2543:5:20","nodeType":"VariableDeclaration","scope":3581,"src":"2535:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3579,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2565:12:20","nodeType":"VariableDeclaration","scope":3581,"src":"2559:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3578,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2454:130:20"},"src":"2423:162:20"},{"anonymous":false,"documentation":{"id":3582,"nodeType":"StructuredDocumentation","src":"2593:382:20","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":3592,"name":"PostOpRevertReason","nameLocation":"2987:18:20","nodeType":"EventDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3032:10:20","nodeType":"VariableDeclaration","scope":3592,"src":"3016:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3016:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3586,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3069:6:20","nodeType":"VariableDeclaration","scope":3592,"src":"3053:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3585,"name":"address","nodeType":"ElementaryTypeName","src":"3053:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3588,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3094:5:20","nodeType":"VariableDeclaration","scope":3592,"src":"3086:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3590,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3116:12:20","nodeType":"VariableDeclaration","scope":3592,"src":"3110:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3589,"name":"bytes","nodeType":"ElementaryTypeName","src":"3110:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3005:130:20"},"src":"2981:155:20"},{"anonymous":false,"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"3144:161:20","text":" An event emitted by handleOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":3595,"name":"BeforeExecution","nameLocation":"3317:15:20","nodeType":"EventDefinition","parameters":{"id":3594,"nodeType":"ParameterList","parameters":[],"src":"3332:2:20"},"src":"3311:24:20"},{"anonymous":false,"documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"3343:190:20","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":3600,"name":"SignatureAggregatorChanged","nameLocation":"3545:26:20","nodeType":"EventDefinition","parameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3588:10:20","nodeType":"VariableDeclaration","scope":3600,"src":"3572:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3597,"name":"address","nodeType":"ElementaryTypeName","src":"3572:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3571:28:20"},"src":"3539:61:20"},{"documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"3608:785:20","text":" A custom revert error of handleOps, to identify the offending op.\n Should be caught in off-chain handleOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":3607,"name":"FailedOp","nameLocation":"4405:8:20","nodeType":"ErrorDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"opIndex","nameLocation":"4422:7:20","nodeType":"VariableDeclaration","scope":3607,"src":"4414:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"4414:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"reason","nameLocation":"4438:6:20","nodeType":"VariableDeclaration","scope":3607,"src":"4431:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3604,"name":"string","nodeType":"ElementaryTypeName","src":"4431:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4413:32:20"},"src":"4399:47:20"},{"errorSelector":"ad7954bc","id":3611,"name":"PostOpReverted","nameLocation":"4460:14:20","nodeType":"ErrorDefinition","parameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"returnData","nameLocation":"4481:10:20","nodeType":"VariableDeclaration","scope":3611,"src":"4475:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3608,"name":"bytes","nodeType":"ElementaryTypeName","src":"4475:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4474:18:20"},"src":"4454:39:20"},{"documentation":{"id":3612,"nodeType":"StructuredDocumentation","src":"4501:193:20","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":3616,"name":"SignatureValidationFailed","nameLocation":"4706:25:20","nodeType":"ErrorDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"aggregator","nameLocation":"4740:10:20","nodeType":"VariableDeclaration","scope":3616,"src":"4732:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3613,"name":"address","nodeType":"ElementaryTypeName","src":"4732:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4731:20:20"},"src":"4700:52:20"},{"errorSelector":"6ca7b806","id":3620,"name":"SenderAddressResult","nameLocation":"4808:19:20","nodeType":"ErrorDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"sender","nameLocation":"4836:6:20","nodeType":"VariableDeclaration","scope":3620,"src":"4828:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3617,"name":"address","nodeType":"ElementaryTypeName","src":"4828:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4827:16:20"},"src":"4802:42:20"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":3630,"members":[{"constant":false,"id":3624,"mutability":"mutable","name":"userOps","nameLocation":"4948:7:20","nodeType":"VariableDeclaration","scope":3630,"src":"4932:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3900_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3622,"nodeType":"UserDefinedTypeName","pathNode":{"id":3621,"name":"UserOperation","nameLocations":["4932:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"4932:13:20"},"referencedDeclaration":3900,"src":"4932:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_storage_ptr","typeString":"struct UserOperation"}},"id":3623,"nodeType":"ArrayTypeName","src":"4932:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3900_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"aggregator","nameLocation":"5009:10:20","nodeType":"VariableDeclaration","scope":3630,"src":"4997:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3533","typeString":"contract IAggregator"},"typeName":{"id":3626,"nodeType":"UserDefinedTypeName","pathNode":{"id":3625,"name":"IAggregator","nameLocations":["4997:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":3533,"src":"4997:11:20"},"referencedDeclaration":3533,"src":"4997:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3533","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"signature","nameLocation":"5069:9:20","nodeType":"VariableDeclaration","scope":3630,"src":"5063:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3628,"name":"bytes","nodeType":"ElementaryTypeName","src":"5063:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"4900:20:20","nodeType":"StructDefinition","scope":3687,"src":"4893:193:20","visibility":"public"},{"documentation":{"id":3631,"nodeType":"StructuredDocumentation","src":"5094:390:20","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"1fad948c","id":3640,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5499:9:20","nodeType":"FunctionDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"ops","nameLocation":"5544:3:20","nodeType":"VariableDeclaration","scope":3640,"src":"5519:28:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3900_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3633,"nodeType":"UserDefinedTypeName","pathNode":{"id":3632,"name":"UserOperation","nameLocations":["5519:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"5519:13:20"},"referencedDeclaration":3900,"src":"5519:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_storage_ptr","typeString":"struct UserOperation"}},"id":3634,"nodeType":"ArrayTypeName","src":"5519:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3900_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"beneficiary","nameLocation":"5574:11:20","nodeType":"VariableDeclaration","scope":3640,"src":"5558:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3636,"name":"address","nodeType":"ElementaryTypeName","src":"5558:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5508:84:20"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[],"src":"5601:0:20"},"scope":3687,"src":"5490:112:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3641,"nodeType":"StructuredDocumentation","src":"5610:264:20","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"4b1d7cf5","id":3650,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"5889:19:20","nodeType":"FunctionDefinition","parameters":{"id":3648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"5951:16:20","nodeType":"VariableDeclaration","scope":3650,"src":"5919:48:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3630_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":3643,"nodeType":"UserDefinedTypeName","pathNode":{"id":3642,"name":"UserOpsPerAggregator","nameLocations":["5919:20:20"],"nodeType":"IdentifierPath","referencedDeclaration":3630,"src":"5919:20:20"},"referencedDeclaration":3630,"src":"5919:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3630_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":3644,"nodeType":"ArrayTypeName","src":"5919:22:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3630_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":3647,"mutability":"mutable","name":"beneficiary","nameLocation":"5994:11:20","nodeType":"VariableDeclaration","scope":3650,"src":"5978:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"5978:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5908:104:20"},"returnParameters":{"id":3649,"nodeType":"ParameterList","parameters":[],"src":"6021:0:20"},"scope":3687,"src":"5880:142:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3651,"nodeType":"StructuredDocumentation","src":"6030:275:20","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n @param userOp - The user operation to generate the request ID for."},"functionSelector":"a6193531","id":3659,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6320:13:20","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3654,"mutability":"mutable","name":"userOp","nameLocation":"6367:6:20","nodeType":"VariableDeclaration","scope":3659,"src":"6344:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3653,"nodeType":"UserDefinedTypeName","pathNode":{"id":3652,"name":"UserOperation","nameLocations":["6344:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"6344:13:20"},"referencedDeclaration":3900,"src":"6344:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6333:47:20"},"returnParameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3659,"src":"6404:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6404:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6403:9:20"},"scope":3687,"src":"6311:102:20","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":3660,"nodeType":"StructuredDocumentation","src":"6421:641:20","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\n @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\n @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":3673,"members":[{"constant":false,"id":3662,"mutability":"mutable","name":"preOpGas","nameLocation":"7105:8:20","nodeType":"VariableDeclaration","scope":3673,"src":"7097:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3661,"name":"uint256","nodeType":"ElementaryTypeName","src":"7097:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3664,"mutability":"mutable","name":"prefund","nameLocation":"7132:7:20","nodeType":"VariableDeclaration","scope":3673,"src":"7124:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"sigFailed","nameLocation":"7155:9:20","nodeType":"VariableDeclaration","scope":3673,"src":"7150:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3665,"name":"bool","nodeType":"ElementaryTypeName","src":"7150:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3668,"mutability":"mutable","name":"validAfter","nameLocation":"7182:10:20","nodeType":"VariableDeclaration","scope":3673,"src":"7175:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3667,"name":"uint48","nodeType":"ElementaryTypeName","src":"7175:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3670,"mutability":"mutable","name":"validUntil","nameLocation":"7210:10:20","nodeType":"VariableDeclaration","scope":3673,"src":"7203:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3669,"name":"uint48","nodeType":"ElementaryTypeName","src":"7203:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3672,"mutability":"mutable","name":"paymasterContext","nameLocation":"7237:16:20","nodeType":"VariableDeclaration","scope":3673,"src":"7231:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3671,"name":"bytes","nodeType":"ElementaryTypeName","src":"7231:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7075:10:20","nodeType":"StructDefinition","scope":3687,"src":"7068:193:20","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":3674,"nodeType":"StructuredDocumentation","src":"7269:127:20","text":" Returned aggregated signature info:\n The aggregator returned by the account, and its current stake."},"id":3680,"members":[{"constant":false,"id":3676,"mutability":"mutable","name":"aggregator","nameLocation":"7448:10:20","nodeType":"VariableDeclaration","scope":3680,"src":"7440:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3675,"name":"address","nodeType":"ElementaryTypeName","src":"7440:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"stakeInfo","nameLocation":"7479:9:20","nodeType":"VariableDeclaration","scope":3680,"src":"7469:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3826_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3678,"nodeType":"UserDefinedTypeName","pathNode":{"id":3677,"name":"StakeInfo","nameLocations":["7469:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"7469:9:20"},"referencedDeclaration":3826,"src":"7469:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3826_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7409:19:20","nodeType":"StructDefinition","scope":3687,"src":"7402:94:20","visibility":"public"},{"documentation":{"id":3681,"nodeType":"StructuredDocumentation","src":"7504:343:20","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":3686,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"7862:16:20","nodeType":"FunctionDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"initCode","nameLocation":"7892:8:20","nodeType":"VariableDeclaration","scope":3686,"src":"7879:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3682,"name":"bytes","nodeType":"ElementaryTypeName","src":"7879:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7878:23:20"},"returnParameters":{"id":3685,"nodeType":"ParameterList","parameters":[],"src":"7910:0:20"},"scope":3687,"src":"7853:58:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3688,"src":"446:7470:20","usedErrors":[3607,3611,3616,3620],"usedEvents":[3559,3570,3581,3592,3595,3600,3779,3787,3795,3801,3809]}],"src":"168:7750:20"},"id":20},"contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[3706]},"id":3707,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3689,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3706,"linearizedBaseContracts":[3706],"name":"INonceManager","nameLocation":"75:13:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"98:424:21","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":3699,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"537:8:21","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"sender","nameLocation":"554:6:21","nodeType":"VariableDeclaration","scope":3699,"src":"546:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3691,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3694,"mutability":"mutable","name":"key","nameLocation":"570:3:21","nodeType":"VariableDeclaration","scope":3699,"src":"562:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3693,"name":"uint192","nodeType":"ElementaryTypeName","src":"562:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"545:29:21"},"returnParameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"nonce","nameLocation":"611:5:21","nodeType":"VariableDeclaration","scope":3699,"src":"603:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"602:15:21"},"scope":3706,"src":"528:90:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"626:456:21","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":3705,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1097:14:21","nodeType":"FunctionDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"key","nameLocation":"1120:3:21","nodeType":"VariableDeclaration","scope":3705,"src":"1112:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3701,"name":"uint192","nodeType":"ElementaryTypeName","src":"1112:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1111:13:21"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[],"src":"1133:0:21"},"scope":3706,"src":"1088:46:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3707,"src":"65:1072:21","usedErrors":[],"usedEvents":[]}],"src":"37:1102:21"},"id":21},"contracts/interfaces/IOracle.sol":{"ast":{"absolutePath":"contracts/interfaces/IOracle.sol","exportedSymbols":{"IOracle":[3735]},"id":3736,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3708,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IOracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3735,"linearizedBaseContracts":[3735],"name":"IOracle","nameLocation":"75:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3709,"nodeType":"StructuredDocumentation","src":"92:88:22","text":" return amount of tokens that are required to receive that much eth."},"functionSelector":"d1eca9cf","id":3716,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenValueOfEth","nameLocation":"195:18:22","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"ethOutput","nameLocation":"222:9:22","nodeType":"VariableDeclaration","scope":3716,"src":"214:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"214:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"213:19:22"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"tokenInput","nameLocation":"264:10:22","nodeType":"VariableDeclaration","scope":3716,"src":"256:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"255:20:22"},"scope":3735,"src":"186:90:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":3721,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"291:8:22","nodeType":"FunctionDefinition","parameters":{"id":3717,"nodeType":"ParameterList","parameters":[],"src":"299:2:22"},"returnParameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3721,"src":"325:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3718,"name":"uint8","nodeType":"ElementaryTypeName","src":"325:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"324:7:22"},"scope":3735,"src":"282:50:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":3734,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"349:15:22","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[],"src":"364:2:22"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"roundId","nameLocation":"420:7:22","nodeType":"VariableDeclaration","scope":3734,"src":"413:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3723,"name":"uint80","nodeType":"ElementaryTypeName","src":"413:6:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":3726,"mutability":"mutable","name":"answer","nameLocation":"443:6:22","nodeType":"VariableDeclaration","scope":3734,"src":"436:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3725,"name":"int256","nodeType":"ElementaryTypeName","src":"436:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"startedAt","nameLocation":"466:9:22","nodeType":"VariableDeclaration","scope":3734,"src":"458:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"updatedAt","nameLocation":"492:9:22","nodeType":"VariableDeclaration","scope":3734,"src":"484:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"answeredInRound","nameLocation":"517:15:22","nodeType":"VariableDeclaration","scope":3734,"src":"510:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3731,"name":"uint80","nodeType":"ElementaryTypeName","src":"510:6:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"404:135:22"},"scope":3735,"src":"340:200:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3736,"src":"65:480:22","usedErrors":[],"usedEvents":[]}],"src":"37:508:22"},"id":22},"contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[3770],"UserOperation":[3900]},"id":3771,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3737,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:23"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3771,"sourceUnit":3901,"src":"65:29:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":3739,"nodeType":"StructuredDocumentation","src":"98:219:23","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":3770,"linearizedBaseContracts":[3770],"name":"IPaymaster","nameLocation":"329:10:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":3743,"members":[{"id":3740,"name":"opSucceeded","nameLocation":"405:11:23","nodeType":"EnumValue","src":"405:11:23"},{"id":3741,"name":"opReverted","nameLocation":"483:10:23","nodeType":"EnumValue","src":"483:10:23"},{"id":3742,"name":"postOpReverted","nameLocation":"654:14:23","nodeType":"EnumValue","src":"654:14:23"}],"name":"PostOpMode","nameLocation":"352:10:23","nodeType":"EnumDefinition","src":"347:328:23"},{"documentation":{"id":3744,"nodeType":"StructuredDocumentation","src":"683:1458:23","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                                    otherwise, an address of an \"authorizer\" contract.\n                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"f465c77e","id":3758,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2156:23:23","nodeType":"FunctionDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"userOp","nameLocation":"2213:6:23","nodeType":"VariableDeclaration","scope":3758,"src":"2190:29:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3746,"nodeType":"UserDefinedTypeName","pathNode":{"id":3745,"name":"UserOperation","nameLocations":["2190:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"2190:13:23"},"referencedDeclaration":3900,"src":"2190:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3749,"mutability":"mutable","name":"userOpHash","nameLocation":"2238:10:23","nodeType":"VariableDeclaration","scope":3758,"src":"2230:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2230:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"maxCost","nameLocation":"2267:7:23","nodeType":"VariableDeclaration","scope":3758,"src":"2259:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2259:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2179:102:23"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"context","nameLocation":"2313:7:23","nodeType":"VariableDeclaration","scope":3758,"src":"2300:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3753,"name":"bytes","nodeType":"ElementaryTypeName","src":"2300:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3756,"mutability":"mutable","name":"validationData","nameLocation":"2330:14:23","nodeType":"VariableDeclaration","scope":3758,"src":"2322:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2299:46:23"},"scope":3770,"src":"2147:199:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3759,"nodeType":"StructuredDocumentation","src":"2354:716:23","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call)."},"functionSelector":"a9a23409","id":3769,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3085:6:23","nodeType":"FunctionDefinition","parameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"mode","nameLocation":"3113:4:23","nodeType":"VariableDeclaration","scope":3769,"src":"3102:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":3761,"nodeType":"UserDefinedTypeName","pathNode":{"id":3760,"name":"PostOpMode","nameLocations":["3102:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":3743,"src":"3102:10:23"},"referencedDeclaration":3743,"src":"3102:10:23","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"context","nameLocation":"3143:7:23","nodeType":"VariableDeclaration","scope":3769,"src":"3128:22:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3763,"name":"bytes","nodeType":"ElementaryTypeName","src":"3128:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"actualGasCost","nameLocation":"3169:13:23","nodeType":"VariableDeclaration","scope":3769,"src":"3161:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"3161:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3091:98:23"},"returnParameters":{"id":3768,"nodeType":"ParameterList","parameters":[],"src":"3198:0:23"},"scope":3770,"src":"3076:123:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3771,"src":"319:2883:23","usedErrors":[],"usedEvents":[]}],"src":"37:3167:23"},"id":23},"contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[3874]},"id":3875,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3772,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"42:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"70:216:24","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":3874,"linearizedBaseContracts":[3874],"name":"IStakeManager","nameLocation":"298:13:24","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":3779,"name":"Deposited","nameLocation":"325:9:24","nodeType":"EventDefinition","parameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"351:7:24","nodeType":"VariableDeclaration","scope":3779,"src":"335:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3774,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3777,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"368:12:24","nodeType":"VariableDeclaration","scope":3779,"src":"360:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"334:47:24"},"src":"319:63:24"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":3787,"name":"Withdrawn","nameLocation":"396:9:24","nodeType":"EventDefinition","parameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"432:7:24","nodeType":"VariableDeclaration","scope":3787,"src":"416:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3780,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3783,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"458:15:24","nodeType":"VariableDeclaration","scope":3787,"src":"450:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3782,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3785,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"492:6:24","nodeType":"VariableDeclaration","scope":3787,"src":"484:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:100:24"},"src":"390:116:24"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":3795,"name":"StakeLocked","nameLocation":"578:11:24","nodeType":"EventDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"616:7:24","nodeType":"VariableDeclaration","scope":3795,"src":"600:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3791,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"642:11:24","nodeType":"VariableDeclaration","scope":3795,"src":"634:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3793,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"672:15:24","nodeType":"VariableDeclaration","scope":3795,"src":"664:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"589:105:24"},"src":"572:123:24"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":3801,"name":"StakeUnlocked","nameLocation":"767:13:24","nodeType":"EventDefinition","parameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"797:7:24","nodeType":"VariableDeclaration","scope":3801,"src":"781:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3796,"name":"address","nodeType":"ElementaryTypeName","src":"781:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3799,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"814:12:24","nodeType":"VariableDeclaration","scope":3801,"src":"806:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"780:47:24"},"src":"761:67:24"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":3809,"name":"StakeWithdrawn","nameLocation":"842:14:24","nodeType":"EventDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"883:7:24","nodeType":"VariableDeclaration","scope":3809,"src":"867:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3802,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3805,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"909:15:24","nodeType":"VariableDeclaration","scope":3809,"src":"901:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3804,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3807,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"943:6:24","nodeType":"VariableDeclaration","scope":3809,"src":"935:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"856:100:24"},"src":"836:121:24"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":3810,"nodeType":"StructuredDocumentation","src":"965:697:24","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n      and the rest fit into a 2nd cell.\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":3821,"members":[{"constant":false,"id":3812,"mutability":"mutable","name":"deposit","nameLocation":"1706:7:24","nodeType":"VariableDeclaration","scope":3821,"src":"1698:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3811,"name":"uint112","nodeType":"ElementaryTypeName","src":"1698:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3814,"mutability":"mutable","name":"staked","nameLocation":"1729:6:24","nodeType":"VariableDeclaration","scope":3821,"src":"1724:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3813,"name":"bool","nodeType":"ElementaryTypeName","src":"1724:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"stake","nameLocation":"1754:5:24","nodeType":"VariableDeclaration","scope":3821,"src":"1746:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3815,"name":"uint112","nodeType":"ElementaryTypeName","src":"1746:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1777:15:24","nodeType":"VariableDeclaration","scope":3821,"src":"1770:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3817,"name":"uint32","nodeType":"ElementaryTypeName","src":"1770:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3820,"mutability":"mutable","name":"withdrawTime","nameLocation":"1810:12:24","nodeType":"VariableDeclaration","scope":3821,"src":"1803:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3819,"name":"uint48","nodeType":"ElementaryTypeName","src":"1803:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1675:11:24","nodeType":"StructDefinition","scope":3874,"src":"1668:162:24","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":3826,"members":[{"constant":false,"id":3823,"mutability":"mutable","name":"stake","nameLocation":"1938:5:24","nodeType":"VariableDeclaration","scope":3826,"src":"1930:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1962:15:24","nodeType":"VariableDeclaration","scope":3826,"src":"1954:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1954:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1909:9:24","nodeType":"StructDefinition","scope":3874,"src":"1902:83:24","visibility":"public"},{"documentation":{"id":3827,"nodeType":"StructuredDocumentation","src":"1993:153:24","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":3835,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2161:14:24","nodeType":"FunctionDefinition","parameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"account","nameLocation":"2194:7:24","nodeType":"VariableDeclaration","scope":3835,"src":"2186:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3828,"name":"address","nodeType":"ElementaryTypeName","src":"2186:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2175:33:24"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"info","nameLocation":"2251:4:24","nodeType":"VariableDeclaration","scope":3835,"src":"2232:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3821_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3832,"nodeType":"UserDefinedTypeName","pathNode":{"id":3831,"name":"DepositInfo","nameLocations":["2232:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":3821,"src":"2232:11:24"},"referencedDeclaration":3821,"src":"2232:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3821_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2231:25:24"},"scope":3874,"src":"2152:105:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3836,"nodeType":"StructuredDocumentation","src":"2265:159:24","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":3843,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2439:9:24","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"account","nameLocation":"2457:7:24","nodeType":"VariableDeclaration","scope":3843,"src":"2449:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3837,"name":"address","nodeType":"ElementaryTypeName","src":"2449:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2448:17:24"},"returnParameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3843,"src":"2489:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2488:9:24"},"scope":3874,"src":"2430:68:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3844,"nodeType":"StructuredDocumentation","src":"2506:109:24","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":3849,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2630:9:24","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"account","nameLocation":"2648:7:24","nodeType":"VariableDeclaration","scope":3849,"src":"2640:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3845,"name":"address","nodeType":"ElementaryTypeName","src":"2640:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2639:17:24"},"returnParameters":{"id":3848,"nodeType":"ParameterList","parameters":[],"src":"2673:0:24"},"scope":3874,"src":"2621:53:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3850,"nodeType":"StructuredDocumentation","src":"2682:207:24","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":3855,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2904:8:24","nodeType":"FunctionDefinition","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2920:16:24","nodeType":"VariableDeclaration","scope":3855,"src":"2913:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3851,"name":"uint32","nodeType":"ElementaryTypeName","src":"2913:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2912:25:24"},"returnParameters":{"id":3854,"nodeType":"ParameterList","parameters":[],"src":"2954:0:24"},"scope":3874,"src":"2895:60:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3856,"nodeType":"StructuredDocumentation","src":"2963:131:24","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":3859,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3109:11:24","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[],"src":"3120:2:24"},"returnParameters":{"id":3858,"nodeType":"ParameterList","parameters":[],"src":"3131:0:24"},"scope":3874,"src":"3100:32:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"3140:201:24","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":3865,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3356:13:24","nodeType":"FunctionDefinition","parameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3386:15:24","nodeType":"VariableDeclaration","scope":3865,"src":"3370:31:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3861,"name":"address","nodeType":"ElementaryTypeName","src":"3370:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3369:33:24"},"returnParameters":{"id":3864,"nodeType":"ParameterList","parameters":[],"src":"3411:0:24"},"scope":3874,"src":"3347:65:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3866,"nodeType":"StructuredDocumentation","src":"3420:174:24","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":3873,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3609:10:24","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3868,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3646:15:24","nodeType":"VariableDeclaration","scope":3873,"src":"3630:31:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3867,"name":"address","nodeType":"ElementaryTypeName","src":"3630:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3680:14:24","nodeType":"VariableDeclaration","scope":3873,"src":"3672:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"3672:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:82:24"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[],"src":"3710:0:24"},"scope":3874,"src":"3600:111:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3875,"src":"288:3426:24","usedErrors":[],"usedEvents":[3779,3787,3795,3801,3809]}],"src":"42:3674:24"},"id":24},"contracts/interfaces/UserOperation.sol":{"ast":{"absolutePath":"contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[3900]},"id":3901,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3876,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:25"},{"canonicalName":"UserOperation","documentation":{"id":3877,"nodeType":"StructuredDocumentation","src":"65:1193:25","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor/\n @param callData              - The method call to execute on this account.\n @param callGasLimit          - The gas limit passed to the callData method call.\n @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param maxFeePerGas          - Same as EIP-1559 gas parameter.\n @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\n @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":3900,"members":[{"constant":false,"id":3879,"mutability":"mutable","name":"sender","nameLocation":"1296:6:25","nodeType":"VariableDeclaration","scope":3900,"src":"1288:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3878,"name":"address","nodeType":"ElementaryTypeName","src":"1288:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3881,"mutability":"mutable","name":"nonce","nameLocation":"1317:5:25","nodeType":"VariableDeclaration","scope":3900,"src":"1309:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3883,"mutability":"mutable","name":"initCode","nameLocation":"1335:8:25","nodeType":"VariableDeclaration","scope":3900,"src":"1329:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3882,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"callData","nameLocation":"1356:8:25","nodeType":"VariableDeclaration","scope":3900,"src":"1350:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3884,"name":"bytes","nodeType":"ElementaryTypeName","src":"1350:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3887,"mutability":"mutable","name":"callGasLimit","nameLocation":"1379:12:25","nodeType":"VariableDeclaration","scope":3900,"src":"1371:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3889,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1406:20:25","nodeType":"VariableDeclaration","scope":3900,"src":"1398:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1398:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1441:18:25","nodeType":"VariableDeclaration","scope":3900,"src":"1433:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1474:12:25","nodeType":"VariableDeclaration","scope":3900,"src":"1466:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1466:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1501:20:25","nodeType":"VariableDeclaration","scope":3900,"src":"1493:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3897,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1534:16:25","nodeType":"VariableDeclaration","scope":3900,"src":"1528:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3896,"name":"bytes","nodeType":"ElementaryTypeName","src":"1528:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"signature","nameLocation":"1563:9:25","nodeType":"VariableDeclaration","scope":3900,"src":"1557:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3898,"name":"bytes","nodeType":"ElementaryTypeName","src":"1557:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1267:13:25","nodeType":"StructDefinition","scope":3901,"src":"1260:316:25","visibility":"public"}],"src":"37:1541:25"},"id":25},"contracts/utils/OracleHelper.sol":{"ast":{"absolutePath":"contracts/utils/OracleHelper.sol","exportedSymbols":{"IOracle":[3735],"ISwapRouter":[3033],"IUniswapV3SwapCallback":[2933],"OracleHelper":[4232]},"id":4233,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3902,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:26"},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":3903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4233,"sourceUnit":3034,"src":"107:68:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IOracle.sol","file":"../interfaces/IOracle.sol","id":3904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4233,"sourceUnit":3736,"src":"177:35:26","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"OracleHelper","contractDependencies":[],"contractKind":"contract","documentation":{"id":3905,"nodeType":"StructuredDocumentation","src":"216:429:26","text":"@title Helper functions for dealing with various forms of price feed oracles.\n @notice Maintains a price cache and updates the current price if needed.\n In the best case scenario we have a direct oracle from the token to the native asset.\n Also support tokens that have no direct price oracle to the native asset.\n Sometimes oracles provide the price in the opposite direction of what we need in the moment."},"fullyImplemented":true,"id":4232,"linearizedBaseContracts":[4232],"name":"OracleHelper","nameLocation":"663:12:26","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"00d4fe314618b73a96886b87817a53a5ed51433b0234c85a5e9dafe2cb7b8842","id":3913,"name":"TokenPriceUpdated","nameLocation":"691:17:26","nodeType":"EventDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"indexed":false,"mutability":"mutable","name":"currentPrice","nameLocation":"717:12:26","nodeType":"VariableDeclaration","scope":3913,"src":"709:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3909,"indexed":false,"mutability":"mutable","name":"previousPrice","nameLocation":"739:13:26","nodeType":"VariableDeclaration","scope":3913,"src":"731:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"731:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3911,"indexed":false,"mutability":"mutable","name":"cachedPriceTimestamp","nameLocation":"762:20:26","nodeType":"VariableDeclaration","scope":3913,"src":"754:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"754:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"708:75:26"},"src":"685:99:26"},{"constant":true,"id":3916,"mutability":"constant","name":"PRICE_DENOMINATOR","nameLocation":"817:17:26","nodeType":"VariableDeclaration","scope":4232,"src":"792:49:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"792:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653236","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:4:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"},"value":"1e26"},"visibility":"private"},{"canonicalName":"OracleHelper.OracleHelperConfig","id":3940,"members":[{"constant":false,"id":3920,"mutability":"mutable","name":"tokenOracle","nameLocation":"974:11:26","nodeType":"VariableDeclaration","scope":3940,"src":"966:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"},"typeName":{"id":3919,"nodeType":"UserDefinedTypeName","pathNode":{"id":3918,"name":"IOracle","nameLocations":["966:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"966:7:26"},"referencedDeclaration":3735,"src":"966:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"nativeOracle","nameLocation":"1083:12:26","nodeType":"VariableDeclaration","scope":3940,"src":"1075:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"},"typeName":{"id":3923,"nodeType":"UserDefinedTypeName","pathNode":{"id":3922,"name":"IOracle","nameLocations":["1075:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"1075:7:26"},"referencedDeclaration":3735,"src":"1075:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"tokenToNativeOracle","nameLocation":"1306:19:26","nodeType":"VariableDeclaration","scope":3940,"src":"1301:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3926,"name":"bool","nodeType":"ElementaryTypeName","src":"1301:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3930,"mutability":"mutable","name":"tokenOracleReverse","nameLocation":"1461:18:26","nodeType":"VariableDeclaration","scope":3940,"src":"1456:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3929,"name":"bool","nodeType":"ElementaryTypeName","src":"1456:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"nativeOracleReverse","nameLocation":"1593:19:26","nodeType":"VariableDeclaration","scope":3940,"src":"1588:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3932,"name":"bool","nodeType":"ElementaryTypeName","src":"1588:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"priceUpdateThreshold","nameLocation":"1734:20:26","nodeType":"VariableDeclaration","scope":3940,"src":"1726:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1726:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3939,"mutability":"mutable","name":"cacheTimeToLive","nameLocation":"1890:15:26","nodeType":"VariableDeclaration","scope":3940,"src":"1882:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1882:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"OracleHelperConfig","nameLocation":"857:18:26","nodeType":"StructDefinition","scope":4232,"src":"850:1063:26","visibility":"public"},{"constant":false,"documentation":{"id":3941,"nodeType":"StructuredDocumentation","src":"1921:106:26","text":"@notice The cached token price from the Oracle, always in (ether-per-token) * PRICE_DENOMINATOR format"},"functionSelector":"f60fdcb3","id":3943,"mutability":"mutable","name":"cachedPrice","nameLocation":"2048:11:26","nodeType":"VariableDeclaration","scope":4232,"src":"2033:26:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"2033:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":3944,"nodeType":"StructuredDocumentation","src":"2068:70:26","text":"@notice The timestamp of a block when the cached price was updated"},"functionSelector":"e1d8153c","id":3946,"mutability":"mutable","name":"cachedPriceTimestamp","nameLocation":"2159:20:26","nodeType":"VariableDeclaration","scope":4232,"src":"2144:35:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"2144:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":3949,"mutability":"mutable","name":"oracleHelperConfig","nameLocation":"2215:18:26","nodeType":"VariableDeclaration","scope":4232,"src":"2188:45:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig"},"typeName":{"id":3948,"nodeType":"UserDefinedTypeName","pathNode":{"id":3947,"name":"OracleHelperConfig","nameLocations":["2188:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":3940,"src":"2188:18:26"},"referencedDeclaration":3940,"src":"2188:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage_ptr","typeString":"struct OracleHelper.OracleHelperConfig"}},"visibility":"private"},{"constant":false,"documentation":{"id":3950,"nodeType":"StructuredDocumentation","src":"2242:80:26","text":"@notice The \"10^(tokenOracle.decimals)\" value used for the price calculation"},"id":3952,"mutability":"mutable","name":"tokenOracleDecimalPower","nameLocation":"2344:23:26","nodeType":"VariableDeclaration","scope":4232,"src":"2328:39:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2328:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"documentation":{"id":3953,"nodeType":"StructuredDocumentation","src":"2376:81:26","text":"@notice The \"10^(nativeOracle.decimals)\" value used for the price calculation"},"id":3955,"mutability":"mutable","name":"nativeOracleDecimalPower","nameLocation":"2479:24:26","nodeType":"VariableDeclaration","scope":4232,"src":"2463:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":3973,"nodeType":"Block","src":"2588:177:26","statements":[{"expression":{"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3961,"name":"cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"2599:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":3964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2618:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3963,"name":"uint256","nodeType":"ElementaryTypeName","src":"2618:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3962,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2613:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2613:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2627:3:26","memberName":"max","nodeType":"MemberAccess","src":"2613:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2599:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3968,"nodeType":"ExpressionStatement","src":"2599:31:26"},{"expression":{"arguments":[{"id":3970,"name":"_oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"2727:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_memory_ptr","typeString":"struct OracleHelper.OracleHelperConfig memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_memory_ptr","typeString":"struct OracleHelper.OracleHelperConfig memory"}],"id":3969,"name":"_setOracleConfiguration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"2689:23:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_OracleHelperConfig_$3940_memory_ptr_$returns$__$","typeString":"function (struct OracleHelper.OracleHelperConfig memory)"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3972,"nodeType":"ExpressionStatement","src":"2689:68:26"}]},"id":3974,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"_oracleHelperConfig","nameLocation":"2561:19:26","nodeType":"VariableDeclaration","scope":3974,"src":"2535:45:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_memory_ptr","typeString":"struct OracleHelper.OracleHelperConfig"},"typeName":{"id":3957,"nodeType":"UserDefinedTypeName","pathNode":{"id":3956,"name":"OracleHelperConfig","nameLocations":["2535:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":3940,"src":"2535:18:26"},"referencedDeclaration":3940,"src":"2535:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage_ptr","typeString":"struct OracleHelper.OracleHelperConfig"}},"visibility":"internal"}],"src":"2524:63:26"},"returnParameters":{"id":3960,"nodeType":"ParameterList","parameters":[],"src":"2588:0:26"},"scope":4232,"src":"2512:253:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4010,"nodeType":"Block","src":"2877:330:26","statements":[{"expression":{"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3980,"name":"oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"2888:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3981,"name":"_oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"2909:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_memory_ptr","typeString":"struct OracleHelper.OracleHelperConfig memory"}},"src":"2888:40:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"id":3983,"nodeType":"ExpressionStatement","src":"2888:40:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3985,"name":"_oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"2947:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_memory_ptr","typeString":"struct OracleHelper.OracleHelperConfig memory"}},"id":3986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:20:26","memberName":"priceUpdateThreshold","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"2947:40:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"316536","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2991:3:26","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"src":"2947:47:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54504d3a20757064617465207468726573686f6c6420746f6f2068696768","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2996:32:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a566cb33a697901d095335b5e9f970dfcd1d1aec6492c3e3a0bddbf42e69563","typeString":"literal_string \"TPM: update threshold too high\""},"value":"TPM: update threshold too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a566cb33a697901d095335b5e9f970dfcd1d1aec6492c3e3a0bddbf42e69563","typeString":"literal_string \"TPM: update threshold too high\""}],"id":3984,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2939:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2939:90:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3991,"nodeType":"ExpressionStatement","src":"2939:90:26"},{"expression":{"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3992,"name":"tokenOracleDecimalPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"3040:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3994,"name":"oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3072:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"id":3995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3091:11:26","memberName":"tokenOracle","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"3072:30:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3103:8:26","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":3721,"src":"3072:39:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3066:47:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3040:73:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4000,"nodeType":"ExpressionStatement","src":"3040:73:26"},{"expression":{"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4001,"name":"nativeOracleDecimalPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"3124:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3151:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4003,"name":"oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3157:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"id":4004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3176:12:26","memberName":"nativeOracle","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"3157:31:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3189:8:26","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":3721,"src":"3157:40:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3157:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3151:48:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3124:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4009,"nodeType":"ExpressionStatement","src":"3124:75:26"}]},"id":4011,"implemented":true,"kind":"function","modifiers":[],"name":"_setOracleConfiguration","nameLocation":"2782:23:26","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"_oracleHelperConfig","nameLocation":"2842:19:26","nodeType":"VariableDeclaration","scope":4011,"src":"2816:45:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_memory_ptr","typeString":"struct OracleHelper.OracleHelperConfig"},"typeName":{"id":3976,"nodeType":"UserDefinedTypeName","pathNode":{"id":3975,"name":"OracleHelperConfig","nameLocations":["2816:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":3940,"src":"2816:18:26"},"referencedDeclaration":3940,"src":"2816:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage_ptr","typeString":"struct OracleHelper.OracleHelperConfig"}},"visibility":"internal"}],"src":"2805:63:26"},"returnParameters":{"id":3979,"nodeType":"ParameterList","parameters":[],"src":"2877:0:26"},"scope":4232,"src":"2773:434:26","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4149,"nodeType":"Block","src":"3375:1671:26","statements":[{"assignments":[4020],"declarations":[{"constant":false,"id":4020,"mutability":"mutable","name":"cacheTimeToLive","nameLocation":"3394:15:26","nodeType":"VariableDeclaration","scope":4149,"src":"3386:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"3386:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4023,"initialValue":{"expression":{"id":4021,"name":"oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3412:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"id":4022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3431:15:26","memberName":"cacheTimeToLive","nodeType":"MemberAccess","referencedDeclaration":3939,"src":"3412:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3386:60:26"},{"assignments":[4025],"declarations":[{"constant":false,"id":4025,"mutability":"mutable","name":"cacheAge","nameLocation":"3465:8:26","nodeType":"VariableDeclaration","scope":4149,"src":"3457:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3457:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4030,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4026,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3476:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3482:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"3476:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4028,"name":"cachedPriceTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"3494:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3476:38:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3457:57:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3529:6:26","subExpression":{"id":4031,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"3530:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"cacheAge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"3539:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4034,"name":"cacheTimeToLive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3551:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3539:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3529:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4040,"nodeType":"IfStatement","src":"3525:88:26","trueBody":{"id":4039,"nodeType":"Block","src":"3568:45:26","statements":[{"expression":{"id":4037,"name":"cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"3590:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4018,"id":4038,"nodeType":"Return","src":"3583:18:26"}]}},{"assignments":[4042],"declarations":[{"constant":false,"id":4042,"mutability":"mutable","name":"priceUpdateThreshold","nameLocation":"3631:20:26","nodeType":"VariableDeclaration","scope":4149,"src":"3623:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4045,"initialValue":{"expression":{"id":4043,"name":"oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3654:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"id":4044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3673:20:26","memberName":"priceUpdateThreshold","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"3654:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3623:70:26"},{"assignments":[4048],"declarations":[{"constant":false,"id":4048,"mutability":"mutable","name":"tokenOracle","nameLocation":"3712:11:26","nodeType":"VariableDeclaration","scope":4149,"src":"3704:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"},"typeName":{"id":4047,"nodeType":"UserDefinedTypeName","pathNode":{"id":4046,"name":"IOracle","nameLocations":["3704:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"3704:7:26"},"referencedDeclaration":3735,"src":"3704:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}},"visibility":"internal"}],"id":4051,"initialValue":{"expression":{"id":4049,"name":"oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3726:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"id":4050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3745:11:26","memberName":"tokenOracle","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"3726:30:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}},"nodeType":"VariableDeclarationStatement","src":"3704:52:26"},{"assignments":[4054],"declarations":[{"constant":false,"id":4054,"mutability":"mutable","name":"nativeOracle","nameLocation":"3775:12:26","nodeType":"VariableDeclaration","scope":4149,"src":"3767:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"},"typeName":{"id":4053,"nodeType":"UserDefinedTypeName","pathNode":{"id":4052,"name":"IOracle","nameLocations":["3767:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"3767:7:26"},"referencedDeclaration":3735,"src":"3767:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}},"visibility":"internal"}],"id":4057,"initialValue":{"expression":{"id":4055,"name":"oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3790:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"id":4056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3809:12:26","memberName":"nativeOracle","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"3790:31:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}},"nodeType":"VariableDeclarationStatement","src":"3767:54:26"},{"assignments":[4059],"declarations":[{"constant":false,"id":4059,"mutability":"mutable","name":"_cachedPrice","nameLocation":"3842:12:26","nodeType":"VariableDeclaration","scope":4149,"src":"3834:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"3834:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4061,"initialValue":{"id":4060,"name":"cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"3857:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3834:34:26"},{"assignments":[4063],"declarations":[{"constant":false,"id":4063,"mutability":"mutable","name":"tokenPrice","nameLocation":"3887:10:26","nodeType":"VariableDeclaration","scope":4149,"src":"3879:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4062,"name":"uint256","nodeType":"ElementaryTypeName","src":"3879:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4067,"initialValue":{"arguments":[{"id":4065,"name":"tokenOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"3911:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}],"id":4064,"name":"fetchPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"3900:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IOracle_$3735_$returns$_t_uint256_$","typeString":"function (contract IOracle) view returns (uint256)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3900:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3879:44:26"},{"assignments":[4069],"declarations":[{"constant":false,"id":4069,"mutability":"mutable","name":"nativeAssetPrice","nameLocation":"3942:16:26","nodeType":"VariableDeclaration","scope":4149,"src":"3934:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"3934:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4071,"initialValue":{"hexValue":"31","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3961:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3934:28:26"},{"condition":{"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4099:39:26","subExpression":{"expression":{"id":4072,"name":"oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"4100:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"id":4073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4119:19:26","memberName":"tokenToNativeOracle","nodeType":"MemberAccess","referencedDeclaration":3927,"src":"4100:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4082,"nodeType":"IfStatement","src":"4095:115:26","trueBody":{"id":4081,"nodeType":"Block","src":"4140:70:26","statements":[{"expression":{"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4075,"name":"nativeAssetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"4155:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4077,"name":"nativeOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"4185:12:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}],"id":4076,"name":"fetchPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"4174:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IOracle_$3735_$returns$_t_uint256_$","typeString":"function (contract IOracle) view returns (uint256)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4174:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4155:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4080,"nodeType":"ExpressionStatement","src":"4155:43:26"}]}},{"assignments":[4084],"declarations":[{"constant":false,"id":4084,"mutability":"mutable","name":"price","nameLocation":"4228:5:26","nodeType":"VariableDeclaration","scope":4149,"src":"4220:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"4220:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4093,"initialValue":{"arguments":[{"id":4086,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"4265:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4087,"name":"nativeAssetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"4290:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4088,"name":"oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"4321:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"id":4089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4340:18:26","memberName":"tokenOracleReverse","nodeType":"MemberAccess","referencedDeclaration":3930,"src":"4321:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4090,"name":"oracleHelperConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"4373:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_OracleHelperConfig_$3940_storage","typeString":"struct OracleHelper.OracleHelperConfig storage ref"}},"id":4091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4392:19:26","memberName":"nativeOracleReverse","nodeType":"MemberAccess","referencedDeclaration":3933,"src":"4373:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4085,"name":"calculatePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"4236:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bool,bool) view returns (uint256)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4236:186:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4220:202:26"},{"assignments":[4095],"declarations":[{"constant":false,"id":4095,"mutability":"mutable","name":"priceNewByOld","nameLocation":"4441:13:26","nodeType":"VariableDeclaration","scope":4149,"src":"4433:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"4433:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4101,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"4457:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4097,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"4465:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4457:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4099,"name":"_cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"4485:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4457:40:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4433:64:26"},{"assignments":[4103],"declarations":[{"constant":false,"id":4103,"mutability":"mutable","name":"updateRequired","nameLocation":"4515:14:26","nodeType":"VariableDeclaration","scope":4149,"src":"4510:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4102,"name":"bool","nodeType":"ElementaryTypeName","src":"4510:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4117,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4104,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"4532:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"priceNewByOld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"4554:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4106,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"4570:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4107,"name":"priceUpdateThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"4590:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4570:40:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4554:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4532:78:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"priceNewByOld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"4627:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"4643:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4113,"name":"priceUpdateThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"4663:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4643:40:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4627:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4532:151:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4510:173:26"},{"condition":{"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4698:15:26","subExpression":{"id":4118,"name":"updateRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"4699:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4123,"nodeType":"IfStatement","src":"4694:67:26","trueBody":{"id":4122,"nodeType":"Block","src":"4715:46:26","statements":[{"expression":{"id":4120,"name":"_cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"4737:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4018,"id":4121,"nodeType":"Return","src":"4730:19:26"}]}},{"assignments":[4125],"declarations":[{"constant":false,"id":4125,"mutability":"mutable","name":"previousPrice","nameLocation":"4779:13:26","nodeType":"VariableDeclaration","scope":4149,"src":"4771:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"4771:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4127,"initialValue":{"id":4126,"name":"_cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"4795:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4771:36:26"},{"expression":{"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4128,"name":"_cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"4818:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4129,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"4833:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4818:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4131,"nodeType":"ExpressionStatement","src":"4818:20:26"},{"expression":{"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4132,"name":"cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"4849:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4133,"name":"_cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"4863:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4849:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4135,"nodeType":"ExpressionStatement","src":"4849:26:26"},{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4136,"name":"cachedPriceTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"4886:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4137,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4909:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4915:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"4909:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4886:38:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4140,"nodeType":"ExpressionStatement","src":"4886:38:26"},{"eventCall":{"arguments":[{"id":4142,"name":"_cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"4958:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4143,"name":"previousPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"4972:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4144,"name":"cachedPriceTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"4987:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4141,"name":"TokenPriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"4940:17:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4940:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4146,"nodeType":"EmitStatement","src":"4935:73:26"},{"expression":{"id":4147,"name":"_cachedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"5026:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4018,"id":4148,"nodeType":"Return","src":"5019:19:26"}]},"documentation":{"id":4012,"nodeType":"StructuredDocumentation","src":"3215:81:26","text":"@notice Updates the token price by fetching the latest price from the Oracle."},"functionSelector":"3ba9290f","id":4150,"implemented":true,"kind":"function","modifiers":[],"name":"updateCachedPrice","nameLocation":"3311:17:26","nodeType":"FunctionDefinition","parameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"force","nameLocation":"3334:5:26","nodeType":"VariableDeclaration","scope":4150,"src":"3329:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4013,"name":"bool","nodeType":"ElementaryTypeName","src":"3329:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3328:12:26"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"newPrice","nameLocation":"3365:8:26","nodeType":"VariableDeclaration","scope":4150,"src":"3357:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"3357:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3356:18:26"},"scope":4232,"src":"3302:1744:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4200,"nodeType":"Block","src":"5865:988:26","statements":[{"condition":{"id":4164,"name":"tokenOracleReverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"5938:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4182,"nodeType":"Block","src":"6146:171:26","statements":[{"expression":{"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"6236:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4175,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"6249:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4176,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"6269:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6249:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4178,"name":"tokenOracleDecimalPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"6282:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6249:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6236:69:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4181,"nodeType":"ExpressionStatement","src":"6236:69:26"}]},"id":4183,"nodeType":"IfStatement","src":"5934:383:26","trueBody":{"id":4173,"nodeType":"Block","src":"5958:182:26","statements":[{"expression":{"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4165,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"6059:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"6072:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4167,"name":"tokenOracleDecimalPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"6092:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6072:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4169,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"6118:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6072:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6059:69:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4172,"nodeType":"ExpressionStatement","src":"6059:69:26"}]}},{"condition":{"id":4184,"name":"nativeOracleReverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"6333:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4198,"nodeType":"Block","src":"6605:241:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4192,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"6778:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4193,"name":"nativeOracleDecimalPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"6791:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6778:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4195,"name":"nativeAssetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"6818:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6778:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4163,"id":4197,"nodeType":"Return","src":"6771:63:26"}]},"id":4199,"nodeType":"IfStatement","src":"6329:517:26","trueBody":{"id":4191,"nodeType":"Block","src":"6354:245:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"nativeAssetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"6531:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4186,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"6550:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6531:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4188,"name":"nativeOracleDecimalPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"6563:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6531:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4163,"id":4190,"nodeType":"Return","src":"6524:63:26"}]}}]},"documentation":{"id":4151,"nodeType":"StructuredDocumentation","src":"5054:611:26","text":" Calculate the effective price of the selected token denominated in native asset.\n @param tokenPrice - the price of the token relative to a native asset or a bridging asset like the U.S. dollar.\n @param nativeAssetPrice - the price of the native asset relative to a bridging asset or 1 if no bridging needed.\n @param tokenOracleReverse - flag indicating direction of the \"tokenPrice\".\n @param nativeOracleReverse - flag indicating direction of the \"nativeAssetPrice\".\n @return the ether-per-token price multiplied by the PRICE_DENOMINATOR constant."},"id":4201,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePrice","nameLocation":"5680:14:26","nodeType":"FunctionDefinition","parameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"tokenPrice","nameLocation":"5713:10:26","nodeType":"VariableDeclaration","scope":4201,"src":"5705:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"5705:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4155,"mutability":"mutable","name":"nativeAssetPrice","nameLocation":"5742:16:26","nodeType":"VariableDeclaration","scope":4201,"src":"5734:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint256","nodeType":"ElementaryTypeName","src":"5734:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4157,"mutability":"mutable","name":"tokenOracleReverse","nameLocation":"5774:18:26","nodeType":"VariableDeclaration","scope":4201,"src":"5769:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4156,"name":"bool","nodeType":"ElementaryTypeName","src":"5769:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4159,"mutability":"mutable","name":"nativeOracleReverse","nameLocation":"5808:19:26","nodeType":"VariableDeclaration","scope":4201,"src":"5803:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4158,"name":"bool","nodeType":"ElementaryTypeName","src":"5803:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5694:140:26"},"returnParameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4201,"src":"5857:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"5857:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5856:9:26"},"scope":4232,"src":"5671:1182:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4230,"nodeType":"Block","src":"7233:551:26","statements":[{"assignments":[null,4211,null,null,null],"declarations":[null,{"constant":false,"id":4211,"mutability":"mutable","name":"answer","nameLocation":"7263:6:26","nodeType":"VariableDeclaration","scope":4230,"src":"7256:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4210,"name":"int256","nodeType":"ElementaryTypeName","src":"7256:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":4215,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4212,"name":"_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"7276:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7284:15:26","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":3734,"src":"7276:23:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"7254:47:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"7437:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7446:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7437:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54504d3a20436861696e6c696e6b207072696365203c3d2030","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7449:27:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_230841b91566b8ef8494467ac1066600e239c03fbb1726ac05edb7eb6426bf5f","typeString":"literal_string \"TPM: Chainlink price <= 0\""},"value":"TPM: Chainlink price <= 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_230841b91566b8ef8494467ac1066600e239c03fbb1726ac05edb7eb6426bf5f","typeString":"literal_string \"TPM: Chainlink price <= 0\""}],"id":4216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7429:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7429:48:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4222,"nodeType":"ExpressionStatement","src":"7429:48:26"},{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4223,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"7753:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4226,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"7769:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7761:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"7761:7:26","typeDescriptions":{}}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7761:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7753:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4229,"nodeType":"ExpressionStatement","src":"7753:23:26"}]},"documentation":{"id":4202,"nodeType":"StructuredDocumentation","src":"6861:291:26","text":"@notice Fetches the latest price from the given Oracle.\n @dev This function is used to get the latest price from the tokenOracle or nativeOracle.\n @param _oracle The Oracle contract to fetch the price from.\n @return price The latest price fetched from the Oracle."},"id":4231,"implemented":true,"kind":"function","modifiers":[],"name":"fetchPrice","nameLocation":"7167:10:26","nodeType":"FunctionDefinition","parameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"_oracle","nameLocation":"7186:7:26","nodeType":"VariableDeclaration","scope":4231,"src":"7178:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"},"typeName":{"id":4204,"nodeType":"UserDefinedTypeName","pathNode":{"id":4203,"name":"IOracle","nameLocations":["7178:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"7178:7:26"},"referencedDeclaration":3735,"src":"7178:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IOracle_$3735","typeString":"contract IOracle"}},"visibility":"internal"}],"src":"7177:17:26"},"returnParameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"price","nameLocation":"7226:5:26","nodeType":"VariableDeclaration","scope":4231,"src":"7218:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"7218:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7217:15:26"},"scope":4232,"src":"7158:626:26","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4233,"src":"645:7142:26","usedErrors":[],"usedEvents":[3913]}],"src":"37:7750:26"},"id":26},"contracts/utils/TokenPaymaster.sol":{"ast":{"absolutePath":"contracts/utils/TokenPaymaster.sol","exportedSymbols":{"Address":[855],"BasePaymaster":[3258],"Context":[877],"EIP712":[1686],"IAggregator":[3533],"IERC20":[250],"IERC20Metadata":[276],"IERC20Permit":[312],"IERC5267":[172],"IEntryPoint":[3687],"INonceManager":[3706],"IPaymaster":[3770],"IStakeManager":[3874],"MessageHashUtils":[1760],"Ownable":[147],"SafeERC20":[602],"ShortString":[883],"ShortStrings":[1094],"TokenPaymaster":[4709],"UserOperation":[3900],"ValidationData":[3268],"_intersectTimeRange":[3414],"_packValidationData":[3451,3489],"_parseValidationData":[3328],"calldataKeccak":[3499]},"id":4710,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4234,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":4235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4710,"sourceUnit":277,"src":"113:75:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4710,"sourceUnit":603,"src":"190:65:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":4237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4710,"sourceUnit":1687,"src":"257:63:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":4238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4710,"sourceUnit":3688,"src":"357:39:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/BasePaymaster.sol","file":"../core/BasePaymaster.sol","id":4239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4710,"sourceUnit":3259,"src":"398:35:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4241,"name":"BasePaymaster","nameLocations":["1485:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":3258,"src":"1485:13:27"},"id":4242,"nodeType":"InheritanceSpecifier","src":"1485:13:27"}],"canonicalName":"TokenPaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":4240,"nodeType":"StructuredDocumentation","src":"437:1019:27","text":"@title Sample ERC-20 Token Paymaster for ERC-4337\n This Paymaster covers gas fees in exchange for ERC20 tokens charged using allowance pre-issued by ERC-4337 accounts.\n The contract refunds excess tokens if the actual gas cost is lower than the initially provided amount.\n The token price cannot be queried in the validation code due to storage access restrictions of ERC-4337.\n The price is cached inside the contract and is updated in the 'postOp' stage if the change is >10%.\n It is theoretically possible the token has depreciated so much since th  e last 'postOp' the refund becomes negative.\n The contract reverts the inner user transaction in that case but keeps the charge.\n The contract also allows honest clients to prepay tokens at a higher price to avoid getting reverted.\n It also allows updating price configuration and withdrawing tokens by the contract owner.\n The contract uses an Oracle to fetch the latest token prices.\n @dev Inherits from BasePaymaster."},"fullyImplemented":true,"id":4709,"linearizedBaseContracts":[4709,3258,147,877,3770],"name":"TokenPaymaster","nameLocation":"1467:14:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"TokenPaymaster.TokenPaymasterConfig","id":4252,"members":[{"constant":false,"id":4245,"mutability":"mutable","name":"priceMarkup","nameLocation":"1644:11:27","nodeType":"VariableDeclaration","scope":4252,"src":"1636:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1636:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"refundPostopCost","nameLocation":"1938:16:27","nodeType":"VariableDeclaration","scope":4252,"src":"1930:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"priceMaxAge","nameLocation":"2081:11:27","nodeType":"VariableDeclaration","scope":4252,"src":"2073:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2073:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenPaymasterConfig","nameLocation":"1515:20:27","nodeType":"StructDefinition","scope":4709,"src":"1508:592:27","visibility":"public"},{"anonymous":false,"eventSelector":"5ae532796eeeb25558550dab6b9aff6802247590213ad83ad7366b1557b1cbf0","id":4257,"name":"ConfigUpdated","nameLocation":"2114:13:27","nodeType":"EventDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"indexed":false,"mutability":"mutable","name":"tokenPaymasterConfig","nameLocation":"2149:20:27","nodeType":"VariableDeclaration","scope":4257,"src":"2128:41:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_memory_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig"},"typeName":{"id":4254,"nodeType":"UserDefinedTypeName","pathNode":{"id":4253,"name":"TokenPaymasterConfig","nameLocations":["2128:20:27"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"2128:20:27"},"referencedDeclaration":4252,"src":"2128:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig"}},"visibility":"internal"}],"src":"2127:43:27"},"src":"2108:63:27"},{"anonymous":false,"eventSelector":"46caa0511cf037f06f57a0bf273a2ff04229f5b12fb04675234a6cbe2e7f1a89","id":4267,"name":"UserOperationSponsored","nameLocation":"2185:22:27","nodeType":"EventDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2224:4:27","nodeType":"VariableDeclaration","scope":4267,"src":"2208:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4258,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4261,"indexed":false,"mutability":"mutable","name":"actualTokenCharge","nameLocation":"2238:17:27","nodeType":"VariableDeclaration","scope":4267,"src":"2230:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4260,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4263,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"2265:13:27","nodeType":"VariableDeclaration","scope":4267,"src":"2257:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2257:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4265,"indexed":false,"mutability":"mutable","name":"actualTokenPrice","nameLocation":"2288:16:27","nodeType":"VariableDeclaration","scope":4267,"src":"2280:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"2280:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2207:98:27"},"src":"2179:127:27"},{"anonymous":false,"eventSelector":"70d0284ddd39eacb3395a2e94c4dc76dfad486bb418b24573ca1c9097501d57e","id":4273,"name":"PostOpReverted","nameLocation":"2320:14:27","nodeType":"EventDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2351:4:27","nodeType":"VariableDeclaration","scope":4273,"src":"2335:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4268,"name":"address","nodeType":"ElementaryTypeName","src":"2335:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4271,"indexed":false,"mutability":"mutable","name":"preCharge","nameLocation":"2365:9:27","nodeType":"VariableDeclaration","scope":4273,"src":"2357:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2334:41:27"},"src":"2314:62:27"},{"anonymous":false,"eventSelector":"88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874","id":4279,"name":"Received","nameLocation":"2390:8:27","nodeType":"EventDefinition","parameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2415:6:27","nodeType":"VariableDeclaration","scope":4279,"src":"2399:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4274,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4277,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2431:5:27","nodeType":"VariableDeclaration","scope":4279,"src":"2423:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2423:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:39:27"},"src":"2384:54:27"},{"constant":true,"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"2446:83:27","text":"@notice All 'price' variables are multiplied by this value to avoid rounding up"},"id":4283,"mutability":"constant","name":"PRICE_DENOMINATOR","nameLocation":"2560:17:27","nodeType":"VariableDeclaration","scope":4709,"src":"2535:49:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653236","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2580:4:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"},"value":"1e26"},"visibility":"private"},{"constant":false,"id":4286,"mutability":"mutable","name":"tokenPaymasterConfig","nameLocation":"2620:20:27","nodeType":"VariableDeclaration","scope":4709,"src":"2591:49:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage","typeString":"struct TokenPaymaster.TokenPaymasterConfig"},"typeName":{"id":4285,"nodeType":"UserDefinedTypeName","pathNode":{"id":4284,"name":"TokenPaymasterConfig","nameLocations":["2591:20:27"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"2591:20:27"},"referencedDeclaration":4252,"src":"2591:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig"}},"visibility":"private"},{"constant":false,"functionSelector":"e1d8153c","id":4288,"mutability":"mutable","name":"cachedPriceTimestamp","nameLocation":"2664:20:27","nodeType":"VariableDeclaration","scope":4709,"src":"2649:35:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"id":4291,"mutability":"constant","name":"TOKEN_PRICE","nameLocation":"2757:11:27","nodeType":"VariableDeclaration","scope":4709,"src":"2732:43:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2732:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653137","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2771:4:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"1e17"},"visibility":"private"},{"constant":false,"documentation":{"id":4292,"nodeType":"StructuredDocumentation","src":"2840:61:27","text":"@notice The ERC20 token used for transaction fee payments"},"functionSelector":"fc0c546a","id":4295,"mutability":"immutable","name":"token","nameLocation":"2931:5:27","nodeType":"VariableDeclaration","scope":4709,"src":"2907:29:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},"typeName":{"id":4294,"nodeType":"UserDefinedTypeName","pathNode":{"id":4293,"name":"IERC20","nameLocations":["2907:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"2907:6:27"},"referencedDeclaration":250,"src":"2907:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"visibility":"public"},{"body":{"id":4329,"nodeType":"Block","src":"3166:175:27","statements":[{"expression":{"arguments":[{"id":4313,"name":"_tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"3201:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_memory_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_memory_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig memory"}],"id":4312,"name":"setTokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"3177:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_$returns$__$","typeString":"function (struct TokenPaymaster.TokenPaymasterConfig memory)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3177:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4315,"nodeType":"ExpressionStatement","src":"3177:46:27"},{"expression":{"arguments":[{"id":4317,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"3252:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4316,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"3234:17:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3234:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4319,"nodeType":"ExpressionStatement","src":"3234:25:27"},{"expression":{"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4320,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"3270:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4321,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"3278:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$276","typeString":"contract IERC20Metadata"}},"src":"3270:14:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},"id":4323,"nodeType":"ExpressionStatement","src":"3270:14:27"},{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4324,"name":"cachedPriceTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"3295:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4325,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3318:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3324:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"3318:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3295:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4328,"nodeType":"ExpressionStatement","src":"3295:38:27"}]},"id":4330,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4309,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"3142:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}}],"id":4310,"kind":"baseConstructorSpecifier","modifierName":{"id":4308,"name":"BasePaymaster","nameLocations":["3122:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":3258,"src":"3122:13:27"},"nodeType":"ModifierInvocation","src":"3122:38:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"_token","nameLocation":"2984:6:27","nodeType":"VariableDeclaration","scope":4330,"src":"2969:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$276","typeString":"contract IERC20Metadata"},"typeName":{"id":4297,"nodeType":"UserDefinedTypeName","pathNode":{"id":4296,"name":"IERC20Metadata","nameLocations":["2969:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":276,"src":"2969:14:27"},"referencedDeclaration":276,"src":"2969:14:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$276","typeString":"contract IERC20Metadata"}},"visibility":"internal"},{"constant":false,"id":4301,"mutability":"mutable","name":"_entryPoint","nameLocation":"3013:11:27","nodeType":"VariableDeclaration","scope":4330,"src":"3001:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"},"typeName":{"id":4300,"nodeType":"UserDefinedTypeName","pathNode":{"id":4299,"name":"IEntryPoint","nameLocations":["3001:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"3001:11:27"},"referencedDeclaration":3687,"src":"3001:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3687","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":4304,"mutability":"mutable","name":"_tokenPaymasterConfig","nameLocation":"3063:21:27","nodeType":"VariableDeclaration","scope":4330,"src":"3035:49:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_memory_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig"},"typeName":{"id":4303,"nodeType":"UserDefinedTypeName","pathNode":{"id":4302,"name":"TokenPaymasterConfig","nameLocations":["3035:20:27"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"3035:20:27"},"referencedDeclaration":4252,"src":"3035:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig"}},"visibility":"internal"},{"constant":false,"id":4306,"mutability":"mutable","name":"_owner","nameLocation":"3103:6:27","nodeType":"VariableDeclaration","scope":4330,"src":"3095:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4305,"name":"address","nodeType":"ElementaryTypeName","src":"3095:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2958:158:27"},"returnParameters":{"id":4311,"nodeType":"ParameterList","parameters":[],"src":"3166:0:27"},"scope":4709,"src":"2947:394:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4365,"nodeType":"Block","src":"3602:326:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4340,"name":"_tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"3621:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_memory_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig memory"}},"id":4341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3643:11:27","memberName":"priceMarkup","nodeType":"MemberAccess","referencedDeclaration":4245,"src":"3621:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3658:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4343,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"3662:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3658:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3621:58:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54504d3a207072696365206d61726b757020746f6f2068696768","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3681:28:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2","typeString":"literal_string \"TPM: price markup too high\""},"value":"TPM: price markup too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2","typeString":"literal_string \"TPM: price markup too high\""}],"id":4339,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3613:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3613:97:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4348,"nodeType":"ExpressionStatement","src":"3613:97:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4350,"name":"_tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"3729:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_memory_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig memory"}},"id":4351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3751:11:27","memberName":"priceMarkup","nodeType":"MemberAccess","referencedDeclaration":4245,"src":"3729:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4352,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"3766:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3729:54:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54504d3a207072696365206d61726b757020746f6f206c6f77","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3785:27:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865","typeString":"literal_string \"TPM: price markup too low\""},"value":"TPM: price markup too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865","typeString":"literal_string \"TPM: price markup too low\""}],"id":4349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3721:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:92:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4356,"nodeType":"ExpressionStatement","src":"3721:92:27"},{"expression":{"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4357,"name":"tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"3824:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage","typeString":"struct TokenPaymaster.TokenPaymasterConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4358,"name":"_tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"3847:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_memory_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig memory"}},"src":"3824:44:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage","typeString":"struct TokenPaymaster.TokenPaymasterConfig storage ref"}},"id":4360,"nodeType":"ExpressionStatement","src":"3824:44:27"},{"eventCall":{"arguments":[{"id":4362,"name":"_tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"3898:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_memory_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_memory_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig memory"}],"id":4361,"name":"ConfigUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"3884:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_$returns$__$","typeString":"function (struct TokenPaymaster.TokenPaymasterConfig memory)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3884:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4364,"nodeType":"EmitStatement","src":"3879:41:27"}]},"documentation":{"id":4331,"nodeType":"StructuredDocumentation","src":"3349:130:27","text":"@notice Updates the configuration for the Token Paymaster.\n @param _tokenPaymasterConfig The new configuration struct."},"functionSelector":"b1a6cfec","id":4366,"implemented":true,"kind":"function","modifiers":[{"id":4337,"kind":"modifierInvocation","modifierName":{"id":4336,"name":"onlyOwner","nameLocations":["3592:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3592:9:27"},"nodeType":"ModifierInvocation","src":"3592:9:27"}],"name":"setTokenPaymasterConfig","nameLocation":"3494:23:27","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"mutability":"mutable","name":"_tokenPaymasterConfig","nameLocation":"3556:21:27","nodeType":"VariableDeclaration","scope":4366,"src":"3528:49:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_memory_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig"},"typeName":{"id":4333,"nodeType":"UserDefinedTypeName","pathNode":{"id":4332,"name":"TokenPaymasterConfig","nameLocations":["3528:20:27"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"3528:20:27"},"referencedDeclaration":4252,"src":"3528:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage_ptr","typeString":"struct TokenPaymaster.TokenPaymasterConfig"}},"visibility":"internal"}],"src":"3517:67:27"},"returnParameters":{"id":4338,"nodeType":"ParameterList","parameters":[],"src":"3602:0:27"},"scope":4709,"src":"3485:443:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4381,"nodeType":"Block","src":"4017:60:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"4035:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4376,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"4044:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4035:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4378,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"4064:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4035:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4374,"id":4380,"nodeType":"Return","src":"4028:41:27"}]},"functionSelector":"7c986aac","id":4382,"implemented":true,"kind":"function","modifiers":[],"name":"weiToToken","nameLocation":"3945:10:27","nodeType":"FunctionDefinition","parameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"amount","nameLocation":"3964:6:27","nodeType":"VariableDeclaration","scope":4382,"src":"3956:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4370,"mutability":"mutable","name":"price","nameLocation":"3980:5:27","nodeType":"VariableDeclaration","scope":4382,"src":"3972:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"3972:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:31:27"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4382,"src":"4008:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4372,"name":"uint256","nodeType":"ElementaryTypeName","src":"4008:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4007:9:27"},"scope":4709,"src":"3936:141:27","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[3103],"body":{"id":4517,"nodeType":"Block","src":"4748:1528:27","statements":[{"id":4516,"nodeType":"UncheckedBlock","src":"4749:1520:27","statements":[{"assignments":[4399],"declarations":[{"constant":false,"id":4399,"mutability":"mutable","name":"priceMarkup","nameLocation":"4784:11:27","nodeType":"VariableDeclaration","scope":4516,"src":"4776:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4776:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4402,"initialValue":{"expression":{"id":4400,"name":"tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"4798:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage","typeString":"struct TokenPaymaster.TokenPaymasterConfig storage ref"}},"id":4401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4819:11:27","memberName":"priceMarkup","nodeType":"MemberAccess","referencedDeclaration":4245,"src":"4798:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4776:54:27"},{"assignments":[4404],"declarations":[{"constant":false,"id":4404,"mutability":"mutable","name":"paymasterAndDataLength","nameLocation":"4853:22:27","nodeType":"VariableDeclaration","scope":4516,"src":"4845:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"4845:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4410,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4405,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"4878:6:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4885:16:27","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3897,"src":"4878:23:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4902:6:27","memberName":"length","nodeType":"MemberAccess","src":"4878:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4911:2:27","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"4878:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4845:68:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4412,"name":"paymasterAndDataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"4936:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4962:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4936:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"paymasterAndDataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"4967:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4993:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4967:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4936:59:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54504d3a20696e76616c69642064617461206c656e677468","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5014:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537","typeString":"literal_string \"TPM: invalid data length\""},"value":"TPM: invalid data length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537","typeString":"literal_string \"TPM: invalid data length\""}],"id":4411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4928:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4928:127:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4421,"nodeType":"ExpressionStatement","src":"4928:127:27"},{"assignments":[4423],"declarations":[{"constant":false,"id":4423,"mutability":"mutable","name":"preChargeNative","nameLocation":"5078:15:27","nodeType":"VariableDeclaration","scope":4516,"src":"5070:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4422,"name":"uint256","nodeType":"ElementaryTypeName","src":"5070:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4432,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4424,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"5096:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4425,"name":"tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"5115:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage","typeString":"struct TokenPaymaster.TokenPaymasterConfig storage ref"}},"id":4426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5136:16:27","memberName":"refundPostopCost","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"5115:37:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4427,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"5155:6:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5162:12:27","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3893,"src":"5155:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5115:59:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5114:61:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:79:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5070:105:27"},{"assignments":[4434],"declarations":[{"constant":false,"id":4434,"mutability":"mutable","name":"cachedPriceWithMarkup","nameLocation":"5313:21:27","nodeType":"VariableDeclaration","scope":4516,"src":"5305:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4433,"name":"uint256","nodeType":"ElementaryTypeName","src":"5305:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4440,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4435,"name":"TOKEN_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"5337:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4436,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"5351:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5337:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4438,"name":"priceMarkup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"5371:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5337:45:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5305:77:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"paymasterAndDataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"5401:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5427:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5401:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4468,"nodeType":"IfStatement","src":"5397:376:27","trueBody":{"id":4467,"nodeType":"Block","src":"5431:342:27","statements":[{"assignments":[4445],"declarations":[{"constant":false,"id":4445,"mutability":"mutable","name":"clientSuppliedPrice","nameLocation":"5458:19:27","nodeType":"VariableDeclaration","scope":4467,"src":"5450:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"5450:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4457,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":4450,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"5496:6:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5503:16:27","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3897,"src":"5496:23:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3532","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:2:27","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"5496:32:27","startExpression":{"hexValue":"3230","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5520:2:27","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":4449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5488:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:27","typeDescriptions":{}}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5488:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5480:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"5480:7:27","typeDescriptions":{}}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5480:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5450:80:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4458,"name":"clientSuppliedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"5553:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4459,"name":"cachedPriceWithMarkup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"5575:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5553:43:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4466,"nodeType":"IfStatement","src":"5549:209:27","trueBody":{"id":4465,"nodeType":"Block","src":"5598:160:27","statements":[{"expression":{"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4461,"name":"cachedPriceWithMarkup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"5695:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4462,"name":"clientSuppliedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"5719:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5695:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4464,"nodeType":"ExpressionStatement","src":"5695:43:27"}]}}]}},{"assignments":[4470],"declarations":[{"constant":false,"id":4470,"mutability":"mutable","name":"tokenAmount","nameLocation":"5795:11:27","nodeType":"VariableDeclaration","scope":4516,"src":"5787:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4475,"initialValue":{"arguments":[{"id":4472,"name":"preChargeNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"5820:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4473,"name":"cachedPriceWithMarkup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"5837:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4471,"name":"weiToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"5809:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5787:72:27"},{"expression":{"arguments":[{"id":4479,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"5901:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"expression":{"id":4480,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"5908:6:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5915:6:27","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3879,"src":"5908:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4484,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5931:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_TokenPaymaster_$4709","typeString":"contract TokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenPaymaster_$4709","typeString":"contract TokenPaymaster"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5923:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4482,"name":"address","nodeType":"ElementaryTypeName","src":"5923:7:27","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5923:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4486,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"5938:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4476,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5874:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$602_$","typeString":"type(library SafeERC20)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5884:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":389,"src":"5874:26:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5874:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4488,"nodeType":"ExpressionStatement","src":"5874:76:27"},{"expression":{"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4489,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"5965:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4492,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"5986:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4493,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"5999:6:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6006:12:27","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3893,"src":"5999:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4495,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"6020:6:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6027:20:27","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3895,"src":"6020:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4497,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"6049:6:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6056:6:27","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3879,"src":"6049:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4490,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5975:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5979:6:27","memberName":"encode","nodeType":"MemberAccess","src":"5975:10:27","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5975:88:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5965:98:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4501,"nodeType":"ExpressionStatement","src":"5965:98:27"},{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4502,"name":"validationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"6078:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"66616c7365","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6135:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4507,"name":"cachedPriceTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"6166:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4508,"name":"tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"6189:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage","typeString":"struct TokenPaymaster.TokenPaymasterConfig storage ref"}},"id":4509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6210:11:27","memberName":"priceMaxAge","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"6189:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6166:55:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6159:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4505,"name":"uint48","nodeType":"ElementaryTypeName","src":"6159:6:27","typeDescriptions":{}}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6159:63:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6241:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4503,"name":"_packValidationData","nodeType":"Identifier","overloadedDeclarations":[3451,3489],"referencedDeclaration":3489,"src":"6097:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$","typeString":"function (bool,uint48,uint48) pure returns (uint256)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6097:160:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6078:179:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"nodeType":"ExpressionStatement","src":"6078:179:27"}]}]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"4085:468:27","text":"@notice Validates a paymaster user operation and calculates the required token amount for the transaction.\n @param userOp The user operation data.\n @param requiredPreFund The amount of tokens required for pre-funding.\n @return context The context containing the token amount and user sender address (if applicable).\n @return validationResult A uint256 value indicating the result of the validation (always 0 in this implementation)."},"id":4518,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"4568:24:27","nodeType":"FunctionDefinition","overrides":{"id":4392,"nodeType":"OverrideSpecifier","overrides":[],"src":"4677:8:27"},"parameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"userOp","nameLocation":"4616:6:27","nodeType":"VariableDeclaration","scope":4518,"src":"4593:29:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4385,"nodeType":"UserDefinedTypeName","pathNode":{"id":4384,"name":"UserOperation","nameLocations":["4593:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":3900,"src":"4593:13:27"},"referencedDeclaration":3900,"src":"4593:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3900_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4518,"src":"4624:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4624:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4390,"mutability":"mutable","name":"requiredPreFund","nameLocation":"4641:15:27","nodeType":"VariableDeclaration","scope":4518,"src":"4633:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4389,"name":"uint256","nodeType":"ElementaryTypeName","src":"4633:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4592:65:27"},"returnParameters":{"id":4397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4394,"mutability":"mutable","name":"context","nameLocation":"4713:7:27","nodeType":"VariableDeclaration","scope":4518,"src":"4700:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4393,"name":"bytes","nodeType":"ElementaryTypeName","src":"4700:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"validationResult","nameLocation":"4730:16:27","nodeType":"VariableDeclaration","scope":4518,"src":"4722:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"4722:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4699:48:27"},"scope":4709,"src":"4559:1717:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3146],"body":{"id":4635,"nodeType":"Block","src":"6739:2033:27","statements":[{"id":4634,"nodeType":"UncheckedBlock","src":"6750:2015:27","statements":[{"assignments":[4531],"declarations":[{"constant":false,"id":4531,"mutability":"mutable","name":"priceMarkup","nameLocation":"6783:11:27","nodeType":"VariableDeclaration","scope":4634,"src":"6775:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4530,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4534,"initialValue":{"expression":{"id":4532,"name":"tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"6797:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage","typeString":"struct TokenPaymaster.TokenPaymasterConfig storage ref"}},"id":4533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6818:11:27","memberName":"priceMarkup","nodeType":"MemberAccess","referencedDeclaration":4245,"src":"6797:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:54:27"},{"assignments":[4536,4538,4540,4542],"declarations":[{"constant":false,"id":4536,"mutability":"mutable","name":"preCharge","nameLocation":"6871:9:27","nodeType":"VariableDeclaration","scope":4634,"src":"6863:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6863:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4538,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"6907:12:27","nodeType":"VariableDeclaration","scope":4634,"src":"6899:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"6899:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4540,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"6946:20:27","nodeType":"VariableDeclaration","scope":4634,"src":"6938:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"6938:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"userOpSender","nameLocation":"6993:12:27","nodeType":"VariableDeclaration","scope":4634,"src":"6985:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4541,"name":"address","nodeType":"ElementaryTypeName","src":"6985:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4556,"initialValue":{"arguments":[{"id":4545,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"7034:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7044:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"7044:7:27","typeDescriptions":{}}},{"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7053:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"7053:7:27","typeDescriptions":{}}},{"id":4551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7062:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4550,"name":"uint256","nodeType":"ElementaryTypeName","src":"7062:7:27","typeDescriptions":{}}},{"id":4553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7071:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4552,"name":"address","nodeType":"ElementaryTypeName","src":"7071:7:27","typeDescriptions":{}}}],"id":4554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7043:36:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_address_$_$","typeString":"tuple(type(uint256),type(uint256),type(uint256),type(address))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_address_$_$","typeString":"tuple(type(uint256),type(uint256),type(uint256),type(address))"}],"expression":{"id":4543,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7023:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7027:6:27","memberName":"decode","nodeType":"MemberAccess","src":"7023:10:27","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7023:57:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_payable_$","typeString":"tuple(uint256,uint256,uint256,address payable)"}},"nodeType":"VariableDeclarationStatement","src":"6844:236:27"},{"assignments":[4558],"declarations":[{"constant":false,"id":4558,"mutability":"mutable","name":"gasPrice","nameLocation":"7103:8:27","nodeType":"VariableDeclaration","scope":4634,"src":"7095:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"7095:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4563,"initialValue":{"arguments":[{"id":4560,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"7126:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4561,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"7140:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4559,"name":"getGasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"7114:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7114:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7095:66:27"},{"assignments":[4565],"declarations":[{"constant":false,"id":4565,"mutability":"mutable","name":"cachedPriceWithMarkup","nameLocation":"7364:21:27","nodeType":"VariableDeclaration","scope":4634,"src":"7356:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"7356:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4571,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4566,"name":"TOKEN_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"7388:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4567,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"7402:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7388:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4569,"name":"priceMarkup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"7422:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7388:45:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7356:77:27"},{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4572,"name":"cachedPriceTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"7448:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4573,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7471:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7477:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"7471:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7448:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4576,"nodeType":"ExpressionStatement","src":"7448:38:27"},{"assignments":[4578],"declarations":[{"constant":false,"id":4578,"mutability":"mutable","name":"actualChargeNative","nameLocation":"7560:18:27","nodeType":"VariableDeclaration","scope":4634,"src":"7552:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"7552:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4585,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"7581:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4580,"name":"tokenPaymasterConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"7597:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPaymasterConfig_$4252_storage","typeString":"struct TokenPaymaster.TokenPaymasterConfig storage ref"}},"id":4581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7618:16:27","memberName":"refundPostopCost","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"7597:37:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4582,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"7637:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7597:48:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:64:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7552:93:27"},{"assignments":[4587],"declarations":[{"constant":false,"id":4587,"mutability":"mutable","name":"actualTokenNeeded","nameLocation":"7668:17:27","nodeType":"VariableDeclaration","scope":4634,"src":"7660:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"7660:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4592,"initialValue":{"arguments":[{"id":4589,"name":"actualChargeNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"7699:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4590,"name":"cachedPriceWithMarkup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"7719:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4588,"name":"weiToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"7688:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7688:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7660:81:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"preCharge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"7760:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4594,"name":"actualTokenNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"7772:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7760:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"preCharge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"8115:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4608,"name":"actualTokenNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"8127:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8115:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4625,"nodeType":"IfStatement","src":"8111:477:27","trueBody":{"id":4624,"nodeType":"Block","src":"8146:442:27","statements":[{"expression":{"arguments":[{"id":4613,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"8425:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"id":4614,"name":"userOpSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"8453:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4617,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8496:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_TokenPaymaster_$4709","typeString":"contract TokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenPaymaster_$4709","typeString":"contract TokenPaymaster"}],"id":4616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8488:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4615,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:27","typeDescriptions":{}}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8488:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"actualTokenNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"8524:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4620,"name":"preCharge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"8544:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8524:29:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4610,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"8376:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$602_$","typeString":"type(library SafeERC20)"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8386:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":389,"src":"8376:26:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8376:196:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4623,"nodeType":"ExpressionStatement","src":"8376:196:27"}]}},"id":4626,"nodeType":"IfStatement","src":"7756:832:27","trueBody":{"id":4606,"nodeType":"Block","src":"7791:314:27","statements":[{"expression":{"arguments":[{"id":4599,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"7978:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"id":4600,"name":"userOpSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"8006:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4601,"name":"preCharge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"8041:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4602,"name":"actualTokenNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"8053:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8041:29:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4596,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"7933:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$602_$","typeString":"type(library SafeERC20)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7943:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":362,"src":"7933:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7933:156:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4605,"nodeType":"ExpressionStatement","src":"7933:156:27"}]}},{"eventCall":{"arguments":[{"id":4628,"name":"userOpSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"8632:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4629,"name":"actualTokenNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"8646:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4630,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"8665:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4631,"name":"TOKEN_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"8680:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4627,"name":"UserOperationSponsored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"8609:22:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8609:83:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4633,"nodeType":"EmitStatement","src":"8604:88:27"}]}]},"documentation":{"id":4519,"nodeType":"StructuredDocumentation","src":"6284:355:27","text":"@notice Performs post-operation tasks, such as updating the token price and refunding excess tokens.\n @dev This function is called after a user operation has been executed or reverted.\n @param context The context containing the token amount and user sender address.\n @param actualGasCost The actual gas cost of the transaction."},"id":4636,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"6654:7:27","nodeType":"FunctionDefinition","overrides":{"id":4528,"nodeType":"OverrideSpecifier","overrides":[],"src":"6730:8:27"},"parameters":{"id":4527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4636,"src":"6662:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":4521,"nodeType":"UserDefinedTypeName","pathNode":{"id":4520,"name":"PostOpMode","nameLocations":["6662:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":3743,"src":"6662:10:27"},"referencedDeclaration":3743,"src":"6662:10:27","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3743","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"context","nameLocation":"6689:7:27","nodeType":"VariableDeclaration","scope":4636,"src":"6674:22:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4523,"name":"bytes","nodeType":"ElementaryTypeName","src":"6674:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4526,"mutability":"mutable","name":"actualGasCost","nameLocation":"6706:13:27","nodeType":"VariableDeclaration","scope":4636,"src":"6698:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4525,"name":"uint256","nodeType":"ElementaryTypeName","src":"6698:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6661:59:27"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[],"src":"6739:0:27"},"scope":4709,"src":"6645:2127:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4660,"nodeType":"Block","src":"9599:262:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"9614:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4646,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"9630:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9614:36:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4651,"nodeType":"IfStatement","src":"9610:171:27","trueBody":{"id":4650,"nodeType":"Block","src":"9652:129:27","statements":[{"expression":{"id":4648,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"9757:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4644,"id":4649,"nodeType":"Return","src":"9750:19:27"}]}},{"expression":{"arguments":[{"id":4653,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"9802:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4654,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"9816:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4655,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9839:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9845:7:27","memberName":"basefee","nodeType":"MemberAccess","src":"9839:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9816:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4652,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"9798:3:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9798:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4644,"id":4659,"nodeType":"Return","src":"9791:62:27"}]},"id":4661,"implemented":true,"kind":"function","modifiers":[],"name":"getGasPrice","nameLocation":"9503:11:27","nodeType":"FunctionDefinition","parameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4638,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"9523:12:27","nodeType":"VariableDeclaration","scope":4661,"src":"9515:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4637,"name":"uint256","nodeType":"ElementaryTypeName","src":"9515:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4640,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"9545:20:27","nodeType":"VariableDeclaration","scope":4661,"src":"9537:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4639,"name":"uint256","nodeType":"ElementaryTypeName","src":"9537:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9514:52:27"},"returnParameters":{"id":4644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4661,"src":"9590:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:27"},"scope":4709,"src":"9494:367:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4679,"nodeType":"Block","src":"10163:60:27","statements":[{"expression":{"arguments":[{"id":4674,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"10197:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"}},{"id":4675,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"10204:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4676,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"10208:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$250","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4671,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"10174:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$602_$","typeString":"type(library SafeERC20)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10184:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":362,"src":"10174:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10174:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4678,"nodeType":"ExpressionStatement","src":"10174:41:27"}]},"documentation":{"id":4662,"nodeType":"StructuredDocumentation","src":"9875:212:27","text":"@notice Allows the contract owner to withdraw a specified amount of tokens from the contract.\n @param to The address to transfer the tokens to.\n @param amount The amount of tokens to transfer."},"functionSelector":"9e281a98","id":4680,"implemented":true,"kind":"function","modifiers":[{"id":4669,"kind":"modifierInvocation","modifierName":{"id":4668,"name":"onlyOwner","nameLocations":["10153:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10153:9:27"},"nodeType":"ModifierInvocation","src":"10153:9:27"}],"name":"withdrawToken","nameLocation":"10102:13:27","nodeType":"FunctionDefinition","parameters":{"id":4667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4664,"mutability":"mutable","name":"to","nameLocation":"10124:2:27","nodeType":"VariableDeclaration","scope":4680,"src":"10116:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4663,"name":"address","nodeType":"ElementaryTypeName","src":"10116:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4666,"mutability":"mutable","name":"amount","nameLocation":"10136:6:27","nodeType":"VariableDeclaration","scope":4680,"src":"10128:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4665,"name":"uint256","nodeType":"ElementaryTypeName","src":"10128:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10115:28:27"},"returnParameters":{"id":4670,"nodeType":"ParameterList","parameters":[],"src":"10163:0:27"},"scope":4709,"src":"10093:130:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4696,"nodeType":"Block","src":"10298:39:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"10316:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4690,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"10320:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10316:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4693,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"10328:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10316:13:27","trueExpression":{"id":4692,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"10324:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4688,"id":4695,"nodeType":"Return","src":"10309:20:27"}]},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"10240:3:27","nodeType":"FunctionDefinition","parameters":{"id":4685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"a","nameLocation":"10252:1:27","nodeType":"VariableDeclaration","scope":4697,"src":"10244:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"10244:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4684,"mutability":"mutable","name":"b","nameLocation":"10263:1:27","nodeType":"VariableDeclaration","scope":4697,"src":"10255:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"10255:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10243:22:27"},"returnParameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4697,"src":"10289:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"10289:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10288:9:27"},"scope":4709,"src":"10231:106:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4707,"nodeType":"Block","src":"10372:55:27","statements":[{"eventCall":{"arguments":[{"expression":{"id":4701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10397:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10401:6:27","memberName":"sender","nodeType":"MemberAccess","src":"10397:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4703,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10409:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10413:5:27","memberName":"value","nodeType":"MemberAccess","src":"10409:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4700,"name":"Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"10388:8:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10388:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4706,"nodeType":"EmitStatement","src":"10383:36:27"}]},"id":4708,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[],"src":"10352:2:27"},"returnParameters":{"id":4699,"nodeType":"ParameterList","parameters":[],"src":"10372:0:27"},"scope":4709,"src":"10345:82:27","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4710,"src":"1458:8972:27","usedErrors":[13,18,329,610,615,618],"usedEvents":[24,4257,4267,4273,4279]}],"src":"37:10393:27"},"id":27}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc0c1c87e408c4e55dc6229db728f4ce7c7bcde319cf505b5daf94e2df764f5264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xC SHR DUP8 0xE4 ADDMOD 0xC4 0xE5 0x5D 0xC6 0x22 SWAP14 0xB7 0x28 DELEGATECALL 0xCE PUSH29 0x7BCDE319CF505B5DAF94E2DF764F5264736F6C63430008140033000000 ","sourceMap":"751:5018:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc0c1c87e408c4e55dc6229db728f4ce7c7bcde319cf505b5daf94e2df764f5264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xC SHR DUP8 0xE4 ADDMOD 0xC4 0xE5 0x5D 0xC6 0x22 SWAP14 0xB7 0x28 DELEGATECALL 0xCE PUSH29 0x7BCDE319CF505B5DAF94E2DF764F5264736F6C63430008140033000000 ","sourceMap":"751:5018:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039dffa40a0715e4a9c1b63cdf0e4fc0d23ef690191b3b911aa591153978e7baa64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xDF STATICCALL BLOCKHASH LOG0 PUSH18 0x5E4A9C1B63CDF0E4FC0D23EF690191B3B911 0xAA MSIZE GT MSTORE8 SWAP8 DUP15 PUSH28 0xAA64736F6C6343000814003300000000000000000000000000000000 ","sourceMap":"1255:3053:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039dffa40a0715e4a9c1b63cdf0e4fc0d23ef690191b3b911aa591153978e7baa64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xDF STATICCALL BLOCKHASH LOG0 PUSH18 0x5E4A9C1B63CDF0E4FC0D23EF690191B3B911 0xAA MSIZE GT MSTORE8 SWAP8 DUP15 PUSH28 0xAA64736F6C6343000814003300000000000000000000000000000000 ","sourceMap":"1255:3053:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"}},"contracts/core/BasePaymaster.sol":{"BasePaymaster":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. Validates that the postOp is called only by the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xbd3189ba19234b7983c343fd70058e21de970feb4bc941c57f14820eb35878a8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d738449768414ab9d4d111113f4641bd0fbc833f9baf74d8ccebe43fe8d7bb\",\"dweb:/ipfs/QmSwpXHUerFzwJFyyLqyGGbzsLTwSimdcMKX5FKksNouEm\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- Array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- Array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"Validate aggregated signature. Revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Validate signature of a single userOp. This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps, to identify the offending op. Should be caught in off-chain handleOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]}},\"version\":1}"}},"contracts/interfaces/IOracle.sol":{"IOracle":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ethOutput","type":"uint256"}],"name":"getTokenValueOfEth","outputs":[{"internalType":"uint256","name":"tokenInput","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"decimals()":"313ce567","getTokenValueOfEth(uint256)":"d1eca9cf","latestRoundData()":"feaf968c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethOutput\",\"type\":\"uint256\"}],\"name\":\"getTokenValueOfEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenInput\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTokenValueOfEth(uint256)\":{\"notice\":\"return amount of tokens that are required to receive that much eth.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOracle.sol\":\"IOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOracle.sol\":{\"keccak256\":\"0xfdf22d335838ab9c300d72fdbef4c71ab327450ac09408470c2115230517d54e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://60919b4ae791f13532640191481d62217f5cee6ab090cf55e945437cdb7ffcbe\",\"dweb:/ipfs/QmQ7KDketzGvi4d9zfnizUU9SGDvUdVHeYLCGP2rMyo43f\"]}},\"version\":1}"}},"contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]}},\"version\":1}"}},"contracts/utils/OracleHelper.sol":{"OracleHelper":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"currentPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"previousPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"cachedPriceTimestamp","type":"uint256"}],"name":"TokenPriceUpdated","type":"event"},{"inputs":[],"name":"cachedPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cachedPriceTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"force","type":"bool"}],"name":"updateCachedPrice","outputs":[{"internalType":"uint256","name":"newPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"cachedPrice()":"f60fdcb3","cachedPriceTimestamp()":"e1d8153c","updateCachedPrice(bool)":"3ba9290f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cachedPriceTimestamp\",\"type\":\"uint256\"}],\"name\":\"TokenPriceUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cachedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cachedPriceTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"}],\"name\":\"updateCachedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Helper functions for dealing with various forms of price feed oracles.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cachedPrice()\":{\"notice\":\"The cached token price from the Oracle, always in (ether-per-token) * PRICE_DENOMINATOR format\"},\"cachedPriceTimestamp()\":{\"notice\":\"The timestamp of a block when the cached price was updated\"},\"updateCachedPrice(bool)\":{\"notice\":\"Updates the token price by fetching the latest price from the Oracle.\"}},\"notice\":\"Maintains a price cache and updates the current price if needed. In the best case scenario we have a direct oracle from the token to the native asset. Also support tokens that have no direct price oracle to the native asset. Sometimes oracles provide the price in the opposite direction of what we need in the moment.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/OracleHelper.sol\":\"OracleHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/interfaces/IOracle.sol\":{\"keccak256\":\"0xfdf22d335838ab9c300d72fdbef4c71ab327450ac09408470c2115230517d54e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://60919b4ae791f13532640191481d62217f5cee6ab090cf55e945437cdb7ffcbe\",\"dweb:/ipfs/QmQ7KDketzGvi4d9zfnizUU9SGDvUdVHeYLCGP2rMyo43f\"]},\"contracts/utils/OracleHelper.sol\":{\"keccak256\":\"0xf73f360a65aa0ef447c87ba5166c65e6b09aa14a2c3ad5cbb66f67cbeb2d7778\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2e8ad14f28a48b5da4da51cacfc38a15460f46b661e0d77230f3c6982a2d0112\",\"dweb:/ipfs/QmZnxuW1MhisMt8vYQvk2Ew3RaeFKWxFhm5hs7RiaUoxiA\"]}},\"version\":1}"}},"contracts/utils/TokenPaymaster.sol":{"TokenPaymaster":{"abi":[{"inputs":[{"internalType":"contract IERC20Metadata","name":"_token","type":"address"},{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"},{"components":[{"internalType":"uint256","name":"priceMarkup","type":"uint256"},{"internalType":"uint256","name":"refundPostopCost","type":"uint256"},{"internalType":"uint256","name":"priceMaxAge","type":"uint256"}],"internalType":"struct TokenPaymaster.TokenPaymasterConfig","name":"_tokenPaymasterConfig","type":"tuple"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"priceMarkup","type":"uint256"},{"internalType":"uint256","name":"refundPostopCost","type":"uint256"},{"internalType":"uint256","name":"priceMaxAge","type":"uint256"}],"indexed":false,"internalType":"struct TokenPaymaster.TokenPaymasterConfig","name":"tokenPaymasterConfig","type":"tuple"}],"name":"ConfigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"preCharge","type":"uint256"}],"name":"PostOpReverted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Received","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"actualTokenCharge","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualTokenPrice","type":"uint256"}],"name":"UserOperationSponsored","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"cachedPriceTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"priceMarkup","type":"uint256"},{"internalType":"uint256","name":"refundPostopCost","type":"uint256"},{"internalType":"uint256","name":"priceMaxAge","type":"uint256"}],"internalType":"struct TokenPaymaster.TokenPaymasterConfig","name":"_tokenPaymasterConfig","type":"tuple"}],"name":"setTokenPaymasterConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"weiToToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_3062":{"entryPoint":null,"id":3062,"parameterSlots":1,"returnSlots":0},"@_4330":{"entryPoint":null,"id":4330,"parameterSlots":4,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_checkOwner_84":{"entryPoint":993,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_867":{"entryPoint":1155,"id":867,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":348,"id":146,"parameterSlots":1,"returnSlots":0},"@owner_67":{"entryPoint":1163,"id":67,"parameterSlots":0,"returnSlots":1},"@setTokenPaymasterConfig_4366":{"entryPoint":544,"id":4366,"parameterSlots":1,"returnSlots":0},"@transferOwnership_126":{"entryPoint":840,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":1759,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20Metadata_$276_fromMemory":{"entryPoint":1317,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IEntryPoint_$3687_fromMemory":{"entryPoint":1386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromMemory":{"entryPoint":1622,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20Metadata_$276t_contract$_IEntryPoint_$3687t_struct$_TokenPaymasterConfig_$4252_memory_ptrt_address_fromMemory":{"entryPoint":1782,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1896,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2_to_t_string_memory_ptr_fromStack":{"entryPoint":2122,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865_to_t_string_memory_ptr_fromStack":{"entryPoint":2236,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromStack":{"entryPoint":2326,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":2309,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1913,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2275,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__fromStack_reversed":{"entryPoint":2398,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1532,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1204,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2064,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1989,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20Metadata_$276":{"entryPoint":1271,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IEntryPoint_$3687":{"entryPoint":1340,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1219,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1563,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1478,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":1942,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1431,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":1409,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1214,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1414,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2":{"entryPoint":2081,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865":{"entryPoint":2195,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1733,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20Metadata_$276":{"entryPoint":1291,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IEntryPoint_$3687":{"entryPoint":1360,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1573,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9408:28","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:28","statements":[{"nodeType":"YulAssignment","src":"57:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:28"},"nodeType":"YulFunctionCall","src":"67:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:28","type":""}],"src":"7:75:28"},{"body":{"nodeType":"YulBlock","src":"177:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:28"},"nodeType":"YulFunctionCall","src":"187:12:28"},"nodeType":"YulExpressionStatement","src":"187:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:28"},{"body":{"nodeType":"YulBlock","src":"300:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:28"},"nodeType":"YulFunctionCall","src":"310:12:28"},"nodeType":"YulExpressionStatement","src":"310:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:28"},{"body":{"nodeType":"YulBlock","src":"379:81:28","statements":[{"nodeType":"YulAssignment","src":"389:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:28"},"nodeType":"YulFunctionCall","src":"400:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:28","type":""}],"src":"334:126:28"},{"body":{"nodeType":"YulBlock","src":"511:51:28","statements":[{"nodeType":"YulAssignment","src":"521:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:28"},"nodeType":"YulFunctionCall","src":"532:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:28","type":""}],"src":"466:96:28"},{"body":{"nodeType":"YulBlock","src":"635:51:28","statements":[{"nodeType":"YulAssignment","src":"645:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"674:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"656:17:28"},"nodeType":"YulFunctionCall","src":"656:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"645:7:28"}]}]},"name":"cleanup_t_contract$_IERC20Metadata_$276","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"617:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"627:7:28","type":""}],"src":"568:118:28"},{"body":{"nodeType":"YulBlock","src":"757:101:28","statements":[{"body":{"nodeType":"YulBlock","src":"836:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"845:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"848:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"838:6:28"},"nodeType":"YulFunctionCall","src":"838:12:28"},"nodeType":"YulExpressionStatement","src":"838:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"780:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:28"}],"functionName":{"name":"cleanup_t_contract$_IERC20Metadata_$276","nodeType":"YulIdentifier","src":"787:39:28"},"nodeType":"YulFunctionCall","src":"787:46:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"777:2:28"},"nodeType":"YulFunctionCall","src":"777:57:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"770:6:28"},"nodeType":"YulFunctionCall","src":"770:65:28"},"nodeType":"YulIf","src":"767:85:28"}]},"name":"validator_revert_t_contract$_IERC20Metadata_$276","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"750:5:28","type":""}],"src":"692:166:28"},{"body":{"nodeType":"YulBlock","src":"949:102:28","statements":[{"nodeType":"YulAssignment","src":"959:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"974:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"968:5:28"},"nodeType":"YulFunctionCall","src":"968:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1039:5:28"}],"functionName":{"name":"validator_revert_t_contract$_IERC20Metadata_$276","nodeType":"YulIdentifier","src":"990:48:28"},"nodeType":"YulFunctionCall","src":"990:55:28"},"nodeType":"YulExpressionStatement","src":"990:55:28"}]},"name":"abi_decode_t_contract$_IERC20Metadata_$276_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:28","type":""}],"src":"864:187:28"},{"body":{"nodeType":"YulBlock","src":"1122:51:28","statements":[{"nodeType":"YulAssignment","src":"1132:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1161:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1143:17:28"},"nodeType":"YulFunctionCall","src":"1143:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1132:7:28"}]}]},"name":"cleanup_t_contract$_IEntryPoint_$3687","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1104:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1114:7:28","type":""}],"src":"1057:116:28"},{"body":{"nodeType":"YulBlock","src":"1242:99:28","statements":[{"body":{"nodeType":"YulBlock","src":"1319:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1321:6:28"},"nodeType":"YulFunctionCall","src":"1321:12:28"},"nodeType":"YulExpressionStatement","src":"1321:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1265:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1310:5:28"}],"functionName":{"name":"cleanup_t_contract$_IEntryPoint_$3687","nodeType":"YulIdentifier","src":"1272:37:28"},"nodeType":"YulFunctionCall","src":"1272:44:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1262:2:28"},"nodeType":"YulFunctionCall","src":"1262:55:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1255:6:28"},"nodeType":"YulFunctionCall","src":"1255:63:28"},"nodeType":"YulIf","src":"1252:83:28"}]},"name":"validator_revert_t_contract$_IEntryPoint_$3687","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1235:5:28","type":""}],"src":"1179:162:28"},{"body":{"nodeType":"YulBlock","src":"1430:100:28","statements":[{"nodeType":"YulAssignment","src":"1440:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1455:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1449:5:28"},"nodeType":"YulFunctionCall","src":"1449:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1440:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1518:5:28"}],"functionName":{"name":"validator_revert_t_contract$_IEntryPoint_$3687","nodeType":"YulIdentifier","src":"1471:46:28"},"nodeType":"YulFunctionCall","src":"1471:53:28"},"nodeType":"YulExpressionStatement","src":"1471:53:28"}]},"name":"abi_decode_t_contract$_IEntryPoint_$3687_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1408:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1416:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1424:5:28","type":""}],"src":"1347:183:28"},{"body":{"nodeType":"YulBlock","src":"1625:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1642:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1645:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1635:6:28"},"nodeType":"YulFunctionCall","src":"1635:12:28"},"nodeType":"YulExpressionStatement","src":"1635:12:28"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"1536:117:28"},{"body":{"nodeType":"YulBlock","src":"1707:54:28","statements":[{"nodeType":"YulAssignment","src":"1717:38:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1735:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1742:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1731:3:28"},"nodeType":"YulFunctionCall","src":"1731:14:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1751:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1747:3:28"},"nodeType":"YulFunctionCall","src":"1747:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1727:3:28"},"nodeType":"YulFunctionCall","src":"1727:28:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1717:6:28"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1690:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1700:6:28","type":""}],"src":"1659:102:28"},{"body":{"nodeType":"YulBlock","src":"1795:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1812:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1815:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1805:6:28"},"nodeType":"YulFunctionCall","src":"1805:88:28"},"nodeType":"YulExpressionStatement","src":"1805:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1909:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1912:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1902:6:28"},"nodeType":"YulFunctionCall","src":"1902:15:28"},"nodeType":"YulExpressionStatement","src":"1902:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1933:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1936:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1926:6:28"},"nodeType":"YulFunctionCall","src":"1926:15:28"},"nodeType":"YulExpressionStatement","src":"1926:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1767:180:28"},{"body":{"nodeType":"YulBlock","src":"1996:238:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2006:58:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2028:6:28"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2058:4:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2036:21:28"},"nodeType":"YulFunctionCall","src":"2036:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2024:3:28"},"nodeType":"YulFunctionCall","src":"2024:40:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2010:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2175:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2177:16:28"},"nodeType":"YulFunctionCall","src":"2177:18:28"},"nodeType":"YulExpressionStatement","src":"2177:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2118:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2130:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2115:2:28"},"nodeType":"YulFunctionCall","src":"2115:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2154:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2166:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2151:2:28"},"nodeType":"YulFunctionCall","src":"2151:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2112:2:28"},"nodeType":"YulFunctionCall","src":"2112:62:28"},"nodeType":"YulIf","src":"2109:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2213:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2217:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2206:6:28"},"nodeType":"YulFunctionCall","src":"2206:22:28"},"nodeType":"YulExpressionStatement","src":"2206:22:28"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1982:6:28","type":""},{"name":"size","nodeType":"YulTypedName","src":"1990:4:28","type":""}],"src":"1953:281:28"},{"body":{"nodeType":"YulBlock","src":"2281:88:28","statements":[{"nodeType":"YulAssignment","src":"2291:30:28","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2301:18:28"},"nodeType":"YulFunctionCall","src":"2301:20:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2291:6:28"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2350:6:28"},{"name":"size","nodeType":"YulIdentifier","src":"2358:4:28"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2330:19:28"},"nodeType":"YulFunctionCall","src":"2330:33:28"},"nodeType":"YulExpressionStatement","src":"2330:33:28"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2265:4:28","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2274:6:28","type":""}],"src":"2240:129:28"},{"body":{"nodeType":"YulBlock","src":"2464:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2481:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2484:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2474:6:28"},"nodeType":"YulFunctionCall","src":"2474:12:28"},"nodeType":"YulExpressionStatement","src":"2474:12:28"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"2375:117:28"},{"body":{"nodeType":"YulBlock","src":"2543:32:28","statements":[{"nodeType":"YulAssignment","src":"2553:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2564:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2553:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2525:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2535:7:28","type":""}],"src":"2498:77:28"},{"body":{"nodeType":"YulBlock","src":"2624:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"2681:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2690:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2693:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2683:6:28"},"nodeType":"YulFunctionCall","src":"2683:12:28"},"nodeType":"YulExpressionStatement","src":"2683:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2647:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2654:17:28"},"nodeType":"YulFunctionCall","src":"2654:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2644:2:28"},"nodeType":"YulFunctionCall","src":"2644:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2637:6:28"},"nodeType":"YulFunctionCall","src":"2637:43:28"},"nodeType":"YulIf","src":"2634:63:28"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2617:5:28","type":""}],"src":"2581:122:28"},{"body":{"nodeType":"YulBlock","src":"2772:80:28","statements":[{"nodeType":"YulAssignment","src":"2782:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2797:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2791:5:28"},"nodeType":"YulFunctionCall","src":"2791:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2782:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2840:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2813:26:28"},"nodeType":"YulFunctionCall","src":"2813:33:28"},"nodeType":"YulExpressionStatement","src":"2813:33:28"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2750:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2758:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2766:5:28","type":""}],"src":"2709:143:28"},{"body":{"nodeType":"YulBlock","src":"3012:714:28","statements":[{"body":{"nodeType":"YulBlock","src":"3056:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"3058:77:28"},"nodeType":"YulFunctionCall","src":"3058:79:28"},"nodeType":"YulExpressionStatement","src":"3058:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3033:3:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3038:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3029:3:28"},"nodeType":"YulFunctionCall","src":"3029:19:28"},{"kind":"number","nodeType":"YulLiteral","src":"3050:4:28","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3025:3:28"},"nodeType":"YulFunctionCall","src":"3025:30:28"},"nodeType":"YulIf","src":"3022:117:28"},{"nodeType":"YulAssignment","src":"3148:30:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3173:4:28","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3157:15:28"},"nodeType":"YulFunctionCall","src":"3157:21:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3148:5:28"}]},{"nodeType":"YulBlock","src":"3188:168:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3230:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3244:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3234:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3270:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3277:4:28","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:28"},"nodeType":"YulFunctionCall","src":"3266:16:28"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3331:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3316:3:28"},"nodeType":"YulFunctionCall","src":"3316:22:28"},{"name":"end","nodeType":"YulIdentifier","src":"3340:3:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3284:31:28"},"nodeType":"YulFunctionCall","src":"3284:60:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3259:6:28"},"nodeType":"YulFunctionCall","src":"3259:86:28"},"nodeType":"YulExpressionStatement","src":"3259:86:28"}]},{"nodeType":"YulBlock","src":"3366:174:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3413:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3427:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3417:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3454:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3461:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3450:3:28"},"nodeType":"YulFunctionCall","src":"3450:16:28"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3504:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3515:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3500:3:28"},"nodeType":"YulFunctionCall","src":"3500:22:28"},{"name":"end","nodeType":"YulIdentifier","src":"3524:3:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3468:31:28"},"nodeType":"YulFunctionCall","src":"3468:60:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3443:6:28"},"nodeType":"YulFunctionCall","src":"3443:86:28"},"nodeType":"YulExpressionStatement","src":"3443:86:28"}]},{"nodeType":"YulBlock","src":"3550:169:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3592:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3606:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3596:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3633:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3640:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3629:3:28"},"nodeType":"YulFunctionCall","src":"3629:16:28"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3683:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3694:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3679:3:28"},"nodeType":"YulFunctionCall","src":"3679:22:28"},{"name":"end","nodeType":"YulIdentifier","src":"3703:3:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3647:31:28"},"nodeType":"YulFunctionCall","src":"3647:60:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:28"},"nodeType":"YulFunctionCall","src":"3622:86:28"},"nodeType":"YulExpressionStatement","src":"3622:86:28"}]}]},"name":"abi_decode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2987:9:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2998:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3006:5:28","type":""}],"src":"2908:818:28"},{"body":{"nodeType":"YulBlock","src":"3775:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"3832:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3841:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3844:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3834:6:28"},"nodeType":"YulFunctionCall","src":"3834:12:28"},"nodeType":"YulExpressionStatement","src":"3834:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3798:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3823:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3805:17:28"},"nodeType":"YulFunctionCall","src":"3805:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3795:2:28"},"nodeType":"YulFunctionCall","src":"3795:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3788:6:28"},"nodeType":"YulFunctionCall","src":"3788:43:28"},"nodeType":"YulIf","src":"3785:63:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3768:5:28","type":""}],"src":"3732:122:28"},{"body":{"nodeType":"YulBlock","src":"3923:80:28","statements":[{"nodeType":"YulAssignment","src":"3933:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3948:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3942:5:28"},"nodeType":"YulFunctionCall","src":"3942:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3933:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3991:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3964:26:28"},"nodeType":"YulFunctionCall","src":"3964:33:28"},"nodeType":"YulExpressionStatement","src":"3964:33:28"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3901:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"3909:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3917:5:28","type":""}],"src":"3860:143:28"},{"body":{"nodeType":"YulBlock","src":"4217:773:28","statements":[{"body":{"nodeType":"YulBlock","src":"4264:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4266:77:28"},"nodeType":"YulFunctionCall","src":"4266:79:28"},"nodeType":"YulExpressionStatement","src":"4266:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4238:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4247:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4234:3:28"},"nodeType":"YulFunctionCall","src":"4234:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4259:3:28","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4230:3:28"},"nodeType":"YulFunctionCall","src":"4230:33:28"},"nodeType":"YulIf","src":"4227:120:28"},{"nodeType":"YulBlock","src":"4357:150:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4372:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4386:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4376:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4401:96:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4469:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4480:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4465:3:28"},"nodeType":"YulFunctionCall","src":"4465:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4489:7:28"}],"functionName":{"name":"abi_decode_t_contract$_IERC20Metadata_$276_fromMemory","nodeType":"YulIdentifier","src":"4411:53:28"},"nodeType":"YulFunctionCall","src":"4411:86:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4401:6:28"}]}]},{"nodeType":"YulBlock","src":"4517:149:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4532:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4546:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4536:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4562:94:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4628:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4639:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4624:3:28"},"nodeType":"YulFunctionCall","src":"4624:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4648:7:28"}],"functionName":{"name":"abi_decode_t_contract$_IEntryPoint_$3687_fromMemory","nodeType":"YulIdentifier","src":"4572:51:28"},"nodeType":"YulFunctionCall","src":"4572:84:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4562:6:28"}]}]},{"nodeType":"YulBlock","src":"4676:167:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4691:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4705:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4695:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4721:112:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4805:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4816:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4801:3:28"},"nodeType":"YulFunctionCall","src":"4801:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4825:7:28"}],"functionName":{"name":"abi_decode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4731:69:28"},"nodeType":"YulFunctionCall","src":"4731:102:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4721:6:28"}]}]},{"nodeType":"YulBlock","src":"4853:130:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4868:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4882:3:28","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4872:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4899:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4945:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4956:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4941:3:28"},"nodeType":"YulFunctionCall","src":"4941:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4965:7:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4909:31:28"},"nodeType":"YulFunctionCall","src":"4909:64:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4899:6:28"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20Metadata_$276t_contract$_IEntryPoint_$3687t_struct$_TokenPaymasterConfig_$4252_memory_ptrt_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4163:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4174:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4186:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4194:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4202:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4210:6:28","type":""}],"src":"4009:981:28"},{"body":{"nodeType":"YulBlock","src":"5061:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5078:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5101:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5083:17:28"},"nodeType":"YulFunctionCall","src":"5083:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5071:6:28"},"nodeType":"YulFunctionCall","src":"5071:37:28"},"nodeType":"YulExpressionStatement","src":"5071:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5049:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5056:3:28","type":""}],"src":"4996:118:28"},{"body":{"nodeType":"YulBlock","src":"5218:124:28","statements":[{"nodeType":"YulAssignment","src":"5228:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5240:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5251:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5236:3:28"},"nodeType":"YulFunctionCall","src":"5236:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5228:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5308:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5321:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5332:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5317:3:28"},"nodeType":"YulFunctionCall","src":"5317:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5264:43:28"},"nodeType":"YulFunctionCall","src":"5264:71:28"},"nodeType":"YulExpressionStatement","src":"5264:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5190:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5202:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5213:4:28","type":""}],"src":"5120:222:28"},{"body":{"nodeType":"YulBlock","src":"5376:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5393:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5396:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5386:6:28"},"nodeType":"YulFunctionCall","src":"5386:88:28"},"nodeType":"YulExpressionStatement","src":"5386:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5490:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5493:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5483:6:28"},"nodeType":"YulFunctionCall","src":"5483:15:28"},"nodeType":"YulExpressionStatement","src":"5483:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5514:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5517:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5507:6:28"},"nodeType":"YulFunctionCall","src":"5507:15:28"},"nodeType":"YulExpressionStatement","src":"5507:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5348:180:28"},{"body":{"nodeType":"YulBlock","src":"5582:362:28","statements":[{"nodeType":"YulAssignment","src":"5592:25:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5615:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5597:17:28"},"nodeType":"YulFunctionCall","src":"5597:20:28"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5592:1:28"}]},{"nodeType":"YulAssignment","src":"5626:25:28","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5649:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5631:17:28"},"nodeType":"YulFunctionCall","src":"5631:20:28"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5626:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"5660:28:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5683:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"5686:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5679:3:28"},"nodeType":"YulFunctionCall","src":"5679:9:28"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"5664:11:28","type":""}]},{"nodeType":"YulAssignment","src":"5697:41:28","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"5726:11:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5708:17:28"},"nodeType":"YulFunctionCall","src":"5708:30:28"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5697:7:28"}]},{"body":{"nodeType":"YulBlock","src":"5915:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5917:16:28"},"nodeType":"YulFunctionCall","src":"5917:18:28"},"nodeType":"YulExpressionStatement","src":"5917:18:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5848:1:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5841:6:28"},"nodeType":"YulFunctionCall","src":"5841:9:28"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5871:1:28"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"5878:7:28"},{"name":"x","nodeType":"YulIdentifier","src":"5887:1:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5874:3:28"},"nodeType":"YulFunctionCall","src":"5874:15:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5868:2:28"},"nodeType":"YulFunctionCall","src":"5868:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5821:2:28"},"nodeType":"YulFunctionCall","src":"5821:83:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5801:6:28"},"nodeType":"YulFunctionCall","src":"5801:113:28"},"nodeType":"YulIf","src":"5798:139:28"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5565:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"5568:1:28","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5574:7:28","type":""}],"src":"5534:410:28"},{"body":{"nodeType":"YulBlock","src":"6046:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6063:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"6068:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6056:6:28"},"nodeType":"YulFunctionCall","src":"6056:19:28"},"nodeType":"YulExpressionStatement","src":"6056:19:28"},{"nodeType":"YulAssignment","src":"6084:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6103:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6108:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6099:3:28"},"nodeType":"YulFunctionCall","src":"6099:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6084:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6018:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"6023:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6034:11:28","type":""}],"src":"5950:169:28"},{"body":{"nodeType":"YulBlock","src":"6231:70:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6253:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6261:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6249:3:28"},"nodeType":"YulFunctionCall","src":"6249:14:28"},{"hexValue":"54504d3a207072696365206d61726b757020746f6f2068696768","kind":"string","nodeType":"YulLiteral","src":"6265:28:28","type":"","value":"TPM: price markup too high"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6242:6:28"},"nodeType":"YulFunctionCall","src":"6242:52:28"},"nodeType":"YulExpressionStatement","src":"6242:52:28"}]},"name":"store_literal_in_memory_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6223:6:28","type":""}],"src":"6125:176:28"},{"body":{"nodeType":"YulBlock","src":"6453:220:28","statements":[{"nodeType":"YulAssignment","src":"6463:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6529:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6534:2:28","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6470:58:28"},"nodeType":"YulFunctionCall","src":"6470:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6463:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6635:3:28"}],"functionName":{"name":"store_literal_in_memory_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2","nodeType":"YulIdentifier","src":"6546:88:28"},"nodeType":"YulFunctionCall","src":"6546:93:28"},"nodeType":"YulExpressionStatement","src":"6546:93:28"},{"nodeType":"YulAssignment","src":"6648:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6659:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6664:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6655:3:28"},"nodeType":"YulFunctionCall","src":"6655:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6648:3:28"}]}]},"name":"abi_encode_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6441:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6449:3:28","type":""}],"src":"6307:366:28"},{"body":{"nodeType":"YulBlock","src":"6850:248:28","statements":[{"nodeType":"YulAssignment","src":"6860:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6872:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6883:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6868:3:28"},"nodeType":"YulFunctionCall","src":"6868:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6860:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6907:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6918:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6903:3:28"},"nodeType":"YulFunctionCall","src":"6903:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6926:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"6932:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6922:3:28"},"nodeType":"YulFunctionCall","src":"6922:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6896:6:28"},"nodeType":"YulFunctionCall","src":"6896:47:28"},"nodeType":"YulExpressionStatement","src":"6896:47:28"},{"nodeType":"YulAssignment","src":"6952:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7086:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6960:124:28"},"nodeType":"YulFunctionCall","src":"6960:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6952:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6830:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6845:4:28","type":""}],"src":"6679:419:28"},{"body":{"nodeType":"YulBlock","src":"7210:69:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7232:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7240:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7228:3:28"},"nodeType":"YulFunctionCall","src":"7228:14:28"},{"hexValue":"54504d3a207072696365206d61726b757020746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"7244:27:28","type":"","value":"TPM: price markup too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:28"},"nodeType":"YulFunctionCall","src":"7221:51:28"},"nodeType":"YulExpressionStatement","src":"7221:51:28"}]},"name":"store_literal_in_memory_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7202:6:28","type":""}],"src":"7104:175:28"},{"body":{"nodeType":"YulBlock","src":"7431:220:28","statements":[{"nodeType":"YulAssignment","src":"7441:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7507:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"7512:2:28","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7448:58:28"},"nodeType":"YulFunctionCall","src":"7448:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7441:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7613:3:28"}],"functionName":{"name":"store_literal_in_memory_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865","nodeType":"YulIdentifier","src":"7524:88:28"},"nodeType":"YulFunctionCall","src":"7524:93:28"},"nodeType":"YulExpressionStatement","src":"7524:93:28"},{"nodeType":"YulAssignment","src":"7626:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7637:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"7642:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7633:3:28"},"nodeType":"YulFunctionCall","src":"7633:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7626:3:28"}]}]},"name":"abi_encode_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7419:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7427:3:28","type":""}],"src":"7285:366:28"},{"body":{"nodeType":"YulBlock","src":"7828:248:28","statements":[{"nodeType":"YulAssignment","src":"7838:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7850:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7861:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7846:3:28"},"nodeType":"YulFunctionCall","src":"7846:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7838:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7885:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7896:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7881:3:28"},"nodeType":"YulFunctionCall","src":"7881:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7904:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"7910:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7900:3:28"},"nodeType":"YulFunctionCall","src":"7900:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7874:6:28"},"nodeType":"YulFunctionCall","src":"7874:47:28"},"nodeType":"YulExpressionStatement","src":"7874:47:28"},{"nodeType":"YulAssignment","src":"7930:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8064:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7938:124:28"},"nodeType":"YulFunctionCall","src":"7938:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7930:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7808:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7823:4:28","type":""}],"src":"7657:419:28"},{"body":{"nodeType":"YulBlock","src":"8137:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8154:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8177:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8159:17:28"},"nodeType":"YulFunctionCall","src":"8159:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8147:6:28"},"nodeType":"YulFunctionCall","src":"8147:37:28"},"nodeType":"YulExpressionStatement","src":"8147:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8125:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8132:3:28","type":""}],"src":"8082:108:28"},{"body":{"nodeType":"YulBlock","src":"8434:591:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8444:26:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8460:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"8465:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8456:3:28"},"nodeType":"YulFunctionCall","src":"8456:14:28"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"8448:4:28","type":""}]},{"nodeType":"YulBlock","src":"8480:171:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8522:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8552:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8559:4:28","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8548:3:28"},"nodeType":"YulFunctionCall","src":"8548:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8542:5:28"},"nodeType":"YulFunctionCall","src":"8542:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8526:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8612:12:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8630:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"8635:4:28","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:28"},"nodeType":"YulFunctionCall","src":"8626:14:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8578:33:28"},"nodeType":"YulFunctionCall","src":"8578:63:28"},"nodeType":"YulExpressionStatement","src":"8578:63:28"}]},{"nodeType":"YulBlock","src":"8661:176:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8708:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8738:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8745:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8734:3:28"},"nodeType":"YulFunctionCall","src":"8734:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8728:5:28"},"nodeType":"YulFunctionCall","src":"8728:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8712:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8798:12:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8816:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"8821:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8812:3:28"},"nodeType":"YulFunctionCall","src":"8812:14:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8764:33:28"},"nodeType":"YulFunctionCall","src":"8764:63:28"},"nodeType":"YulExpressionStatement","src":"8764:63:28"}]},{"nodeType":"YulBlock","src":"8847:171:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8889:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8919:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8926:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8915:3:28"},"nodeType":"YulFunctionCall","src":"8915:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8909:5:28"},"nodeType":"YulFunctionCall","src":"8909:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8893:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8979:12:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8997:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"9002:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8993:3:28"},"nodeType":"YulFunctionCall","src":"8993:14:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8945:33:28"},"nodeType":"YulFunctionCall","src":"8945:63:28"},"nodeType":"YulExpressionStatement","src":"8945:63:28"}]}]},"name":"abi_encode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8421:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8428:3:28","type":""}],"src":"8292:733:28"},{"body":{"nodeType":"YulBlock","src":"9205:200:28","statements":[{"nodeType":"YulAssignment","src":"9215:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9227:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9238:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9223:3:28"},"nodeType":"YulFunctionCall","src":"9223:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9215:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9371:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9384:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9395:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9380:3:28"},"nodeType":"YulFunctionCall","src":"9380:17:28"}],"functionName":{"name":"abi_encode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9251:119:28"},"nodeType":"YulFunctionCall","src":"9251:147:28"},"nodeType":"YulExpressionStatement","src":"9251:147:28"}]},"name":"abi_encode_tuple_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9177:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9189:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9200:4:28","type":""}],"src":"9031:374:28"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20Metadata_$276(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20Metadata_$276(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20Metadata_$276(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20Metadata_$276_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20Metadata_$276(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$3687(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$3687(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$3687(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$3687_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$3687(value)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct TokenPaymaster.TokenPaymasterConfig\n    function abi_decode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // priceMarkup\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // refundPostopCost\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // priceMaxAge\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20Metadata_$276t_contract$_IEntryPoint_$3687t_struct$_TokenPaymasterConfig_$4252_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20Metadata_$276_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IEntryPoint_$3687_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2(memPtr) {\n\n        mstore(add(memPtr, 0), \"TPM: price markup too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865(memPtr) {\n\n        mstore(add(memPtr, 0), \"TPM: price markup too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct TokenPaymaster.TokenPaymasterConfig -> struct TokenPaymaster.TokenPaymasterConfig\n    function abi_encode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // priceMarkup\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // refundPostopCost\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // priceMaxAge\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b5060405162002b4638038062002b468339818101604052810190620000379190620006f6565b8232600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ae5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a5919062000779565b60405180910390fd5b620000bf816200015c60201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000106826200022060201b60201c565b62000117816200034860201b60201c565b8373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505042600481905550505050506200097b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b62000230620003e160201b60201c565b6a52b7d2dcc80cd2e400000060026200024a9190620007c5565b8160000151111562000293576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028a9062000871565b60405180910390fd5b6a52b7d2dcc80cd2e400000081600001511015620002e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002df90620008e3565b60405180910390fd5b8060016000820151816000015560208201518160010155604082015181600201559050507f5ae532796eeeb25558550dab6b9aff6802247590213ad83ad7366b1557b1cbf0816040516200033d91906200095e565b60405180910390a150565b62000358620003e160201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620003cd5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620003c4919062000779565b60405180910390fd5b620003de816200015c60201b60201c565b50565b620003f16200048360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620004176200048b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200048157620004436200048360201b60201c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040162000478919062000779565b60405180910390fd5b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004f082620004c3565b9050919050565b60006200050482620004e3565b9050919050565b6200051681620004f7565b81146200052257600080fd5b50565b60008151905062000536816200050b565b92915050565b60006200054982620004e3565b9050919050565b6200055b816200053c565b81146200056757600080fd5b50565b6000815190506200057b8162000550565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005d18262000586565b810181811067ffffffffffffffff82111715620005f357620005f262000597565b5b80604052505050565b600062000608620004b4565b9050620006168282620005c6565b919050565b6000819050919050565b62000630816200061b565b81146200063c57600080fd5b50565b600081519050620006508162000625565b92915050565b6000606082840312156200066f576200066e62000581565b5b6200067b6060620005fc565b905060006200068d848285016200063f565b6000830152506020620006a3848285016200063f565b6020830152506040620006b9848285016200063f565b60408301525092915050565b620006d081620004e3565b8114620006dc57600080fd5b50565b600081519050620006f081620006c5565b92915050565b60008060008060c08587031215620007135762000712620004be565b5b6000620007238782880162000525565b945050602062000736878288016200056a565b9350506040620007498782880162000656565b92505060a06200075c87828801620006df565b91505092959194509250565b6200077381620004e3565b82525050565b600060208201905062000790600083018462000768565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007d2826200061b565b9150620007df836200061b565b9250828202620007ef816200061b565b9150828204841483151762000809576200080862000796565b5b5092915050565b600082825260208201905092915050565b7f54504d3a207072696365206d61726b757020746f6f2068696768000000000000600082015250565b600062000859601a8362000810565b9150620008668262000821565b602082019050919050565b600060208201905081810360008301526200088c816200084a565b9050919050565b7f54504d3a207072696365206d61726b757020746f6f206c6f7700000000000000600082015250565b6000620008cb60198362000810565b9150620008d88262000893565b602082019050919050565b60006020820190508181036000830152620008fe81620008bc565b9050919050565b62000910816200061b565b82525050565b6060820160008201516200092e600085018262000905565b50602082015162000943602085018262000905565b50604082015162000958604085018262000905565b50505050565b600060608201905062000975600083018462000916565b92915050565b60805160a051612158620009ee6000396000818161059e01528181610a1c01528181610d2601528181610d600152610f0201526000818161040201528181610499015281816105e401528181610726015281816107b001528181610840015281816108df0152610c0a01526121586000f3fe6080604052600436106101025760003560e01c8063b1a6cfec11610095578063d0e30db011610064578063d0e30db014610331578063e1d8153c1461033b578063f2fde38b14610366578063f465c77e1461038f578063fc0c546a146103cd57610157565b8063b1a6cfec1461029d578063bb9fe6bf146102c6578063c23a5cea146102dd578063c399ec881461030657610157565b80638da5cb5b116100d15780638da5cb5b146101f55780639e281a9814610220578063a9a2340914610249578063b0d691fe1461027257610157565b80630396cb601461015c578063205c287814610178578063715018a6146101a15780637c986aac146101b857610157565b36610157573373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258743460405161014d9190611315565b60405180910390a2005b600080fd5b61017660048036038101906101719190611380565b6103f8565b005b34801561018457600080fd5b5061019f600480360381019061019a9190611437565b61048f565b005b3480156101ad57600080fd5b506101b6610528565b005b3480156101c457600080fd5b506101df60048036038101906101da9190611477565b61053c565b6040516101ec9190611315565b60405180910390f35b34801561020157600080fd5b5061020a610568565b60405161021791906114d8565b60405180910390f35b34801561022c57600080fd5b506102476004803603810190610242919061151f565b610591565b005b34801561025557600080fd5b50610270600480360381019061026b91906115e9565b6105c8565b005b34801561027e57600080fd5b506102876105e2565b60405161029491906116bc565b60405180910390f35b3480156102a957600080fd5b506102c460048036038101906102bf91906117cc565b610606565b005b3480156102d257600080fd5b506102db61071c565b005b3480156102e957600080fd5b5061030460048036038101906102ff91906117f9565b6107a6565b005b34801561031257600080fd5b5061031b61083c565b6040516103289190611315565b60405180910390f35b6103396108dd565b005b34801561034757600080fd5b5061035061096b565b60405161035d9190611315565b60405180910390f35b34801561037257600080fd5b5061038d60048036038101906103889190611826565b610971565b005b34801561039b57600080fd5b506103b660048036038101906103b191906118ae565b6109f7565b6040516103c492919061199c565b60405180910390f35b3480156103d957600080fd5b506103e2610a1a565b6040516103ef91906119ed565b60405180910390f35b610400610a3e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b815260040161045a9190611a17565b6000604051808303818588803b15801561047357600080fd5b505af1158015610487573d6000803e3d6000fd5b505050505050565b610497610a3e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016104f2929190611a41565b600060405180830381600087803b15801561050c57600080fd5b505af1158015610520573d6000803e3d6000fd5b505050505050565b610530610a3e565b61053a6000610ac5565b565b6000816a52b7d2dcc80cd2e4000000846105569190611a99565b6105609190611b0a565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610599610a3e565b6105c47f00000000000000000000000000000000000000000000000000000000000000008383610b89565b5050565b6105d0610c08565b6105dc84848484610c98565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61060e610a3e565b6a52b7d2dcc80cd2e400000060026106269190611a99565b8160000151111561066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390611b98565b60405180910390fd5b6a52b7d2dcc80cd2e4000000816000015110156106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b590611c04565b60405180910390fd5b8060016000820151816000015560208201518160010155604082015181600201559050507f5ae532796eeeb25558550dab6b9aff6802247590213ad83ad7366b1557b1cbf0816040516107119190611c75565b60405180910390a150565b610724610a3e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561078c57600080fd5b505af11580156107a0573d6000803e3d6000fd5b50505050565b6107ae610a3e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b81526004016108079190611c90565b600060405180830381600087803b15801561082157600080fd5b505af1158015610835573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161089791906114d8565b602060405180830381865afa1580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190611cc0565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161093791906114d8565b6000604051808303818588803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b5050505050565b60045481565b610979610a3e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109eb5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109e291906114d8565b60405180910390fd5b6109f481610ac5565b50565b60606000610a03610c08565b610a0e858585610df4565b91509150935093915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a46610fa3565b73ffffffffffffffffffffffffffffffffffffffff16610a64610568565b73ffffffffffffffffffffffffffffffffffffffff1614610ac357610a87610fa3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610aba91906114d8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c03838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610bbc929190611ced565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fab565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8d90611d62565b60405180910390fd5b565b600060016000015490506000806000808787810190610cb79190611d82565b93509350935093506000610ccb8484611042565b90506000866a52b7d2dcc80cd2e400000067016345785d8a00000281610cf457610cf3611adb565b5b04905042600481905550600082600180015402890190506000610d17828461053c565b905080881115610d5357610d4e7f000000000000000000000000000000000000000000000000000000000000000086838b03610b89565b610d8b565b80881015610d8a57610d897f000000000000000000000000000000000000000000000000000000000000000086308b8503611071565b5b5b8473ffffffffffffffffffffffffffffffffffffffff167f46caa0511cf037f06f57a0bf273a2ff04229f5b12fb04675234a6cbe2e7f1a89828c67016345785d8a0000604051610ddd93929190611de9565b60405180910390a250505050505050505050505050565b606060008060016000015490506000601487806101200190610e169190611e2f565b90500390506000811480610e2a5750602081145b610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6090611ede565b60405180910390fd5b60008760e00135600180015402860190506000836a52b7d2dcc80cd2e400000067016345785d8a00000281610ea157610ea0611adb565b5b04905060208303610eef57600089806101200190610ebf9190611e2f565b601490603492610ed193929190611f08565b90610edc9190611f5b565b60001c905081811015610eed578091505b505b6000610efb838361053c565b9050610f3b7f00000000000000000000000000000000000000000000000000000000000000008b6000016020810190610f349190611826565b3084611071565b808a60e001358b61010001358c6000016020810190610f5a9190611826565b604051602001610f6d9493929190611fba565b6040516020818303038152906040529650610f9460006001600201546004540160006110f3565b95505050505050935093915050565b600033905090565b6000610fd6828473ffffffffffffffffffffffffffffffffffffffff1661112c90919063ffffffff16565b90506000815114158015610ffb575080806020019051810190610ff99190612037565b155b1561103d57826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161103491906114d8565b60405180910390fd5b505050565b60008183036110535782905061106b565b6110688348846110639190612064565b611142565b90505b92915050565b6110ed848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016110a693929190612098565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fab565b50505050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b8561111b57600061111e565b60015b60ff16171790509392505050565b606061113a8383600061115b565b905092915050565b60008183106111515781611153565b825b905092915050565b6060814710156111a257306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161119991906114d8565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516111cb919061210b565b60006040518083038185875af1925050503d8060008114611208576040519150601f19603f3d011682016040523d82523d6000602084013e61120d565b606091505b509150915061121d868383611228565b925050509392505050565b60608261123d57611238826112b7565b6112af565b60008251148015611265575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156112a757836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161129e91906114d8565b60405180910390fd5b8190506112b0565b5b9392505050565b6000815111156112ca5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b61130f816112fc565b82525050565b600060208201905061132a6000830184611306565b92915050565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b61135d81611344565b811461136857600080fd5b50565b60008135905061137a81611354565b92915050565b6000602082840312156113965761139561133a565b5b60006113a48482850161136b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113d8826113ad565b9050919050565b6113e8816113cd565b81146113f357600080fd5b50565b600081359050611405816113df565b92915050565b611414816112fc565b811461141f57600080fd5b50565b6000813590506114318161140b565b92915050565b6000806040838503121561144e5761144d61133a565b5b600061145c858286016113f6565b925050602061146d85828601611422565b9150509250929050565b6000806040838503121561148e5761148d61133a565b5b600061149c85828601611422565b92505060206114ad85828601611422565b9150509250929050565b60006114c2826113ad565b9050919050565b6114d2816114b7565b82525050565b60006020820190506114ed60008301846114c9565b92915050565b6114fc816114b7565b811461150757600080fd5b50565b600081359050611519816114f3565b92915050565b600080604083850312156115365761153561133a565b5b60006115448582860161150a565b925050602061155585828601611422565b9150509250929050565b6003811061156c57600080fd5b50565b60008135905061157e8161155f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126115a9576115a8611584565b5b8235905067ffffffffffffffff8111156115c6576115c5611589565b5b6020830191508360018202830111156115e2576115e161158e565b5b9250929050565b600080600080606085870312156116035761160261133a565b5b60006116118782880161156f565b945050602085013567ffffffffffffffff8111156116325761163161133f565b5b61163e87828801611593565b9350935050604061165187828801611422565b91505092959194509250565b6000819050919050565b600061168261167d611678846113ad565b61165d565b6113ad565b9050919050565b600061169482611667565b9050919050565b60006116a682611689565b9050919050565b6116b68161169b565b82525050565b60006020820190506116d160008301846116ad565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611725826116dc565b810181811067ffffffffffffffff82111715611744576117436116ed565b5b80604052505050565b6000611757611330565b9050611763828261171c565b919050565b60006060828403121561177e5761177d6116d7565b5b611788606061174d565b9050600061179884828501611422565b60008301525060206117ac84828501611422565b60208301525060406117c084828501611422565b60408301525092915050565b6000606082840312156117e2576117e161133a565b5b60006117f084828501611768565b91505092915050565b60006020828403121561180f5761180e61133a565b5b600061181d848285016113f6565b91505092915050565b60006020828403121561183c5761183b61133a565b5b600061184a8482850161150a565b91505092915050565b600080fd5b6000610160828403121561186f5761186e611853565b5b81905092915050565b6000819050919050565b61188b81611878565b811461189657600080fd5b50565b6000813590506118a881611882565b92915050565b6000806000606084860312156118c7576118c661133a565b5b600084013567ffffffffffffffff8111156118e5576118e461133f565b5b6118f186828701611858565b935050602061190286828701611899565b925050604061191386828701611422565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561195757808201518184015260208101905061193c565b60008484015250505050565b600061196e8261191d565b6119788185611928565b9350611988818560208601611939565b611991816116dc565b840191505092915050565b600060408201905081810360008301526119b68185611963565b90506119c56020830184611306565b9392505050565b60006119d782611689565b9050919050565b6119e7816119cc565b82525050565b6000602082019050611a0260008301846119de565b92915050565b611a1181611344565b82525050565b6000602082019050611a2c6000830184611a08565b92915050565b611a3b816113cd565b82525050565b6000604082019050611a566000830185611a32565b611a636020830184611306565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611aa4826112fc565b9150611aaf836112fc565b9250828202611abd816112fc565b91508282048414831517611ad457611ad3611a6a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b15826112fc565b9150611b20836112fc565b925082611b3057611b2f611adb565b5b828204905092915050565b600082825260208201905092915050565b7f54504d3a207072696365206d61726b757020746f6f2068696768000000000000600082015250565b6000611b82601a83611b3b565b9150611b8d82611b4c565b602082019050919050565b60006020820190508181036000830152611bb181611b75565b9050919050565b7f54504d3a207072696365206d61726b757020746f6f206c6f7700000000000000600082015250565b6000611bee601983611b3b565b9150611bf982611bb8565b602082019050919050565b60006020820190508181036000830152611c1d81611be1565b9050919050565b611c2d816112fc565b82525050565b606082016000820151611c496000850182611c24565b506020820151611c5c6020850182611c24565b506040820151611c6f6040850182611c24565b50505050565b6000606082019050611c8a6000830184611c33565b92915050565b6000602082019050611ca56000830184611a32565b92915050565b600081519050611cba8161140b565b92915050565b600060208284031215611cd657611cd561133a565b5b6000611ce484828501611cab565b91505092915050565b6000604082019050611d0260008301856114c9565b611d0f6020830184611306565b9392505050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b6000611d4c601583611b3b565b9150611d5782611d16565b602082019050919050565b60006020820190508181036000830152611d7b81611d3f565b9050919050565b60008060008060808587031215611d9c57611d9b61133a565b5b6000611daa87828801611422565b9450506020611dbb87828801611422565b9350506040611dcc87828801611422565b9250506060611ddd878288016113f6565b91505092959194509250565b6000606082019050611dfe6000830186611306565b611e0b6020830185611306565b611e186040830184611306565b949350505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611e4c57611e4b611e20565b5b80840192508235915067ffffffffffffffff821115611e6e57611e6d611e25565b5b602083019250600182023603831315611e8a57611e89611e2a565b5b509250929050565b7f54504d3a20696e76616c69642064617461206c656e6774680000000000000000600082015250565b6000611ec8601883611b3b565b9150611ed382611e92565b602082019050919050565b60006020820190508181036000830152611ef781611ebb565b9050919050565b600080fd5b600080fd5b60008085851115611f1c57611f1b611efe565b5b83861115611f2d57611f2c611f03565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b6000611f678383611f43565b82611f728135611878565b92506020821015611fb257611fad7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611f4e565b831692505b505092915050565b6000608082019050611fcf6000830187611306565b611fdc6020830186611306565b611fe96040830185611306565b611ff660608301846114c9565b95945050505050565b60008115159050919050565b61201481611fff565b811461201f57600080fd5b50565b6000815190506120318161200b565b92915050565b60006020828403121561204d5761204c61133a565b5b600061205b84828501612022565b91505092915050565b600061206f826112fc565b915061207a836112fc565b925082820190508082111561209257612091611a6a565b5b92915050565b60006060820190506120ad60008301866114c9565b6120ba60208301856114c9565b6120c76040830184611306565b949350505050565b600081905092915050565b60006120e58261191d565b6120ef81856120cf565b93506120ff818560208601611939565b80840191505092915050565b600061211782846120da565b91508190509291505056fea2646970667358221220184f3e92fde3dc09c789811b96387e488b85ff43add4cf6d0b8ec9a17a3716c164736f6c63430008140033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2B46 CODESIZE SUB DUP1 PUSH3 0x2B46 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x6F6 JUMP JUMPDEST DUP3 ORIGIN PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBF DUP2 PUSH3 0x15C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x106 DUP3 PUSH3 0x220 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x117 DUP2 PUSH3 0x348 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x97B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x230 PUSH3 0x3E1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x2 PUSH3 0x24A SWAP2 SWAP1 PUSH3 0x7C5 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH3 0x293 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x28A SWAP1 PUSH3 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH3 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2DF SWAP1 PUSH3 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH32 0x5AE532796EEEB25558550DAB6B9AFF6802247590213AD83AD7366B1557B1CBF0 DUP2 PUSH1 0x40 MLOAD PUSH3 0x33D SWAP2 SWAP1 PUSH3 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH3 0x358 PUSH3 0x3E1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3CD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3C4 SWAP2 SWAP1 PUSH3 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3DE DUP2 PUSH3 0x15C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x3F1 PUSH3 0x483 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x417 PUSH3 0x48B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x481 JUMPI PUSH3 0x443 PUSH3 0x483 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x478 SWAP2 SWAP1 PUSH3 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4F0 DUP3 PUSH3 0x4C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x504 DUP3 PUSH3 0x4E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x516 DUP2 PUSH3 0x4F7 JUMP JUMPDEST DUP2 EQ PUSH3 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x536 DUP2 PUSH3 0x50B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x549 DUP3 PUSH3 0x4E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x55B DUP2 PUSH3 0x53C JUMP JUMPDEST DUP2 EQ PUSH3 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x57B DUP2 PUSH3 0x550 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x5D1 DUP3 PUSH3 0x586 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5F3 JUMPI PUSH3 0x5F2 PUSH3 0x597 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x608 PUSH3 0x4B4 JUMP JUMPDEST SWAP1 POP PUSH3 0x616 DUP3 DUP3 PUSH3 0x5C6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x630 DUP2 PUSH3 0x61B JUMP JUMPDEST DUP2 EQ PUSH3 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x650 DUP2 PUSH3 0x625 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x66F JUMPI PUSH3 0x66E PUSH3 0x581 JUMP JUMPDEST JUMPDEST PUSH3 0x67B PUSH1 0x60 PUSH3 0x5FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x68D DUP5 DUP3 DUP6 ADD PUSH3 0x63F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH3 0x6A3 DUP5 DUP3 DUP6 ADD PUSH3 0x63F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH3 0x6B9 DUP5 DUP3 DUP6 ADD PUSH3 0x63F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6D0 DUP2 PUSH3 0x4E3 JUMP JUMPDEST DUP2 EQ PUSH3 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x6F0 DUP2 PUSH3 0x6C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x713 JUMPI PUSH3 0x712 PUSH3 0x4BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x723 DUP8 DUP3 DUP9 ADD PUSH3 0x525 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x736 DUP8 DUP3 DUP9 ADD PUSH3 0x56A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x749 DUP8 DUP3 DUP9 ADD PUSH3 0x656 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x75C DUP8 DUP3 DUP9 ADD PUSH3 0x6DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x773 DUP2 PUSH3 0x4E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x790 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x768 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x7D2 DUP3 PUSH3 0x61B JUMP JUMPDEST SWAP2 POP PUSH3 0x7DF DUP4 PUSH3 0x61B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x7EF DUP2 PUSH3 0x61B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x809 JUMPI PUSH3 0x808 PUSH3 0x796 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54504D3A207072696365206D61726B757020746F6F2068696768000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x859 PUSH1 0x1A DUP4 PUSH3 0x810 JUMP JUMPDEST SWAP2 POP PUSH3 0x866 DUP3 PUSH3 0x821 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x88C DUP2 PUSH3 0x84A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54504D3A207072696365206D61726B757020746F6F206C6F7700000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8CB PUSH1 0x19 DUP4 PUSH3 0x810 JUMP JUMPDEST SWAP2 POP PUSH3 0x8D8 DUP3 PUSH3 0x893 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x8FE DUP2 PUSH3 0x8BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x910 DUP2 PUSH3 0x61B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH3 0x92E PUSH1 0x0 DUP6 ADD DUP3 PUSH3 0x905 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH3 0x943 PUSH1 0x20 DUP6 ADD DUP3 PUSH3 0x905 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH3 0x958 PUSH1 0x40 DUP6 ADD DUP3 PUSH3 0x905 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x975 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x916 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2158 PUSH3 0x9EE PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x59E ADD MSTORE DUP2 DUP2 PUSH2 0xA1C ADD MSTORE DUP2 DUP2 PUSH2 0xD26 ADD MSTORE DUP2 DUP2 PUSH2 0xD60 ADD MSTORE PUSH2 0xF02 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x402 ADD MSTORE DUP2 DUP2 PUSH2 0x499 ADD MSTORE DUP2 DUP2 PUSH2 0x5E4 ADD MSTORE DUP2 DUP2 PUSH2 0x726 ADD MSTORE DUP2 DUP2 PUSH2 0x7B0 ADD MSTORE DUP2 DUP2 PUSH2 0x840 ADD MSTORE DUP2 DUP2 PUSH2 0x8DF ADD MSTORE PUSH2 0xC0A ADD MSTORE PUSH2 0x2158 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1A6CFEC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xE1D8153C EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3CD JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0xB1A6CFEC EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x306 JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x272 JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x7C986AAC EQ PUSH2 0x1B8 JUMPI PUSH2 0x157 JUMP JUMPDEST CALLDATASIZE PUSH2 0x157 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x528 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x151F JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0x606 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x71C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x83C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x8DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP3 SWAP2 SWAP1 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH2 0xA3E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA3E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F2 SWAP3 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x520 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x530 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x53A PUSH1 0x0 PUSH2 0xAC5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH11 0x52B7D2DCC80CD2E4000000 DUP5 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x599 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x5C4 PUSH32 0x0 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5D0 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x5DC DUP5 DUP5 DUP5 DUP5 PUSH2 0xC98 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x60E PUSH2 0xA3E JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x2 PUSH2 0x626 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x663 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH32 0x5AE532796EEEB25558550DAB6B9AFF6802247590213AD83AD7366B1557B1CBF0 DUP2 PUSH1 0x40 MLOAD PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x724 PUSH2 0xA3E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7AE PUSH2 0xA3E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x835 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x964 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x979 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F4 DUP2 PUSH2 0xAC5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA03 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0xA0E DUP6 DUP6 DUP6 PUSH2 0xDF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xA46 PUSH2 0xFA3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA64 PUSH2 0x568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAC3 JUMPI PUSH2 0xA87 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC03 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBBC SWAP3 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8D SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 DUP8 DUP2 ADD SWAP1 PUSH2 0xCB7 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH2 0xCCB DUP5 DUP5 PUSH2 0x1042 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH8 0x16345785D8A0000 MUL DUP2 PUSH2 0xCF4 JUMPI PUSH2 0xCF3 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST DIV SWAP1 POP TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 DUP1 ADD SLOAD MUL DUP10 ADD SWAP1 POP PUSH1 0x0 PUSH2 0xD17 DUP3 DUP5 PUSH2 0x53C JUMP JUMPDEST SWAP1 POP DUP1 DUP9 GT ISZERO PUSH2 0xD53 JUMPI PUSH2 0xD4E PUSH32 0x0 DUP7 DUP4 DUP12 SUB PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST DUP1 DUP9 LT ISZERO PUSH2 0xD8A JUMPI PUSH2 0xD89 PUSH32 0x0 DUP7 ADDRESS DUP12 DUP6 SUB PUSH2 0x1071 JUMP JUMPDEST JUMPDEST JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x46CAA0511CF037F06F57A0BF273A2FF04229F5B12FB04675234A6CBE2E7F1A89 DUP3 DUP13 PUSH8 0x16345785D8A0000 PUSH1 0x40 MLOAD PUSH2 0xDDD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x14 DUP8 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0xE16 SWAP2 SWAP1 PUSH2 0x1E2F JUMP JUMPDEST SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0xE2A JUMPI POP PUSH1 0x20 DUP2 EQ JUMPDEST PUSH2 0xE69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE60 SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 PUSH1 0xE0 ADD CALLDATALOAD PUSH1 0x1 DUP1 ADD SLOAD MUL DUP7 ADD SWAP1 POP PUSH1 0x0 DUP4 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH8 0x16345785D8A0000 MUL DUP2 PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST DIV SWAP1 POP PUSH1 0x20 DUP4 SUB PUSH2 0xEEF JUMPI PUSH1 0x0 DUP10 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x14 SWAP1 PUSH1 0x34 SWAP3 PUSH2 0xED1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F08 JUMP JUMPDEST SWAP1 PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1F5B JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEED JUMPI DUP1 SWAP2 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0xEFB DUP4 DUP4 PUSH2 0x53C JUMP JUMPDEST SWAP1 POP PUSH2 0xF3B PUSH32 0x0 DUP12 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST ADDRESS DUP5 PUSH2 0x1071 JUMP JUMPDEST DUP1 DUP11 PUSH1 0xE0 ADD CALLDATALOAD DUP12 PUSH2 0x100 ADD CALLDATALOAD DUP13 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF6D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP PUSH2 0xF94 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 ADD SLOAD PUSH1 0x4 SLOAD ADD PUSH1 0x0 PUSH2 0x10F3 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD6 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x112C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xFFB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFF9 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x103D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SUB PUSH2 0x1053 JUMPI DUP3 SWAP1 POP PUSH2 0x106B JUMP JUMPDEST PUSH2 0x1068 DUP4 BASEFEE DUP5 PUSH2 0x1063 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x1142 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10ED DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD0 DUP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL PUSH1 0xA0 DUP5 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL DUP6 PUSH2 0x111B JUMPI PUSH1 0x0 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND OR OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x113A DUP4 DUP4 PUSH1 0x0 PUSH2 0x115B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1151 JUMPI DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x11A2 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x11CB SWAP2 SWAP1 PUSH2 0x210B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x120D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x121D DUP7 DUP4 DUP4 PUSH2 0x1228 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x123D JUMPI PUSH2 0x1238 DUP3 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1265 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x12A7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x12B0 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x12CA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130F DUP2 PUSH2 0x12FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135D DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP2 EQ PUSH2 0x1368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x137A DUP2 PUSH2 0x1354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1396 JUMPI PUSH2 0x1395 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13A4 DUP5 DUP3 DUP6 ADD PUSH2 0x136B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D8 DUP3 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E8 DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP2 EQ PUSH2 0x13F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1405 DUP2 PUSH2 0x13DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1414 DUP2 PUSH2 0x12FC JUMP JUMPDEST DUP2 EQ PUSH2 0x141F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1431 DUP2 PUSH2 0x140B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144E JUMPI PUSH2 0x144D PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x145C DUP6 DUP3 DUP7 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x146D DUP6 DUP3 DUP7 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148D PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149C DUP6 DUP3 DUP7 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14AD DUP6 DUP3 DUP7 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C2 DUP3 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D2 DUP2 PUSH2 0x14B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14FC DUP2 PUSH2 0x14B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1519 DUP2 PUSH2 0x14F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1536 JUMPI PUSH2 0x1535 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1544 DUP6 DUP3 DUP7 ADD PUSH2 0x150A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1555 DUP6 DUP3 DUP7 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x156C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x157E DUP2 PUSH2 0x155F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15A9 JUMPI PUSH2 0x15A8 PUSH2 0x1584 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C6 JUMPI PUSH2 0x15C5 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x158E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1603 JUMPI PUSH2 0x1602 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1611 DUP8 DUP3 DUP9 ADD PUSH2 0x156F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x133F JUMP JUMPDEST JUMPDEST PUSH2 0x163E DUP8 DUP3 DUP9 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x1651 DUP8 DUP3 DUP9 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1682 PUSH2 0x167D PUSH2 0x1678 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x165D JUMP JUMPDEST PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1694 DUP3 PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A6 DUP3 PUSH2 0x1689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B6 DUP2 PUSH2 0x169B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1725 DUP3 PUSH2 0x16DC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1757 PUSH2 0x1330 JUMP JUMPDEST SWAP1 POP PUSH2 0x1763 DUP3 DUP3 PUSH2 0x171C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177E JUMPI PUSH2 0x177D PUSH2 0x16D7 JUMP JUMPDEST JUMPDEST PUSH2 0x1788 PUSH1 0x60 PUSH2 0x174D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1798 DUP5 DUP3 DUP6 ADD PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x17AC DUP5 DUP3 DUP6 ADD PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x17C0 DUP5 DUP3 DUP6 ADD PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F0 DUP5 DUP3 DUP6 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181D DUP5 DUP3 DUP6 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183C JUMPI PUSH2 0x183B PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x184A DUP5 DUP3 DUP6 ADD PUSH2 0x150A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186F JUMPI PUSH2 0x186E PUSH2 0x1853 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188B DUP2 PUSH2 0x1878 JUMP JUMPDEST DUP2 EQ PUSH2 0x1896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18A8 DUP2 PUSH2 0x1882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18C7 JUMPI PUSH2 0x18C6 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x133F JUMP JUMPDEST JUMPDEST PUSH2 0x18F1 DUP7 DUP3 DUP8 ADD PUSH2 0x1858 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1902 DUP7 DUP3 DUP8 ADD PUSH2 0x1899 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1913 DUP7 DUP3 DUP8 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1957 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x193C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196E DUP3 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x1978 DUP2 DUP6 PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP PUSH2 0x1988 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x1991 DUP2 PUSH2 0x16DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19B6 DUP2 DUP6 PUSH2 0x1963 JUMP JUMPDEST SWAP1 POP PUSH2 0x19C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D7 DUP3 PUSH2 0x1689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E7 DUP2 PUSH2 0x19CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A02 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A11 DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A3B DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A56 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A32 JUMP JUMPDEST PUSH2 0x1A63 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AA4 DUP3 PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAF DUP4 PUSH2 0x12FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1ABD DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1AD4 JUMPI PUSH2 0x1AD3 PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B15 DUP3 PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1B20 DUP4 PUSH2 0x12FC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B30 JUMPI PUSH2 0x1B2F PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54504D3A207072696365206D61726B757020746F6F2068696768000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B82 PUSH1 0x1A DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8D DUP3 PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB1 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54504D3A207072696365206D61726B757020746F6F206C6F7700000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEE PUSH1 0x19 DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF9 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1D DUP2 PUSH2 0x1BE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2D DUP2 PUSH2 0x12FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1C49 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1C24 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1C5C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1C24 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1C6F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1C24 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CBA DUP2 PUSH2 0x140B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD6 JUMPI PUSH2 0x1CD5 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE4 DUP5 DUP3 DUP6 ADD PUSH2 0x1CAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D02 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x1D0F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4C PUSH1 0x15 DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D57 DUP3 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D7B DUP2 PUSH2 0x1D3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D9C JUMPI PUSH2 0x1D9B PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DAA DUP8 DUP3 DUP9 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1DBB DUP8 DUP3 DUP9 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1DCC DUP8 DUP3 DUP9 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1DDD DUP8 DUP3 DUP9 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DFE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1E0B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1E18 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1E4C JUMPI PUSH2 0x1E4B PUSH2 0x1E20 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E6E JUMPI PUSH2 0x1E6D PUSH2 0x1E25 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1E8A JUMPI PUSH2 0x1E89 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x54504D3A20696E76616C69642064617461206C656E6774680000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC8 PUSH1 0x18 DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED3 DUP3 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF7 DUP2 PUSH2 0x1EBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x1EFE JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x1F2D JUMPI PUSH2 0x1F2C PUSH2 0x1F03 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F67 DUP4 DUP4 PUSH2 0x1F43 JUMP JUMPDEST DUP3 PUSH2 0x1F72 DUP2 CALLDATALOAD PUSH2 0x1878 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x1FB2 JUMPI PUSH2 0x1FAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x1F4E JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FCF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1FDC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1FE9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1FF6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14C9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2014 DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP2 EQ PUSH2 0x201F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2031 DUP2 PUSH2 0x200B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204D JUMPI PUSH2 0x204C PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x205B DUP5 DUP3 DUP6 ADD PUSH2 0x2022 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206F DUP3 PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP PUSH2 0x207A DUP4 PUSH2 0x12FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2092 JUMPI PUSH2 0x2091 PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20AD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x20BA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x20C7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E5 DUP3 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x20EF DUP2 DUP6 PUSH2 0x20CF JUMP JUMPDEST SWAP4 POP PUSH2 0x20FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1939 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2117 DUP3 DUP5 PUSH2 0x20DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x4F RETURNDATACOPY SWAP3 REVERT 0xE3 0xDC MULMOD 0xC7 DUP10 DUP2 SHL SWAP7 CODESIZE PUSH31 0x488B85FF43ADD4CF6D0B8EC9A17A3716C164736F6C63430008140033000000 ","sourceMap":"1458:8972:27:-:0;;;2947:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3142:11;579:9:17;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;614:11:17::1;601:24;;;;;;;;::::0;::::1;534:99:::0;3177:46:27::1;3201:21;3177:23;;;:46;;:::i;:::-;3234:25;3252:6;3234:17;;;:25;;:::i;:::-;3278:6;3270:14;;;;;;;;::::0;::::1;3318:15;3295:20;:38;;;;2947:394:::0;;;;1458:8972;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3485:443:27:-;1531:13:0;:11;;;:13;;:::i;:::-;2580:4:27::1;3658:1;:21;;;;:::i;:::-;3621;:33;;;:58;;3613:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2580:4;3729:21;:33;;;:54;;3721:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;3847:21;3824:20;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;3884:36;3898:21;3884:36;;;;;;:::i;:::-;;;;;;;;3485:443:::0;:::o;2543:215:0:-;1531:13;:11;;;:13;;:::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;;;:28;;:::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;7:75:28:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:118::-;627:7;656:24;674:5;656:24;:::i;:::-;645:35;;568:118;;;:::o;692:166::-;787:46;827:5;787:46;:::i;:::-;780:5;777:57;767:85;;848:1;845;838:12;767:85;692:166;:::o;864:187::-;943:5;974:6;968:13;959:22;;990:55;1039:5;990:55;:::i;:::-;864:187;;;;:::o;1057:116::-;1114:7;1143:24;1161:5;1143:24;:::i;:::-;1132:35;;1057:116;;;:::o;1179:162::-;1272:44;1310:5;1272:44;:::i;:::-;1265:5;1262:55;1252:83;;1331:1;1328;1321:12;1252:83;1179:162;:::o;1347:183::-;1424:5;1455:6;1449:13;1440:22;;1471:53;1518:5;1471:53;:::i;:::-;1347:183;;;;:::o;1536:117::-;1645:1;1642;1635:12;1659:102;1700:6;1751:2;1747:7;1742:2;1735:5;1731:14;1727:28;1717:38;;1659:102;;;:::o;1767:180::-;1815:77;1812:1;1805:88;1912:4;1909:1;1902:15;1936:4;1933:1;1926:15;1953:281;2036:27;2058:4;2036:27;:::i;:::-;2028:6;2024:40;2166:6;2154:10;2151:22;2130:18;2118:10;2115:34;2112:62;2109:88;;;2177:18;;:::i;:::-;2109:88;2217:10;2213:2;2206:22;1996:238;1953:281;;:::o;2240:129::-;2274:6;2301:20;;:::i;:::-;2291:30;;2330:33;2358:4;2350:6;2330:33;:::i;:::-;2240:129;;;:::o;2498:77::-;2535:7;2564:5;2553:16;;2498:77;;;:::o;2581:122::-;2654:24;2672:5;2654:24;:::i;:::-;2647:5;2644:35;2634:63;;2693:1;2690;2683:12;2634:63;2581:122;:::o;2709:143::-;2766:5;2797:6;2791:13;2782:22;;2813:33;2840:5;2813:33;:::i;:::-;2709:143;;;;:::o;2908:818::-;3006:5;3050:4;3038:9;3033:3;3029:19;3025:30;3022:117;;;3058:79;;:::i;:::-;3022:117;3157:21;3173:4;3157:21;:::i;:::-;3148:30;;3244:1;3284:60;3340:3;3331:6;3320:9;3316:22;3284:60;:::i;:::-;3277:4;3270:5;3266:16;3259:86;3188:168;3427:2;3468:60;3524:3;3515:6;3504:9;3500:22;3468:60;:::i;:::-;3461:4;3454:5;3450:16;3443:86;3366:174;3606:2;3647:60;3703:3;3694:6;3683:9;3679:22;3647:60;:::i;:::-;3640:4;3633:5;3629:16;3622:86;3550:169;2908:818;;;;:::o;3732:122::-;3805:24;3823:5;3805:24;:::i;:::-;3798:5;3795:35;3785:63;;3844:1;3841;3834:12;3785:63;3732:122;:::o;3860:143::-;3917:5;3948:6;3942:13;3933:22;;3964:33;3991:5;3964:33;:::i;:::-;3860:143;;;;:::o;4009:981::-;4186:6;4194;4202;4210;4259:3;4247:9;4238:7;4234:23;4230:33;4227:120;;;4266:79;;:::i;:::-;4227:120;4386:1;4411:86;4489:7;4480:6;4469:9;4465:22;4411:86;:::i;:::-;4401:96;;4357:150;4546:2;4572:84;4648:7;4639:6;4628:9;4624:22;4572:84;:::i;:::-;4562:94;;4517:149;4705:2;4731:102;4825:7;4816:6;4805:9;4801:22;4731:102;:::i;:::-;4721:112;;4676:167;4882:3;4909:64;4965:7;4956:6;4945:9;4941:22;4909:64;:::i;:::-;4899:74;;4853:130;4009:981;;;;;;;:::o;4996:118::-;5083:24;5101:5;5083:24;:::i;:::-;5078:3;5071:37;4996:118;;:::o;5120:222::-;5213:4;5251:2;5240:9;5236:18;5228:26;;5264:71;5332:1;5321:9;5317:17;5308:6;5264:71;:::i;:::-;5120:222;;;;:::o;5348:180::-;5396:77;5393:1;5386:88;5493:4;5490:1;5483:15;5517:4;5514:1;5507:15;5534:410;5574:7;5597:20;5615:1;5597:20;:::i;:::-;5592:25;;5631:20;5649:1;5631:20;:::i;:::-;5626:25;;5686:1;5683;5679:9;5708:30;5726:11;5708:30;:::i;:::-;5697:41;;5887:1;5878:7;5874:15;5871:1;5868:22;5848:1;5841:9;5821:83;5798:139;;5917:18;;:::i;:::-;5798:139;5582:362;5534:410;;;;:::o;5950:169::-;6034:11;6068:6;6063:3;6056:19;6108:4;6103:3;6099:14;6084:29;;5950:169;;;;:::o;6125:176::-;6265:28;6261:1;6253:6;6249:14;6242:52;6125:176;:::o;6307:366::-;6449:3;6470:67;6534:2;6529:3;6470:67;:::i;:::-;6463:74;;6546:93;6635:3;6546:93;:::i;:::-;6664:2;6659:3;6655:12;6648:19;;6307:366;;;:::o;6679:419::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6932:9;6926:4;6922:20;6918:1;6907:9;6903:17;6896:47;6960:131;7086:4;6960:131;:::i;:::-;6952:139;;6679:419;;;:::o;7104:175::-;7244:27;7240:1;7232:6;7228:14;7221:51;7104:175;:::o;7285:366::-;7427:3;7448:67;7512:2;7507:3;7448:67;:::i;:::-;7441:74;;7524:93;7613:3;7524:93;:::i;:::-;7642:2;7637:3;7633:12;7626:19;;7285:366;;;:::o;7657:419::-;7823:4;7861:2;7850:9;7846:18;7838:26;;7910:9;7904:4;7900:20;7896:1;7885:9;7881:17;7874:47;7938:131;8064:4;7938:131;:::i;:::-;7930:139;;7657:419;;;:::o;8082:108::-;8159:24;8177:5;8159:24;:::i;:::-;8154:3;8147:37;8082:108;;:::o;8292:733::-;8465:4;8460:3;8456:14;8559:4;8552:5;8548:16;8542:23;8578:63;8635:4;8630:3;8626:14;8612:12;8578:63;:::i;:::-;8480:171;8745:4;8738:5;8734:16;8728:23;8764:63;8821:4;8816:3;8812:14;8798:12;8764:63;:::i;:::-;8661:176;8926:4;8919:5;8915:16;8909:23;8945:63;9002:4;8997:3;8993:14;8979:12;8945:63;:::i;:::-;8847:171;8434:591;8292:733;;:::o;9031:374::-;9200:4;9238:2;9227:9;9223:18;9215:26;;9251:147;9395:1;9384:9;9380:17;9371:6;9251:147;:::i;:::-;9031:374;;;;:::o;1458:8972:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_4708":{"entryPoint":null,"id":4708,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_552":{"entryPoint":4011,"id":552,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2622,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_867":{"entryPoint":4003,"id":867,"parameterSlots":0,"returnSlots":1},"@_packValidationData_3489":{"entryPoint":4339,"id":3489,"parameterSlots":3,"returnSlots":1},"@_postOp_4636":{"entryPoint":3224,"id":4636,"parameterSlots":4,"returnSlots":0},"@_requireFromEntryPoint_3257":{"entryPoint":3080,"id":3257,"parameterSlots":0,"returnSlots":0},"@_revert_854":{"entryPoint":4791,"id":854,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2757,"id":146,"parameterSlots":1,"returnSlots":0},"@_validatePaymasterUserOp_4518":{"entryPoint":3572,"id":4518,"parameterSlots":3,"returnSlots":2},"@addStake_3199":{"entryPoint":1016,"id":3199,"parameterSlots":1,"returnSlots":0},"@cachedPriceTimestamp_4288":{"entryPoint":2411,"id":4288,"parameterSlots":0,"returnSlots":0},"@deposit_3163":{"entryPoint":2269,"id":3163,"parameterSlots":0,"returnSlots":0},"@entryPoint_3047":{"entryPoint":1506,"id":3047,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_722":{"entryPoint":4443,"id":722,"parameterSlots":3,"returnSlots":1},"@functionCall_676":{"entryPoint":4396,"id":676,"parameterSlots":2,"returnSlots":1},"@getDeposit_3214":{"entryPoint":2108,"id":3214,"parameterSlots":0,"returnSlots":1},"@getGasPrice_4661":{"entryPoint":4162,"id":4661,"parameterSlots":2,"returnSlots":1},"@min_4697":{"entryPoint":4418,"id":4697,"parameterSlots":2,"returnSlots":1},"@owner_67":{"entryPoint":1384,"id":67,"parameterSlots":0,"returnSlots":1},"@postOp_3125":{"entryPoint":1480,"id":3125,"parameterSlots":4,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1320,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_389":{"entryPoint":4209,"id":389,"parameterSlots":4,"returnSlots":0},"@safeTransfer_362":{"entryPoint":2953,"id":362,"parameterSlots":3,"returnSlots":0},"@setTokenPaymasterConfig_4366":{"entryPoint":1542,"id":4366,"parameterSlots":1,"returnSlots":0},"@token_4295":{"entryPoint":2586,"id":4295,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2417,"id":126,"parameterSlots":1,"returnSlots":0},"@unlockStake_3226":{"entryPoint":1820,"id":3226,"parameterSlots":0,"returnSlots":0},"@validatePaymasterUserOp_3088":{"entryPoint":2551,"id":3088,"parameterSlots":3,"returnSlots":2},"@verifyCallResultFromTarget_814":{"entryPoint":4648,"id":814,"parameterSlots":3,"returnSlots":1},"@weiToToken_4382":{"entryPoint":1340,"id":4382,"parameterSlots":2,"returnSlots":1},"@withdrawStake_3241":{"entryPoint":1958,"id":3241,"parameterSlots":1,"returnSlots":0},"@withdrawTo_3181":{"entryPoint":1167,"id":3181,"parameterSlots":2,"returnSlots":0},"@withdrawToken_4680":{"entryPoint":1425,"id":4680,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":5386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":5110,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":8226,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":6297,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":5523,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_enum$_PostOpMode_$3743":{"entryPoint":5487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr":{"entryPoint":5992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_UserOperation_$3900_calldata_ptr":{"entryPoint":6232,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5154,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7339,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":4971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":6137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":5175,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5407,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":8247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_PostOpMode_$3743t_bytes_calldata_ptrt_uint256":{"entryPoint":5609,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_struct$_TokenPaymasterConfig_$4252_memory_ptr":{"entryPoint":6092,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_UserOperation_$3900_calldata_ptrt_bytes32t_uint256":{"entryPoint":6318,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":5239,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256t_address_payable":{"entryPoint":7554,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint32":{"entryPoint":4992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":6706,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5321,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8410,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack":{"entryPoint":6622,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IEntryPoint_$3687_to_t_address_fromStack":{"entryPoint":5805,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2_to_t_string_memory_ptr_fromStack":{"entryPoint":7029,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack":{"entryPoint":7487,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537_to_t_string_memory_ptr_fromStack":{"entryPoint":7867,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865_to_t_string_memory_ptr_fromStack":{"entryPoint":7137,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromStack":{"entryPoint":7219,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":7204,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4870,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":6664,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5336,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":7312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":6721,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":8344,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7405,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":6556,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$250__to_t_address__fromStack_reversed":{"entryPoint":6637,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$3687__to_t_address__fromStack_reversed":{"entryPoint":5820,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7064,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7522,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7902,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7172,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__fromStack_reversed":{"entryPoint":7285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7657,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":8122,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":6679,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":7727,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":5965,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4912,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_calldata_ptr":{"entryPoint":8003,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6429,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":6440,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8399,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6971,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":7944,"id":null,"parameterSlots":4,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":8292,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6922,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6809,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5303,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":5069,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8191,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6264,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5037,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4860,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":4932,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32":{"entryPoint":8027,"id":null,"parameterSlots":2,"returnSlots":1},"convert_t_contract$_IERC20_$250_to_t_address":{"entryPoint":6604,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IEntryPoint_$3687_to_t_address":{"entryPoint":5787,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":5769,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":5735,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6457,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":5916,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":5725,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6762,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6875,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5869,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5513,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5508,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":7717,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":6227,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":5847,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":7712,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":7939,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":7934,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5518,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":7722,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4927,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4922,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5852,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":8014,"id":null,"parameterSlots":2,"returnSlots":1},"store_literal_in_memory_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2":{"entryPoint":6988,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9":{"entryPoint":7446,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537":{"entryPoint":7826,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865":{"entryPoint":7096,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5363,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":5087,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8203,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":6274,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_PostOpMode_$3743":{"entryPoint":5471,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5131,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":4948,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:28909:28","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:28","statements":[{"nodeType":"YulAssignment","src":"62:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:28","type":""}],"src":"7:77:28"},{"body":{"nodeType":"YulBlock","src":"155:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:28"},"nodeType":"YulFunctionCall","src":"177:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:28"},"nodeType":"YulFunctionCall","src":"165:37:28"},"nodeType":"YulExpressionStatement","src":"165:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:28","type":""}],"src":"90:118:28"},{"body":{"nodeType":"YulBlock","src":"312:124:28","statements":[{"nodeType":"YulAssignment","src":"322:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:28"},"nodeType":"YulFunctionCall","src":"330:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:28"},"nodeType":"YulFunctionCall","src":"411:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:28"},"nodeType":"YulFunctionCall","src":"358:71:28"},"nodeType":"YulExpressionStatement","src":"358:71:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:28","type":""}],"src":"214:222:28"},{"body":{"nodeType":"YulBlock","src":"482:35:28","statements":[{"nodeType":"YulAssignment","src":"492:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:28"},"nodeType":"YulFunctionCall","src":"502:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:28","type":""}],"src":"442:75:28"},{"body":{"nodeType":"YulBlock","src":"612:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:28"},"nodeType":"YulFunctionCall","src":"622:12:28"},"nodeType":"YulExpressionStatement","src":"622:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:28"},{"body":{"nodeType":"YulBlock","src":"735:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:28"},"nodeType":"YulFunctionCall","src":"745:12:28"},"nodeType":"YulExpressionStatement","src":"745:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:28"},{"body":{"nodeType":"YulBlock","src":"813:49:28","statements":[{"nodeType":"YulAssignment","src":"823:33:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"838:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"845:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"834:3:28"},"nodeType":"YulFunctionCall","src":"834:22:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"823:7:28"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"795:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"805:7:28","type":""}],"src":"769:93:28"},{"body":{"nodeType":"YulBlock","src":"910:78:28","statements":[{"body":{"nodeType":"YulBlock","src":"966:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"975:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"978:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"968:6:28"},"nodeType":"YulFunctionCall","src":"968:12:28"},"nodeType":"YulExpressionStatement","src":"968:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"933:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"957:5:28"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"940:16:28"},"nodeType":"YulFunctionCall","src":"940:23:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"930:2:28"},"nodeType":"YulFunctionCall","src":"930:34:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"923:6:28"},"nodeType":"YulFunctionCall","src":"923:42:28"},"nodeType":"YulIf","src":"920:62:28"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"903:5:28","type":""}],"src":"868:120:28"},{"body":{"nodeType":"YulBlock","src":"1045:86:28","statements":[{"nodeType":"YulAssignment","src":"1055:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1077:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1064:12:28"},"nodeType":"YulFunctionCall","src":"1064:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1055:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1119:5:28"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1093:25:28"},"nodeType":"YulFunctionCall","src":"1093:32:28"},"nodeType":"YulExpressionStatement","src":"1093:32:28"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1023:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1031:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1039:5:28","type":""}],"src":"994:137:28"},{"body":{"nodeType":"YulBlock","src":"1202:262:28","statements":[{"body":{"nodeType":"YulBlock","src":"1248:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1250:77:28"},"nodeType":"YulFunctionCall","src":"1250:79:28"},"nodeType":"YulExpressionStatement","src":"1250:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1223:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1232:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1219:3:28"},"nodeType":"YulFunctionCall","src":"1219:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1244:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1215:3:28"},"nodeType":"YulFunctionCall","src":"1215:32:28"},"nodeType":"YulIf","src":"1212:119:28"},{"nodeType":"YulBlock","src":"1341:116:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1356:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1370:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1360:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1385:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1419:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1430:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1415:3:28"},"nodeType":"YulFunctionCall","src":"1415:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:28"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1395:19:28"},"nodeType":"YulFunctionCall","src":"1395:52:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1385:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1172:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1183:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1195:6:28","type":""}],"src":"1137:327:28"},{"body":{"nodeType":"YulBlock","src":"1515:81:28","statements":[{"nodeType":"YulAssignment","src":"1525:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1540:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1547:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:28"},"nodeType":"YulFunctionCall","src":"1536:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1525:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1497:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1507:7:28","type":""}],"src":"1470:126:28"},{"body":{"nodeType":"YulBlock","src":"1655:51:28","statements":[{"nodeType":"YulAssignment","src":"1665:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1694:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1676:17:28"},"nodeType":"YulFunctionCall","src":"1676:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1665:7:28"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1647:7:28","type":""}],"src":"1602:104:28"},{"body":{"nodeType":"YulBlock","src":"1763:87:28","statements":[{"body":{"nodeType":"YulBlock","src":"1828:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1837:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1840:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1830:6:28"},"nodeType":"YulFunctionCall","src":"1830:12:28"},"nodeType":"YulExpressionStatement","src":"1830:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1786:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1819:5:28"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"1793:25:28"},"nodeType":"YulFunctionCall","src":"1793:32:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1783:2:28"},"nodeType":"YulFunctionCall","src":"1783:43:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1776:6:28"},"nodeType":"YulFunctionCall","src":"1776:51:28"},"nodeType":"YulIf","src":"1773:71:28"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1756:5:28","type":""}],"src":"1712:138:28"},{"body":{"nodeType":"YulBlock","src":"1916:95:28","statements":[{"nodeType":"YulAssignment","src":"1926:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1948:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1935:12:28"},"nodeType":"YulFunctionCall","src":"1935:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1926:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1999:5:28"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"1964:34:28"},"nodeType":"YulFunctionCall","src":"1964:41:28"},"nodeType":"YulExpressionStatement","src":"1964:41:28"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1894:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1902:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1910:5:28","type":""}],"src":"1856:155:28"},{"body":{"nodeType":"YulBlock","src":"2060:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"2117:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2126:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2129:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2119:6:28"},"nodeType":"YulFunctionCall","src":"2119:12:28"},"nodeType":"YulExpressionStatement","src":"2119:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2083:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2108:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2090:17:28"},"nodeType":"YulFunctionCall","src":"2090:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2080:2:28"},"nodeType":"YulFunctionCall","src":"2080:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2073:6:28"},"nodeType":"YulFunctionCall","src":"2073:43:28"},"nodeType":"YulIf","src":"2070:63:28"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2053:5:28","type":""}],"src":"2017:122:28"},{"body":{"nodeType":"YulBlock","src":"2197:87:28","statements":[{"nodeType":"YulAssignment","src":"2207:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2229:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2216:12:28"},"nodeType":"YulFunctionCall","src":"2216:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2207:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2272:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2245:26:28"},"nodeType":"YulFunctionCall","src":"2245:33:28"},"nodeType":"YulExpressionStatement","src":"2245:33:28"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2175:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2183:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2191:5:28","type":""}],"src":"2145:139:28"},{"body":{"nodeType":"YulBlock","src":"2381:399:28","statements":[{"body":{"nodeType":"YulBlock","src":"2427:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2429:77:28"},"nodeType":"YulFunctionCall","src":"2429:79:28"},"nodeType":"YulExpressionStatement","src":"2429:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2402:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2411:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2398:3:28"},"nodeType":"YulFunctionCall","src":"2398:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2423:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2394:3:28"},"nodeType":"YulFunctionCall","src":"2394:32:28"},"nodeType":"YulIf","src":"2391:119:28"},{"nodeType":"YulBlock","src":"2520:125:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2535:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2549:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2539:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2564:71:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2607:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2618:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:28"},"nodeType":"YulFunctionCall","src":"2603:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2627:7:28"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"2574:28:28"},"nodeType":"YulFunctionCall","src":"2574:61:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2564:6:28"}]}]},{"nodeType":"YulBlock","src":"2655:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2670:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2684:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2674:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2700:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:28"},"nodeType":"YulFunctionCall","src":"2731:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2710:20:28"},"nodeType":"YulFunctionCall","src":"2710:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2700:6:28"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2343:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2354:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2366:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2374:6:28","type":""}],"src":"2290:490:28"},{"body":{"nodeType":"YulBlock","src":"2869:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"2915:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2917:77:28"},"nodeType":"YulFunctionCall","src":"2917:79:28"},"nodeType":"YulExpressionStatement","src":"2917:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2890:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2899:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2886:3:28"},"nodeType":"YulFunctionCall","src":"2886:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2911:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2882:3:28"},"nodeType":"YulFunctionCall","src":"2882:32:28"},"nodeType":"YulIf","src":"2879:119:28"},{"nodeType":"YulBlock","src":"3008:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3023:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3037:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3027:6:28","type":""}]},{"nodeType":"YulAssignment","src":"3052:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3087:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3098:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3083:3:28"},"nodeType":"YulFunctionCall","src":"3083:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3107:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3062:20:28"},"nodeType":"YulFunctionCall","src":"3062:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3052:6:28"}]}]},{"nodeType":"YulBlock","src":"3135:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3150:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3164:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3154:6:28","type":""}]},{"nodeType":"YulAssignment","src":"3180:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3215:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3226:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3211:3:28"},"nodeType":"YulFunctionCall","src":"3211:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3235:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3190:20:28"},"nodeType":"YulFunctionCall","src":"3190:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3180:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2831:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2842:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2854:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2862:6:28","type":""}],"src":"2786:474:28"},{"body":{"nodeType":"YulBlock","src":"3311:51:28","statements":[{"nodeType":"YulAssignment","src":"3321:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3350:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3332:17:28"},"nodeType":"YulFunctionCall","src":"3332:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3321:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3293:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3303:7:28","type":""}],"src":"3266:96:28"},{"body":{"nodeType":"YulBlock","src":"3433:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3450:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3473:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3455:17:28"},"nodeType":"YulFunctionCall","src":"3455:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3443:6:28"},"nodeType":"YulFunctionCall","src":"3443:37:28"},"nodeType":"YulExpressionStatement","src":"3443:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3421:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3428:3:28","type":""}],"src":"3368:118:28"},{"body":{"nodeType":"YulBlock","src":"3590:124:28","statements":[{"nodeType":"YulAssignment","src":"3600:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3612:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3623:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3608:3:28"},"nodeType":"YulFunctionCall","src":"3608:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3600:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3680:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3693:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3704:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3689:3:28"},"nodeType":"YulFunctionCall","src":"3689:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3636:43:28"},"nodeType":"YulFunctionCall","src":"3636:71:28"},"nodeType":"YulExpressionStatement","src":"3636:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3562:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3574:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3585:4:28","type":""}],"src":"3492:222:28"},{"body":{"nodeType":"YulBlock","src":"3763:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"3820:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3829:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3832:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3822:6:28"},"nodeType":"YulFunctionCall","src":"3822:12:28"},"nodeType":"YulExpressionStatement","src":"3822:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3786:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3811:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3793:17:28"},"nodeType":"YulFunctionCall","src":"3793:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3783:2:28"},"nodeType":"YulFunctionCall","src":"3783:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3776:6:28"},"nodeType":"YulFunctionCall","src":"3776:43:28"},"nodeType":"YulIf","src":"3773:63:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3756:5:28","type":""}],"src":"3720:122:28"},{"body":{"nodeType":"YulBlock","src":"3900:87:28","statements":[{"nodeType":"YulAssignment","src":"3910:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3932:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3919:12:28"},"nodeType":"YulFunctionCall","src":"3919:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3910:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3975:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3948:26:28"},"nodeType":"YulFunctionCall","src":"3948:33:28"},"nodeType":"YulExpressionStatement","src":"3948:33:28"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3878:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"3886:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3894:5:28","type":""}],"src":"3848:139:28"},{"body":{"nodeType":"YulBlock","src":"4076:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"4122:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4124:77:28"},"nodeType":"YulFunctionCall","src":"4124:79:28"},"nodeType":"YulExpressionStatement","src":"4124:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4097:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4106:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4093:3:28"},"nodeType":"YulFunctionCall","src":"4093:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4118:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4089:3:28"},"nodeType":"YulFunctionCall","src":"4089:32:28"},"nodeType":"YulIf","src":"4086:119:28"},{"nodeType":"YulBlock","src":"4215:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4230:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4244:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4234:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4259:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4294:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4305:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4290:3:28"},"nodeType":"YulFunctionCall","src":"4290:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4314:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4269:20:28"},"nodeType":"YulFunctionCall","src":"4269:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4259:6:28"}]}]},{"nodeType":"YulBlock","src":"4342:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4357:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4371:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4361:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4387:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4422:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4433:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4418:3:28"},"nodeType":"YulFunctionCall","src":"4418:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4442:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4397:20:28"},"nodeType":"YulFunctionCall","src":"4397:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4387:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4038:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4049:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4061:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4069:6:28","type":""}],"src":"3993:474:28"},{"body":{"nodeType":"YulBlock","src":"4531:56:28","statements":[{"body":{"nodeType":"YulBlock","src":"4565:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4574:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4577:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4567:6:28"},"nodeType":"YulFunctionCall","src":"4567:12:28"},"nodeType":"YulExpressionStatement","src":"4567:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4554:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"4561:1:28","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4551:2:28"},"nodeType":"YulFunctionCall","src":"4551:12:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4544:6:28"},"nodeType":"YulFunctionCall","src":"4544:20:28"},"nodeType":"YulIf","src":"4541:40:28"}]},"name":"validator_revert_t_enum$_PostOpMode_$3743","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4524:5:28","type":""}],"src":"4473:114:28"},{"body":{"nodeType":"YulBlock","src":"4660:102:28","statements":[{"nodeType":"YulAssignment","src":"4670:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4692:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4679:12:28"},"nodeType":"YulFunctionCall","src":"4679:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4670:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4750:5:28"}],"functionName":{"name":"validator_revert_t_enum$_PostOpMode_$3743","nodeType":"YulIdentifier","src":"4708:41:28"},"nodeType":"YulFunctionCall","src":"4708:48:28"},"nodeType":"YulExpressionStatement","src":"4708:48:28"}]},"name":"abi_decode_t_enum$_PostOpMode_$3743","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4638:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"4646:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4654:5:28","type":""}],"src":"4593:169:28"},{"body":{"nodeType":"YulBlock","src":"4857:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4874:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4877:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4867:6:28"},"nodeType":"YulFunctionCall","src":"4867:12:28"},"nodeType":"YulExpressionStatement","src":"4867:12:28"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4768:117:28"},{"body":{"nodeType":"YulBlock","src":"4980:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4997:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5000:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4990:6:28"},"nodeType":"YulFunctionCall","src":"4990:12:28"},"nodeType":"YulExpressionStatement","src":"4990:12:28"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"4891:117:28"},{"body":{"nodeType":"YulBlock","src":"5103:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5120:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5123:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5113:6:28"},"nodeType":"YulFunctionCall","src":"5113:12:28"},"nodeType":"YulExpressionStatement","src":"5113:12:28"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5014:117:28"},{"body":{"nodeType":"YulBlock","src":"5224:478:28","statements":[{"body":{"nodeType":"YulBlock","src":"5273:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5275:77:28"},"nodeType":"YulFunctionCall","src":"5275:79:28"},"nodeType":"YulExpressionStatement","src":"5275:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5252:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5260:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5248:3:28"},"nodeType":"YulFunctionCall","src":"5248:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"5267:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5244:3:28"},"nodeType":"YulFunctionCall","src":"5244:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5237:6:28"},"nodeType":"YulFunctionCall","src":"5237:35:28"},"nodeType":"YulIf","src":"5234:122:28"},{"nodeType":"YulAssignment","src":"5365:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5388:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5375:12:28"},"nodeType":"YulFunctionCall","src":"5375:20:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5365:6:28"}]},{"body":{"nodeType":"YulBlock","src":"5438:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"5440:77:28"},"nodeType":"YulFunctionCall","src":"5440:79:28"},"nodeType":"YulExpressionStatement","src":"5440:79:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5410:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5418:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5407:2:28"},"nodeType":"YulFunctionCall","src":"5407:30:28"},"nodeType":"YulIf","src":"5404:117:28"},{"nodeType":"YulAssignment","src":"5530:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5546:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5554:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5542:3:28"},"nodeType":"YulFunctionCall","src":"5542:17:28"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"5530:8:28"}]},{"body":{"nodeType":"YulBlock","src":"5613:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5615:77:28"},"nodeType":"YulFunctionCall","src":"5615:79:28"},"nodeType":"YulExpressionStatement","src":"5615:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"5578:8:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5592:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5600:4:28","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5588:3:28"},"nodeType":"YulFunctionCall","src":"5588:17:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5574:3:28"},"nodeType":"YulFunctionCall","src":"5574:32:28"},{"name":"end","nodeType":"YulIdentifier","src":"5608:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5571:2:28"},"nodeType":"YulFunctionCall","src":"5571:41:28"},"nodeType":"YulIf","src":"5568:128:28"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5191:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"5199:3:28","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"5207:8:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"5217:6:28","type":""}],"src":"5150:552:28"},{"body":{"nodeType":"YulBlock","src":"5842:713:28","statements":[{"body":{"nodeType":"YulBlock","src":"5888:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5890:77:28"},"nodeType":"YulFunctionCall","src":"5890:79:28"},"nodeType":"YulExpressionStatement","src":"5890:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5863:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5872:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5859:3:28"},"nodeType":"YulFunctionCall","src":"5859:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5884:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5855:3:28"},"nodeType":"YulFunctionCall","src":"5855:32:28"},"nodeType":"YulIf","src":"5852:119:28"},{"nodeType":"YulBlock","src":"5981:132:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5996:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6010:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6000:6:28","type":""}]},{"nodeType":"YulAssignment","src":"6025:78:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6075:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"6086:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6071:3:28"},"nodeType":"YulFunctionCall","src":"6071:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6095:7:28"}],"functionName":{"name":"abi_decode_t_enum$_PostOpMode_$3743","nodeType":"YulIdentifier","src":"6035:35:28"},"nodeType":"YulFunctionCall","src":"6035:68:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6025:6:28"}]}]},{"nodeType":"YulBlock","src":"6123:297:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6138:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6169:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6180:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6165:3:28"},"nodeType":"YulFunctionCall","src":"6165:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6152:12:28"},"nodeType":"YulFunctionCall","src":"6152:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6142:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6231:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6233:77:28"},"nodeType":"YulFunctionCall","src":"6233:79:28"},"nodeType":"YulExpressionStatement","src":"6233:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6203:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6211:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6200:2:28"},"nodeType":"YulFunctionCall","src":"6200:30:28"},"nodeType":"YulIf","src":"6197:117:28"},{"nodeType":"YulAssignment","src":"6328:82:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6382:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"6393:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6378:3:28"},"nodeType":"YulFunctionCall","src":"6378:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6402:7:28"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"6346:31:28"},"nodeType":"YulFunctionCall","src":"6346:64:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6328:6:28"},{"name":"value2","nodeType":"YulIdentifier","src":"6336:6:28"}]}]},{"nodeType":"YulBlock","src":"6430:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6445:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6459:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6449:6:28","type":""}]},{"nodeType":"YulAssignment","src":"6475:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6510:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"6521:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6506:3:28"},"nodeType":"YulFunctionCall","src":"6506:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6530:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6485:20:28"},"nodeType":"YulFunctionCall","src":"6485:53:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6475:6:28"}]}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$3743t_bytes_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5788:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5799:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5811:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5819:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5827:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5835:6:28","type":""}],"src":"5708:847:28"},{"body":{"nodeType":"YulBlock","src":"6593:28:28","statements":[{"nodeType":"YulAssignment","src":"6603:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"6610:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6603:3:28"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6579:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6589:3:28","type":""}],"src":"6561:60:28"},{"body":{"nodeType":"YulBlock","src":"6687:82:28","statements":[{"nodeType":"YulAssignment","src":"6697:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6755:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6737:17:28"},"nodeType":"YulFunctionCall","src":"6737:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"6728:8:28"},"nodeType":"YulFunctionCall","src":"6728:34:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6710:17:28"},"nodeType":"YulFunctionCall","src":"6710:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6697:9:28"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6667:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6677:9:28","type":""}],"src":"6627:142:28"},{"body":{"nodeType":"YulBlock","src":"6835:66:28","statements":[{"nodeType":"YulAssignment","src":"6845:50:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6889:5:28"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"6858:30:28"},"nodeType":"YulFunctionCall","src":"6858:37:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6845:9:28"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6815:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6825:9:28","type":""}],"src":"6775:126:28"},{"body":{"nodeType":"YulBlock","src":"6987:66:28","statements":[{"nodeType":"YulAssignment","src":"6997:50:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7041:5:28"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"7010:30:28"},"nodeType":"YulFunctionCall","src":"7010:37:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6997:9:28"}]}]},"name":"convert_t_contract$_IEntryPoint_$3687_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6967:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6977:9:28","type":""}],"src":"6907:146:28"},{"body":{"nodeType":"YulBlock","src":"7144:86:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7161:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7217:5:28"}],"functionName":{"name":"convert_t_contract$_IEntryPoint_$3687_to_t_address","nodeType":"YulIdentifier","src":"7166:50:28"},"nodeType":"YulFunctionCall","src":"7166:57:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7154:6:28"},"nodeType":"YulFunctionCall","src":"7154:70:28"},"nodeType":"YulExpressionStatement","src":"7154:70:28"}]},"name":"abi_encode_t_contract$_IEntryPoint_$3687_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7132:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7139:3:28","type":""}],"src":"7059:171:28"},{"body":{"nodeType":"YulBlock","src":"7354:144:28","statements":[{"nodeType":"YulAssignment","src":"7364:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7376:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7387:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7372:3:28"},"nodeType":"YulFunctionCall","src":"7372:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7364:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7464:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7477:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7488:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7473:3:28"},"nodeType":"YulFunctionCall","src":"7473:17:28"}],"functionName":{"name":"abi_encode_t_contract$_IEntryPoint_$3687_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7400:63:28"},"nodeType":"YulFunctionCall","src":"7400:91:28"},"nodeType":"YulExpressionStatement","src":"7400:91:28"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$3687__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7326:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7338:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7349:4:28","type":""}],"src":"7236:262:28"},{"body":{"nodeType":"YulBlock","src":"7593:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7610:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7613:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7603:6:28"},"nodeType":"YulFunctionCall","src":"7603:12:28"},"nodeType":"YulExpressionStatement","src":"7603:12:28"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"7504:117:28"},{"body":{"nodeType":"YulBlock","src":"7675:54:28","statements":[{"nodeType":"YulAssignment","src":"7685:38:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7703:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"7710:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7699:3:28"},"nodeType":"YulFunctionCall","src":"7699:14:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7719:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7715:3:28"},"nodeType":"YulFunctionCall","src":"7715:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7695:3:28"},"nodeType":"YulFunctionCall","src":"7695:28:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7685:6:28"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7658:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7668:6:28","type":""}],"src":"7627:102:28"},{"body":{"nodeType":"YulBlock","src":"7763:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7780:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7783:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7773:6:28"},"nodeType":"YulFunctionCall","src":"7773:88:28"},"nodeType":"YulExpressionStatement","src":"7773:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7877:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7880:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7870:6:28"},"nodeType":"YulFunctionCall","src":"7870:15:28"},"nodeType":"YulExpressionStatement","src":"7870:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7901:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7894:6:28"},"nodeType":"YulFunctionCall","src":"7894:15:28"},"nodeType":"YulExpressionStatement","src":"7894:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7735:180:28"},{"body":{"nodeType":"YulBlock","src":"7964:238:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7974:58:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7996:6:28"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8026:4:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8004:21:28"},"nodeType":"YulFunctionCall","src":"8004:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7992:3:28"},"nodeType":"YulFunctionCall","src":"7992:40:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7978:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8143:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8145:16:28"},"nodeType":"YulFunctionCall","src":"8145:18:28"},"nodeType":"YulExpressionStatement","src":"8145:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8086:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"8098:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8083:2:28"},"nodeType":"YulFunctionCall","src":"8083:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8122:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8134:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8119:2:28"},"nodeType":"YulFunctionCall","src":"8119:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8080:2:28"},"nodeType":"YulFunctionCall","src":"8080:62:28"},"nodeType":"YulIf","src":"8077:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8181:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8185:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8174:6:28"},"nodeType":"YulFunctionCall","src":"8174:22:28"},"nodeType":"YulExpressionStatement","src":"8174:22:28"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7950:6:28","type":""},{"name":"size","nodeType":"YulTypedName","src":"7958:4:28","type":""}],"src":"7921:281:28"},{"body":{"nodeType":"YulBlock","src":"8249:88:28","statements":[{"nodeType":"YulAssignment","src":"8259:30:28","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8269:18:28"},"nodeType":"YulFunctionCall","src":"8269:20:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8259:6:28"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8318:6:28"},{"name":"size","nodeType":"YulIdentifier","src":"8326:4:28"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8298:19:28"},"nodeType":"YulFunctionCall","src":"8298:33:28"},"nodeType":"YulExpressionStatement","src":"8298:33:28"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8233:4:28","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8242:6:28","type":""}],"src":"8208:129:28"},{"body":{"nodeType":"YulBlock","src":"8432:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8449:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8452:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8442:6:28"},"nodeType":"YulFunctionCall","src":"8442:12:28"},"nodeType":"YulExpressionStatement","src":"8442:12:28"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"8343:117:28"},{"body":{"nodeType":"YulBlock","src":"8609:681:28","statements":[{"body":{"nodeType":"YulBlock","src":"8653:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"8655:77:28"},"nodeType":"YulFunctionCall","src":"8655:79:28"},"nodeType":"YulExpressionStatement","src":"8655:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"8630:3:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"8635:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8626:3:28"},"nodeType":"YulFunctionCall","src":"8626:19:28"},{"kind":"number","nodeType":"YulLiteral","src":"8647:4:28","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8622:3:28"},"nodeType":"YulFunctionCall","src":"8622:30:28"},"nodeType":"YulIf","src":"8619:117:28"},{"nodeType":"YulAssignment","src":"8745:30:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8770:4:28","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8754:15:28"},"nodeType":"YulFunctionCall","src":"8754:21:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8745:5:28"}]},{"nodeType":"YulBlock","src":"8785:157:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8827:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8841:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8831:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8867:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8874:4:28","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8863:3:28"},"nodeType":"YulFunctionCall","src":"8863:16:28"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8906:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"8917:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8902:3:28"},"nodeType":"YulFunctionCall","src":"8902:22:28"},{"name":"end","nodeType":"YulIdentifier","src":"8926:3:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8881:20:28"},"nodeType":"YulFunctionCall","src":"8881:49:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8856:6:28"},"nodeType":"YulFunctionCall","src":"8856:75:28"},"nodeType":"YulExpressionStatement","src":"8856:75:28"}]},{"nodeType":"YulBlock","src":"8952:163:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8999:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9013:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9003:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9040:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"9047:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9036:3:28"},"nodeType":"YulFunctionCall","src":"9036:16:28"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9079:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9090:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9075:3:28"},"nodeType":"YulFunctionCall","src":"9075:22:28"},{"name":"end","nodeType":"YulIdentifier","src":"9099:3:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9054:20:28"},"nodeType":"YulFunctionCall","src":"9054:49:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9029:6:28"},"nodeType":"YulFunctionCall","src":"9029:75:28"},"nodeType":"YulExpressionStatement","src":"9029:75:28"}]},{"nodeType":"YulBlock","src":"9125:158:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9167:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9181:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9171:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9208:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"9215:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9204:3:28"},"nodeType":"YulFunctionCall","src":"9204:16:28"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9247:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9258:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:28"},"nodeType":"YulFunctionCall","src":"9243:22:28"},{"name":"end","nodeType":"YulIdentifier","src":"9267:3:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9222:20:28"},"nodeType":"YulFunctionCall","src":"9222:49:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9197:6:28"},"nodeType":"YulFunctionCall","src":"9197:75:28"},"nodeType":"YulExpressionStatement","src":"9197:75:28"}]}]},"name":"abi_decode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8584:9:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"8595:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8603:5:28","type":""}],"src":"8516:774:28"},{"body":{"nodeType":"YulBlock","src":"9400:301:28","statements":[{"body":{"nodeType":"YulBlock","src":"9446:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9448:77:28"},"nodeType":"YulFunctionCall","src":"9448:79:28"},"nodeType":"YulExpressionStatement","src":"9448:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9421:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9417:3:28"},"nodeType":"YulFunctionCall","src":"9417:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"9442:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9413:3:28"},"nodeType":"YulFunctionCall","src":"9413:32:28"},"nodeType":"YulIf","src":"9410:119:28"},{"nodeType":"YulBlock","src":"9539:155:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9554:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9568:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9558:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9583:101:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9656:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9667:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9652:3:28"},"nodeType":"YulFunctionCall","src":"9652:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9676:7:28"}],"functionName":{"name":"abi_decode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr","nodeType":"YulIdentifier","src":"9593:58:28"},"nodeType":"YulFunctionCall","src":"9593:91:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9583:6:28"}]}]}]},"name":"abi_decode_tuple_t_struct$_TokenPaymasterConfig_$4252_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9370:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9381:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9393:6:28","type":""}],"src":"9296:405:28"},{"body":{"nodeType":"YulBlock","src":"9781:271:28","statements":[{"body":{"nodeType":"YulBlock","src":"9827:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9829:77:28"},"nodeType":"YulFunctionCall","src":"9829:79:28"},"nodeType":"YulExpressionStatement","src":"9829:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9802:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"9811:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9798:3:28"},"nodeType":"YulFunctionCall","src":"9798:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"9823:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9794:3:28"},"nodeType":"YulFunctionCall","src":"9794:32:28"},"nodeType":"YulIf","src":"9791:119:28"},{"nodeType":"YulBlock","src":"9920:125:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9935:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9949:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9939:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9964:71:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10007:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"10018:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10003:3:28"},"nodeType":"YulFunctionCall","src":"10003:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10027:7:28"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"9974:28:28"},"nodeType":"YulFunctionCall","src":"9974:61:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9964:6:28"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9751:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9762:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9774:6:28","type":""}],"src":"9707:345:28"},{"body":{"nodeType":"YulBlock","src":"10124:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"10170:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10172:77:28"},"nodeType":"YulFunctionCall","src":"10172:79:28"},"nodeType":"YulExpressionStatement","src":"10172:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10145:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"10154:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10141:3:28"},"nodeType":"YulFunctionCall","src":"10141:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"10166:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10137:3:28"},"nodeType":"YulFunctionCall","src":"10137:32:28"},"nodeType":"YulIf","src":"10134:119:28"},{"nodeType":"YulBlock","src":"10263:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10278:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10292:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10282:6:28","type":""}]},{"nodeType":"YulAssignment","src":"10307:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10342:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"10353:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10338:3:28"},"nodeType":"YulFunctionCall","src":"10338:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10362:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10317:20:28"},"nodeType":"YulFunctionCall","src":"10317:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10307:6:28"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10094:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10105:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10117:6:28","type":""}],"src":"10058:329:28"},{"body":{"nodeType":"YulBlock","src":"10482:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10499:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10502:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10492:6:28"},"nodeType":"YulFunctionCall","src":"10492:12:28"},"nodeType":"YulExpressionStatement","src":"10492:12:28"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"10393:117:28"},{"body":{"nodeType":"YulBlock","src":"10629:153:28","statements":[{"body":{"nodeType":"YulBlock","src":"10669:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"10671:77:28"},"nodeType":"YulFunctionCall","src":"10671:79:28"},"nodeType":"YulExpressionStatement","src":"10671:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"10650:3:28"},{"name":"offset","nodeType":"YulIdentifier","src":"10655:6:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10646:3:28"},"nodeType":"YulFunctionCall","src":"10646:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"10664:3:28","type":"","value":"352"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10642:3:28"},"nodeType":"YulFunctionCall","src":"10642:26:28"},"nodeType":"YulIf","src":"10639:113:28"},{"nodeType":"YulAssignment","src":"10761:15:28","value":{"name":"offset","nodeType":"YulIdentifier","src":"10770:6:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10761:5:28"}]}]},"name":"abi_decode_t_struct$_UserOperation_$3900_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10607:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"10615:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10623:5:28","type":""}],"src":"10544:238:28"},{"body":{"nodeType":"YulBlock","src":"10833:32:28","statements":[{"nodeType":"YulAssignment","src":"10843:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"10854:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10843:7:28"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10815:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10825:7:28","type":""}],"src":"10788:77:28"},{"body":{"nodeType":"YulBlock","src":"10914:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"10971:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10980:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10983:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10973:6:28"},"nodeType":"YulFunctionCall","src":"10973:12:28"},"nodeType":"YulExpressionStatement","src":"10973:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10937:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10962:5:28"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10944:17:28"},"nodeType":"YulFunctionCall","src":"10944:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10934:2:28"},"nodeType":"YulFunctionCall","src":"10934:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10927:6:28"},"nodeType":"YulFunctionCall","src":"10927:43:28"},"nodeType":"YulIf","src":"10924:63:28"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10907:5:28","type":""}],"src":"10871:122:28"},{"body":{"nodeType":"YulBlock","src":"11051:87:28","statements":[{"nodeType":"YulAssignment","src":"11061:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11083:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11070:12:28"},"nodeType":"YulFunctionCall","src":"11070:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11061:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11126:5:28"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"11099:26:28"},"nodeType":"YulFunctionCall","src":"11099:33:28"},"nodeType":"YulExpressionStatement","src":"11099:33:28"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11029:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"11037:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11045:5:28","type":""}],"src":"10999:139:28"},{"body":{"nodeType":"YulBlock","src":"11277:712:28","statements":[{"body":{"nodeType":"YulBlock","src":"11323:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11325:77:28"},"nodeType":"YulFunctionCall","src":"11325:79:28"},"nodeType":"YulExpressionStatement","src":"11325:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11298:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"11307:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11294:3:28"},"nodeType":"YulFunctionCall","src":"11294:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"11319:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11290:3:28"},"nodeType":"YulFunctionCall","src":"11290:32:28"},"nodeType":"YulIf","src":"11287:119:28"},{"nodeType":"YulBlock","src":"11416:310:28","statements":[{"nodeType":"YulVariableDeclaration","src":"11431:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11462:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11473:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11458:3:28"},"nodeType":"YulFunctionCall","src":"11458:17:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11445:12:28"},"nodeType":"YulFunctionCall","src":"11445:31:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11435:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"11523:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11525:77:28"},"nodeType":"YulFunctionCall","src":"11525:79:28"},"nodeType":"YulExpressionStatement","src":"11525:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11495:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"11503:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11492:2:28"},"nodeType":"YulFunctionCall","src":"11492:30:28"},"nodeType":"YulIf","src":"11489:117:28"},{"nodeType":"YulAssignment","src":"11620:96:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11688:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"11699:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11684:3:28"},"nodeType":"YulFunctionCall","src":"11684:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11708:7:28"}],"functionName":{"name":"abi_decode_t_struct$_UserOperation_$3900_calldata_ptr","nodeType":"YulIdentifier","src":"11630:53:28"},"nodeType":"YulFunctionCall","src":"11630:86:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11620:6:28"}]}]},{"nodeType":"YulBlock","src":"11736:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"11751:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"11765:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11755:6:28","type":""}]},{"nodeType":"YulAssignment","src":"11781:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11816:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"11827:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11812:3:28"},"nodeType":"YulFunctionCall","src":"11812:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11836:7:28"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11791:20:28"},"nodeType":"YulFunctionCall","src":"11791:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11781:6:28"}]}]},{"nodeType":"YulBlock","src":"11864:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"11879:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"11893:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11883:6:28","type":""}]},{"nodeType":"YulAssignment","src":"11909:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11944:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"11955:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11940:3:28"},"nodeType":"YulFunctionCall","src":"11940:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11964:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11919:20:28"},"nodeType":"YulFunctionCall","src":"11919:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11909:6:28"}]}]}]},"name":"abi_decode_tuple_t_struct$_UserOperation_$3900_calldata_ptrt_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11231:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11242:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11254:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11262:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11270:6:28","type":""}],"src":"11144:845:28"},{"body":{"nodeType":"YulBlock","src":"12053:40:28","statements":[{"nodeType":"YulAssignment","src":"12064:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12080:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12074:5:28"},"nodeType":"YulFunctionCall","src":"12074:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12064:6:28"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12036:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12046:6:28","type":""}],"src":"11995:98:28"},{"body":{"nodeType":"YulBlock","src":"12194:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12211:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"12216:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12204:6:28"},"nodeType":"YulFunctionCall","src":"12204:19:28"},"nodeType":"YulExpressionStatement","src":"12204:19:28"},{"nodeType":"YulAssignment","src":"12232:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12251:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"12256:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12247:3:28"},"nodeType":"YulFunctionCall","src":"12247:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12232:11:28"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12166:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"12171:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12182:11:28","type":""}],"src":"12099:168:28"},{"body":{"nodeType":"YulBlock","src":"12335:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12345:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12354:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12349:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"12414:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12439:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"12444:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12435:3:28"},"nodeType":"YulFunctionCall","src":"12435:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12458:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"12463:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12454:3:28"},"nodeType":"YulFunctionCall","src":"12454:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12448:5:28"},"nodeType":"YulFunctionCall","src":"12448:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12428:6:28"},"nodeType":"YulFunctionCall","src":"12428:39:28"},"nodeType":"YulExpressionStatement","src":"12428:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12375:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"12378:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12372:2:28"},"nodeType":"YulFunctionCall","src":"12372:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12386:19:28","statements":[{"nodeType":"YulAssignment","src":"12388:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12397:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"12400:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12393:3:28"},"nodeType":"YulFunctionCall","src":"12393:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12388:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"12368:3:28","statements":[]},"src":"12364:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12497:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"12502:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12493:3:28"},"nodeType":"YulFunctionCall","src":"12493:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"12511:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12486:6:28"},"nodeType":"YulFunctionCall","src":"12486:27:28"},"nodeType":"YulExpressionStatement","src":"12486:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12317:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12322:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"12327:6:28","type":""}],"src":"12273:246:28"},{"body":{"nodeType":"YulBlock","src":"12615:283:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12625:52:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12671:5:28"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12639:31:28"},"nodeType":"YulFunctionCall","src":"12639:38:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12629:6:28","type":""}]},{"nodeType":"YulAssignment","src":"12686:77:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12751:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"12756:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12693:57:28"},"nodeType":"YulFunctionCall","src":"12693:70:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12686:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12811:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"12818:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12807:3:28"},"nodeType":"YulFunctionCall","src":"12807:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"12825:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"12830:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12772:34:28"},"nodeType":"YulFunctionCall","src":"12772:65:28"},"nodeType":"YulExpressionStatement","src":"12772:65:28"},{"nodeType":"YulAssignment","src":"12846:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12857:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12884:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12862:21:28"},"nodeType":"YulFunctionCall","src":"12862:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12853:3:28"},"nodeType":"YulFunctionCall","src":"12853:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12846:3:28"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12596:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12603:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12611:3:28","type":""}],"src":"12525:373:28"},{"body":{"nodeType":"YulBlock","src":"13048:275:28","statements":[{"nodeType":"YulAssignment","src":"13058:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13070:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13081:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13066:3:28"},"nodeType":"YulFunctionCall","src":"13066:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13058:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13105:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13116:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13101:3:28"},"nodeType":"YulFunctionCall","src":"13101:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13124:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"13130:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13120:3:28"},"nodeType":"YulFunctionCall","src":"13120:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13094:6:28"},"nodeType":"YulFunctionCall","src":"13094:47:28"},"nodeType":"YulExpressionStatement","src":"13094:47:28"},{"nodeType":"YulAssignment","src":"13150:84:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13220:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"13229:4:28"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13158:61:28"},"nodeType":"YulFunctionCall","src":"13158:76:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13150:4:28"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13288:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13301:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13312:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13297:3:28"},"nodeType":"YulFunctionCall","src":"13297:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13244:43:28"},"nodeType":"YulFunctionCall","src":"13244:72:28"},"nodeType":"YulExpressionStatement","src":"13244:72:28"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13012:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13024:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13032:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13043:4:28","type":""}],"src":"12904:419:28"},{"body":{"nodeType":"YulBlock","src":"13403:66:28","statements":[{"nodeType":"YulAssignment","src":"13413:50:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13457:5:28"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"13426:30:28"},"nodeType":"YulFunctionCall","src":"13426:37:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13413:9:28"}]}]},"name":"convert_t_contract$_IERC20_$250_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13383:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13393:9:28","type":""}],"src":"13329:140:28"},{"body":{"nodeType":"YulBlock","src":"13554:80:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13571:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13621:5:28"}],"functionName":{"name":"convert_t_contract$_IERC20_$250_to_t_address","nodeType":"YulIdentifier","src":"13576:44:28"},"nodeType":"YulFunctionCall","src":"13576:51:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13564:6:28"},"nodeType":"YulFunctionCall","src":"13564:64:28"},"nodeType":"YulExpressionStatement","src":"13564:64:28"}]},"name":"abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13542:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13549:3:28","type":""}],"src":"13475:159:28"},{"body":{"nodeType":"YulBlock","src":"13752:138:28","statements":[{"nodeType":"YulAssignment","src":"13762:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13774:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13785:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13770:3:28"},"nodeType":"YulFunctionCall","src":"13770:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13762:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13856:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13869:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13880:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13865:3:28"},"nodeType":"YulFunctionCall","src":"13865:17:28"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13798:57:28"},"nodeType":"YulFunctionCall","src":"13798:85:28"},"nodeType":"YulExpressionStatement","src":"13798:85:28"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$250__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13724:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13736:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13747:4:28","type":""}],"src":"13640:250:28"},{"body":{"nodeType":"YulBlock","src":"13959:52:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13976:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13998:5:28"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"13981:16:28"},"nodeType":"YulFunctionCall","src":"13981:23:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13969:6:28"},"nodeType":"YulFunctionCall","src":"13969:36:28"},"nodeType":"YulExpressionStatement","src":"13969:36:28"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13947:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13954:3:28","type":""}],"src":"13896:115:28"},{"body":{"nodeType":"YulBlock","src":"14113:122:28","statements":[{"nodeType":"YulAssignment","src":"14123:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14135:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14146:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14131:3:28"},"nodeType":"YulFunctionCall","src":"14131:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14123:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14201:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14214:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14225:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14210:3:28"},"nodeType":"YulFunctionCall","src":"14210:17:28"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"14159:41:28"},"nodeType":"YulFunctionCall","src":"14159:69:28"},"nodeType":"YulExpressionStatement","src":"14159:69:28"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14085:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14097:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14108:4:28","type":""}],"src":"14017:218:28"},{"body":{"nodeType":"YulBlock","src":"14322:61:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14339:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14370:5:28"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"14344:25:28"},"nodeType":"YulFunctionCall","src":"14344:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14332:6:28"},"nodeType":"YulFunctionCall","src":"14332:45:28"},"nodeType":"YulExpressionStatement","src":"14332:45:28"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14310:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14317:3:28","type":""}],"src":"14241:142:28"},{"body":{"nodeType":"YulBlock","src":"14531:222:28","statements":[{"nodeType":"YulAssignment","src":"14541:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14553:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14564:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14549:3:28"},"nodeType":"YulFunctionCall","src":"14549:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14541:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14637:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14650:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14661:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14646:3:28"},"nodeType":"YulFunctionCall","src":"14646:17:28"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"14577:59:28"},"nodeType":"YulFunctionCall","src":"14577:87:28"},"nodeType":"YulExpressionStatement","src":"14577:87:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14718:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14731:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14742:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14727:3:28"},"nodeType":"YulFunctionCall","src":"14727:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14674:43:28"},"nodeType":"YulFunctionCall","src":"14674:72:28"},"nodeType":"YulExpressionStatement","src":"14674:72:28"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14495:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14507:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14515:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14526:4:28","type":""}],"src":"14389:364:28"},{"body":{"nodeType":"YulBlock","src":"14787:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14804:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14807:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14797:6:28"},"nodeType":"YulFunctionCall","src":"14797:88:28"},"nodeType":"YulExpressionStatement","src":"14797:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14901:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14904:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14894:6:28"},"nodeType":"YulFunctionCall","src":"14894:15:28"},"nodeType":"YulExpressionStatement","src":"14894:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14925:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14928:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14918:6:28"},"nodeType":"YulFunctionCall","src":"14918:15:28"},"nodeType":"YulExpressionStatement","src":"14918:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14759:180:28"},{"body":{"nodeType":"YulBlock","src":"14993:362:28","statements":[{"nodeType":"YulAssignment","src":"15003:25:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15026:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15008:17:28"},"nodeType":"YulFunctionCall","src":"15008:20:28"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15003:1:28"}]},{"nodeType":"YulAssignment","src":"15037:25:28","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15060:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15042:17:28"},"nodeType":"YulFunctionCall","src":"15042:20:28"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15037:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"15071:28:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15094:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"15097:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15090:3:28"},"nodeType":"YulFunctionCall","src":"15090:9:28"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"15075:11:28","type":""}]},{"nodeType":"YulAssignment","src":"15108:41:28","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"15137:11:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15119:17:28"},"nodeType":"YulFunctionCall","src":"15119:30:28"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"15108:7:28"}]},{"body":{"nodeType":"YulBlock","src":"15326:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15328:16:28"},"nodeType":"YulFunctionCall","src":"15328:18:28"},"nodeType":"YulExpressionStatement","src":"15328:18:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15259:1:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15252:6:28"},"nodeType":"YulFunctionCall","src":"15252:9:28"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15282:1:28"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"15289:7:28"},{"name":"x","nodeType":"YulIdentifier","src":"15298:1:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15285:3:28"},"nodeType":"YulFunctionCall","src":"15285:15:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15279:2:28"},"nodeType":"YulFunctionCall","src":"15279:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15232:2:28"},"nodeType":"YulFunctionCall","src":"15232:83:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15212:6:28"},"nodeType":"YulFunctionCall","src":"15212:113:28"},"nodeType":"YulIf","src":"15209:139:28"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14976:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"14979:1:28","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"14985:7:28","type":""}],"src":"14945:410:28"},{"body":{"nodeType":"YulBlock","src":"15389:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15406:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15409:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15399:6:28"},"nodeType":"YulFunctionCall","src":"15399:88:28"},"nodeType":"YulExpressionStatement","src":"15399:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15503:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15506:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15496:6:28"},"nodeType":"YulFunctionCall","src":"15496:15:28"},"nodeType":"YulExpressionStatement","src":"15496:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15527:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15530:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15520:6:28"},"nodeType":"YulFunctionCall","src":"15520:15:28"},"nodeType":"YulExpressionStatement","src":"15520:15:28"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15361:180:28"},{"body":{"nodeType":"YulBlock","src":"15589:143:28","statements":[{"nodeType":"YulAssignment","src":"15599:25:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15622:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15604:17:28"},"nodeType":"YulFunctionCall","src":"15604:20:28"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15599:1:28"}]},{"nodeType":"YulAssignment","src":"15633:25:28","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15656:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15638:17:28"},"nodeType":"YulFunctionCall","src":"15638:20:28"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15633:1:28"}]},{"body":{"nodeType":"YulBlock","src":"15680:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"15682:16:28"},"nodeType":"YulFunctionCall","src":"15682:18:28"},"nodeType":"YulExpressionStatement","src":"15682:18:28"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15677:1:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15670:6:28"},"nodeType":"YulFunctionCall","src":"15670:9:28"},"nodeType":"YulIf","src":"15667:35:28"},{"nodeType":"YulAssignment","src":"15712:14:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15721:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"15724:1:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15717:3:28"},"nodeType":"YulFunctionCall","src":"15717:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"15712:1:28"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15578:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"15581:1:28","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"15587:1:28","type":""}],"src":"15547:185:28"},{"body":{"nodeType":"YulBlock","src":"15834:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15851:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"15856:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15844:6:28"},"nodeType":"YulFunctionCall","src":"15844:19:28"},"nodeType":"YulExpressionStatement","src":"15844:19:28"},{"nodeType":"YulAssignment","src":"15872:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15891:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"15896:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15887:3:28"},"nodeType":"YulFunctionCall","src":"15887:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15872:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15806:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"15811:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15822:11:28","type":""}],"src":"15738:169:28"},{"body":{"nodeType":"YulBlock","src":"16019:70:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16041:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"16049:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16037:3:28"},"nodeType":"YulFunctionCall","src":"16037:14:28"},{"hexValue":"54504d3a207072696365206d61726b757020746f6f2068696768","kind":"string","nodeType":"YulLiteral","src":"16053:28:28","type":"","value":"TPM: price markup too high"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16030:6:28"},"nodeType":"YulFunctionCall","src":"16030:52:28"},"nodeType":"YulExpressionStatement","src":"16030:52:28"}]},"name":"store_literal_in_memory_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16011:6:28","type":""}],"src":"15913:176:28"},{"body":{"nodeType":"YulBlock","src":"16241:220:28","statements":[{"nodeType":"YulAssignment","src":"16251:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16317:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"16322:2:28","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16258:58:28"},"nodeType":"YulFunctionCall","src":"16258:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16251:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16423:3:28"}],"functionName":{"name":"store_literal_in_memory_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2","nodeType":"YulIdentifier","src":"16334:88:28"},"nodeType":"YulFunctionCall","src":"16334:93:28"},"nodeType":"YulExpressionStatement","src":"16334:93:28"},{"nodeType":"YulAssignment","src":"16436:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16447:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"16452:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16443:3:28"},"nodeType":"YulFunctionCall","src":"16443:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16436:3:28"}]}]},"name":"abi_encode_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16229:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16237:3:28","type":""}],"src":"16095:366:28"},{"body":{"nodeType":"YulBlock","src":"16638:248:28","statements":[{"nodeType":"YulAssignment","src":"16648:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16660:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16671:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16656:3:28"},"nodeType":"YulFunctionCall","src":"16656:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16648:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16695:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16706:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16691:3:28"},"nodeType":"YulFunctionCall","src":"16691:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16714:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"16720:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16710:3:28"},"nodeType":"YulFunctionCall","src":"16710:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16684:6:28"},"nodeType":"YulFunctionCall","src":"16684:47:28"},"nodeType":"YulExpressionStatement","src":"16684:47:28"},{"nodeType":"YulAssignment","src":"16740:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16874:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16748:124:28"},"nodeType":"YulFunctionCall","src":"16748:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16740:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16618:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16633:4:28","type":""}],"src":"16467:419:28"},{"body":{"nodeType":"YulBlock","src":"16998:69:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17020:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"17028:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17016:3:28"},"nodeType":"YulFunctionCall","src":"17016:14:28"},{"hexValue":"54504d3a207072696365206d61726b757020746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"17032:27:28","type":"","value":"TPM: price markup too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17009:6:28"},"nodeType":"YulFunctionCall","src":"17009:51:28"},"nodeType":"YulExpressionStatement","src":"17009:51:28"}]},"name":"store_literal_in_memory_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16990:6:28","type":""}],"src":"16892:175:28"},{"body":{"nodeType":"YulBlock","src":"17219:220:28","statements":[{"nodeType":"YulAssignment","src":"17229:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17295:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"17300:2:28","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17236:58:28"},"nodeType":"YulFunctionCall","src":"17236:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17229:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17401:3:28"}],"functionName":{"name":"store_literal_in_memory_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865","nodeType":"YulIdentifier","src":"17312:88:28"},"nodeType":"YulFunctionCall","src":"17312:93:28"},"nodeType":"YulExpressionStatement","src":"17312:93:28"},{"nodeType":"YulAssignment","src":"17414:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17425:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"17430:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17421:3:28"},"nodeType":"YulFunctionCall","src":"17421:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17414:3:28"}]}]},"name":"abi_encode_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17207:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17215:3:28","type":""}],"src":"17073:366:28"},{"body":{"nodeType":"YulBlock","src":"17616:248:28","statements":[{"nodeType":"YulAssignment","src":"17626:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17638:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17649:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17634:3:28"},"nodeType":"YulFunctionCall","src":"17634:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17626:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17673:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17684:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17669:3:28"},"nodeType":"YulFunctionCall","src":"17669:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17692:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"17698:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17688:3:28"},"nodeType":"YulFunctionCall","src":"17688:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17662:6:28"},"nodeType":"YulFunctionCall","src":"17662:47:28"},"nodeType":"YulExpressionStatement","src":"17662:47:28"},{"nodeType":"YulAssignment","src":"17718:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17852:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17726:124:28"},"nodeType":"YulFunctionCall","src":"17726:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17718:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17596:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17611:4:28","type":""}],"src":"17445:419:28"},{"body":{"nodeType":"YulBlock","src":"17925:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17942:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17965:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17947:17:28"},"nodeType":"YulFunctionCall","src":"17947:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17935:6:28"},"nodeType":"YulFunctionCall","src":"17935:37:28"},"nodeType":"YulExpressionStatement","src":"17935:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17913:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17920:3:28","type":""}],"src":"17870:108:28"},{"body":{"nodeType":"YulBlock","src":"18222:591:28","statements":[{"nodeType":"YulVariableDeclaration","src":"18232:26:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18248:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"18253:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18244:3:28"},"nodeType":"YulFunctionCall","src":"18244:14:28"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"18236:4:28","type":""}]},{"nodeType":"YulBlock","src":"18268:171:28","statements":[{"nodeType":"YulVariableDeclaration","src":"18310:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18340:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"18347:4:28","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18336:3:28"},"nodeType":"YulFunctionCall","src":"18336:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18330:5:28"},"nodeType":"YulFunctionCall","src":"18330:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18314:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18400:12:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18418:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"18423:4:28","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18414:3:28"},"nodeType":"YulFunctionCall","src":"18414:14:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18366:33:28"},"nodeType":"YulFunctionCall","src":"18366:63:28"},"nodeType":"YulExpressionStatement","src":"18366:63:28"}]},{"nodeType":"YulBlock","src":"18449:176:28","statements":[{"nodeType":"YulVariableDeclaration","src":"18496:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18526:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"18533:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18522:3:28"},"nodeType":"YulFunctionCall","src":"18522:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18516:5:28"},"nodeType":"YulFunctionCall","src":"18516:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18500:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18586:12:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18604:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"18609:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18600:3:28"},"nodeType":"YulFunctionCall","src":"18600:14:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18552:33:28"},"nodeType":"YulFunctionCall","src":"18552:63:28"},"nodeType":"YulExpressionStatement","src":"18552:63:28"}]},{"nodeType":"YulBlock","src":"18635:171:28","statements":[{"nodeType":"YulVariableDeclaration","src":"18677:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18707:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"18714:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18703:3:28"},"nodeType":"YulFunctionCall","src":"18703:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18697:5:28"},"nodeType":"YulFunctionCall","src":"18697:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18681:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18767:12:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18785:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"18790:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18781:3:28"},"nodeType":"YulFunctionCall","src":"18781:14:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18733:33:28"},"nodeType":"YulFunctionCall","src":"18733:63:28"},"nodeType":"YulExpressionStatement","src":"18733:63:28"}]}]},"name":"abi_encode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18209:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18216:3:28","type":""}],"src":"18080:733:28"},{"body":{"nodeType":"YulBlock","src":"18993:200:28","statements":[{"nodeType":"YulAssignment","src":"19003:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19015:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19026:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19011:3:28"},"nodeType":"YulFunctionCall","src":"19011:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19003:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19159:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19172:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19183:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19168:3:28"},"nodeType":"YulFunctionCall","src":"19168:17:28"}],"functionName":{"name":"abi_encode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19039:119:28"},"nodeType":"YulFunctionCall","src":"19039:147:28"},"nodeType":"YulExpressionStatement","src":"19039:147:28"}]},"name":"abi_encode_tuple_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18965:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18977:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18988:4:28","type":""}],"src":"18819:374:28"},{"body":{"nodeType":"YulBlock","src":"19313:140:28","statements":[{"nodeType":"YulAssignment","src":"19323:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19335:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19346:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19331:3:28"},"nodeType":"YulFunctionCall","src":"19331:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19323:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19419:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19432:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19443:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19428:3:28"},"nodeType":"YulFunctionCall","src":"19428:17:28"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"19359:59:28"},"nodeType":"YulFunctionCall","src":"19359:87:28"},"nodeType":"YulExpressionStatement","src":"19359:87:28"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19285:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19297:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19308:4:28","type":""}],"src":"19199:254:28"},{"body":{"nodeType":"YulBlock","src":"19522:80:28","statements":[{"nodeType":"YulAssignment","src":"19532:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19547:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19541:5:28"},"nodeType":"YulFunctionCall","src":"19541:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19532:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19590:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"19563:26:28"},"nodeType":"YulFunctionCall","src":"19563:33:28"},"nodeType":"YulExpressionStatement","src":"19563:33:28"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19500:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"19508:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19516:5:28","type":""}],"src":"19459:143:28"},{"body":{"nodeType":"YulBlock","src":"19685:274:28","statements":[{"body":{"nodeType":"YulBlock","src":"19731:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19733:77:28"},"nodeType":"YulFunctionCall","src":"19733:79:28"},"nodeType":"YulExpressionStatement","src":"19733:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19706:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"19715:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19702:3:28"},"nodeType":"YulFunctionCall","src":"19702:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"19727:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19698:3:28"},"nodeType":"YulFunctionCall","src":"19698:32:28"},"nodeType":"YulIf","src":"19695:119:28"},{"nodeType":"YulBlock","src":"19824:128:28","statements":[{"nodeType":"YulVariableDeclaration","src":"19839:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"19853:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19843:6:28","type":""}]},{"nodeType":"YulAssignment","src":"19868:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19914:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"19925:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19910:3:28"},"nodeType":"YulFunctionCall","src":"19910:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19934:7:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19878:31:28"},"nodeType":"YulFunctionCall","src":"19878:64:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19868:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19655:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19666:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19678:6:28","type":""}],"src":"19608:351:28"},{"body":{"nodeType":"YulBlock","src":"20091:206:28","statements":[{"nodeType":"YulAssignment","src":"20101:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20113:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20124:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20109:3:28"},"nodeType":"YulFunctionCall","src":"20109:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20101:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20181:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20194:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20205:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20190:3:28"},"nodeType":"YulFunctionCall","src":"20190:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20137:43:28"},"nodeType":"YulFunctionCall","src":"20137:71:28"},"nodeType":"YulExpressionStatement","src":"20137:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20262:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20275:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20286:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20271:3:28"},"nodeType":"YulFunctionCall","src":"20271:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20218:43:28"},"nodeType":"YulFunctionCall","src":"20218:72:28"},"nodeType":"YulExpressionStatement","src":"20218:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20055:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20067:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20075:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20086:4:28","type":""}],"src":"19965:332:28"},{"body":{"nodeType":"YulBlock","src":"20409:65:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20431:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"20439:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20427:3:28"},"nodeType":"YulFunctionCall","src":"20427:14:28"},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","kind":"string","nodeType":"YulLiteral","src":"20443:23:28","type":"","value":"Sender not EntryPoint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20420:6:28"},"nodeType":"YulFunctionCall","src":"20420:47:28"},"nodeType":"YulExpressionStatement","src":"20420:47:28"}]},"name":"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20401:6:28","type":""}],"src":"20303:171:28"},{"body":{"nodeType":"YulBlock","src":"20626:220:28","statements":[{"nodeType":"YulAssignment","src":"20636:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20702:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"20707:2:28","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20643:58:28"},"nodeType":"YulFunctionCall","src":"20643:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20636:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20808:3:28"}],"functionName":{"name":"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","nodeType":"YulIdentifier","src":"20719:88:28"},"nodeType":"YulFunctionCall","src":"20719:93:28"},"nodeType":"YulExpressionStatement","src":"20719:93:28"},{"nodeType":"YulAssignment","src":"20821:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20832:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"20837:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20828:3:28"},"nodeType":"YulFunctionCall","src":"20828:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20821:3:28"}]}]},"name":"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20614:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20622:3:28","type":""}],"src":"20480:366:28"},{"body":{"nodeType":"YulBlock","src":"21023:248:28","statements":[{"nodeType":"YulAssignment","src":"21033:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21045:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21056:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21041:3:28"},"nodeType":"YulFunctionCall","src":"21041:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21033:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21080:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21091:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21076:3:28"},"nodeType":"YulFunctionCall","src":"21076:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21099:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"21105:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21095:3:28"},"nodeType":"YulFunctionCall","src":"21095:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21069:6:28"},"nodeType":"YulFunctionCall","src":"21069:47:28"},"nodeType":"YulExpressionStatement","src":"21069:47:28"},{"nodeType":"YulAssignment","src":"21125:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21259:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21133:124:28"},"nodeType":"YulFunctionCall","src":"21133:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21125:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21003:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21018:4:28","type":""}],"src":"20852:419:28"},{"body":{"nodeType":"YulBlock","src":"21402:656:28","statements":[{"body":{"nodeType":"YulBlock","src":"21449:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21451:77:28"},"nodeType":"YulFunctionCall","src":"21451:79:28"},"nodeType":"YulExpressionStatement","src":"21451:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21423:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"21432:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21419:3:28"},"nodeType":"YulFunctionCall","src":"21419:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"21444:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21415:3:28"},"nodeType":"YulFunctionCall","src":"21415:33:28"},"nodeType":"YulIf","src":"21412:120:28"},{"nodeType":"YulBlock","src":"21542:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"21557:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"21571:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21561:6:28","type":""}]},{"nodeType":"YulAssignment","src":"21586:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21621:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"21632:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21617:3:28"},"nodeType":"YulFunctionCall","src":"21617:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21641:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21596:20:28"},"nodeType":"YulFunctionCall","src":"21596:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21586:6:28"}]}]},{"nodeType":"YulBlock","src":"21669:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"21684:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"21698:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21688:6:28","type":""}]},{"nodeType":"YulAssignment","src":"21714:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21749:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"21760:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21745:3:28"},"nodeType":"YulFunctionCall","src":"21745:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21769:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21724:20:28"},"nodeType":"YulFunctionCall","src":"21724:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21714:6:28"}]}]},{"nodeType":"YulBlock","src":"21797:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"21812:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"21826:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21816:6:28","type":""}]},{"nodeType":"YulAssignment","src":"21842:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21877:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"21888:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21873:3:28"},"nodeType":"YulFunctionCall","src":"21873:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21897:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21852:20:28"},"nodeType":"YulFunctionCall","src":"21852:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21842:6:28"}]}]},{"nodeType":"YulBlock","src":"21925:126:28","statements":[{"nodeType":"YulVariableDeclaration","src":"21940:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"21954:2:28","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21944:6:28","type":""}]},{"nodeType":"YulAssignment","src":"21970:71:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22013:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"22024:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22009:3:28"},"nodeType":"YulFunctionCall","src":"22009:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22033:7:28"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"21980:28:28"},"nodeType":"YulFunctionCall","src":"21980:61:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"21970:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21348:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21359:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21371:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21379:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21387:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21395:6:28","type":""}],"src":"21277:781:28"},{"body":{"nodeType":"YulBlock","src":"22218:288:28","statements":[{"nodeType":"YulAssignment","src":"22228:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22240:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22251:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22236:3:28"},"nodeType":"YulFunctionCall","src":"22236:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22228:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22308:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22321:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22332:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22317:3:28"},"nodeType":"YulFunctionCall","src":"22317:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22264:43:28"},"nodeType":"YulFunctionCall","src":"22264:71:28"},"nodeType":"YulExpressionStatement","src":"22264:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22389:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22402:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22413:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22398:3:28"},"nodeType":"YulFunctionCall","src":"22398:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22345:43:28"},"nodeType":"YulFunctionCall","src":"22345:72:28"},"nodeType":"YulExpressionStatement","src":"22345:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22471:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22484:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22495:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22480:3:28"},"nodeType":"YulFunctionCall","src":"22480:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22427:43:28"},"nodeType":"YulFunctionCall","src":"22427:72:28"},"nodeType":"YulExpressionStatement","src":"22427:72:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22174:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22186:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22194:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22202:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22213:4:28","type":""}],"src":"22064:442:28"},{"body":{"nodeType":"YulBlock","src":"22601:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22618:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22621:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22611:6:28"},"nodeType":"YulFunctionCall","src":"22611:12:28"},"nodeType":"YulExpressionStatement","src":"22611:12:28"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"22512:117:28"},{"body":{"nodeType":"YulBlock","src":"22724:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22741:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22744:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22734:6:28"},"nodeType":"YulFunctionCall","src":"22734:12:28"},"nodeType":"YulExpressionStatement","src":"22734:12:28"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"22635:117:28"},{"body":{"nodeType":"YulBlock","src":"22847:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22864:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22867:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22857:6:28"},"nodeType":"YulFunctionCall","src":"22857:12:28"},"nodeType":"YulExpressionStatement","src":"22857:12:28"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"22758:117:28"},{"body":{"nodeType":"YulBlock","src":"22971:634:28","statements":[{"nodeType":"YulVariableDeclaration","src":"22981:51:28","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"23020:11:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23007:12:28"},"nodeType":"YulFunctionCall","src":"23007:25:28"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"22985:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"23126:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"23128:77:28"},"nodeType":"YulFunctionCall","src":"23128:79:28"},"nodeType":"YulExpressionStatement","src":"23128:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"23055:18:28"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"23083:12:28"},"nodeType":"YulFunctionCall","src":"23083:14:28"},{"name":"base_ref","nodeType":"YulIdentifier","src":"23099:8:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23079:3:28"},"nodeType":"YulFunctionCall","src":"23079:29:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23114:4:28","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"23120:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23110:3:28"},"nodeType":"YulFunctionCall","src":"23110:12:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23075:3:28"},"nodeType":"YulFunctionCall","src":"23075:48:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23051:3:28"},"nodeType":"YulFunctionCall","src":"23051:73:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23044:6:28"},"nodeType":"YulFunctionCall","src":"23044:81:28"},"nodeType":"YulIf","src":"23041:168:28"},{"nodeType":"YulAssignment","src":"23218:41:28","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"23230:8:28"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"23240:18:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23226:3:28"},"nodeType":"YulFunctionCall","src":"23226:33:28"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"23218:4:28"}]},{"nodeType":"YulAssignment","src":"23269:28:28","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"23292:4:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23279:12:28"},"nodeType":"YulFunctionCall","src":"23279:18:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23269:6:28"}]},{"body":{"nodeType":"YulBlock","src":"23340:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"23342:77:28"},"nodeType":"YulFunctionCall","src":"23342:79:28"},"nodeType":"YulExpressionStatement","src":"23342:79:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23312:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"23320:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23309:2:28"},"nodeType":"YulFunctionCall","src":"23309:30:28"},"nodeType":"YulIf","src":"23306:117:28"},{"nodeType":"YulAssignment","src":"23432:21:28","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"23444:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"23450:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23440:3:28"},"nodeType":"YulFunctionCall","src":"23440:13:28"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"23432:4:28"}]},{"body":{"nodeType":"YulBlock","src":"23515:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"23517:77:28"},"nodeType":"YulFunctionCall","src":"23517:79:28"},"nodeType":"YulExpressionStatement","src":"23517:79:28"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"23469:4:28"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"23479:12:28"},"nodeType":"YulFunctionCall","src":"23479:14:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23499:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"23507:4:28","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23495:3:28"},"nodeType":"YulFunctionCall","src":"23495:17:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23475:3:28"},"nodeType":"YulFunctionCall","src":"23475:38:28"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"23465:3:28"},"nodeType":"YulFunctionCall","src":"23465:49:28"},"nodeType":"YulIf","src":"23462:136:28"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"22932:8:28","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"22942:11:28","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"22958:4:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"22964:6:28","type":""}],"src":"22881:724:28"},{"body":{"nodeType":"YulBlock","src":"23717:68:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23739:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"23747:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23735:3:28"},"nodeType":"YulFunctionCall","src":"23735:14:28"},{"hexValue":"54504d3a20696e76616c69642064617461206c656e677468","kind":"string","nodeType":"YulLiteral","src":"23751:26:28","type":"","value":"TPM: invalid data length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23728:6:28"},"nodeType":"YulFunctionCall","src":"23728:50:28"},"nodeType":"YulExpressionStatement","src":"23728:50:28"}]},"name":"store_literal_in_memory_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23709:6:28","type":""}],"src":"23611:174:28"},{"body":{"nodeType":"YulBlock","src":"23937:220:28","statements":[{"nodeType":"YulAssignment","src":"23947:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24013:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"24018:2:28","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23954:58:28"},"nodeType":"YulFunctionCall","src":"23954:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23947:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24119:3:28"}],"functionName":{"name":"store_literal_in_memory_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537","nodeType":"YulIdentifier","src":"24030:88:28"},"nodeType":"YulFunctionCall","src":"24030:93:28"},"nodeType":"YulExpressionStatement","src":"24030:93:28"},{"nodeType":"YulAssignment","src":"24132:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24143:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"24148:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24139:3:28"},"nodeType":"YulFunctionCall","src":"24139:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24132:3:28"}]}]},"name":"abi_encode_t_stringliteral_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23925:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23933:3:28","type":""}],"src":"23791:366:28"},{"body":{"nodeType":"YulBlock","src":"24334:248:28","statements":[{"nodeType":"YulAssignment","src":"24344:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24356:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24367:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24352:3:28"},"nodeType":"YulFunctionCall","src":"24352:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24344:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24391:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24402:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24387:3:28"},"nodeType":"YulFunctionCall","src":"24387:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24410:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"24416:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24406:3:28"},"nodeType":"YulFunctionCall","src":"24406:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24380:6:28"},"nodeType":"YulFunctionCall","src":"24380:47:28"},"nodeType":"YulExpressionStatement","src":"24380:47:28"},{"nodeType":"YulAssignment","src":"24436:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24570:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24444:124:28"},"nodeType":"YulFunctionCall","src":"24444:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24436:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24314:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24329:4:28","type":""}],"src":"24163:419:28"},{"body":{"nodeType":"YulBlock","src":"24677:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24694:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24697:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24687:6:28"},"nodeType":"YulFunctionCall","src":"24687:12:28"},"nodeType":"YulExpressionStatement","src":"24687:12:28"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulFunctionDefinition","src":"24588:117:28"},{"body":{"nodeType":"YulBlock","src":"24800:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24817:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24820:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24810:6:28"},"nodeType":"YulFunctionCall","src":"24810:12:28"},"nodeType":"YulExpressionStatement","src":"24810:12:28"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulFunctionDefinition","src":"24711:117:28"},{"body":{"nodeType":"YulBlock","src":"24960:343:28","statements":[{"body":{"nodeType":"YulBlock","src":"24998:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulIdentifier","src":"25000:77:28"},"nodeType":"YulFunctionCall","src":"25000:79:28"},"nodeType":"YulExpressionStatement","src":"25000:79:28"}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"24976:10:28"},{"name":"endIndex","nodeType":"YulIdentifier","src":"24988:8:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24973:2:28"},"nodeType":"YulFunctionCall","src":"24973:24:28"},"nodeType":"YulIf","src":"24970:111:28"},{"body":{"nodeType":"YulBlock","src":"25114:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulIdentifier","src":"25116:77:28"},"nodeType":"YulFunctionCall","src":"25116:79:28"},"nodeType":"YulExpressionStatement","src":"25116:79:28"}]},"condition":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"25096:8:28"},{"name":"length","nodeType":"YulIdentifier","src":"25106:6:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25093:2:28"},"nodeType":"YulFunctionCall","src":"25093:20:28"},"nodeType":"YulIf","src":"25090:107:28"},{"nodeType":"YulAssignment","src":"25206:44:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25223:6:28"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"25235:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"25247:1:28","type":"","value":"1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25231:3:28"},"nodeType":"YulFunctionCall","src":"25231:18:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25219:3:28"},"nodeType":"YulFunctionCall","src":"25219:31:28"},"variableNames":[{"name":"offsetOut","nodeType":"YulIdentifier","src":"25206:9:28"}]},{"nodeType":"YulAssignment","src":"25259:38:28","value":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"25276:8:28"},{"name":"startIndex","nodeType":"YulIdentifier","src":"25286:10:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25272:3:28"},"nodeType":"YulFunctionCall","src":"25272:25:28"},"variableNames":[{"name":"lengthOut","nodeType":"YulIdentifier","src":"25259:9:28"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24898:6:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"24906:6:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"24914:10:28","type":""},{"name":"endIndex","nodeType":"YulTypedName","src":"24926:8:28","type":""}],"returnVariables":[{"name":"offsetOut","nodeType":"YulTypedName","src":"24939:9:28","type":""},{"name":"lengthOut","nodeType":"YulTypedName","src":"24950:9:28","type":""}],"src":"24834:469:28"},{"body":{"nodeType":"YulBlock","src":"25374:31:28","statements":[{"nodeType":"YulAssignment","src":"25385:13:28","value":{"name":"len","nodeType":"YulIdentifier","src":"25395:3:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"25385:6:28"}]}]},"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25352:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"25359:3:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"25367:6:28","type":""}],"src":"25309:96:28"},{"body":{"nodeType":"YulBlock","src":"25469:28:28","statements":[{"nodeType":"YulAssignment","src":"25479:11:28","value":{"name":"ptr","nodeType":"YulIdentifier","src":"25487:3:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25479:4:28"}]}]},"name":"array_dataslot_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"25456:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"25464:4:28","type":""}],"src":"25411:86:28"},{"body":{"nodeType":"YulBlock","src":"25556:54:28","statements":[{"nodeType":"YulAssignment","src":"25566:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"25591:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"25597:5:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25587:3:28"},"nodeType":"YulFunctionCall","src":"25587:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"25566:8:28"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"25531:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"25537:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"25547:8:28","type":""}],"src":"25503:107:28"},{"body":{"nodeType":"YulBlock","src":"25713:455:28","statements":[{"nodeType":"YulVariableDeclaration","src":"25724:59:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"25772:5:28"},{"name":"len","nodeType":"YulIdentifier","src":"25779:3:28"}],"functionName":{"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"25738:33:28"},"nodeType":"YulFunctionCall","src":"25738:45:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25728:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25792:21:28","value":{"name":"array","nodeType":"YulIdentifier","src":"25808:5:28"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"25796:8:28","type":""}]},{"nodeType":"YulAssignment","src":"25823:50:28","value":{"arguments":[{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"25863:8:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25850:12:28"},"nodeType":"YulFunctionCall","src":"25850:22:28"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"25832:17:28"},"nodeType":"YulFunctionCall","src":"25832:41:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25823:5:28"}]},{"body":{"nodeType":"YulBlock","src":"25901:260:28","statements":[{"nodeType":"YulAssignment","src":"25915:236:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25945:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26012:1:28","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26019:2:28","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"26023:6:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26015:3:28"},"nodeType":"YulFunctionCall","src":"26015:15:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"26008:3:28"},"nodeType":"YulFunctionCall","src":"26008:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"26053:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"25968:18:28"},"nodeType":"YulFunctionCall","src":"25968:169:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25924:3:28"},"nodeType":"YulFunctionCall","src":"25924:227:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25915:5:28"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25889:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"25897:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25886:2:28"},"nodeType":"YulFunctionCall","src":"25886:14:28"},"nodeType":"YulIf","src":"25883:278:28"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"25692:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"25699:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"25707:5:28","type":""}],"src":"25616:552:28"},{"body":{"nodeType":"YulBlock","src":"26356:371:28","statements":[{"nodeType":"YulAssignment","src":"26366:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26378:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26389:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26374:3:28"},"nodeType":"YulFunctionCall","src":"26374:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26366:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26447:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26460:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26471:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26456:3:28"},"nodeType":"YulFunctionCall","src":"26456:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26403:43:28"},"nodeType":"YulFunctionCall","src":"26403:71:28"},"nodeType":"YulExpressionStatement","src":"26403:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26528:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26541:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26552:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26537:3:28"},"nodeType":"YulFunctionCall","src":"26537:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26484:43:28"},"nodeType":"YulFunctionCall","src":"26484:72:28"},"nodeType":"YulExpressionStatement","src":"26484:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26610:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26623:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26634:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26619:3:28"},"nodeType":"YulFunctionCall","src":"26619:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26566:43:28"},"nodeType":"YulFunctionCall","src":"26566:72:28"},"nodeType":"YulExpressionStatement","src":"26566:72:28"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26692:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26705:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26716:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26701:3:28"},"nodeType":"YulFunctionCall","src":"26701:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26648:43:28"},"nodeType":"YulFunctionCall","src":"26648:72:28"},"nodeType":"YulExpressionStatement","src":"26648:72:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26304:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26316:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26324:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26332:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26340:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26351:4:28","type":""}],"src":"26174:553:28"},{"body":{"nodeType":"YulBlock","src":"26775:48:28","statements":[{"nodeType":"YulAssignment","src":"26785:32:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26810:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26803:6:28"},"nodeType":"YulFunctionCall","src":"26803:13:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26796:6:28"},"nodeType":"YulFunctionCall","src":"26796:21:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26785:7:28"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26757:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26767:7:28","type":""}],"src":"26733:90:28"},{"body":{"nodeType":"YulBlock","src":"26869:76:28","statements":[{"body":{"nodeType":"YulBlock","src":"26923:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26932:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26935:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26925:6:28"},"nodeType":"YulFunctionCall","src":"26925:12:28"},"nodeType":"YulExpressionStatement","src":"26925:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26892:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26914:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"26899:14:28"},"nodeType":"YulFunctionCall","src":"26899:21:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26889:2:28"},"nodeType":"YulFunctionCall","src":"26889:32:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26882:6:28"},"nodeType":"YulFunctionCall","src":"26882:40:28"},"nodeType":"YulIf","src":"26879:60:28"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26862:5:28","type":""}],"src":"26829:116:28"},{"body":{"nodeType":"YulBlock","src":"27011:77:28","statements":[{"nodeType":"YulAssignment","src":"27021:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27036:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27030:5:28"},"nodeType":"YulFunctionCall","src":"27030:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27021:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27076:5:28"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"27052:23:28"},"nodeType":"YulFunctionCall","src":"27052:30:28"},"nodeType":"YulExpressionStatement","src":"27052:30:28"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"26989:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"26997:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"27005:5:28","type":""}],"src":"26951:137:28"},{"body":{"nodeType":"YulBlock","src":"27168:271:28","statements":[{"body":{"nodeType":"YulBlock","src":"27214:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"27216:77:28"},"nodeType":"YulFunctionCall","src":"27216:79:28"},"nodeType":"YulExpressionStatement","src":"27216:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27189:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"27198:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27185:3:28"},"nodeType":"YulFunctionCall","src":"27185:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"27210:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27181:3:28"},"nodeType":"YulFunctionCall","src":"27181:32:28"},"nodeType":"YulIf","src":"27178:119:28"},{"nodeType":"YulBlock","src":"27307:125:28","statements":[{"nodeType":"YulVariableDeclaration","src":"27322:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"27336:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27326:6:28","type":""}]},{"nodeType":"YulAssignment","src":"27351:71:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27394:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"27405:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27390:3:28"},"nodeType":"YulFunctionCall","src":"27390:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27414:7:28"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"27361:28:28"},"nodeType":"YulFunctionCall","src":"27361:61:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"27351:6:28"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27138:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27149:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27161:6:28","type":""}],"src":"27094:345:28"},{"body":{"nodeType":"YulBlock","src":"27489:147:28","statements":[{"nodeType":"YulAssignment","src":"27499:25:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27522:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27504:17:28"},"nodeType":"YulFunctionCall","src":"27504:20:28"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27499:1:28"}]},{"nodeType":"YulAssignment","src":"27533:25:28","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27556:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27538:17:28"},"nodeType":"YulFunctionCall","src":"27538:20:28"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27533:1:28"}]},{"nodeType":"YulAssignment","src":"27567:16:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27578:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"27581:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27574:3:28"},"nodeType":"YulFunctionCall","src":"27574:9:28"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"27567:3:28"}]},{"body":{"nodeType":"YulBlock","src":"27607:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27609:16:28"},"nodeType":"YulFunctionCall","src":"27609:18:28"},"nodeType":"YulExpressionStatement","src":"27609:18:28"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27599:1:28"},{"name":"sum","nodeType":"YulIdentifier","src":"27602:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27596:2:28"},"nodeType":"YulFunctionCall","src":"27596:10:28"},"nodeType":"YulIf","src":"27593:36:28"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27476:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"27479:1:28","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"27485:3:28","type":""}],"src":"27445:191:28"},{"body":{"nodeType":"YulBlock","src":"27796:288:28","statements":[{"nodeType":"YulAssignment","src":"27806:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27818:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"27829:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27814:3:28"},"nodeType":"YulFunctionCall","src":"27814:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27806:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27886:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27899:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"27910:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27895:3:28"},"nodeType":"YulFunctionCall","src":"27895:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27842:43:28"},"nodeType":"YulFunctionCall","src":"27842:71:28"},"nodeType":"YulExpressionStatement","src":"27842:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27967:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27980:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"27991:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27976:3:28"},"nodeType":"YulFunctionCall","src":"27976:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27923:43:28"},"nodeType":"YulFunctionCall","src":"27923:72:28"},"nodeType":"YulExpressionStatement","src":"27923:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28049:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28062:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"28073:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28058:3:28"},"nodeType":"YulFunctionCall","src":"28058:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28005:43:28"},"nodeType":"YulFunctionCall","src":"28005:72:28"},"nodeType":"YulExpressionStatement","src":"28005:72:28"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27752:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27764:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27772:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27780:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27791:4:28","type":""}],"src":"27642:442:28"},{"body":{"nodeType":"YulBlock","src":"28203:34:28","statements":[{"nodeType":"YulAssignment","src":"28213:18:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"28228:3:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28213:11:28"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28175:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"28180:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28191:11:28","type":""}],"src":"28090:147:28"},{"body":{"nodeType":"YulBlock","src":"28351:278:28","statements":[{"nodeType":"YulVariableDeclaration","src":"28361:52:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28407:5:28"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"28375:31:28"},"nodeType":"YulFunctionCall","src":"28375:38:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"28365:6:28","type":""}]},{"nodeType":"YulAssignment","src":"28422:95:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28505:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"28510:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28429:75:28"},"nodeType":"YulFunctionCall","src":"28429:88:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28422:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28565:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"28572:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28561:3:28"},"nodeType":"YulFunctionCall","src":"28561:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"28579:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"28584:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"28526:34:28"},"nodeType":"YulFunctionCall","src":"28526:65:28"},"nodeType":"YulExpressionStatement","src":"28526:65:28"},{"nodeType":"YulAssignment","src":"28600:23:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28611:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"28616:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28607:3:28"},"nodeType":"YulFunctionCall","src":"28607:16:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28600:3:28"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28332:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28339:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28347:3:28","type":""}],"src":"28243:386:28"},{"body":{"nodeType":"YulBlock","src":"28769:137:28","statements":[{"nodeType":"YulAssignment","src":"28780:100:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28867:6:28"},{"name":"pos","nodeType":"YulIdentifier","src":"28876:3:28"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28787:79:28"},"nodeType":"YulFunctionCall","src":"28787:93:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28780:3:28"}]},{"nodeType":"YulAssignment","src":"28890:10:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"28897:3:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28890:3:28"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28748:3:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28754:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28765:3:28","type":""}],"src":"28635:271:28"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_enum$_PostOpMode_$3743(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_PostOpMode_$3743(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_PostOpMode_$3743(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_enum$_PostOpMode_$3743t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_PostOpMode_$3743(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$3687_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$3687_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$3687_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$3687__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$3687_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    // struct TokenPaymaster.TokenPaymasterConfig\n    function abi_decode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // priceMarkup\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // refundPostopCost\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // priceMaxAge\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_TokenPaymasterConfig_$4252_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct UserOperation\n    function abi_decode_t_struct$_UserOperation_$3900_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 352) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$3900_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$3900_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function convert_t_contract$_IERC20_$250_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$250_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$250__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$250_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2(memPtr) {\n\n        mstore(add(memPtr, 0), \"TPM: price markup too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4dead1e862704f22e82362faf822959d743a91951c2a4ab08440cb4feee47cb2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865(memPtr) {\n\n        mstore(add(memPtr, 0), \"TPM: price markup too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3eed25028444393961a456bc86e56b13bcf70defa3c8f2bfefe798775cb0865_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct TokenPaymaster.TokenPaymasterConfig -> struct TokenPaymaster.TokenPaymasterConfig\n    function abi_encode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // priceMarkup\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // refundPostopCost\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // priceMaxAge\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_to_t_struct$_TokenPaymasterConfig_$4252_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender not EntryPoint\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_address_payable(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function store_literal_in_memory_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537(memPtr) {\n\n        mstore(add(memPtr, 0), \"TPM: invalid data length\")\n\n    }\n\n    function abi_encode_t_stringliteral_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_706e241f3c4ce5db944ad1e38647a0e1a482fb2f4f14014908f6aae5d804e537_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes32(calldataload(dataArea))\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3047":[{"length":32,"start":1026},{"length":32,"start":1177},{"length":32,"start":1508},{"length":32,"start":1830},{"length":32,"start":1968},{"length":32,"start":2112},{"length":32,"start":2271},{"length":32,"start":3082}],"4295":[{"length":32,"start":1438},{"length":32,"start":2588},{"length":32,"start":3366},{"length":32,"start":3424},{"length":32,"start":3842}]},"linkReferences":{},"object":"6080604052600436106101025760003560e01c8063b1a6cfec11610095578063d0e30db011610064578063d0e30db014610331578063e1d8153c1461033b578063f2fde38b14610366578063f465c77e1461038f578063fc0c546a146103cd57610157565b8063b1a6cfec1461029d578063bb9fe6bf146102c6578063c23a5cea146102dd578063c399ec881461030657610157565b80638da5cb5b116100d15780638da5cb5b146101f55780639e281a9814610220578063a9a2340914610249578063b0d691fe1461027257610157565b80630396cb601461015c578063205c287814610178578063715018a6146101a15780637c986aac146101b857610157565b36610157573373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258743460405161014d9190611315565b60405180910390a2005b600080fd5b61017660048036038101906101719190611380565b6103f8565b005b34801561018457600080fd5b5061019f600480360381019061019a9190611437565b61048f565b005b3480156101ad57600080fd5b506101b6610528565b005b3480156101c457600080fd5b506101df60048036038101906101da9190611477565b61053c565b6040516101ec9190611315565b60405180910390f35b34801561020157600080fd5b5061020a610568565b60405161021791906114d8565b60405180910390f35b34801561022c57600080fd5b506102476004803603810190610242919061151f565b610591565b005b34801561025557600080fd5b50610270600480360381019061026b91906115e9565b6105c8565b005b34801561027e57600080fd5b506102876105e2565b60405161029491906116bc565b60405180910390f35b3480156102a957600080fd5b506102c460048036038101906102bf91906117cc565b610606565b005b3480156102d257600080fd5b506102db61071c565b005b3480156102e957600080fd5b5061030460048036038101906102ff91906117f9565b6107a6565b005b34801561031257600080fd5b5061031b61083c565b6040516103289190611315565b60405180910390f35b6103396108dd565b005b34801561034757600080fd5b5061035061096b565b60405161035d9190611315565b60405180910390f35b34801561037257600080fd5b5061038d60048036038101906103889190611826565b610971565b005b34801561039b57600080fd5b506103b660048036038101906103b191906118ae565b6109f7565b6040516103c492919061199c565b60405180910390f35b3480156103d957600080fd5b506103e2610a1a565b6040516103ef91906119ed565b60405180910390f35b610400610a3e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b815260040161045a9190611a17565b6000604051808303818588803b15801561047357600080fd5b505af1158015610487573d6000803e3d6000fd5b505050505050565b610497610a3e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016104f2929190611a41565b600060405180830381600087803b15801561050c57600080fd5b505af1158015610520573d6000803e3d6000fd5b505050505050565b610530610a3e565b61053a6000610ac5565b565b6000816a52b7d2dcc80cd2e4000000846105569190611a99565b6105609190611b0a565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610599610a3e565b6105c47f00000000000000000000000000000000000000000000000000000000000000008383610b89565b5050565b6105d0610c08565b6105dc84848484610c98565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61060e610a3e565b6a52b7d2dcc80cd2e400000060026106269190611a99565b8160000151111561066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390611b98565b60405180910390fd5b6a52b7d2dcc80cd2e4000000816000015110156106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b590611c04565b60405180910390fd5b8060016000820151816000015560208201518160010155604082015181600201559050507f5ae532796eeeb25558550dab6b9aff6802247590213ad83ad7366b1557b1cbf0816040516107119190611c75565b60405180910390a150565b610724610a3e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561078c57600080fd5b505af11580156107a0573d6000803e3d6000fd5b50505050565b6107ae610a3e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b81526004016108079190611c90565b600060405180830381600087803b15801561082157600080fd5b505af1158015610835573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161089791906114d8565b602060405180830381865afa1580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190611cc0565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161093791906114d8565b6000604051808303818588803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b5050505050565b60045481565b610979610a3e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109eb5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109e291906114d8565b60405180910390fd5b6109f481610ac5565b50565b60606000610a03610c08565b610a0e858585610df4565b91509150935093915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a46610fa3565b73ffffffffffffffffffffffffffffffffffffffff16610a64610568565b73ffffffffffffffffffffffffffffffffffffffff1614610ac357610a87610fa3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610aba91906114d8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c03838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610bbc929190611ced565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fab565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8d90611d62565b60405180910390fd5b565b600060016000015490506000806000808787810190610cb79190611d82565b93509350935093506000610ccb8484611042565b90506000866a52b7d2dcc80cd2e400000067016345785d8a00000281610cf457610cf3611adb565b5b04905042600481905550600082600180015402890190506000610d17828461053c565b905080881115610d5357610d4e7f000000000000000000000000000000000000000000000000000000000000000086838b03610b89565b610d8b565b80881015610d8a57610d897f000000000000000000000000000000000000000000000000000000000000000086308b8503611071565b5b5b8473ffffffffffffffffffffffffffffffffffffffff167f46caa0511cf037f06f57a0bf273a2ff04229f5b12fb04675234a6cbe2e7f1a89828c67016345785d8a0000604051610ddd93929190611de9565b60405180910390a250505050505050505050505050565b606060008060016000015490506000601487806101200190610e169190611e2f565b90500390506000811480610e2a5750602081145b610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6090611ede565b60405180910390fd5b60008760e00135600180015402860190506000836a52b7d2dcc80cd2e400000067016345785d8a00000281610ea157610ea0611adb565b5b04905060208303610eef57600089806101200190610ebf9190611e2f565b601490603492610ed193929190611f08565b90610edc9190611f5b565b60001c905081811015610eed578091505b505b6000610efb838361053c565b9050610f3b7f00000000000000000000000000000000000000000000000000000000000000008b6000016020810190610f349190611826565b3084611071565b808a60e001358b61010001358c6000016020810190610f5a9190611826565b604051602001610f6d9493929190611fba565b6040516020818303038152906040529650610f9460006001600201546004540160006110f3565b95505050505050935093915050565b600033905090565b6000610fd6828473ffffffffffffffffffffffffffffffffffffffff1661112c90919063ffffffff16565b90506000815114158015610ffb575080806020019051810190610ff99190612037565b155b1561103d57826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161103491906114d8565b60405180910390fd5b505050565b60008183036110535782905061106b565b6110688348846110639190612064565b611142565b90505b92915050565b6110ed848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016110a693929190612098565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fab565b50505050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b8561111b57600061111e565b60015b60ff16171790509392505050565b606061113a8383600061115b565b905092915050565b60008183106111515781611153565b825b905092915050565b6060814710156111a257306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161119991906114d8565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516111cb919061210b565b60006040518083038185875af1925050503d8060008114611208576040519150601f19603f3d011682016040523d82523d6000602084013e61120d565b606091505b509150915061121d868383611228565b925050509392505050565b60608261123d57611238826112b7565b6112af565b60008251148015611265575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156112a757836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161129e91906114d8565b60405180910390fd5b8190506112b0565b5b9392505050565b6000815111156112ca5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b61130f816112fc565b82525050565b600060208201905061132a6000830184611306565b92915050565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b61135d81611344565b811461136857600080fd5b50565b60008135905061137a81611354565b92915050565b6000602082840312156113965761139561133a565b5b60006113a48482850161136b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113d8826113ad565b9050919050565b6113e8816113cd565b81146113f357600080fd5b50565b600081359050611405816113df565b92915050565b611414816112fc565b811461141f57600080fd5b50565b6000813590506114318161140b565b92915050565b6000806040838503121561144e5761144d61133a565b5b600061145c858286016113f6565b925050602061146d85828601611422565b9150509250929050565b6000806040838503121561148e5761148d61133a565b5b600061149c85828601611422565b92505060206114ad85828601611422565b9150509250929050565b60006114c2826113ad565b9050919050565b6114d2816114b7565b82525050565b60006020820190506114ed60008301846114c9565b92915050565b6114fc816114b7565b811461150757600080fd5b50565b600081359050611519816114f3565b92915050565b600080604083850312156115365761153561133a565b5b60006115448582860161150a565b925050602061155585828601611422565b9150509250929050565b6003811061156c57600080fd5b50565b60008135905061157e8161155f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126115a9576115a8611584565b5b8235905067ffffffffffffffff8111156115c6576115c5611589565b5b6020830191508360018202830111156115e2576115e161158e565b5b9250929050565b600080600080606085870312156116035761160261133a565b5b60006116118782880161156f565b945050602085013567ffffffffffffffff8111156116325761163161133f565b5b61163e87828801611593565b9350935050604061165187828801611422565b91505092959194509250565b6000819050919050565b600061168261167d611678846113ad565b61165d565b6113ad565b9050919050565b600061169482611667565b9050919050565b60006116a682611689565b9050919050565b6116b68161169b565b82525050565b60006020820190506116d160008301846116ad565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611725826116dc565b810181811067ffffffffffffffff82111715611744576117436116ed565b5b80604052505050565b6000611757611330565b9050611763828261171c565b919050565b60006060828403121561177e5761177d6116d7565b5b611788606061174d565b9050600061179884828501611422565b60008301525060206117ac84828501611422565b60208301525060406117c084828501611422565b60408301525092915050565b6000606082840312156117e2576117e161133a565b5b60006117f084828501611768565b91505092915050565b60006020828403121561180f5761180e61133a565b5b600061181d848285016113f6565b91505092915050565b60006020828403121561183c5761183b61133a565b5b600061184a8482850161150a565b91505092915050565b600080fd5b6000610160828403121561186f5761186e611853565b5b81905092915050565b6000819050919050565b61188b81611878565b811461189657600080fd5b50565b6000813590506118a881611882565b92915050565b6000806000606084860312156118c7576118c661133a565b5b600084013567ffffffffffffffff8111156118e5576118e461133f565b5b6118f186828701611858565b935050602061190286828701611899565b925050604061191386828701611422565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561195757808201518184015260208101905061193c565b60008484015250505050565b600061196e8261191d565b6119788185611928565b9350611988818560208601611939565b611991816116dc565b840191505092915050565b600060408201905081810360008301526119b68185611963565b90506119c56020830184611306565b9392505050565b60006119d782611689565b9050919050565b6119e7816119cc565b82525050565b6000602082019050611a0260008301846119de565b92915050565b611a1181611344565b82525050565b6000602082019050611a2c6000830184611a08565b92915050565b611a3b816113cd565b82525050565b6000604082019050611a566000830185611a32565b611a636020830184611306565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611aa4826112fc565b9150611aaf836112fc565b9250828202611abd816112fc565b91508282048414831517611ad457611ad3611a6a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b15826112fc565b9150611b20836112fc565b925082611b3057611b2f611adb565b5b828204905092915050565b600082825260208201905092915050565b7f54504d3a207072696365206d61726b757020746f6f2068696768000000000000600082015250565b6000611b82601a83611b3b565b9150611b8d82611b4c565b602082019050919050565b60006020820190508181036000830152611bb181611b75565b9050919050565b7f54504d3a207072696365206d61726b757020746f6f206c6f7700000000000000600082015250565b6000611bee601983611b3b565b9150611bf982611bb8565b602082019050919050565b60006020820190508181036000830152611c1d81611be1565b9050919050565b611c2d816112fc565b82525050565b606082016000820151611c496000850182611c24565b506020820151611c5c6020850182611c24565b506040820151611c6f6040850182611c24565b50505050565b6000606082019050611c8a6000830184611c33565b92915050565b6000602082019050611ca56000830184611a32565b92915050565b600081519050611cba8161140b565b92915050565b600060208284031215611cd657611cd561133a565b5b6000611ce484828501611cab565b91505092915050565b6000604082019050611d0260008301856114c9565b611d0f6020830184611306565b9392505050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b6000611d4c601583611b3b565b9150611d5782611d16565b602082019050919050565b60006020820190508181036000830152611d7b81611d3f565b9050919050565b60008060008060808587031215611d9c57611d9b61133a565b5b6000611daa87828801611422565b9450506020611dbb87828801611422565b9350506040611dcc87828801611422565b9250506060611ddd878288016113f6565b91505092959194509250565b6000606082019050611dfe6000830186611306565b611e0b6020830185611306565b611e186040830184611306565b949350505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611e4c57611e4b611e20565b5b80840192508235915067ffffffffffffffff821115611e6e57611e6d611e25565b5b602083019250600182023603831315611e8a57611e89611e2a565b5b509250929050565b7f54504d3a20696e76616c69642064617461206c656e6774680000000000000000600082015250565b6000611ec8601883611b3b565b9150611ed382611e92565b602082019050919050565b60006020820190508181036000830152611ef781611ebb565b9050919050565b600080fd5b600080fd5b60008085851115611f1c57611f1b611efe565b5b83861115611f2d57611f2c611f03565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b6000611f678383611f43565b82611f728135611878565b92506020821015611fb257611fad7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611f4e565b831692505b505092915050565b6000608082019050611fcf6000830187611306565b611fdc6020830186611306565b611fe96040830185611306565b611ff660608301846114c9565b95945050505050565b60008115159050919050565b61201481611fff565b811461201f57600080fd5b50565b6000815190506120318161200b565b92915050565b60006020828403121561204d5761204c61133a565b5b600061205b84828501612022565b91505092915050565b600061206f826112fc565b915061207a836112fc565b925082820190508082111561209257612091611a6a565b5b92915050565b60006060820190506120ad60008301866114c9565b6120ba60208301856114c9565b6120c76040830184611306565b949350505050565b600081905092915050565b60006120e58261191d565b6120ef81856120cf565b93506120ff818560208601611939565b80840191505092915050565b600061211782846120da565b91508190509291505056fea2646970667358221220184f3e92fde3dc09c789811b96387e488b85ff43add4cf6d0b8ec9a17a3716c164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1A6CFEC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xE1D8153C EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3CD JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0xB1A6CFEC EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x306 JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x272 JUMPI PUSH2 0x157 JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x7C986AAC EQ PUSH2 0x1B8 JUMPI PUSH2 0x157 JUMP JUMPDEST CALLDATASIZE PUSH2 0x157 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x528 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x151F JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0x606 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x71C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x83C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x8DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP3 SWAP2 SWAP1 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH2 0xA3E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA3E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F2 SWAP3 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x520 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x530 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x53A PUSH1 0x0 PUSH2 0xAC5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH11 0x52B7D2DCC80CD2E4000000 DUP5 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x599 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x5C4 PUSH32 0x0 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5D0 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x5DC DUP5 DUP5 DUP5 DUP5 PUSH2 0xC98 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x60E PUSH2 0xA3E JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x2 PUSH2 0x626 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x663 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH32 0x5AE532796EEEB25558550DAB6B9AFF6802247590213AD83AD7366B1557B1CBF0 DUP2 PUSH1 0x40 MLOAD PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x724 PUSH2 0xA3E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7AE PUSH2 0xA3E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x835 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x964 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x979 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F4 DUP2 PUSH2 0xAC5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA03 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0xA0E DUP6 DUP6 DUP6 PUSH2 0xDF4 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xA46 PUSH2 0xFA3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA64 PUSH2 0x568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAC3 JUMPI PUSH2 0xA87 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC03 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBBC SWAP3 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8D SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 DUP8 DUP2 ADD SWAP1 PUSH2 0xCB7 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH2 0xCCB DUP5 DUP5 PUSH2 0x1042 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH8 0x16345785D8A0000 MUL DUP2 PUSH2 0xCF4 JUMPI PUSH2 0xCF3 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST DIV SWAP1 POP TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 DUP1 ADD SLOAD MUL DUP10 ADD SWAP1 POP PUSH1 0x0 PUSH2 0xD17 DUP3 DUP5 PUSH2 0x53C JUMP JUMPDEST SWAP1 POP DUP1 DUP9 GT ISZERO PUSH2 0xD53 JUMPI PUSH2 0xD4E PUSH32 0x0 DUP7 DUP4 DUP12 SUB PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST DUP1 DUP9 LT ISZERO PUSH2 0xD8A JUMPI PUSH2 0xD89 PUSH32 0x0 DUP7 ADDRESS DUP12 DUP6 SUB PUSH2 0x1071 JUMP JUMPDEST JUMPDEST JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x46CAA0511CF037F06F57A0BF273A2FF04229F5B12FB04675234A6CBE2E7F1A89 DUP3 DUP13 PUSH8 0x16345785D8A0000 PUSH1 0x40 MLOAD PUSH2 0xDDD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x14 DUP8 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0xE16 SWAP2 SWAP1 PUSH2 0x1E2F JUMP JUMPDEST SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0xE2A JUMPI POP PUSH1 0x20 DUP2 EQ JUMPDEST PUSH2 0xE69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE60 SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 PUSH1 0xE0 ADD CALLDATALOAD PUSH1 0x1 DUP1 ADD SLOAD MUL DUP7 ADD SWAP1 POP PUSH1 0x0 DUP4 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH8 0x16345785D8A0000 MUL DUP2 PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST DIV SWAP1 POP PUSH1 0x20 DUP4 SUB PUSH2 0xEEF JUMPI PUSH1 0x0 DUP10 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x14 SWAP1 PUSH1 0x34 SWAP3 PUSH2 0xED1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F08 JUMP JUMPDEST SWAP1 PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1F5B JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEED JUMPI DUP1 SWAP2 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0xEFB DUP4 DUP4 PUSH2 0x53C JUMP JUMPDEST SWAP1 POP PUSH2 0xF3B PUSH32 0x0 DUP12 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST ADDRESS DUP5 PUSH2 0x1071 JUMP JUMPDEST DUP1 DUP11 PUSH1 0xE0 ADD CALLDATALOAD DUP12 PUSH2 0x100 ADD CALLDATALOAD DUP13 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF6D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP PUSH2 0xF94 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 ADD SLOAD PUSH1 0x4 SLOAD ADD PUSH1 0x0 PUSH2 0x10F3 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD6 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x112C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xFFB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFF9 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x103D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SUB PUSH2 0x1053 JUMPI DUP3 SWAP1 POP PUSH2 0x106B JUMP JUMPDEST PUSH2 0x1068 DUP4 BASEFEE DUP5 PUSH2 0x1063 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x1142 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10ED DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD0 DUP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL PUSH1 0xA0 DUP5 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL DUP6 PUSH2 0x111B JUMPI PUSH1 0x0 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND OR OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x113A DUP4 DUP4 PUSH1 0x0 PUSH2 0x115B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1151 JUMPI DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x11A2 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x11CB SWAP2 SWAP1 PUSH2 0x210B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x120D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x121D DUP7 DUP4 DUP4 PUSH2 0x1228 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x123D JUMPI PUSH2 0x1238 DUP3 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1265 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x12A7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x12B0 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x12CA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130F DUP2 PUSH2 0x12FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135D DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP2 EQ PUSH2 0x1368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x137A DUP2 PUSH2 0x1354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1396 JUMPI PUSH2 0x1395 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13A4 DUP5 DUP3 DUP6 ADD PUSH2 0x136B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D8 DUP3 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E8 DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP2 EQ PUSH2 0x13F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1405 DUP2 PUSH2 0x13DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1414 DUP2 PUSH2 0x12FC JUMP JUMPDEST DUP2 EQ PUSH2 0x141F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1431 DUP2 PUSH2 0x140B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144E JUMPI PUSH2 0x144D PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x145C DUP6 DUP3 DUP7 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x146D DUP6 DUP3 DUP7 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148D PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149C DUP6 DUP3 DUP7 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14AD DUP6 DUP3 DUP7 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C2 DUP3 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D2 DUP2 PUSH2 0x14B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14FC DUP2 PUSH2 0x14B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1519 DUP2 PUSH2 0x14F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1536 JUMPI PUSH2 0x1535 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1544 DUP6 DUP3 DUP7 ADD PUSH2 0x150A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1555 DUP6 DUP3 DUP7 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x156C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x157E DUP2 PUSH2 0x155F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15A9 JUMPI PUSH2 0x15A8 PUSH2 0x1584 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C6 JUMPI PUSH2 0x15C5 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x158E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1603 JUMPI PUSH2 0x1602 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1611 DUP8 DUP3 DUP9 ADD PUSH2 0x156F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x133F JUMP JUMPDEST JUMPDEST PUSH2 0x163E DUP8 DUP3 DUP9 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x1651 DUP8 DUP3 DUP9 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1682 PUSH2 0x167D PUSH2 0x1678 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x165D JUMP JUMPDEST PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1694 DUP3 PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A6 DUP3 PUSH2 0x1689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B6 DUP2 PUSH2 0x169B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1725 DUP3 PUSH2 0x16DC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1757 PUSH2 0x1330 JUMP JUMPDEST SWAP1 POP PUSH2 0x1763 DUP3 DUP3 PUSH2 0x171C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177E JUMPI PUSH2 0x177D PUSH2 0x16D7 JUMP JUMPDEST JUMPDEST PUSH2 0x1788 PUSH1 0x60 PUSH2 0x174D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1798 DUP5 DUP3 DUP6 ADD PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x17AC DUP5 DUP3 DUP6 ADD PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x17C0 DUP5 DUP3 DUP6 ADD PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F0 DUP5 DUP3 DUP6 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181D DUP5 DUP3 DUP6 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183C JUMPI PUSH2 0x183B PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x184A DUP5 DUP3 DUP6 ADD PUSH2 0x150A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186F JUMPI PUSH2 0x186E PUSH2 0x1853 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188B DUP2 PUSH2 0x1878 JUMP JUMPDEST DUP2 EQ PUSH2 0x1896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18A8 DUP2 PUSH2 0x1882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18C7 JUMPI PUSH2 0x18C6 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x133F JUMP JUMPDEST JUMPDEST PUSH2 0x18F1 DUP7 DUP3 DUP8 ADD PUSH2 0x1858 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1902 DUP7 DUP3 DUP8 ADD PUSH2 0x1899 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1913 DUP7 DUP3 DUP8 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1957 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x193C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196E DUP3 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x1978 DUP2 DUP6 PUSH2 0x1928 JUMP JUMPDEST SWAP4 POP PUSH2 0x1988 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x1991 DUP2 PUSH2 0x16DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19B6 DUP2 DUP6 PUSH2 0x1963 JUMP JUMPDEST SWAP1 POP PUSH2 0x19C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D7 DUP3 PUSH2 0x1689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E7 DUP2 PUSH2 0x19CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A02 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A11 DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A3B DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A56 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A32 JUMP JUMPDEST PUSH2 0x1A63 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AA4 DUP3 PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAF DUP4 PUSH2 0x12FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1ABD DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1AD4 JUMPI PUSH2 0x1AD3 PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B15 DUP3 PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1B20 DUP4 PUSH2 0x12FC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B30 JUMPI PUSH2 0x1B2F PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54504D3A207072696365206D61726B757020746F6F2068696768000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B82 PUSH1 0x1A DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8D DUP3 PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB1 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54504D3A207072696365206D61726B757020746F6F206C6F7700000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEE PUSH1 0x19 DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF9 DUP3 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1D DUP2 PUSH2 0x1BE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2D DUP2 PUSH2 0x12FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1C49 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1C24 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1C5C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1C24 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1C6F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1C24 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CBA DUP2 PUSH2 0x140B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD6 JUMPI PUSH2 0x1CD5 PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE4 DUP5 DUP3 DUP6 ADD PUSH2 0x1CAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D02 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x1D0F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4C PUSH1 0x15 DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D57 DUP3 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D7B DUP2 PUSH2 0x1D3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D9C JUMPI PUSH2 0x1D9B PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DAA DUP8 DUP3 DUP9 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1DBB DUP8 DUP3 DUP9 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1DCC DUP8 DUP3 DUP9 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1DDD DUP8 DUP3 DUP9 ADD PUSH2 0x13F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DFE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1E0B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1E18 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1E4C JUMPI PUSH2 0x1E4B PUSH2 0x1E20 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E6E JUMPI PUSH2 0x1E6D PUSH2 0x1E25 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1E8A JUMPI PUSH2 0x1E89 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x54504D3A20696E76616C69642064617461206C656E6774680000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC8 PUSH1 0x18 DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED3 DUP3 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF7 DUP2 PUSH2 0x1EBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x1EFE JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x1F2D JUMPI PUSH2 0x1F2C PUSH2 0x1F03 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F67 DUP4 DUP4 PUSH2 0x1F43 JUMP JUMPDEST DUP3 PUSH2 0x1F72 DUP2 CALLDATALOAD PUSH2 0x1878 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x1FB2 JUMPI PUSH2 0x1FAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x1F4E JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FCF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1FDC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1FE9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1FF6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14C9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2014 DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP2 EQ PUSH2 0x201F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2031 DUP2 PUSH2 0x200B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204D JUMPI PUSH2 0x204C PUSH2 0x133A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x205B DUP5 DUP3 DUP6 ADD PUSH2 0x2022 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206F DUP3 PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP PUSH2 0x207A DUP4 PUSH2 0x12FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2092 JUMPI PUSH2 0x2091 PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20AD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x20BA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14C9 JUMP JUMPDEST PUSH2 0x20C7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E5 DUP3 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x20EF DUP2 DUP6 PUSH2 0x20CF JUMP JUMPDEST SWAP4 POP PUSH2 0x20FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1939 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2117 DUP3 DUP5 PUSH2 0x20DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x4F RETURNDATACOPY SWAP3 REVERT 0xE3 0xDC MULMOD 0xC7 DUP10 DUP2 SHL SWAP7 CODESIZE PUSH31 0x488B85FF43ADD4CF6D0B8EC9A17A3716C164736F6C63430008140033000000 ","sourceMap":"1458:8972:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10397:10;10388:31;;;10409:9;10388:31;;;;;;:::i;:::-;;;;;;;;1458:8972;;;;;3695:142:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3287:176;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;3936:141:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10093:130:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1480:223:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;486:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3485:443:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4203:85:17;;;;;;;;;;;;;:::i;:::-;;4516:135;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3925:113;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3009:106;;;:::i;:::-;;2649:35:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;673:322:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2907:29:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3695:142:17;1531:13:0;:11;:13::i;:::-;3775:10:17::1;:19;;;3802:9;3813:15;3775:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3695:142:::0;:::o;3287:176::-;1531:13:0;:11;:13::i;:::-;3409:10:17::1;:21;;;3431:15;3448:6;3409:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3287:176:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3936:141:27:-;4008:7;4064:5;2580:4;4035:6;:26;;;;:::i;:::-;:34;;;;:::i;:::-;4028:41;;3936:141;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;10093:130:27:-;1531:13:0;:11;:13::i;:::-;10174:41:27::1;10197:5;10204:2;10208:6;10174:22;:41::i;:::-;10093:130:::0;;:::o;1480:223:17:-;1623:24;:22;:24::i;:::-;1658:37;1666:4;1672:7;;1681:13;1658:7;:37::i;:::-;1480:223;;;;:::o;486:39::-;;;:::o;3485:443:27:-;1531:13:0;:11;:13::i;:::-;2580:4:27::1;3658:1;:21;;;;:::i;:::-;3621;:33;;;:58;;3613:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2580:4;3729:21;:33;;;:54;;3721:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;3847:21;3824:20;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;3884:36;3898:21;3884:36;;;;;;:::i;:::-;;;;;;;;3485:443:::0;:::o;4203:85:17:-;1531:13:0;:11;:13::i;:::-;4256:10:17::1;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4203:85::o:0;4516:135::-;1531:13:0;:11;:13::i;:::-;4602:10:17::1;:24;;;4627:15;4602:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4516:135:::0;:::o;3925:113::-;3968:7;3995:10;:20;;;4024:4;3995:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3988:42;;3925:113;:::o;3009:106::-;3054:10;:20;;;3082:9;3101:4;3054:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3009:106::o;2649:35:27:-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;673:322:17:-;835:20;857:22;892:24;:22;:24::i;:::-;934:53;959:6;967:10;979:7;934:24;:53::i;:::-;927:60;;;;673:322;;;;;;:::o;2907:29:27:-;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1303:160:5:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;4735:137:17:-;4827:10;4805:33;;:10;:33;;;4797:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4735:137::o;6645:2127:27:-;6775:19;6797:20;:32;;;6775:54;;6863:17;6899:20;6938:28;6985:20;7034:7;;7023:57;;;;;;;:::i;:::-;6844:236;;;;;;;;7095:16;7114:47;7126:12;7140:20;7114:11;:47::i;:::-;7095:66;;7356:29;7422:11;2580:4;2771;7388:31;:45;;;;;:::i;:::-;;;7356:77;;7471:15;7448:20;:38;;;;7552:26;7637:8;7597:20;:37;;;:48;7581:13;:64;7552:93;;7660:25;7688:53;7699:18;7719:21;7688:10;:53::i;:::-;7660:81;;7772:17;7760:9;:29;7756:832;;;7933:156;7978:5;8006:12;8053:17;8041:9;:29;7933:22;:156::i;:::-;7756:832;;;8127:17;8115:9;:29;8111:477;;;8376:196;8425:5;8453:12;8496:4;8544:9;8524:17;:29;8376:26;:196::i;:::-;8111:477;7756:832;8632:12;8609:83;;;8646:17;8665:13;2771:4;8609:83;;;;;;;;:::i;:::-;;;;;;;;6750:2015;;;;;;;;;6645:2127;;;;:::o;4559:1717::-;4700:20;4722:24;4776:19;4798:20;:32;;;4776:54;;4845:30;4911:2;4878:6;:23;;;;;;;;:::i;:::-;:30;;:35;4845:68;;4962:1;4936:22;:27;:59;;;;4993:2;4967:22;:28;4936:59;4928:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;5070:23;5155:6;:19;;;5115:20;:37;;;:59;5096:15;:79;5070:105;;5305:29;5371:11;2580:4;2771;5337:31;:45;;;;;:::i;:::-;;;5305:77;;5427:2;5401:22;:28;5397:376;;5450:27;5496:6;:23;;;;;;;;:::i;:::-;5520:2;5496:32;5525:2;5496:32;;;;;;;:::i;:::-;5488:41;;;;;:::i;:::-;5480:50;;5450:80;;5575:21;5553:19;:43;5549:209;;;5719:19;5695:43;;5549:209;5431:342;5397:376;5787:19;5809:50;5820:15;5837:21;5809:10;:50::i;:::-;5787:72;;5874:76;5901:5;5908:6;:13;;;;;;;;;;:::i;:::-;5931:4;5938:11;5874:26;:76::i;:::-;5986:11;5999:6;:19;;;6020:6;:27;;;6049:6;:13;;;;;;;;;;:::i;:::-;5975:88;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5965:98;;6097:160;6135:5;6189:20;:32;;;6166:20;;:55;6241:1;6097:19;:160::i;:::-;6078:179;;4749:1520;;;;;4559:1717;;;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;4059:629:5:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;9494:367:27:-;9590:7;9630:20;9614:12;:36;9610:171;;9757:12;9750:19;;;;9610:171;9798:55;9802:12;9839:13;9816:20;:36;;;;:::i;:::-;9798:3;:55::i;:::-;9791:62;;9494:367;;;;;:::o;1702:188:5:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;3287:257:18:-;3402:7;3530:8;3514:10;3506:19;;:33;;3489:3;3474:10;3466:19;;:26;;3435:9;:17;;3451:1;3435:17;;;3447:1;3435:17;3434:59;;;:106;3418:122;;3287:257;;;;;:::o;2705:151:6:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;10231:106:27:-;10289:7;10320:1;10316;:5;:13;;10328:1;10316:13;;;10324:1;10316:13;10309:20;;10231:106;;;;:::o;3180:392:6:-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:77:28;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:93;805:7;845:10;838:5;834:22;823:33;;769:93;;;:::o;868:120::-;940:23;957:5;940:23;:::i;:::-;933:5;930:34;920:62;;978:1;975;968:12;920:62;868:120;:::o;994:137::-;1039:5;1077:6;1064:20;1055:29;;1093:32;1119:5;1093:32;:::i;:::-;994:137;;;;:::o;1137:327::-;1195:6;1244:2;1232:9;1223:7;1219:23;1215:32;1212:119;;;1250:79;;:::i;:::-;1212:119;1370:1;1395:52;1439:7;1430:6;1419:9;1415:22;1395:52;:::i;:::-;1385:62;;1341:116;1137:327;;;;:::o;1470:126::-;1507:7;1547:42;1540:5;1536:54;1525:65;;1470:126;;;:::o;1602:104::-;1647:7;1676:24;1694:5;1676:24;:::i;:::-;1665:35;;1602:104;;;:::o;1712:138::-;1793:32;1819:5;1793:32;:::i;:::-;1786:5;1783:43;1773:71;;1840:1;1837;1830:12;1773:71;1712:138;:::o;1856:155::-;1910:5;1948:6;1935:20;1926:29;;1964:41;1999:5;1964:41;:::i;:::-;1856:155;;;;:::o;2017:122::-;2090:24;2108:5;2090:24;:::i;:::-;2083:5;2080:35;2070:63;;2129:1;2126;2119:12;2070:63;2017:122;:::o;2145:139::-;2191:5;2229:6;2216:20;2207:29;;2245:33;2272:5;2245:33;:::i;:::-;2145:139;;;;:::o;2290:490::-;2366:6;2374;2423:2;2411:9;2402:7;2398:23;2394:32;2391:119;;;2429:79;;:::i;:::-;2391:119;2549:1;2574:61;2627:7;2618:6;2607:9;2603:22;2574:61;:::i;:::-;2564:71;;2520:125;2684:2;2710:53;2755:7;2746:6;2735:9;2731:22;2710:53;:::i;:::-;2700:63;;2655:118;2290:490;;;;;:::o;2786:474::-;2854:6;2862;2911:2;2899:9;2890:7;2886:23;2882:32;2879:119;;;2917:79;;:::i;:::-;2879:119;3037:1;3062:53;3107:7;3098:6;3087:9;3083:22;3062:53;:::i;:::-;3052:63;;3008:117;3164:2;3190:53;3235:7;3226:6;3215:9;3211:22;3190:53;:::i;:::-;3180:63;;3135:118;2786:474;;;;;:::o;3266:96::-;3303:7;3332:24;3350:5;3332:24;:::i;:::-;3321:35;;3266:96;;;:::o;3368:118::-;3455:24;3473:5;3455:24;:::i;:::-;3450:3;3443:37;3368:118;;:::o;3492:222::-;3585:4;3623:2;3612:9;3608:18;3600:26;;3636:71;3704:1;3693:9;3689:17;3680:6;3636:71;:::i;:::-;3492:222;;;;:::o;3720:122::-;3793:24;3811:5;3793:24;:::i;:::-;3786:5;3783:35;3773:63;;3832:1;3829;3822:12;3773:63;3720:122;:::o;3848:139::-;3894:5;3932:6;3919:20;3910:29;;3948:33;3975:5;3948:33;:::i;:::-;3848:139;;;;:::o;3993:474::-;4061:6;4069;4118:2;4106:9;4097:7;4093:23;4089:32;4086:119;;;4124:79;;:::i;:::-;4086:119;4244:1;4269:53;4314:7;4305:6;4294:9;4290:22;4269:53;:::i;:::-;4259:63;;4215:117;4371:2;4397:53;4442:7;4433:6;4422:9;4418:22;4397:53;:::i;:::-;4387:63;;4342:118;3993:474;;;;;:::o;4473:114::-;4561:1;4554:5;4551:12;4541:40;;4577:1;4574;4567:12;4541:40;4473:114;:::o;4593:169::-;4654:5;4692:6;4679:20;4670:29;;4708:48;4750:5;4708:48;:::i;:::-;4593:169;;;;:::o;4768:117::-;4877:1;4874;4867:12;4891:117;5000:1;4997;4990:12;5014:117;5123:1;5120;5113:12;5150:552;5207:8;5217:6;5267:3;5260:4;5252:6;5248:17;5244:27;5234:122;;5275:79;;:::i;:::-;5234:122;5388:6;5375:20;5365:30;;5418:18;5410:6;5407:30;5404:117;;;5440:79;;:::i;:::-;5404:117;5554:4;5546:6;5542:17;5530:29;;5608:3;5600:4;5592:6;5588:17;5578:8;5574:32;5571:41;5568:128;;;5615:79;;:::i;:::-;5568:128;5150:552;;;;;:::o;5708:847::-;5811:6;5819;5827;5835;5884:2;5872:9;5863:7;5859:23;5855:32;5852:119;;;5890:79;;:::i;:::-;5852:119;6010:1;6035:68;6095:7;6086:6;6075:9;6071:22;6035:68;:::i;:::-;6025:78;;5981:132;6180:2;6169:9;6165:18;6152:32;6211:18;6203:6;6200:30;6197:117;;;6233:79;;:::i;:::-;6197:117;6346:64;6402:7;6393:6;6382:9;6378:22;6346:64;:::i;:::-;6328:82;;;;6123:297;6459:2;6485:53;6530:7;6521:6;6510:9;6506:22;6485:53;:::i;:::-;6475:63;;6430:118;5708:847;;;;;;;:::o;6561:60::-;6589:3;6610:5;6603:12;;6561:60;;;:::o;6627:142::-;6677:9;6710:53;6728:34;6737:24;6755:5;6737:24;:::i;:::-;6728:34;:::i;:::-;6710:53;:::i;:::-;6697:66;;6627:142;;;:::o;6775:126::-;6825:9;6858:37;6889:5;6858:37;:::i;:::-;6845:50;;6775:126;;;:::o;6907:146::-;6977:9;7010:37;7041:5;7010:37;:::i;:::-;6997:50;;6907:146;;;:::o;7059:171::-;7166:57;7217:5;7166:57;:::i;:::-;7161:3;7154:70;7059:171;;:::o;7236:262::-;7349:4;7387:2;7376:9;7372:18;7364:26;;7400:91;7488:1;7477:9;7473:17;7464:6;7400:91;:::i;:::-;7236:262;;;;:::o;7504:117::-;7613:1;7610;7603:12;7627:102;7668:6;7719:2;7715:7;7710:2;7703:5;7699:14;7695:28;7685:38;;7627:102;;;:::o;7735:180::-;7783:77;7780:1;7773:88;7880:4;7877:1;7870:15;7904:4;7901:1;7894:15;7921:281;8004:27;8026:4;8004:27;:::i;:::-;7996:6;7992:40;8134:6;8122:10;8119:22;8098:18;8086:10;8083:34;8080:62;8077:88;;;8145:18;;:::i;:::-;8077:88;8185:10;8181:2;8174:22;7964:238;7921:281;;:::o;8208:129::-;8242:6;8269:20;;:::i;:::-;8259:30;;8298:33;8326:4;8318:6;8298:33;:::i;:::-;8208:129;;;:::o;8516:774::-;8603:5;8647:4;8635:9;8630:3;8626:19;8622:30;8619:117;;;8655:79;;:::i;:::-;8619:117;8754:21;8770:4;8754:21;:::i;:::-;8745:30;;8841:1;8881:49;8926:3;8917:6;8906:9;8902:22;8881:49;:::i;:::-;8874:4;8867:5;8863:16;8856:75;8785:157;9013:2;9054:49;9099:3;9090:6;9079:9;9075:22;9054:49;:::i;:::-;9047:4;9040:5;9036:16;9029:75;8952:163;9181:2;9222:49;9267:3;9258:6;9247:9;9243:22;9222:49;:::i;:::-;9215:4;9208:5;9204:16;9197:75;9125:158;8516:774;;;;:::o;9296:405::-;9393:6;9442:2;9430:9;9421:7;9417:23;9413:32;9410:119;;;9448:79;;:::i;:::-;9410:119;9568:1;9593:91;9676:7;9667:6;9656:9;9652:22;9593:91;:::i;:::-;9583:101;;9539:155;9296:405;;;;:::o;9707:345::-;9774:6;9823:2;9811:9;9802:7;9798:23;9794:32;9791:119;;;9829:79;;:::i;:::-;9791:119;9949:1;9974:61;10027:7;10018:6;10007:9;10003:22;9974:61;:::i;:::-;9964:71;;9920:125;9707:345;;;;:::o;10058:329::-;10117:6;10166:2;10154:9;10145:7;10141:23;10137:32;10134:119;;;10172:79;;:::i;:::-;10134:119;10292:1;10317:53;10362:7;10353:6;10342:9;10338:22;10317:53;:::i;:::-;10307:63;;10263:117;10058:329;;;;:::o;10393:117::-;10502:1;10499;10492:12;10544:238;10623:5;10664:3;10655:6;10650:3;10646:16;10642:26;10639:113;;;10671:79;;:::i;:::-;10639:113;10770:6;10761:15;;10544:238;;;;:::o;10788:77::-;10825:7;10854:5;10843:16;;10788:77;;;:::o;10871:122::-;10944:24;10962:5;10944:24;:::i;:::-;10937:5;10934:35;10924:63;;10983:1;10980;10973:12;10924:63;10871:122;:::o;10999:139::-;11045:5;11083:6;11070:20;11061:29;;11099:33;11126:5;11099:33;:::i;:::-;10999:139;;;;:::o;11144:845::-;11254:6;11262;11270;11319:2;11307:9;11298:7;11294:23;11290:32;11287:119;;;11325:79;;:::i;:::-;11287:119;11473:1;11462:9;11458:17;11445:31;11503:18;11495:6;11492:30;11489:117;;;11525:79;;:::i;:::-;11489:117;11630:86;11708:7;11699:6;11688:9;11684:22;11630:86;:::i;:::-;11620:96;;11416:310;11765:2;11791:53;11836:7;11827:6;11816:9;11812:22;11791:53;:::i;:::-;11781:63;;11736:118;11893:2;11919:53;11964:7;11955:6;11944:9;11940:22;11919:53;:::i;:::-;11909:63;;11864:118;11144:845;;;;;:::o;11995:98::-;12046:6;12080:5;12074:12;12064:22;;11995:98;;;:::o;12099:168::-;12182:11;12216:6;12211:3;12204:19;12256:4;12251:3;12247:14;12232:29;;12099:168;;;;:::o;12273:246::-;12354:1;12364:113;12378:6;12375:1;12372:13;12364:113;;;12463:1;12458:3;12454:11;12448:18;12444:1;12439:3;12435:11;12428:39;12400:2;12397:1;12393:10;12388:15;;12364:113;;;12511:1;12502:6;12497:3;12493:16;12486:27;12335:184;12273:246;;;:::o;12525:373::-;12611:3;12639:38;12671:5;12639:38;:::i;:::-;12693:70;12756:6;12751:3;12693:70;:::i;:::-;12686:77;;12772:65;12830:6;12825:3;12818:4;12811:5;12807:16;12772:65;:::i;:::-;12862:29;12884:6;12862:29;:::i;:::-;12857:3;12853:39;12846:46;;12615:283;12525:373;;;;:::o;12904:419::-;13043:4;13081:2;13070:9;13066:18;13058:26;;13130:9;13124:4;13120:20;13116:1;13105:9;13101:17;13094:47;13158:76;13229:4;13220:6;13158:76;:::i;:::-;13150:84;;13244:72;13312:2;13301:9;13297:18;13288:6;13244:72;:::i;:::-;12904:419;;;;;:::o;13329:140::-;13393:9;13426:37;13457:5;13426:37;:::i;:::-;13413:50;;13329:140;;;:::o;13475:159::-;13576:51;13621:5;13576:51;:::i;:::-;13571:3;13564:64;13475:159;;:::o;13640:250::-;13747:4;13785:2;13774:9;13770:18;13762:26;;13798:85;13880:1;13869:9;13865:17;13856:6;13798:85;:::i;:::-;13640:250;;;;:::o;13896:115::-;13981:23;13998:5;13981:23;:::i;:::-;13976:3;13969:36;13896:115;;:::o;14017:218::-;14108:4;14146:2;14135:9;14131:18;14123:26;;14159:69;14225:1;14214:9;14210:17;14201:6;14159:69;:::i;:::-;14017:218;;;;:::o;14241:142::-;14344:32;14370:5;14344:32;:::i;:::-;14339:3;14332:45;14241:142;;:::o;14389:364::-;14526:4;14564:2;14553:9;14549:18;14541:26;;14577:87;14661:1;14650:9;14646:17;14637:6;14577:87;:::i;:::-;14674:72;14742:2;14731:9;14727:18;14718:6;14674:72;:::i;:::-;14389:364;;;;;:::o;14759:180::-;14807:77;14804:1;14797:88;14904:4;14901:1;14894:15;14928:4;14925:1;14918:15;14945:410;14985:7;15008:20;15026:1;15008:20;:::i;:::-;15003:25;;15042:20;15060:1;15042:20;:::i;:::-;15037:25;;15097:1;15094;15090:9;15119:30;15137:11;15119:30;:::i;:::-;15108:41;;15298:1;15289:7;15285:15;15282:1;15279:22;15259:1;15252:9;15232:83;15209:139;;15328:18;;:::i;:::-;15209:139;14993:362;14945:410;;;;:::o;15361:180::-;15409:77;15406:1;15399:88;15506:4;15503:1;15496:15;15530:4;15527:1;15520:15;15547:185;15587:1;15604:20;15622:1;15604:20;:::i;:::-;15599:25;;15638:20;15656:1;15638:20;:::i;:::-;15633:25;;15677:1;15667:35;;15682:18;;:::i;:::-;15667:35;15724:1;15721;15717:9;15712:14;;15547:185;;;;:::o;15738:169::-;15822:11;15856:6;15851:3;15844:19;15896:4;15891:3;15887:14;15872:29;;15738:169;;;;:::o;15913:176::-;16053:28;16049:1;16041:6;16037:14;16030:52;15913:176;:::o;16095:366::-;16237:3;16258:67;16322:2;16317:3;16258:67;:::i;:::-;16251:74;;16334:93;16423:3;16334:93;:::i;:::-;16452:2;16447:3;16443:12;16436:19;;16095:366;;;:::o;16467:419::-;16633:4;16671:2;16660:9;16656:18;16648:26;;16720:9;16714:4;16710:20;16706:1;16695:9;16691:17;16684:47;16748:131;16874:4;16748:131;:::i;:::-;16740:139;;16467:419;;;:::o;16892:175::-;17032:27;17028:1;17020:6;17016:14;17009:51;16892:175;:::o;17073:366::-;17215:3;17236:67;17300:2;17295:3;17236:67;:::i;:::-;17229:74;;17312:93;17401:3;17312:93;:::i;:::-;17430:2;17425:3;17421:12;17414:19;;17073:366;;;:::o;17445:419::-;17611:4;17649:2;17638:9;17634:18;17626:26;;17698:9;17692:4;17688:20;17684:1;17673:9;17669:17;17662:47;17726:131;17852:4;17726:131;:::i;:::-;17718:139;;17445:419;;;:::o;17870:108::-;17947:24;17965:5;17947:24;:::i;:::-;17942:3;17935:37;17870:108;;:::o;18080:733::-;18253:4;18248:3;18244:14;18347:4;18340:5;18336:16;18330:23;18366:63;18423:4;18418:3;18414:14;18400:12;18366:63;:::i;:::-;18268:171;18533:4;18526:5;18522:16;18516:23;18552:63;18609:4;18604:3;18600:14;18586:12;18552:63;:::i;:::-;18449:176;18714:4;18707:5;18703:16;18697:23;18733:63;18790:4;18785:3;18781:14;18767:12;18733:63;:::i;:::-;18635:171;18222:591;18080:733;;:::o;18819:374::-;18988:4;19026:2;19015:9;19011:18;19003:26;;19039:147;19183:1;19172:9;19168:17;19159:6;19039:147;:::i;:::-;18819:374;;;;:::o;19199:254::-;19308:4;19346:2;19335:9;19331:18;19323:26;;19359:87;19443:1;19432:9;19428:17;19419:6;19359:87;:::i;:::-;19199:254;;;;:::o;19459:143::-;19516:5;19547:6;19541:13;19532:22;;19563:33;19590:5;19563:33;:::i;:::-;19459:143;;;;:::o;19608:351::-;19678:6;19727:2;19715:9;19706:7;19702:23;19698:32;19695:119;;;19733:79;;:::i;:::-;19695:119;19853:1;19878:64;19934:7;19925:6;19914:9;19910:22;19878:64;:::i;:::-;19868:74;;19824:128;19608:351;;;;:::o;19965:332::-;20086:4;20124:2;20113:9;20109:18;20101:26;;20137:71;20205:1;20194:9;20190:17;20181:6;20137:71;:::i;:::-;20218:72;20286:2;20275:9;20271:18;20262:6;20218:72;:::i;:::-;19965:332;;;;;:::o;20303:171::-;20443:23;20439:1;20431:6;20427:14;20420:47;20303:171;:::o;20480:366::-;20622:3;20643:67;20707:2;20702:3;20643:67;:::i;:::-;20636:74;;20719:93;20808:3;20719:93;:::i;:::-;20837:2;20832:3;20828:12;20821:19;;20480:366;;;:::o;20852:419::-;21018:4;21056:2;21045:9;21041:18;21033:26;;21105:9;21099:4;21095:20;21091:1;21080:9;21076:17;21069:47;21133:131;21259:4;21133:131;:::i;:::-;21125:139;;20852:419;;;:::o;21277:781::-;21371:6;21379;21387;21395;21444:3;21432:9;21423:7;21419:23;21415:33;21412:120;;;21451:79;;:::i;:::-;21412:120;21571:1;21596:53;21641:7;21632:6;21621:9;21617:22;21596:53;:::i;:::-;21586:63;;21542:117;21698:2;21724:53;21769:7;21760:6;21749:9;21745:22;21724:53;:::i;:::-;21714:63;;21669:118;21826:2;21852:53;21897:7;21888:6;21877:9;21873:22;21852:53;:::i;:::-;21842:63;;21797:118;21954:2;21980:61;22033:7;22024:6;22013:9;22009:22;21980:61;:::i;:::-;21970:71;;21925:126;21277:781;;;;;;;:::o;22064:442::-;22213:4;22251:2;22240:9;22236:18;22228:26;;22264:71;22332:1;22321:9;22317:17;22308:6;22264:71;:::i;:::-;22345:72;22413:2;22402:9;22398:18;22389:6;22345:72;:::i;:::-;22427;22495:2;22484:9;22480:18;22471:6;22427:72;:::i;:::-;22064:442;;;;;;:::o;22512:117::-;22621:1;22618;22611:12;22635:117;22744:1;22741;22734:12;22758:117;22867:1;22864;22857:12;22881:724;22958:4;22964:6;23020:11;23007:25;23120:1;23114:4;23110:12;23099:8;23083:14;23079:29;23075:48;23055:18;23051:73;23041:168;;23128:79;;:::i;:::-;23041:168;23240:18;23230:8;23226:33;23218:41;;23292:4;23279:18;23269:28;;23320:18;23312:6;23309:30;23306:117;;;23342:79;;:::i;:::-;23306:117;23450:2;23444:4;23440:13;23432:21;;23507:4;23499:6;23495:17;23479:14;23475:38;23469:4;23465:49;23462:136;;;23517:79;;:::i;:::-;23462:136;22971:634;22881:724;;;;;:::o;23611:174::-;23751:26;23747:1;23739:6;23735:14;23728:50;23611:174;:::o;23791:366::-;23933:3;23954:67;24018:2;24013:3;23954:67;:::i;:::-;23947:74;;24030:93;24119:3;24030:93;:::i;:::-;24148:2;24143:3;24139:12;24132:19;;23791:366;;;:::o;24163:419::-;24329:4;24367:2;24356:9;24352:18;24344:26;;24416:9;24410:4;24406:20;24402:1;24391:9;24387:17;24380:47;24444:131;24570:4;24444:131;:::i;:::-;24436:139;;24163:419;;;:::o;24588:117::-;24697:1;24694;24687:12;24711:117;24820:1;24817;24810:12;24834:469;24939:9;24950;24988:8;24976:10;24973:24;24970:111;;;25000:79;;:::i;:::-;24970:111;25106:6;25096:8;25093:20;25090:107;;;25116:79;;:::i;:::-;25090:107;25247:1;25235:10;25231:18;25223:6;25219:31;25206:44;;25286:10;25276:8;25272:25;25259:38;;24834:469;;;;;;;:::o;25309:96::-;25367:6;25395:3;25385:13;;25309:96;;;;:::o;25503:107::-;25547:8;25597:5;25591:4;25587:16;25566:37;;25503:107;;;;:::o;25616:552::-;25707:5;25738:45;25779:3;25772:5;25738:45;:::i;:::-;25808:5;25832:41;25863:8;25850:22;25832:41;:::i;:::-;25823:50;;25897:2;25889:6;25886:14;25883:278;;;25968:169;26053:66;26023:6;26019:2;26015:15;26012:1;26008:23;25968:169;:::i;:::-;25945:5;25924:227;25915:236;;25883:278;25713:455;;25616:552;;;;:::o;26174:553::-;26351:4;26389:3;26378:9;26374:19;26366:27;;26403:71;26471:1;26460:9;26456:17;26447:6;26403:71;:::i;:::-;26484:72;26552:2;26541:9;26537:18;26528:6;26484:72;:::i;:::-;26566;26634:2;26623:9;26619:18;26610:6;26566:72;:::i;:::-;26648;26716:2;26705:9;26701:18;26692:6;26648:72;:::i;:::-;26174:553;;;;;;;:::o;26733:90::-;26767:7;26810:5;26803:13;26796:21;26785:32;;26733:90;;;:::o;26829:116::-;26899:21;26914:5;26899:21;:::i;:::-;26892:5;26889:32;26879:60;;26935:1;26932;26925:12;26879:60;26829:116;:::o;26951:137::-;27005:5;27036:6;27030:13;27021:22;;27052:30;27076:5;27052:30;:::i;:::-;26951:137;;;;:::o;27094:345::-;27161:6;27210:2;27198:9;27189:7;27185:23;27181:32;27178:119;;;27216:79;;:::i;:::-;27178:119;27336:1;27361:61;27414:7;27405:6;27394:9;27390:22;27361:61;:::i;:::-;27351:71;;27307:125;27094:345;;;;:::o;27445:191::-;27485:3;27504:20;27522:1;27504:20;:::i;:::-;27499:25;;27538:20;27556:1;27538:20;:::i;:::-;27533:25;;27581:1;27578;27574:9;27567:16;;27602:3;27599:1;27596:10;27593:36;;;27609:18;;:::i;:::-;27593:36;27445:191;;;;:::o;27642:442::-;27791:4;27829:2;27818:9;27814:18;27806:26;;27842:71;27910:1;27899:9;27895:17;27886:6;27842:71;:::i;:::-;27923:72;27991:2;27980:9;27976:18;27967:6;27923:72;:::i;:::-;28005;28073:2;28062:9;28058:18;28049:6;28005:72;:::i;:::-;27642:442;;;;;;:::o;28090:147::-;28191:11;28228:3;28213:18;;28090:147;;;;:::o;28243:386::-;28347:3;28375:38;28407:5;28375:38;:::i;:::-;28429:88;28510:6;28505:3;28429:88;:::i;:::-;28422:95;;28526:65;28584:6;28579:3;28572:4;28565:5;28561:16;28526:65;:::i;:::-;28616:6;28611:3;28607:16;28600:23;;28351:278;28243:386;;;;:::o;28635:271::-;28765:3;28787:93;28876:3;28867:6;28787:93;:::i;:::-;28780:100;;28897:3;28890:10;;28635:271;;;;:::o"},"methodIdentifiers":{"addStake(uint32)":"0396cb60","cachedPriceTimestamp()":"e1d8153c","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","setTokenPaymasterConfig((uint256,uint256,uint256))":"b1a6cfec","token()":"fc0c546a","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","weiToToken(uint256,uint256)":"7c986aac","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878","withdrawToken(address,uint256)":"9e281a98"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"priceMarkup\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundPostopCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceMaxAge\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenPaymaster.TokenPaymasterConfig\",\"name\":\"_tokenPaymasterConfig\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"priceMarkup\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundPostopCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceMaxAge\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct TokenPaymaster.TokenPaymasterConfig\",\"name\":\"tokenPaymasterConfig\",\"type\":\"tuple\"}],\"name\":\"ConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preCharge\",\"type\":\"uint256\"}],\"name\":\"PostOpReverted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualTokenCharge\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualTokenPrice\",\"type\":\"uint256\"}],\"name\":\"UserOperationSponsored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cachedPriceTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"priceMarkup\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundPostopCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceMaxAge\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenPaymaster.TokenPaymasterConfig\",\"name\":\"_tokenPaymasterConfig\",\"type\":\"tuple\"}],\"name\":\"setTokenPaymasterConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"weiToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Inherits from BasePaymaster.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setTokenPaymasterConfig((uint256,uint256,uint256))\":{\"params\":{\"_tokenPaymasterConfig\":\"The new configuration struct.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}},\"withdrawToken(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"to\":\"The address to transfer the tokens to.\"}}},\"title\":\"Sample ERC-20 Token Paymaster for ERC-4337 This Paymaster covers gas fees in exchange for ERC20 tokens charged using allowance pre-issued by ERC-4337 accounts. The contract refunds excess tokens if the actual gas cost is lower than the initially provided amount. The token price cannot be queried in the validation code due to storage access restrictions of ERC-4337. The price is cached inside the contract and is updated in the 'postOp' stage if the change is >10%. It is theoretically possible the token has depreciated so much since th  e last 'postOp' the refund becomes negative. The contract reverts the inner user transaction in that case but keeps the charge. The contract also allows honest clients to prepay tokens at a higher price to avoid getting reverted. It also allows updating price configuration and withdrawing tokens by the contract owner. The contract uses an Oracle to fetch the latest token prices.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"setTokenPaymasterConfig((uint256,uint256,uint256))\":{\"notice\":\"Updates the configuration for the Token Paymaster.\"},\"token()\":{\"notice\":\"The ERC20 token used for transaction fee payments\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"},\"withdrawToken(address,uint256)\":{\"notice\":\"Allows the contract owner to withdraw a specified amount of tokens from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/TokenPaymaster.sol\":\"TokenPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xbd3189ba19234b7983c343fd70058e21de970feb4bc941c57f14820eb35878a8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d738449768414ab9d4d111113f4641bd0fbc833f9baf74d8ccebe43fe8d7bb\",\"dweb:/ipfs/QmSwpXHUerFzwJFyyLqyGGbzsLTwSimdcMKX5FKksNouEm\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]},\"contracts/utils/TokenPaymaster.sol\":{\"keccak256\":\"0xf54a47969f3e4ab84be8f59fa4abd550e33e4717396bc4d9e94911aa8d376614\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c3ef201196298b976cccea407fadcd1ad4dc554d7a64518ec1653943f806f31c\",\"dweb:/ipfs/QmQdk2YaxjRAQmaK6mLuYa8T1hJSiJj9C5okD1MnbNZ1Qs\"]}},\"version\":1}"}}}}}