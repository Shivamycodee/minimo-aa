{"id":"260970794a221763e42d5ae6cffd0cdc","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/core/BasePaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.20;\r\n\r\n/* solhint-disable reason-string */\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../interfaces/IPaymaster.sol\";\r\nimport \"../interfaces/IEntryPoint.sol\";\r\nimport \"./Helpers.sol\";\r\n\r\n/**\r\n * Helper class for creating a paymaster.\r\n * provides helper methods for staking.\r\n * Validates that the postOp is called only by the entryPoint.\r\n */\r\nabstract contract BasePaymaster is IPaymaster, Ownable {\r\n    IEntryPoint public immutable entryPoint;\r\n\r\n    constructor(IEntryPoint _entryPoint) Ownable(tx.origin) {\r\n        entryPoint = _entryPoint;\r\n    }\r\n\r\n    /// @inheritdoc IPaymaster\r\n    function validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external override returns (bytes memory context, uint256 validationData) {\r\n        _requireFromEntryPoint();\r\n        return _validatePaymasterUserOp(userOp, userOpHash, maxCost);\r\n    }\r\n\r\n    /**\r\n     * Validate a user operation.\r\n     * @param userOp     - The user operation.\r\n     * @param userOpHash - The hash of the user operation.\r\n     * @param maxCost    - The maximum cost of the user operation.\r\n     */\r\n    function _validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) internal virtual returns (bytes memory context, uint256 validationData);\r\n\r\n    /// @inheritdoc IPaymaster\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) external override {\r\n        _requireFromEntryPoint();\r\n        _postOp(mode, context, actualGasCost);\r\n    }\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * (verified to be called only through the entryPoint)\r\n     * @dev If subclass returns a non-empty context from validatePaymasterUserOp,\r\n     *      it must also implement this method.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. still has to pay for gas.\r\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\r\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\r\n     */\r\n    function _postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) internal virtual {\r\n        (mode, context, actualGasCost); // unused params\r\n        // subclass must override this method if validatePaymasterUserOp returns a context\r\n        revert(\"must override\");\r\n    }\r\n\r\n    /**\r\n     * Add a deposit for this paymaster, used for paying for transaction fees.\r\n     */\r\n    function deposit() public payable {\r\n        entryPoint.depositTo{value: msg.value}(address(this));\r\n    }\r\n\r\n    /**\r\n     * Withdraw value from the deposit.\r\n     * @param withdrawAddress - Target to send to.\r\n     * @param amount          - Amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 amount\r\n    ) public onlyOwner {\r\n        entryPoint.withdrawTo(withdrawAddress, amount);\r\n    }\r\n\r\n    /**\r\n     * Add stake for this paymaster.\r\n     * This method can also carry eth value to add to the current stake.\r\n     * @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased.\r\n     */\r\n    function addStake(uint32 unstakeDelaySec) external payable onlyOwner {\r\n        entryPoint.addStake{value: msg.value}(unstakeDelaySec);\r\n    }\r\n\r\n    /**\r\n     * Return current paymaster's deposit on the entryPoint.\r\n     */\r\n    function getDeposit() public view returns (uint256) {\r\n        return entryPoint.balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * Unlock the stake, in order to withdraw it.\r\n     * The paymaster can't serve requests once unlocked, until it calls addStake again\r\n     */\r\n    function unlockStake() external onlyOwner {\r\n        entryPoint.unlockStake();\r\n    }\r\n\r\n    /**\r\n     * Withdraw the entire paymaster's stake.\r\n     * stake must be unlocked first (and then wait for the unstakeDelay to be over)\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external onlyOwner {\r\n        entryPoint.withdrawStake(withdrawAddress);\r\n    }\r\n\r\n    /**\r\n     * Validate the call is made from a valid entrypoint\r\n     */\r\n    function _requireFromEntryPoint() internal virtual {\r\n        require(msg.sender == address(entryPoint), \"Sender not EntryPoint\");\r\n    }\r\n}"},"contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\n/**\r\n * Returned data from validateUserOp.\r\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and\r\n * parsed by `_parseValidationData`.\r\n * @param aggregator  - address(0) - The account validated the signature by itself.\r\n *                      address(1) - The account failed to validate the signature.\r\n *                      otherwise - This is an address of a signature aggregator that must\r\n *                                  be used to validate the signature.\r\n * @param validAfter  - This UserOp is valid only after this timestamp.\r\n * @param validaUntil - This UserOp is valid only up to this timestamp.\r\n */\r\nstruct ValidationData {\r\n    address aggregator;\r\n    uint48 validAfter;\r\n    uint48 validUntil;\r\n}\r\n\r\n/**\r\n * Extract sigFailed, validAfter, validUntil.\r\n * Also convert zero validUntil to type(uint48).max.\r\n * @param validationData - The packed validation data.\r\n */\r\nfunction _parseValidationData(\r\n    uint validationData\r\n) pure returns (ValidationData memory data) {\r\n    address aggregator = address(uint160(validationData));\r\n    uint48 validUntil = uint48(validationData >> 160);\r\n    if (validUntil == 0) {\r\n        validUntil = type(uint48).max;\r\n    }\r\n    uint48 validAfter = uint48(validationData >> (48 + 160));\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Intersect account and paymaster ranges.\r\n * @param validationData          - The packed validation data of the account.\r\n * @param paymasterValidationData - The packed validation data of the paymaster.\r\n */\r\nfunction _intersectTimeRange(\r\n    uint256 validationData,\r\n    uint256 paymasterValidationData\r\n) pure returns (ValidationData memory) {\r\n    ValidationData memory accountValidationData = _parseValidationData(\r\n        validationData\r\n    );\r\n    ValidationData memory pmValidationData = _parseValidationData(\r\n        paymasterValidationData\r\n    );\r\n    address aggregator = accountValidationData.aggregator;\r\n    if (aggregator == address(0)) {\r\n        aggregator = pmValidationData.aggregator;\r\n    }\r\n    uint48 validAfter = accountValidationData.validAfter;\r\n    uint48 validUntil = accountValidationData.validUntil;\r\n    uint48 pmValidAfter = pmValidationData.validAfter;\r\n    uint48 pmValidUntil = pmValidationData.validUntil;\r\n\r\n    if (validAfter < pmValidAfter) validAfter = pmValidAfter;\r\n    if (validUntil > pmValidUntil) validUntil = pmValidUntil;\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp.\r\n * @param data - The ValidationData to pack.\r\n */\r\nfunction _packValidationData(\r\n    ValidationData memory data\r\n) pure returns (uint256) {\r\n    return\r\n        uint160(data.aggregator) |\r\n        (uint256(data.validUntil) << 160) |\r\n        (uint256(data.validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\r\n * @param sigFailed  - True for signature failure, false for success.\r\n * @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\r\n * @param validAfter - First timestamp this UserOperation is valid.\r\n */\r\nfunction _packValidationData(\r\n    bool sigFailed,\r\n    uint48 validUntil,\r\n    uint48 validAfter\r\n) pure returns (uint256) {\r\n    return\r\n        (sigFailed ? 1 : 0) |\r\n        (uint256(validUntil) << 160) |\r\n        (uint256(validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * keccak function over calldata.\r\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\r\n */\r\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\r\n        assembly {\r\n            let mem := mload(0x40)\r\n            let len := data.length\r\n            calldatacopy(mem, data.offset, len)\r\n            ret := keccak256(mem, len)\r\n        }\r\n    }"},"contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\n/**\r\n * Aggregated Signatures validator.\r\n */\r\ninterface IAggregator {\r\n    /**\r\n     * Validate aggregated signature.\r\n     * Revert if the aggregated signature does not match the given list of operations.\r\n     * @param userOps   - Array of UserOperations to validate the signature for.\r\n     * @param signature - The aggregated signature.\r\n     */\r\n    function validateSignatures(\r\n        UserOperation[] calldata userOps,\r\n        bytes calldata signature\r\n    ) external view;\r\n\r\n    /**\r\n     * Validate signature of a single userOp.\r\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\r\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\r\n     * @param userOp        - The userOperation received from the user.\r\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\r\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\r\n     */\r\n    function validateUserOpSignature(\r\n        UserOperation calldata userOp\r\n    ) external view returns (bytes memory sigForUserOp);\r\n\r\n    /**\r\n     * Aggregate multiple signatures into a single value.\r\n     * This method is called off-chain to calculate the signature to pass with handleOps()\r\n     * bundler MAY use optimized custom code perform this aggregation.\r\n     * @param userOps              - Array of UserOperations to collect the signatures from.\r\n     * @return aggregatedSignature - The aggregated signature.\r\n     */\r\n    function aggregateSignatures(\r\n        UserOperation[] calldata userOps\r\n    ) external view returns (bytes memory aggregatedSignature);\r\n}\r\n"},"contracts/interfaces/IEntryPoint.sol":{"content":"/**\r\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\r\n ** Only one instance required on each chain.\r\n **/\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable reason-string */\r\n\r\nimport \"./UserOperation.sol\";\r\nimport \"./IStakeManager.sol\";\r\nimport \"./IAggregator.sol\";\r\nimport \"./INonceManager.sol\";\r\n\r\ninterface IEntryPoint is IStakeManager, INonceManager {\r\n    /***\r\n     * An event emitted after each successful request.\r\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\r\n     * @param sender        - The account that generates this request.\r\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\r\n     * @param nonce         - The nonce value from the request.\r\n     * @param success       - True if the sender transaction succeeded, false if reverted.\r\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\r\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\r\n     *                        validation and execution).\r\n     */\r\n    event UserOperationEvent(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address indexed paymaster,\r\n        uint256 nonce,\r\n        bool success,\r\n        uint256 actualGasCost,\r\n        uint256 actualGasUsed\r\n    );\r\n\r\n    /**\r\n     * Account \"sender\" was deployed.\r\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\r\n     * @param sender     - The account that is deployed\r\n     * @param factory    - The factory used to deploy this account (in the initCode)\r\n     * @param paymaster  - The paymaster used by this UserOp\r\n     */\r\n    event AccountDeployed(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address factory,\r\n        address paymaster\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event UserOperationRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event PostOpRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted by handleOps(), before starting the execution loop.\r\n     * Any event emitted before this event, is part of the validation.\r\n     */\r\n    event BeforeExecution();\r\n\r\n    /**\r\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\r\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\r\n     */\r\n    event SignatureAggregatorChanged(address indexed aggregator);\r\n\r\n    /**\r\n     * A custom revert error of handleOps, to identify the offending op.\r\n     * Should be caught in off-chain handleOps simulation and not happen on-chain.\r\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\r\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\r\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\r\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\r\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\r\n     *                  so a failure can be attributed to the correct entity.\r\n     */\r\n    error FailedOp(uint256 opIndex, string reason);\r\n\r\n    error PostOpReverted(bytes returnData);\r\n\r\n    /**\r\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\r\n     * @param aggregator The aggregator that failed to verify the signature\r\n     */\r\n    error SignatureValidationFailed(address aggregator);\r\n\r\n    // Return value of getSenderAddress.\r\n    error SenderAddressResult(address sender);\r\n\r\n    // UserOps handled, per aggregator.\r\n    struct UserOpsPerAggregator {\r\n        UserOperation[] userOps;\r\n        // Aggregator address\r\n        IAggregator aggregator;\r\n        // Aggregated signature\r\n        bytes signature;\r\n    }\r\n\r\n    /**\r\n     * Execute a batch of UserOperations.\r\n     * No signature aggregator is used.\r\n     * If any account requires an aggregator (that is, it returned an aggregator when\r\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\r\n     * @param ops         - The operations to execute.\r\n     * @param beneficiary - The address to receive the fees.\r\n     */\r\n    function handleOps(\r\n        UserOperation[] calldata ops,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Execute a batch of UserOperation with Aggregators\r\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\r\n     * @param beneficiary      - The address to receive the fees.\r\n     */\r\n    function handleAggregatedOps(\r\n        UserOpsPerAggregator[] calldata opsPerAggregator,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Generate a request Id - unique identifier for this request.\r\n     * The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\r\n     * @param userOp - The user operation to generate the request ID for.\r\n     */\r\n    function getUserOpHash(\r\n        UserOperation calldata userOp\r\n    ) external view returns (bytes32);\r\n\r\n    /**\r\n     * Gas and return values during simulation.\r\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\r\n     * @param prefund          - The required prefund for this operation\r\n     * @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\r\n     * @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\r\n     */\r\n    struct ReturnInfo {\r\n        uint256 preOpGas;\r\n        uint256 prefund;\r\n        bool sigFailed;\r\n        uint48 validAfter;\r\n        uint48 validUntil;\r\n        bytes paymasterContext;\r\n    }\r\n\r\n    /**\r\n     * Returned aggregated signature info:\r\n     * The aggregator returned by the account, and its current stake.\r\n     */\r\n    struct AggregatorStakeInfo {\r\n        address aggregator;\r\n        StakeInfo stakeInfo;\r\n    }\r\n\r\n    /**\r\n     * Get counterfactual sender address.\r\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\r\n     * This method always revert, and returns the address in SenderAddressResult error\r\n     * @param initCode - The constructor code to be passed into the UserOperation.\r\n     */\r\n    function getSenderAddress(bytes memory initCode) external;\r\n\r\n}\r\n"},"contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\ninterface INonceManager {\r\n\r\n    /**\r\n     * Return the next nonce for this sender.\r\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\r\n     * But UserOp with different keys can come with arbitrary order.\r\n     *\r\n     * @param sender the account address\r\n     * @param key the high 192 bit of the nonce\r\n     * @return nonce a full nonce to pass for next UserOp with this sender.\r\n     */\r\n    function getNonce(address sender, uint192 key)\r\n    external view returns (uint256 nonce);\r\n\r\n    /**\r\n     * Manually increment the nonce of the sender.\r\n     * This method is exposed just for completeness..\r\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\r\n     * as the EntryPoint will update the nonce regardless.\r\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\r\n     * UserOperations will not pay extra for the first transaction with a given key.\r\n     */\r\n    function incrementNonce(uint192 key) external;\r\n}\r\n"},"contracts/interfaces/IOracle.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\ninterface IOracle {\r\n\r\n    /**\r\n     * return amount of tokens that are required to receive that much eth.\r\n     */\r\n    function getTokenValueOfEth(uint256 ethOutput) external view returns (uint256 tokenInput);\r\n}"},"contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\n/**\r\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\r\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\r\n */\r\ninterface IPaymaster {\r\n    enum PostOpMode {\r\n        // User op succeeded.\r\n        opSucceeded,\r\n        // User op reverted. Still has to pay for gas.\r\n        opReverted,\r\n        // User op succeeded, but caused postOp to revert.\r\n        // Only used internally in the EntryPoint - Paymasters will not be called again.\r\n        postOpReverted\r\n    }\r\n\r\n    /**\r\n     * Payment validation: check if paymaster agrees to pay.\r\n     * Must verify sender is the entryPoint.\r\n     * Revert to reject this request.\r\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\r\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\r\n     * @param userOp          - The user operation.\r\n     * @param userOpHash      - Hash of the user's request data.\r\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\r\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\r\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\r\n     *                          value of validateUserOperation.\r\n     *                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\r\n     *                                                    otherwise, an address of an \"authorizer\" contract.\r\n     *                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\r\n     *                          <6-byte> validAfter - first timestamp this operation is valid\r\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external returns (bytes memory context, uint256 validationData);\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * Must verify sender is the entryPoint.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. still has to pay for gas.\r\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\r\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\r\n     */\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * Manage deposits and stakes.\r\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\r\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\r\n */\r\ninterface IStakeManager {\r\n    event Deposited(address indexed account, uint256 totalDeposit);\r\n\r\n    event Withdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    // Emitted when stake or unstake delay are modified.\r\n    event StakeLocked(\r\n        address indexed account,\r\n        uint256 totalStaked,\r\n        uint256 unstakeDelaySec\r\n    );\r\n\r\n    // Emitted once a stake is scheduled for withdrawal.\r\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\r\n\r\n    event StakeWithdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @param deposit         - The entity's deposit.\r\n     * @param staked          - True if this entity is staked.\r\n     * @param stake           - Actual amount of ether staked for this entity.\r\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\r\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\r\n     * @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\r\n     *      and the rest fit into a 2nd cell.\r\n     *      - 112 bit allows for 10^15 eth\r\n     *      - 48 bit for full timestamp\r\n     *      - 32 bit allows 150 years for unstake delay\r\n     */\r\n    struct DepositInfo {\r\n        uint112 deposit;\r\n        bool staked;\r\n        uint112 stake;\r\n        uint32 unstakeDelaySec;\r\n        uint48 withdrawTime;\r\n    }\r\n\r\n    // API struct used by getStakeInfo and simulateValidation.\r\n    struct StakeInfo {\r\n        uint256 stake;\r\n        uint256 unstakeDelaySec;\r\n    }\r\n\r\n    /**\r\n     * Get deposit info.\r\n     * @param account - The account to query.\r\n     * @return info   - Full deposit information of given account.\r\n     */\r\n    function getDepositInfo(\r\n        address account\r\n    ) external view returns (DepositInfo memory info);\r\n\r\n    /**\r\n     * Get account balance.\r\n     * @param account - The account to query.\r\n     * @return        - The deposit (for gas payment) of the account.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * Add to the deposit of the given account.\r\n     * @param account - The account to add to.\r\n     */\r\n    function depositTo(address account) external payable;\r\n\r\n    /**\r\n     * Add to the account's stake - amount and delay\r\n     * any pending unstake is first cancelled.\r\n     * @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\r\n     */\r\n    function addStake(uint32 _unstakeDelaySec) external payable;\r\n\r\n    /**\r\n     * Attempt to unlock the stake.\r\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\r\n     */\r\n    function unlockStake() external;\r\n\r\n    /**\r\n     * Withdraw from the (unlocked) stake.\r\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external;\r\n\r\n    /**\r\n     * Withdraw from the deposit.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     * @param withdrawAmount  - The amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 withdrawAmount\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * User Operation struct\r\n * @param sender                - The sender account of this request.\r\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\r\n * @param initCode              - If set, the account contract will be created by this constructor/\r\n * @param callData              - The method call to execute on this account.\r\n * @param callGasLimit          - The gas limit passed to the callData method call.\r\n * @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\r\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\r\n *                                Covers batch overhead.\r\n * @param maxFeePerGas          - Same as EIP-1559 gas parameter.\r\n * @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\r\n * @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\r\n *                                The paymaster will pay for the transaction instead of the sender.\r\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\r\n */\r\nstruct UserOperation {\r\n    address sender;\r\n    uint256 nonce;\r\n    bytes initCode;\r\n    bytes callData;\r\n    uint256 callGasLimit;\r\n    uint256 verificationGasLimit;\r\n    uint256 preVerificationGas;\r\n    uint256 maxFeePerGas;\r\n    uint256 maxPriorityFeePerGas;\r\n    bytes paymasterAndData;\r\n    bytes signature;\r\n}\r\n"},"contracts/utils/LegacyTokenPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable reason-string */\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"../core/BasePaymaster.sol\";\r\n\r\n/**\r\n * A sample paymaster that defines itself as a token to pay for gas.\r\n * The paymaster IS the token to use, since a paymaster cannot use an external contract.\r\n * Also, the exchange rate has to be fixed, since it can't reference an external Uniswap or other exchange contract.\r\n * subclass should override \"getTokenValueOfEth\" to provide actual token exchange rate, settable by the owner.\r\n * Known Limitation: this paymaster is exploitable when put into a batch with multiple ops (of different accounts):\r\n * - while a single op can't exploit the paymaster (if postOp fails to withdraw the tokens, the user's op is reverted,\r\n *   and then we know we can withdraw the tokens), multiple ops with different senders (all using this paymaster)\r\n *   in a batch can withdraw funds from 2nd and further ops, forcing the paymaster itself to pay (from its deposit)\r\n * - Possible workarounds are either use a more complex paymaster scheme (e.g. the DepositPaymaster) or\r\n *   to whitelist the account and the called method ids.\r\n */\r\ncontract LegacyTokenPaymaster is BasePaymaster, ERC20 {\r\n\r\n    //calculated cost of the postOp\r\n    uint256 constant public COST_OF_POST = 15000;\r\n\r\n    address public immutable theFactory;\r\n\r\n    constructor(address accountFactory, string memory _symbol, IEntryPoint _entryPoint) ERC20(_symbol, _symbol) BasePaymaster(_entryPoint) {\r\n        theFactory = accountFactory;\r\n        //make it non-empty\r\n        _mint(address(this), 1);\r\n\r\n        //owner is allowed to withdraw tokens from the paymaster's balance\r\n        _approve(address(this), msg.sender, type(uint).max);\r\n    }\r\n\r\n\r\n    /**\r\n     * helpers for owner, to mint and withdraw tokens.\r\n     * @param recipient - the address that will receive the minted tokens.\r\n     * @param amount - the amount it will receive.\r\n     */\r\n    function mintTokens(address recipient, uint256 amount) external onlyOwner {\r\n        _mint(recipient, amount);\r\n    }\r\n\r\n    /**\r\n     * transfer paymaster ownership.\r\n     * owner of this paymaster is allowed to withdraw funds (tokens transferred to this paymaster's balance)\r\n     * when changing owner, the old owner's withdrawal rights are revoked.\r\n     */\r\n    function transferOwnership(address newOwner) public override virtual onlyOwner {\r\n        // remove allowance of current owner\r\n        _approve(address(this), owner(), 0);\r\n        super.transferOwnership(newOwner);\r\n        // new owner is allowed to withdraw tokens from the paymaster's balance\r\n        _approve(address(this), newOwner, type(uint).max);\r\n    }\r\n\r\n    //Note: this method assumes a fixed ratio of token-to-eth. subclass should override to supply oracle\r\n    // or a setter.\r\n    function getTokenValueOfEth(uint256 valueEth) internal view virtual returns (uint256 valueToken) {\r\n        return valueEth / 100;\r\n    }\r\n\r\n    /**\r\n      * validate the request:\r\n      * if this is a constructor call, make sure it is a known account.\r\n      * verify the sender has enough tokens.\r\n      * (since the paymaster is also the token, there is no notion of \"approval\")\r\n      */\r\n    function _validatePaymasterUserOp(UserOperation calldata userOp, bytes32 /*userOpHash*/, uint256 requiredPreFund)\r\n    internal view override returns (bytes memory context, uint256 validationData) {\r\n        uint256 tokenPrefund = getTokenValueOfEth(requiredPreFund);\r\n\r\n        // verificationGasLimit is dual-purposed, as gas limit for postOp. make sure it is high enough\r\n        // make sure that verificationGasLimit is high enough to handle postOp\r\n        require(userOp.verificationGasLimit > COST_OF_POST, \"TokenPaymaster: gas too low for postOp\");\r\n\r\n        if (userOp.initCode.length != 0) {\r\n            _validateConstructor(userOp);\r\n            require(balanceOf(userOp.sender) >= tokenPrefund, \"TokenPaymaster: no balance (pre-create)\");\r\n        } else {\r\n\r\n            require(balanceOf(userOp.sender) >= tokenPrefund, \"TokenPaymaster: no balance\");\r\n        }\r\n\r\n        return (abi.encode(userOp.sender), 0);\r\n    }\r\n\r\n    // when constructing an account, validate constructor code and parameters\r\n    // we trust our factory (and that it doesn't have any other public methods)\r\n    function _validateConstructor(UserOperation calldata userOp) internal virtual view {\r\n        address factory = address(bytes20(userOp.initCode[0 : 20]));\r\n        require(factory == theFactory, \"TokenPaymaster: wrong account factory\");\r\n    }\r\n\r\n    /**\r\n     * actual charge of user.\r\n     * this method will be called just after the user's TX with mode==OpSucceeded|OpReverted (account pays in both cases)\r\n     * BUT: if the user changed its balance in a way that will cause  postOp to revert, then it gets called again, after reverting\r\n     * the user's TX , back to the state it was before the transaction started (before the validatePaymasterUserOp),\r\n     * and the transaction should succeed there.\r\n     */\r\n    function _postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) internal override {\r\n        //we don't really care about the mode, we just pay the gas with the user's tokens.\r\n        (mode);\r\n        address sender = abi.decode(context, (address));\r\n        uint256 charge = getTokenValueOfEth(actualGasCost + COST_OF_POST);\r\n        //actualGasCost is known to be no larger than the above requiredPreFund, so the transfer should succeed.\r\n        _transfer(sender, address(this), charge);\r\n    }\r\n}"},"contracts/utils/OracleHelper.sol":{"content":"// // SPDX-License-Identifier: GPL-3.0\r\n// pragma solidity ^0.8.12;\r\n\r\n// /* solhint-disable not-rely-on-time */\r\n\r\n// import \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\r\n// import \"../interfaces/IOracle.sol\";\r\n\r\n// /// @title Helper functions for dealing with various forms of price feed oracles.\r\n// /// @notice Maintains a price cache and updates the current price if needed.\r\n// /// In the best case scenario we have a direct oracle from the token to the native asset.\r\n// /// Also support tokens that have no direct price oracle to the native asset.\r\n// /// Sometimes oracles provide the price in the opposite direction of what we need in the moment.\r\n// abstract contract OracleHelper {\r\n\r\n//     event TokenPriceUpdated(uint256 currentPrice, uint256 previousPrice, uint256 cachedPriceTimestamp);\r\n\r\n//     uint256 private constant PRICE_DENOMINATOR = 1e26;\r\n\r\n//     struct OracleHelperConfig {\r\n//         /// @notice The Oracle contract used to fetch the latest token prices\r\n//         IOracle tokenOracle;\r\n\r\n//         /// @notice The Oracle contract used to fetch the latest ETH prices\r\n//         IOracle nativeOracle;\r\n\r\n//         /// @notice If 'true' we will fetch price directly from tokenOracle\r\n//         /// @notice If 'false' we will use nativeOracle to establish a token price through a shared third currency\r\n//         bool tokenToNativeOracle;\r\n\r\n//         /// @notice 'false' if price is dollars-per-token (or ether-per-token), 'true' if price is tokens-per-dollar\r\n//         bool tokenOracleReverse;\r\n\r\n//         /// @notice 'false' if price is dollars-per-ether, 'true' if price is ether-per-dollar\r\n//         bool nativeOracleReverse;\r\n\r\n//         /// @notice The price update threshold percentage that triggers a price update (1e6 = 100%)\r\n//         uint256 priceUpdateThreshold;\r\n\r\n//         /// @notice The price cache will be returned without even fetching the oracles for this number of seconds\r\n//         uint256 cacheTimeToLive;\r\n//     }\r\n\r\n//     /// @notice The cached token price from the Oracle, always in (ether-per-token) * PRICE_DENOMINATOR format\r\n//     uint256 public cachedPrice;\r\n\r\n//     /// @notice The timestamp of a block when the cached price was updated\r\n//     uint256 public cachedPriceTimestamp;\r\n\r\n//     OracleHelperConfig private oracleHelperConfig;\r\n\r\n//     /// @notice The \"10^(tokenOracle.decimals)\" value used for the price calculation\r\n//     uint256 private tokenOracleDecimalPower;\r\n\r\n//     /// @notice The \"10^(nativeOracle.decimals)\" value used for the price calculation\r\n//     uint256 private nativeOracleDecimalPower;\r\n\r\n//     constructor (\r\n//         OracleHelperConfig memory _oracleHelperConfig\r\n//     ) {\r\n//         cachedPrice = type(uint256).max; // initialize the storage slot to invalid value\r\n//         _setOracleConfiguration(\r\n//             _oracleHelperConfig\r\n//         );\r\n//     }\r\n\r\n//     function _setOracleConfiguration(\r\n//         OracleHelperConfig memory _oracleHelperConfig\r\n//     ) private {\r\n//         oracleHelperConfig = _oracleHelperConfig;\r\n//         require(_oracleHelperConfig.priceUpdateThreshold <= 1e6, \"TPM: update threshold too high\");\r\n//         tokenOracleDecimalPower = 10 ** oracleHelperConfig.tokenOracle.decimals();\r\n//         nativeOracleDecimalPower = 10 ** oracleHelperConfig.nativeOracle.decimals();\r\n//     }\r\n\r\n//     /// @notice Updates the token price by fetching the latest price from the Oracle.\r\n//     function updateCachedPrice(bool force) public returns (uint256 newPrice) {\r\n//         uint256 cacheTimeToLive = oracleHelperConfig.cacheTimeToLive;\r\n//         uint256 cacheAge = block.timestamp - cachedPriceTimestamp;\r\n//         if (!force && cacheAge <= cacheTimeToLive) {\r\n//             return cachedPrice;\r\n//         }\r\n//         uint256 priceUpdateThreshold = oracleHelperConfig.priceUpdateThreshold;\r\n//         IOracle tokenOracle = oracleHelperConfig.tokenOracle;\r\n//         IOracle nativeOracle = oracleHelperConfig.nativeOracle;\r\n\r\n//         uint256 _cachedPrice = cachedPrice;\r\n//         uint256 tokenPrice = fetchPrice(tokenOracle);\r\n//         uint256 nativeAssetPrice = 1;\r\n//         // If the 'TokenOracle' returns the price in the native asset units there is no need to fetch native asset price\r\n//         if (!oracleHelperConfig.tokenToNativeOracle) {\r\n//             nativeAssetPrice = fetchPrice(nativeOracle);\r\n//         }\r\n//         uint256 price = calculatePrice(\r\n//             tokenPrice,\r\n//             nativeAssetPrice,\r\n//             oracleHelperConfig.tokenOracleReverse,\r\n//             oracleHelperConfig.nativeOracleReverse\r\n//         );\r\n//         uint256 priceNewByOld = price * PRICE_DENOMINATOR / _cachedPrice;\r\n\r\n//         bool updateRequired = force ||\r\n//             priceNewByOld > PRICE_DENOMINATOR + priceUpdateThreshold ||\r\n//             priceNewByOld < PRICE_DENOMINATOR - priceUpdateThreshold;\r\n//         if (!updateRequired) {\r\n//             return _cachedPrice;\r\n//         }\r\n//         uint256 previousPrice = _cachedPrice;\r\n//         _cachedPrice = price;\r\n//         cachedPrice = _cachedPrice;\r\n//         cachedPriceTimestamp = block.timestamp;\r\n//         emit TokenPriceUpdated(_cachedPrice, previousPrice, cachedPriceTimestamp);\r\n//         return _cachedPrice;\r\n//     }\r\n\r\n//     /**\r\n//      * Calculate the effective price of the selected token denominated in native asset.\r\n//      *\r\n//      * @param tokenPrice - the price of the token relative to a native asset or a bridging asset like the U.S. dollar.\r\n//      * @param nativeAssetPrice - the price of the native asset relative to a bridging asset or 1 if no bridging needed.\r\n//      * @param tokenOracleReverse - flag indicating direction of the \"tokenPrice\".\r\n//      * @param nativeOracleReverse - flag indicating direction of the \"nativeAssetPrice\".\r\n//      * @return the ether-per-token price multiplied by the PRICE_DENOMINATOR constant.\r\n//      */\r\n//     function calculatePrice(\r\n//         uint256 tokenPrice,\r\n//         uint256 nativeAssetPrice,\r\n//         bool tokenOracleReverse,\r\n//         bool nativeOracleReverse\r\n//     ) private view returns (uint256){\r\n//         // tokenPrice is normalized as dollars-per-token\r\n//         if (tokenOracleReverse) {\r\n//             // inverting tokenPrice that was tokens-per-dollar (or tokens-per-ether)\r\n//             tokenPrice = PRICE_DENOMINATOR * tokenOracleDecimalPower / tokenPrice;\r\n//         } else {\r\n//             // tokenPrice already dollars-per-token (or ethers-per-token)\r\n//             tokenPrice = PRICE_DENOMINATOR * tokenPrice / tokenOracleDecimalPower;\r\n//         }\r\n\r\n//         if (nativeOracleReverse) {\r\n//             // multiplying by nativeAssetPrice that is  ethers-per-dollar\r\n//             // => result = (dollar / token) * (ether / dollar) = ether / token\r\n//             return nativeAssetPrice * tokenPrice / nativeOracleDecimalPower;\r\n//         } else {\r\n//             // dividing by nativeAssetPrice that is dollars-per-ether\r\n//             // => result = (dollar / token) / (dollar / ether) = ether / token\r\n//             return tokenPrice * nativeOracleDecimalPower / nativeAssetPrice;\r\n//         }\r\n//     }\r\n\r\n//     /// @notice Fetches the latest price from the given Oracle.\r\n//     /// @dev This function is used to get the latest price from the tokenOracle or nativeOracle.\r\n//     /// @param _oracle The Oracle contract to fetch the price from.\r\n//     /// @return price The latest price fetched from the Oracle.\r\n//     function fetchPrice(IOracle _oracle) internal view returns (uint256 price) {\r\n//         (uint80 roundId, int256 answer,, uint256 updatedAt, uint80 answeredInRound) = _oracle.latestRoundData();\r\n//         require(answer > 0, \"TPM: Chainlink price <= 0\");\r\n//         // 2 days old price is considered stale since the price is updated every 24 hours\r\n//         require(updatedAt >= block.timestamp - 60 * 60 * 24 * 2, \"TPM: Incomplete round\");\r\n//         require(answeredInRound >= roundId, \"TPM: Stale price\");\r\n//         price = uint256(answer);\r\n//     }\r\n// }"},"contracts/utils/TokenPaymaster.sol":{"content":"// // SPDX-License-Identifier: GPL-3.0\r\n// pragma solidity ^0.8.12;\r\n\r\n// // Import the required libraries and contracts\r\n// import \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\n// import \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n// import \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\n\r\n// import \"../interfaces/IEntryPoint.sol\";\r\n// import \"../core/BasePaymaster.sol\";\r\n// import \"./utils/UniswapHelper.sol\";\r\n// import \"./utils/OracleHelper.sol\";\r\n\r\n// /// @title Sample ERC-20 Token Paymaster for ERC-4337\r\n// /// This Paymaster covers gas fees in exchange for ERC20 tokens charged using allowance pre-issued by ERC-4337 accounts.\r\n// /// The contract refunds excess tokens if the actual gas cost is lower than the initially provided amount.\r\n// /// The token price cannot be queried in the validation code due to storage access restrictions of ERC-4337.\r\n// /// The price is cached inside the contract and is updated in the 'postOp' stage if the change is >10%.\r\n// /// It is theoretically possible the token has depreciated so much since the last 'postOp' the refund becomes negative.\r\n// /// The contract reverts the inner user transaction in that case but keeps the charge.\r\n// /// The contract also allows honest clients to prepay tokens at a higher price to avoid getting reverted.\r\n// /// It also allows updating price configuration and withdrawing tokens by the contract owner.\r\n// /// The contract uses an Oracle to fetch the latest token prices.\r\n// /// @dev Inherits from BasePaymaster.\r\n// contract TokenPaymaster is BasePaymaster, UniswapHelper, OracleHelper {\r\n\r\n//     struct TokenPaymasterConfig {\r\n//         /// @notice The price markup percentage applied to the token price (1e6 = 100%)\r\n//         uint256 priceMarkup;\r\n\r\n//         /// @notice Exchange tokens to native currency if the EntryPoint balance of this Paymaster falls below this value\r\n//         uint256 minEntryPointBalance;\r\n\r\n//         /// @notice Estimated gas cost for refunding tokens after the transaction is completed\r\n//         uint256 refundPostopCost;\r\n\r\n//         /// @notice Transactions are only valid as long as the cached price is not older than this value\r\n//         uint256 priceMaxAge;\r\n//     }\r\n\r\n//     event ConfigUpdated(TokenPaymasterConfig tokenPaymasterConfig);\r\n\r\n//     event UserOperationSponsored(address indexed user, uint256 actualTokenCharge, uint256 actualGasCost, uint256 actualTokenPrice);\r\n\r\n//     event PostOpReverted(address indexed user, uint256 preCharge);\r\n\r\n//     event Received(address indexed sender, uint256 value);\r\n\r\n//     /// @notice All 'price' variables are multiplied by this value to avoid rounding up\r\n//     uint256 private constant PRICE_DENOMINATOR = 1e26;\r\n\r\n//     TokenPaymasterConfig private tokenPaymasterConfig;\r\n\r\n//     /// @notice Initializes the TokenPaymaster contract with the given parameters.\r\n//     /// @param _token The ERC20 token used for transaction fee payments.\r\n//     /// @param _entryPoint The EntryPoint contract used in the Account Abstraction infrastructure.\r\n//     /// @param _wrappedNative The ERC-20 token that wraps the native asset for current chain.\r\n//     /// @param _uniswap The Uniswap V3 SwapRouter contract.\r\n//     /// @param _tokenPaymasterConfig The configuration for the Token Paymaster.\r\n//     /// @param _oracleHelperConfig The configuration for the Oracle Helper.\r\n//     /// @param _uniswapHelperConfig The configuration for the Uniswap Helper.\r\n//     /// @param _owner The address that will be set as the owner of the contract.\r\n//     constructor(\r\n//         IERC20Metadata _token,\r\n//         IEntryPoint _entryPoint,\r\n//         IERC20 _wrappedNative,\r\n//         ISwapRouter _uniswap,\r\n//         TokenPaymasterConfig memory _tokenPaymasterConfig,\r\n//         OracleHelperConfig memory _oracleHelperConfig,\r\n//         UniswapHelperConfig memory _uniswapHelperConfig,\r\n//         address _owner\r\n//     )\r\n//     BasePaymaster(\r\n//     _entryPoint\r\n//     )\r\n//     OracleHelper(\r\n//     _oracleHelperConfig\r\n//     )\r\n//     UniswapHelper(\r\n//     _token,\r\n//     _wrappedNative,\r\n//     _uniswap,\r\n//     10 ** _token.decimals(),\r\n//     _uniswapHelperConfig\r\n//     )\r\n//     {\r\n//         setTokenPaymasterConfig(_tokenPaymasterConfig);\r\n//         transferOwnership(_owner);\r\n//     }\r\n\r\n//     /// @notice Updates the configuration for the Token Paymaster.\r\n//     /// @param _tokenPaymasterConfig The new configuration struct.\r\n//     function setTokenPaymasterConfig(\r\n//         TokenPaymasterConfig memory _tokenPaymasterConfig\r\n//     ) public onlyOwner {\r\n//         require(_tokenPaymasterConfig.priceMarkup <= 2 * PRICE_DENOMINATOR, \"TPM: price markup too high\");\r\n//         require(_tokenPaymasterConfig.priceMarkup >= PRICE_DENOMINATOR, \"TPM: price markup too low\");\r\n//         tokenPaymasterConfig = _tokenPaymasterConfig;\r\n//         emit ConfigUpdated(_tokenPaymasterConfig);\r\n//     }\r\n\r\n//     function setUniswapConfiguration(\r\n//         UniswapHelperConfig memory _uniswapHelperConfig\r\n//     ) external onlyOwner {\r\n//         _setUniswapHelperConfiguration(_uniswapHelperConfig);\r\n//     }\r\n\r\n//     /// @notice Allows the contract owner to withdraw a specified amount of tokens from the contract.\r\n//     /// @param to The address to transfer the tokens to.\r\n//     /// @param amount The amount of tokens to transfer.\r\n//     function withdrawToken(address to, uint256 amount) external onlyOwner {\r\n//         SafeERC20.safeTransfer(token, to, amount);\r\n//     }\r\n\r\n//     /// @notice Validates a paymaster user operation and calculates the required token amount for the transaction.\r\n//     /// @param userOp The user operation data.\r\n//     /// @param requiredPreFund The amount of tokens required for pre-funding.\r\n//     /// @return context The context containing the token amount and user sender address (if applicable).\r\n//     /// @return validationResult A uint256 value indicating the result of the validation (always 0 in this implementation).\r\n//     function _validatePaymasterUserOp(UserOperation calldata userOp, bytes32, uint256 requiredPreFund)\r\n//     internal\r\n//     override\r\n//     returns (bytes memory context, uint256 validationResult) {unchecked {\r\n//             uint256 priceMarkup = tokenPaymasterConfig.priceMarkup;\r\n//             uint256 paymasterAndDataLength = userOp.paymasterAndData.length - 20;\r\n//             require(paymasterAndDataLength == 0 || paymasterAndDataLength == 32,\r\n//                 \"TPM: invalid data length\"\r\n//             );\r\n//             uint256 preChargeNative = requiredPreFund + (tokenPaymasterConfig.refundPostopCost * userOp.maxFeePerGas);\r\n//         // note: as price is in ether-per-token and we want more tokens increasing it means dividing it by markup\r\n//             uint256 cachedPriceWithMarkup = cachedPrice * PRICE_DENOMINATOR / priceMarkup;\r\n//             if (paymasterAndDataLength == 32) {\r\n//                 uint256 clientSuppliedPrice = uint256(bytes32(userOp.paymasterAndData[20 : 52]));\r\n//                 if (clientSuppliedPrice < cachedPriceWithMarkup) {\r\n//                     // note: smaller number means 'more ether per token'\r\n//                     cachedPriceWithMarkup = clientSuppliedPrice;\r\n//                 }\r\n//             }\r\n//             uint256 tokenAmount = weiToToken(preChargeNative, cachedPriceWithMarkup);\r\n//             SafeERC20.safeTransferFrom(token, userOp.sender, address(this), tokenAmount);\r\n//             context = abi.encode(tokenAmount, userOp.maxFeePerGas, userOp.maxPriorityFeePerGas, userOp.sender);\r\n//             validationResult = _packValidationData(\r\n//                 false,\r\n//                 uint48(cachedPriceTimestamp + tokenPaymasterConfig.priceMaxAge),\r\n//                 0\r\n//             );\r\n//         }\r\n//     }\r\n\r\n//     /// @notice Performs post-operation tasks, such as updating the token price and refunding excess tokens.\r\n//     /// @dev This function is called after a user operation has been executed or reverted.\r\n//     /// @param context The context containing the token amount and user sender address.\r\n//     /// @param actualGasCost The actual gas cost of the transaction.\r\n//     function _postOp(PostOpMode, bytes calldata context, uint256 actualGasCost) internal override {\r\n//         unchecked {\r\n//             uint256 priceMarkup = tokenPaymasterConfig.priceMarkup;\r\n//             (\r\n//                 uint256 preCharge,\r\n//                 uint256 maxFeePerGas,\r\n//                 uint256 maxPriorityFeePerGas,\r\n//                 address userOpSender\r\n//             ) = abi.decode(context, (uint256, uint256, uint256, address));\r\n//             uint256 gasPrice = getGasPrice(maxFeePerGas, maxPriorityFeePerGas);\r\n//             uint256 _cachedPrice = updateCachedPrice(false);\r\n//         // note: as price is in ether-per-token and we want more tokens increasing it means dividing it by markup\r\n//             uint256 cachedPriceWithMarkup = _cachedPrice * PRICE_DENOMINATOR / priceMarkup;\r\n//         // Refund tokens based on actual gas cost\r\n//             uint256 actualChargeNative = actualGasCost + tokenPaymasterConfig.refundPostopCost * gasPrice;\r\n//             uint256 actualTokenNeeded = weiToToken(actualChargeNative, cachedPriceWithMarkup);\r\n//             if (preCharge > actualTokenNeeded) {\r\n//                 // If the initially provided token amount is greater than the actual amount needed, refund the difference\r\n//                 SafeERC20.safeTransfer(\r\n//                     token,\r\n//                     userOpSender,\r\n//                     preCharge - actualTokenNeeded\r\n//                 );\r\n//             } else if (preCharge < actualTokenNeeded) {\r\n//                 // Attempt to cover Paymaster's gas expenses by withdrawing the 'overdraft' from the client\r\n//                 // If the transfer reverts also revert the 'postOp' to remove the incentive to cheat\r\n//                 SafeERC20.safeTransferFrom(\r\n//                     token,\r\n//                     userOpSender,\r\n//                     address(this),\r\n//                     actualTokenNeeded - preCharge\r\n//                 );\r\n//             }\r\n\r\n//             emit UserOperationSponsored(userOpSender, actualTokenNeeded, actualGasCost, _cachedPrice);\r\n//             refillEntryPointDeposit(_cachedPrice);\r\n//         }\r\n//     }\r\n\r\n//     /// @notice If necessary this function uses this Paymaster's token balance to refill the deposit on EntryPoint\r\n//     /// @param _cachedPrice the token price that will be used to calculate the swap amount.\r\n//     function refillEntryPointDeposit(uint256 _cachedPrice) private {\r\n//         uint256 currentEntryPointBalance = entryPoint.balanceOf(address(this));\r\n//         if (\r\n//             currentEntryPointBalance < tokenPaymasterConfig.minEntryPointBalance\r\n//         ) {\r\n//             uint256 swappedWeth = _maybeSwapTokenToWeth(token, _cachedPrice);\r\n//             unwrapWeth(swappedWeth);\r\n//             entryPoint.depositTo{value: address(this).balance}(address(this));\r\n//         }\r\n//     }\r\n\r\n//     function getGasPrice(uint256 maxFeePerGas, uint256 maxPriorityFeePerGas) internal view returns (uint256) {\r\n//         if (maxFeePerGas == maxPriorityFeePerGas) {\r\n//             // legacy mode (for networks that don't support the 'basefee' opcode)\r\n//             return maxFeePerGas;\r\n//         }\r\n//         return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\r\n//     }\r\n\r\n//     function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n//         return a < b ? a : b;\r\n//     }\r\n\r\n//     receive() external payable {\r\n//         emit Received(msg.sender, msg.value);\r\n//     }\r\n// }"},"contracts/utils/UniswapHelper.sol":{"content":"// // SPDX-License-Identifier: GPL-3.0\r\n// pragma solidity ^0.8.12;\r\n\r\n// /* solhint-disable not-rely-on-time */\r\n\r\n// import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n// import \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\r\n// import \"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\";\r\n\r\n// abstract contract UniswapHelper {\r\n//     event UniswapReverted(address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOutMin);\r\n\r\n//     uint256 private constant PRICE_DENOMINATOR = 1e26;\r\n\r\n//     struct UniswapHelperConfig {\r\n//         /// @notice Minimum native asset amount to receive from a single swap\r\n//         uint256 minSwapAmount;\r\n\r\n//         uint24 uniswapPoolFee;\r\n\r\n//         uint8 slippage;\r\n//     }\r\n\r\n//     /// @notice The Uniswap V3 SwapRouter contract\r\n//     ISwapRouter public immutable uniswap;\r\n\r\n//     /// @notice The ERC20 token used for transaction fee payments\r\n//     IERC20 public immutable token;\r\n\r\n//     /// @notice The ERC-20 token that wraps the native asset for current chain\r\n//     IERC20 public immutable wrappedNative;\r\n\r\n//     UniswapHelperConfig private uniswapHelperConfig;\r\n\r\n//     /// @notice The \"10^(token.decimals)\" value used for the price calculation\r\n//     uint256 private immutable tokenDecimalPower;\r\n\r\n//     constructor(\r\n//         IERC20 _token,\r\n//         IERC20 _wrappedNative,\r\n//         ISwapRouter _uniswap,\r\n//         uint256 _tokenDecimalPower,\r\n//         UniswapHelperConfig memory _uniswapHelperConfig\r\n//     ){\r\n//         _token.approve(address(_uniswap), type(uint256).max);\r\n//         token = _token;\r\n//         wrappedNative = _wrappedNative;\r\n//         uniswap = _uniswap;\r\n//         tokenDecimalPower = _tokenDecimalPower;\r\n//         _setUniswapHelperConfiguration(_uniswapHelperConfig);\r\n//     }\r\n\r\n//     function _setUniswapHelperConfiguration(UniswapHelperConfig memory _uniswapHelperConfig) internal {\r\n//         uniswapHelperConfig = _uniswapHelperConfig;\r\n//     }\r\n\r\n//     function _maybeSwapTokenToWeth(IERC20 tokenIn, uint256 quote) internal returns (uint256) {\r\n//         uint256 tokenBalance = tokenIn.balanceOf(address(this));\r\n//         uint256 amountOutMin = addSlippage(tokenToWei(tokenBalance, quote), uniswapHelperConfig.slippage);\r\n//         if (amountOutMin < uniswapHelperConfig.minSwapAmount) {\r\n//             return 0;\r\n//         }\r\n//         // note: calling 'swapToToken' but destination token is Wrapped Ether\r\n//         return swapToToken(\r\n//             address(tokenIn),\r\n//             address(wrappedNative),\r\n//             tokenBalance,\r\n//             amountOutMin,\r\n//             uniswapHelperConfig.uniswapPoolFee\r\n//         );\r\n//     }\r\n\r\n//     function addSlippage(uint256 amount, uint8 slippage) private pure returns (uint256) {\r\n//         return amount * (1000 - slippage) / 1000;\r\n//     }\r\n\r\n\r\n//     function tokenToWei(uint256 amount, uint256 price) public pure returns (uint256) {\r\n//         return amount * price / PRICE_DENOMINATOR;\r\n//     }\r\n\r\n//     function weiToToken(uint256 amount, uint256 price) public pure returns (uint256) {\r\n//         return amount * PRICE_DENOMINATOR / price;\r\n//     }\r\n\r\n//     // turn ERC-20 tokens into wrapped ETH at market price\r\n//     function swapToWeth(\r\n//         address tokenIn,\r\n//         address wethOut,\r\n//         uint256 amountOut,\r\n//         uint24 fee\r\n//     ) internal returns (uint256 amountIn) {\r\n//         ISwapRouter.ExactOutputSingleParams memory params = ISwapRouter.ExactOutputSingleParams(\r\n//             tokenIn,\r\n//             wethOut, //tokenOut\r\n//             fee,\r\n//             address(uniswap), //recipient - keep WETH at SwapRouter for withdrawal\r\n//             block.timestamp, //deadline\r\n//             amountOut,\r\n//             type(uint256).max,\r\n//             0\r\n//         );\r\n//         amountIn = uniswap.exactOutputSingle(params);\r\n//     }\r\n\r\n//     function unwrapWeth(uint256 amount) internal {\r\n//         IPeripheryPayments(address(uniswap)).unwrapWETH9(amount, address(this));\r\n//     }\r\n\r\n//     // swap ERC-20 tokens at market price\r\n//     function swapToToken(\r\n//         address tokenIn,\r\n//         address tokenOut,\r\n//         uint256 amountIn,\r\n//         uint256 amountOutMin,\r\n//         uint24 fee\r\n//     ) internal returns (uint256 amountOut) {\r\n//         ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams(\r\n//             tokenIn, //tokenIn\r\n//             tokenOut, //tokenOut\r\n//             fee,\r\n//             address(uniswap),\r\n//             block.timestamp, //deadline\r\n//             amountIn,\r\n//             amountOutMin,\r\n//             0\r\n//         );\r\n//         try uniswap.exactInputSingle(params) returns (uint256 _amountOut) {\r\n//             amountOut = _amountOut;\r\n//         } catch {\r\n//             emit UniswapReverted(tokenIn, tokenOut, amountIn, amountOutMin);\r\n//             amountOut = 0;\r\n//         }\r\n//     }\r\n// }"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.20;\"\n--> contracts/utils/OracleHelper.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.20;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/utils/OracleHelper.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.20;\"\n--> contracts/utils/TokenPaymaster.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.20;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/utils/TokenPaymaster.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.20;\"\n--> contracts/utils/UniswapHelper.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.20;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/utils/UniswapHelper.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[925],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":926,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":925,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,925],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":159,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":159,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":159,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":164,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":285,"src":"278:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":209,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":285,"src":"2186:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":285,"src":"4424:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6420:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[925],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":904,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":926,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1428:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":925,"src":"1428:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1428:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1437:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1437:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1437:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1445:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"1445:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1445:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1461:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1461:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1461:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:1052:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,903,877,925],"name":"ERC20","nameLocation":"1419:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1480:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1496:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1540:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1556:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1583:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1630:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1680:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1665:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1691:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1952:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1962:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1970:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1962:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1985:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1995:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1985:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1720:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1922:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1908:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1929:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1952:0:2"},"scope":799,"src":"1896:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[890],"body":{"id":344,"nodeType":"Block","src":"2134:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2151:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"2144:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"2015:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"2087:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"2119:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:2"},"scope":799,"src":"2074:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":353,"nodeType":"Block","src":"2338:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2355:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2348:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"2169:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"2291:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2323:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:2"},"scope":799,"src":"2276:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[902],"body":{"id":362,"nodeType":"Block","src":"3058:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"3068:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2375:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"3019:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"3051:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:2"},"scope":799,"src":"3002:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"3205:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3222:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"3215:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"3090:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"3164:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"3196:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:2"},"scope":799,"src":"3144:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3373:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3390:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3400:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3383:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"3247:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"3326:7:2","nodeType":"VariableDeclaration","scope":385,"src":"3318:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"3364:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:2"},"scope":799,"src":"3299:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3685:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3703:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3695:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3711:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3743:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3750:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3754:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3733:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3733:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3770:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3421:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3636:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3628:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3648:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3640:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3679:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:2"},"scope":799,"src":"3610:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3935:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3952:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3964:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3971:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3945:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3794:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3873:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3865:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3888:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3880:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:2"},"scope":799,"src":"3846:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"4372:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"4390:5:2","nodeType":"VariableDeclaration","scope":449,"src":"4382:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4398:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4429:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4436:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4445:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4420:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4420:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4461:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3992:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"4318:7:2","nodeType":"VariableDeclaration","scope":450,"src":"4310:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"4335:5:2","nodeType":"VariableDeclaration","scope":450,"src":"4327:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4366:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:2"},"scope":799,"src":"4293:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"5132:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"5150:7:2","nodeType":"VariableDeclaration","scope":481,"src":"5142:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5160:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5198:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"5204:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5213:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5182:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"5182:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5239:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5245:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5249:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5229:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"5229:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"5265:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4485:549:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"5069:4:2","nodeType":"VariableDeclaration","scope":482,"src":"5061:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"5083:2:2","nodeType":"VariableDeclaration","scope":482,"src":"5075:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"5095:5:2","nodeType":"VariableDeclaration","scope":482,"src":"5087:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"5126:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:2"},"scope":799,"src":"5039:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5725:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5739:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5735:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5759:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5780:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"5773:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5834:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5830:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5852:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5873:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"RevertStatement","src":"5866:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5933:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5939:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5943:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5925:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5925:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"5289:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5683:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5675:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5697:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5689:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5709:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5701:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5725:0:2"},"scope":799,"src":"5656:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"6346:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6360:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6534:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6548:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6570:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6580:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6603:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6617:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6599:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6624:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6680:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6693:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6649:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"RevertStatement","src":"6642:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6727:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6834:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6844:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6852:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6866:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6834:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"6356:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6380:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6496:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6512:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6496:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6910:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"7125:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"7139:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7284:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7294:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7301:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"7284:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6906:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6928:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6942:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"7073:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"7073:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7355:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7361:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7365:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7346:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"7341:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5962:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"6296:4:2","nodeType":"VariableDeclaration","scope":606,"src":"6288:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"6310:2:2","nodeType":"VariableDeclaration","scope":606,"src":"6302:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"6322:5:2","nodeType":"VariableDeclaration","scope":606,"src":"6314:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"6346:0:2"},"scope":799,"src":"6271:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7777:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7791:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7787:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7814:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7835:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"RevertStatement","src":"7828:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7907:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7916:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7887:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7887:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7384:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7744:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7736:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7761:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7753:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7777:0:2"},"scope":799,"src":"7721:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"8303:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8317:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"8313:89:2","trueBody":{"id":660,"nodeType":"Block","src":"8340:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8361:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"8354:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8419:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8440:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8411:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8411:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7935:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"8270:7:2","nodeType":"VariableDeclaration","scope":672,"src":"8262:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"8287:5:2","nodeType":"VariableDeclaration","scope":672,"src":"8279:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8303:0:2"},"scope":799,"src":"8247:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"9063:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9082:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9089:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"9098:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"9073:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"9073:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8459:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"9015:5:2","nodeType":"VariableDeclaration","scope":690,"src":"9007:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"9030:7:2","nodeType":"VariableDeclaration","scope":690,"src":"9022:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"9047:5:2","nodeType":"VariableDeclaration","scope":690,"src":"9039:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"9063:0:2"},"scope":799,"src":"8989:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"10047:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"10057:89:2","trueBody":{"id":715,"nodeType":"Block","src":"10082:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"10103:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"RevertStatement","src":"10096:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10159:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"10155:90:2","trueBody":{"id":730,"nodeType":"Block","src":"10182:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10203:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"RevertStatement","src":"10196:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"10254:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10266:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10273:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10284:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"10254:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10303:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"10299:76:2","trueBody":{"id":747,"nodeType":"Block","src":"10314:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10342:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10349:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10358:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10333:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"10328:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"9123:821:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9975:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9967:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9990:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9982:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"10007:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9999:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:2","nodeType":"VariableDeclaration","scope":750,"src":"10014:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"10047:0:2"},"scope":799,"src":"9949:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10752:388:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10762:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10799:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10806:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10789:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10828:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:2","memberName":"max","nodeType":"MemberAccess","src":"10848:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10824:310:2","trueBody":{"id":795,"nodeType":"Block","src":"10867:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10885:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10904:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10881:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10911:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10963:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10972:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10990:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10936:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"RevertStatement","src":"10929:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"11024:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"11061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"11068:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"11077:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"11096:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"11052:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"11052:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10387:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10696:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10688:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10711:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10703:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10728:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10720:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10752:0:2"},"scope":799,"src":"10663:477:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1401:9741:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:11038:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"213:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"226:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"395:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:3","nodeType":"VariableDeclaration","scope":811,"src":"404:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:3","nodeType":"VariableDeclaration","scope":811,"src":"426:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:3","nodeType":"VariableDeclaration","scope":811,"src":"446:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:3"},"src":"389:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"467:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"626:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:3","nodeType":"VariableDeclaration","scope":820,"src":"635:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:3","nodeType":"VariableDeclaration","scope":820,"src":"658:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:3","nodeType":"VariableDeclaration","scope":820,"src":"683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:3"},"src":"620:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"704:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":877,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"835:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"938:7:3","nodeType":"VariableDeclaration","scope":834,"src":"930:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"970:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:3"},"scope":877,"src":"911:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"985:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1229:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1221:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1241:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1233:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1266:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:3"},"scope":877,"src":"1203:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1278:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1574:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1566:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1589:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1581:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1621:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:3"},"scope":877,"src":"1547:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1636:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2333:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2325:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2350:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2342:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2375:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:3"},"scope":877,"src":"2308:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2387:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2719:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2711:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2733:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2725:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2745:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2737:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2770:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:3"},"scope":877,"src":"2689:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"203:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2673:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":878,"src":"151:37:4","symbolAliases":[{"foreign":{"id":880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":883,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"305:6:4"},"id":884,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"190:86:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903,877],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":903,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":903,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":899,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":903,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"277:405:4","usedErrors":[],"usedEvents":[811,820]}],"src":"125:558:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[925]},"id":926,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":925,"linearizedBaseContracts":[925],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":914,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":910,"id":913,"nodeType":"Return","src":"728:17:5"}]},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":925,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":919,"id":922,"nodeType":"Return","src":"835:15:5"}]},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":917,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":925,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":926,"src":"624:235:5","usedErrors":[],"usedEvents":[]}],"src":"101:759:5"},"id":5},"contracts/core/BasePaymaster.sol":{"ast":{"absolutePath":"contracts/core/BasePaymaster.sol","exportedSymbols":{"BasePaymaster":[1150],"Context":[925],"IAggregator":[1425],"IEntryPoint":[1579],"INonceManager":[1598],"IPaymaster":[1644],"IStakeManager":[1748],"Ownable":[147],"UserOperation":[1774],"ValidationData":[1160],"_intersectTimeRange":[1306],"_packValidationData":[1343,1381],"_parseValidationData":[1220],"calldataKeccak":[1391]},"id":1151,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":927,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:6"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":928,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1151,"sourceUnit":148,"src":"104:52:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","id":929,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1151,"sourceUnit":1645,"src":"158:38:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":930,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1151,"sourceUnit":1580,"src":"198:39:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":931,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1151,"sourceUnit":1392,"src":"239:23:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":933,"name":"IPaymaster","nameLocations":["459:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1644,"src":"459:10:6"},"id":934,"nodeType":"InheritanceSpecifier","src":"459:10:6"},{"baseName":{"id":935,"name":"Ownable","nameLocations":["471:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"471:7:6"},"id":936,"nodeType":"InheritanceSpecifier","src":"471:7:6"}],"canonicalName":"BasePaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"266:156:6","text":" Helper class for creating a paymaster.\n provides helper methods for staking.\n Validates that the postOp is called only by the entryPoint."},"fullyImplemented":false,"id":1150,"linearizedBaseContracts":[1150,147,925,1644],"name":"BasePaymaster","nameLocation":"442:13:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b0d691fe","id":939,"mutability":"immutable","name":"entryPoint","nameLocation":"515:10:6","nodeType":"VariableDeclaration","scope":1150,"src":"486:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"},"typeName":{"id":938,"nodeType":"UserDefinedTypeName","pathNode":{"id":937,"name":"IEntryPoint","nameLocations":["486:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1579,"src":"486:11:6"},"referencedDeclaration":1579,"src":"486:11:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"visibility":"public"},{"body":{"id":953,"nodeType":"Block","src":"590:43:6","statements":[{"expression":{"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":949,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"601:10:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":950,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"614:11:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"src":"601:24:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"id":952,"nodeType":"ExpressionStatement","src":"601:24:6"}]},"id":954,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":945,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"579:2:6","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"582:6:6","memberName":"origin","nodeType":"MemberAccess","src":"579:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":947,"kind":"baseConstructorSpecifier","modifierName":{"id":944,"name":"Ownable","nameLocations":["571:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"571:7:6"},"nodeType":"ModifierInvocation","src":"571:18:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"_entryPoint","nameLocation":"558:11:6","nodeType":"VariableDeclaration","scope":954,"src":"546:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"},"typeName":{"id":941,"nodeType":"UserDefinedTypeName","pathNode":{"id":940,"name":"IEntryPoint","nameLocations":["546:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1579,"src":"546:11:6"},"referencedDeclaration":1579,"src":"546:11:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"545:25:6"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"590:0:6"},"scope":1150,"src":"534:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1632],"body":{"id":979,"nodeType":"Block","src":"881:114:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":970,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"892:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"892:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"892:24:6"},{"expression":{"arguments":[{"id":974,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"959:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":975,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"967:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":976,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"979:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":973,"name":"_validatePaymasterUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"934:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$1774_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":969,"id":978,"nodeType":"Return","src":"927:60:6"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"641:26:6","text":"@inheritdoc IPaymaster"},"functionSelector":"f465c77e","id":980,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"682:23:6","nodeType":"FunctionDefinition","overrides":{"id":964,"nodeType":"OverrideSpecifier","overrides":[],"src":"817:8:6"},"parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"userOp","nameLocation":"739:6:6","nodeType":"VariableDeclaration","scope":980,"src":"716:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":957,"nodeType":"UserDefinedTypeName","pathNode":{"id":956,"name":"UserOperation","nameLocations":["716:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"716:13:6"},"referencedDeclaration":1774,"src":"716:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"userOpHash","nameLocation":"764:10:6","nodeType":"VariableDeclaration","scope":980,"src":"756:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"756:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"maxCost","nameLocation":"793:7:6","nodeType":"VariableDeclaration","scope":980,"src":"785:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"785:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"705:102:6"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"context","nameLocation":"848:7:6","nodeType":"VariableDeclaration","scope":980,"src":"835:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":965,"name":"bytes","nodeType":"ElementaryTypeName","src":"835:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"validationData","nameLocation":"865:14:6","nodeType":"VariableDeclaration","scope":980,"src":"857:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"834:46:6"},"scope":1150,"src":"673:322:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"1003:223:6","text":" Validate a user operation.\n @param userOp     - The user operation.\n @param userOpHash - The hash of the user operation.\n @param maxCost    - The maximum cost of the user operation."},"id":995,"implemented":false,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"1241:24:6","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"userOp","nameLocation":"1299:6:6","nodeType":"VariableDeclaration","scope":995,"src":"1276:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":983,"nodeType":"UserDefinedTypeName","pathNode":{"id":982,"name":"UserOperation","nameLocations":["1276:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"1276:13:6"},"referencedDeclaration":1774,"src":"1276:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"userOpHash","nameLocation":"1324:10:6","nodeType":"VariableDeclaration","scope":995,"src":"1316:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1316:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"maxCost","nameLocation":"1353:7:6","nodeType":"VariableDeclaration","scope":995,"src":"1345:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1265:102:6"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"context","nameLocation":"1407:7:6","nodeType":"VariableDeclaration","scope":995,"src":"1394:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":990,"name":"bytes","nodeType":"ElementaryTypeName","src":"1394:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"validationData","nameLocation":"1424:14:6","nodeType":"VariableDeclaration","scope":995,"src":"1416:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1416:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1393:46:6"},"scope":1150,"src":"1232:208:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1643],"body":{"id":1016,"nodeType":"Block","src":"1612:91:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1007,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"1623:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"ExpressionStatement","src":"1623:24:6"},{"expression":{"arguments":[{"id":1011,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1666:4:6","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"}},{"id":1012,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1672:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1013,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"1681:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1010,"name":"_postOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"1658:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_PostOpMode_$1617_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"ExpressionStatement","src":"1658:37:6"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"1448:26:6","text":"@inheritdoc IPaymaster"},"functionSelector":"a9a23409","id":1017,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"1489:6:6","nodeType":"FunctionDefinition","overrides":{"id":1005,"nodeType":"OverrideSpecifier","overrides":[],"src":"1603:8:6"},"parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"mode","nameLocation":"1517:4:6","nodeType":"VariableDeclaration","scope":1017,"src":"1506:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":998,"nodeType":"UserDefinedTypeName","pathNode":{"id":997,"name":"PostOpMode","nameLocations":["1506:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"1506:10:6"},"referencedDeclaration":1617,"src":"1506:10:6","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"context","nameLocation":"1547:7:6","nodeType":"VariableDeclaration","scope":1017,"src":"1532:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1000,"name":"bytes","nodeType":"ElementaryTypeName","src":"1532:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"actualGasCost","nameLocation":"1573:13:6","nodeType":"VariableDeclaration","scope":1017,"src":"1565:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1565:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:98:6"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[],"src":"1612:0:6"},"scope":1150,"src":"1480:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1037,"nodeType":"Block","src":"2711:192:6","statements":[{"expression":{"components":[{"id":1028,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"2723:4:6","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"}},{"id":1029,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2729:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1030,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"2738:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2722:30:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_PostOpMode_$1617_$_t_bytes_calldata_ptr_$_t_uint256_$","typeString":"tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":1032,"nodeType":"ExpressionStatement","src":"2722:30:6"},{"expression":{"arguments":[{"hexValue":"6d757374206f76657272696465","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2879:15:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""},"value":"must override"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""}],"id":1033,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2872:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2872:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1036,"nodeType":"ExpressionStatement","src":"2872:23:6"}]},"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"1711:862:6","text":" Post-operation handler.\n (verified to be called only through the entryPoint)\n @dev If subclass returns a non-empty context from validatePaymasterUserOp,\n      it must also implement this method.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call)."},"id":1038,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"2588:7:6","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"mode","nameLocation":"2617:4:6","nodeType":"VariableDeclaration","scope":1038,"src":"2606:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1020,"nodeType":"UserDefinedTypeName","pathNode":{"id":1019,"name":"PostOpMode","nameLocations":["2606:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"2606:10:6"},"referencedDeclaration":1617,"src":"2606:10:6","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"context","nameLocation":"2647:7:6","nodeType":"VariableDeclaration","scope":1038,"src":"2632:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1022,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"actualGasCost","nameLocation":"2673:13:6","nodeType":"VariableDeclaration","scope":1038,"src":"2665:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2595:98:6"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"2711:0:6"},"scope":1150,"src":"2579:324:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"3043:72:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1050,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3101:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$1150","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$1150","typeString":"contract BasePaymaster"}],"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3093:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:6","typeDescriptions":{}}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1042,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3054:10:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3065:9:6","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":1723,"src":"3054:20:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3082:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3086:5:6","memberName":"value","nodeType":"MemberAccess","src":"3082:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3054:38:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"3054:53:6"}]},"documentation":{"id":1039,"nodeType":"StructuredDocumentation","src":"2911:92:6","text":" Add a deposit for this paymaster, used for paying for transaction fees."},"functionSelector":"d0e30db0","id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3018:7:6","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"3025:2:6"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"3043:0:6"},"scope":1150,"src":"3009:106:6","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1072,"nodeType":"Block","src":"3398:65:6","statements":[{"expression":{"arguments":[{"id":1068,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"3431:15:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1069,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3448:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1065,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3409:10:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3420:10:6","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":1747,"src":"3409:21:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3409:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1071,"nodeType":"ExpressionStatement","src":"3409:46:6"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"3123:158:6","text":" Withdraw value from the deposit.\n @param withdrawAddress - Target to send to.\n @param amount          - Amount to withdraw."},"functionSelector":"205c2878","id":1073,"implemented":true,"kind":"function","modifiers":[{"id":1063,"kind":"modifierInvocation","modifierName":{"id":1062,"name":"onlyOwner","nameLocations":["3388:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3388:9:6"},"nodeType":"ModifierInvocation","src":"3388:9:6"}],"name":"withdrawTo","nameLocation":"3296:10:6","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3333:15:6","nodeType":"VariableDeclaration","scope":1073,"src":"3317:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"3317:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"amount","nameLocation":"3367:6:6","nodeType":"VariableDeclaration","scope":1073,"src":"3359:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3359:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3306:74:6"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"3398:0:6"},"scope":1150,"src":"3287:176:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1090,"nodeType":"Block","src":"3764:73:6","statements":[{"expression":{"arguments":[{"id":1087,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"3813:15:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":1081,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3775:10:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3786:8:6","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":1729,"src":"3775:19:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1084,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3802:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3806:5:6","memberName":"value","nodeType":"MemberAccess","src":"3802:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3775:37:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3775:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"ExpressionStatement","src":"3775:54:6"}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"3471:218:6","text":" Add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased."},"functionSelector":"0396cb60","id":1091,"implemented":true,"kind":"function","modifiers":[{"id":1079,"kind":"modifierInvocation","modifierName":{"id":1078,"name":"onlyOwner","nameLocations":["3754:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3754:9:6"},"nodeType":"ModifierInvocation","src":"3754:9:6"}],"name":"addStake","nameLocation":"3704:8:6","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"3720:15:6","nodeType":"VariableDeclaration","scope":1091,"src":"3713:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1075,"name":"uint32","nodeType":"ElementaryTypeName","src":"3713:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3712:24:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"3764:0:6"},"scope":1150,"src":"3695:142:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1105,"nodeType":"Block","src":"3977:61:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1101,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4024:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$1150","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$1150","typeString":"contract BasePaymaster"}],"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4016:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"4016:7:6","typeDescriptions":{}}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1097,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3995:10:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4006:9:6","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1717,"src":"3995:20:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3995:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1096,"id":1104,"nodeType":"Return","src":"3988:42:6"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"3845:74:6","text":" Return current paymaster's deposit on the entryPoint."},"functionSelector":"c399ec88","id":1106,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"3934:10:6","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"3944:2:6"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1106,"src":"3968:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3967:9:6"},"scope":1150,"src":"3925:113:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1117,"nodeType":"Block","src":"4245:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1112,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"4256:10:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4267:11:6","memberName":"unlockStake","nodeType":"MemberAccess","referencedDeclaration":1733,"src":"4256:22:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4256:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"4256:24:6"}]},"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"4046:151:6","text":" Unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"},"functionSelector":"bb9fe6bf","id":1118,"implemented":true,"kind":"function","modifiers":[{"id":1110,"kind":"modifierInvocation","modifierName":{"id":1109,"name":"onlyOwner","nameLocations":["4235:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4235:9:6"},"nodeType":"ModifierInvocation","src":"4235:9:6"}],"name":"unlockStake","nameLocation":"4212:11:6","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[],"src":"4223:2:6"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[],"src":"4245:0:6"},"scope":1150,"src":"4203:85:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1132,"nodeType":"Block","src":"4591:60:6","statements":[{"expression":{"arguments":[{"id":1129,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"4627:15:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":1126,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"4602:10:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4613:13:6","memberName":"withdrawStake","nodeType":"MemberAccess","referencedDeclaration":1739,"src":"4602:24:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable) external"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1131,"nodeType":"ExpressionStatement","src":"4602:41:6"}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"4296:214:6","text":" Withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":1133,"implemented":true,"kind":"function","modifiers":[{"id":1124,"kind":"modifierInvocation","modifierName":{"id":1123,"name":"onlyOwner","nameLocations":["4581:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4581:9:6"},"nodeType":"ModifierInvocation","src":"4581:9:6"}],"name":"withdrawStake","nameLocation":"4525:13:6","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4555:15:6","nodeType":"VariableDeclaration","scope":1133,"src":"4539:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"4539:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"4538:33:6"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"4591:0:6"},"scope":1150,"src":"4516:135:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1148,"nodeType":"Block","src":"4786:86:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1138,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4805:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4809:6:6","memberName":"sender","nodeType":"MemberAccess","src":"4805:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1142,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"4827:10:6","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}],"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4819:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"4819:7:6","typeDescriptions":{}}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4819:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4805:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4840:23:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""},"value":"Sender not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""}],"id":1137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4797:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4797:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1147,"nodeType":"ExpressionStatement","src":"4797:67:6"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"4659:70:6","text":" Validate the call is made from a valid entrypoint"},"id":1149,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"4744:22:6","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"4766:2:6"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[],"src":"4786:0:6"},"scope":1150,"src":"4735:137:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1151,"src":"424:4451:6","usedErrors":[13,18],"usedEvents":[24]}],"src":"37:4838:6"},"id":6},"contracts/core/Helpers.sol":{"ast":{"absolutePath":"contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[1160],"_intersectTimeRange":[1306],"_packValidationData":[1343,1381],"_parseValidationData":[1220],"calldataKeccak":[1391]},"id":1392,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1152,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:7"},{"canonicalName":"ValidationData","documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"109:649:7","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, with is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validaUntil - This UserOp is valid only up to this timestamp."},"id":1160,"members":[{"constant":false,"id":1155,"mutability":"mutable","name":"aggregator","nameLocation":"797:10:7","nodeType":"VariableDeclaration","scope":1160,"src":"789:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"validAfter","nameLocation":"821:10:7","nodeType":"VariableDeclaration","scope":1160,"src":"814:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1156,"name":"uint48","nodeType":"ElementaryTypeName","src":"814:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"validUntil","nameLocation":"845:10:7","nodeType":"VariableDeclaration","scope":1160,"src":"838:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1158,"name":"uint48","nodeType":"ElementaryTypeName","src":"838:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"767:14:7","nodeType":"StructDefinition","scope":1392,"src":"760:99:7","visibility":"public"},{"body":{"id":1219,"nodeType":"Block","src":"1131:322:7","statements":[{"assignments":[1170],"declarations":[{"constant":false,"id":1170,"mutability":"mutable","name":"aggregator","nameLocation":"1146:10:7","nodeType":"VariableDeclaration","scope":1219,"src":"1138:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1178,"initialValue":{"arguments":[{"arguments":[{"id":1175,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1175:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1167:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1173,"name":"uint160","nodeType":"ElementaryTypeName","src":"1167:7:7","typeDescriptions":{}}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1159:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:7","typeDescriptions":{}}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1138:53:7"},{"assignments":[1180],"declarations":[{"constant":false,"id":1180,"mutability":"mutable","name":"validUntil","nameLocation":"1205:10:7","nodeType":"VariableDeclaration","scope":1219,"src":"1198:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1179,"name":"uint48","nodeType":"ElementaryTypeName","src":"1198:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":1187,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1183,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1225:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1225:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1218:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1181,"name":"uint48","nodeType":"ElementaryTypeName","src":"1218:6:7","typeDescriptions":{}}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1218:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1198:49:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1258:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1272:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1258:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"IfStatement","src":"1254:69:7","trueBody":{"id":1199,"nodeType":"Block","src":"1275:48:7","statements":[{"expression":{"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1191,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1286:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1304:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1193,"name":"uint48","nodeType":"ElementaryTypeName","src":"1304:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":1192,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1299:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1299:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1312:3:7","memberName":"max","nodeType":"MemberAccess","src":"1299:16:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1286:29:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":1198,"nodeType":"ExpressionStatement","src":"1286:29:7"}]}},{"assignments":[1202],"declarations":[{"constant":false,"id":1202,"mutability":"mutable","name":"validAfter","nameLocation":"1336:10:7","nodeType":"VariableDeclaration","scope":1219,"src":"1329:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1201,"name":"uint48","nodeType":"ElementaryTypeName","src":"1329:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":1212,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1205,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1356:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1375:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1380:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1375:8:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":1209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1374:10:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1356:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1349:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1203,"name":"uint48","nodeType":"ElementaryTypeName","src":"1349:6:7","typeDescriptions":{}}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1329:56:7"},{"expression":{"arguments":[{"id":1214,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"1414:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1215,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"1426:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":1216,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1438:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":1213,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"1399:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$1160_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":1168,"id":1218,"nodeType":"Return","src":"1392:57:7"}]},"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"863:165:7","text":" Extract sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data."},"id":1220,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1039:20:7","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"validationData","nameLocation":"1071:14:7","nodeType":"VariableDeclaration","scope":1220,"src":"1066:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint","nodeType":"ElementaryTypeName","src":"1066:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1059:29:7"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"data","nameLocation":"1125:4:7","nodeType":"VariableDeclaration","scope":1220,"src":"1103:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":1166,"nodeType":"UserDefinedTypeName","pathNode":{"id":1165,"name":"ValidationData","nameLocations":["1103:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1160,"src":"1103:14:7"},"referencedDeclaration":1160,"src":"1103:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1102:28:7"},"scope":1392,"src":"1030:423:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"1809:795:7","statements":[{"assignments":[1233],"declarations":[{"constant":false,"id":1233,"mutability":"mutable","name":"accountValidationData","nameLocation":"1838:21:7","nodeType":"VariableDeclaration","scope":1305,"src":"1816:43:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":1232,"nodeType":"UserDefinedTypeName","pathNode":{"id":1231,"name":"ValidationData","nameLocations":["1816:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1160,"src":"1816:14:7"},"referencedDeclaration":1160,"src":"1816:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":1237,"initialValue":{"arguments":[{"id":1235,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"1893:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1234,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"1862:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$1160_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1816:98:7"},{"assignments":[1240],"declarations":[{"constant":false,"id":1240,"mutability":"mutable","name":"pmValidationData","nameLocation":"1943:16:7","nodeType":"VariableDeclaration","scope":1305,"src":"1921:38:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":1239,"nodeType":"UserDefinedTypeName","pathNode":{"id":1238,"name":"ValidationData","nameLocations":["1921:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1160,"src":"1921:14:7"},"referencedDeclaration":1160,"src":"1921:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":1244,"initialValue":{"arguments":[{"id":1242,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1993:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1241,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"1962:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$1160_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1921:102:7"},{"assignments":[1246],"declarations":[{"constant":false,"id":1246,"mutability":"mutable","name":"aggregator","nameLocation":"2038:10:7","nodeType":"VariableDeclaration","scope":1305,"src":"2030:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1249,"initialValue":{"expression":{"id":1247,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2051:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"id":1248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2073:10:7","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":1155,"src":"2051:32:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2030:53:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"2094:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2116:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2108:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:7","typeDescriptions":{}}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2108:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2094:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1262,"nodeType":"IfStatement","src":"2090:89:7","trueBody":{"id":1261,"nodeType":"Block","src":"2120:59:7","statements":[{"expression":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1256,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"2131:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1257,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2144:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"id":1258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2161:10:7","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":1155,"src":"2144:27:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2131:40:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1260,"nodeType":"ExpressionStatement","src":"2131:40:7"}]}},{"assignments":[1264],"declarations":[{"constant":false,"id":1264,"mutability":"mutable","name":"validAfter","nameLocation":"2192:10:7","nodeType":"VariableDeclaration","scope":1305,"src":"2185:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1263,"name":"uint48","nodeType":"ElementaryTypeName","src":"2185:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":1267,"initialValue":{"expression":{"id":1265,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2205:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"id":1266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2227:10:7","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":1157,"src":"2205:32:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2185:52:7"},{"assignments":[1269],"declarations":[{"constant":false,"id":1269,"mutability":"mutable","name":"validUntil","nameLocation":"2251:10:7","nodeType":"VariableDeclaration","scope":1305,"src":"2244:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1268,"name":"uint48","nodeType":"ElementaryTypeName","src":"2244:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":1272,"initialValue":{"expression":{"id":1270,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2264:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"id":1271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2286:10:7","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"2264:32:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2244:52:7"},{"assignments":[1274],"declarations":[{"constant":false,"id":1274,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2310:12:7","nodeType":"VariableDeclaration","scope":1305,"src":"2303:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1273,"name":"uint48","nodeType":"ElementaryTypeName","src":"2303:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":1277,"initialValue":{"expression":{"id":1275,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2325:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"id":1276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2342:10:7","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":1157,"src":"2325:27:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2303:49:7"},{"assignments":[1279],"declarations":[{"constant":false,"id":1279,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2366:12:7","nodeType":"VariableDeclaration","scope":1305,"src":"2359:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1278,"name":"uint48","nodeType":"ElementaryTypeName","src":"2359:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":1282,"initialValue":{"expression":{"id":1280,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2381:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"id":1281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:10:7","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"2381:27:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2359:49:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"2421:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1284,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2434:12:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2421:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1290,"nodeType":"IfStatement","src":"2417:56:7","trueBody":{"expression":{"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1286,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"2448:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1287,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2461:12:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2448:25:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":1289,"nodeType":"ExpressionStatement","src":"2448:25:7"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2484:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1292,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"2497:12:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2484:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1298,"nodeType":"IfStatement","src":"2480:56:7","trueBody":{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1294,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2511:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1295,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"2524:12:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2511:25:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":1297,"nodeType":"ExpressionStatement","src":"2511:25:7"}},{"expression":{"arguments":[{"id":1300,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"2565:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1301,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"2577:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":1302,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2589:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":1299,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2550:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$1160_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":1230,"id":1304,"nodeType":"Return","src":"2543:57:7"}]},"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"1457:214:7","text":" Intersect account and paymaster ranges.\n @param validationData          - The packed validation data of the account.\n @param paymasterValidationData - The packed validation data of the paymaster."},"id":1306,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1682:19:7","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"validationData","nameLocation":"1716:14:7","nodeType":"VariableDeclaration","scope":1306,"src":"1708:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1745:23:7","nodeType":"VariableDeclaration","scope":1306,"src":"1737:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1701:70:7"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"1786:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":1228,"nodeType":"UserDefinedTypeName","pathNode":{"id":1227,"name":"ValidationData","nameLocations":["1786:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1160,"src":"1786:14:7"},"referencedDeclaration":1160,"src":"1786:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1785:23:7"},"scope":1392,"src":"1673:931:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1342,"nodeType":"Block","src":"2808:148:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"2839:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"id":1318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2844:10:7","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":1155,"src":"2839:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2831:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1315,"name":"uint160","nodeType":"ElementaryTypeName","src":"2831:7:7","typeDescriptions":{}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1322,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"2876:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"id":1323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2881:10:7","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"2876:15:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2868:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:7","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2868:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2896:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2868:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2867:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:69:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1331,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"2921:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData memory"}},"id":1332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2926:10:7","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":1157,"src":"2921:15:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2913:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2913:7:7","typeDescriptions":{}}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2942:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2942:8:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":1337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2941:10:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2913:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2912:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:121:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1314,"id":1341,"nodeType":"Return","src":"2815:137:7"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"2608:110:7","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack."},"id":1343,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2729:19:7","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"data","nameLocation":"2777:4:7","nodeType":"VariableDeclaration","scope":1343,"src":"2755:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":1309,"nodeType":"UserDefinedTypeName","pathNode":{"id":1308,"name":"ValidationData","nameLocations":["2755:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1160,"src":"2755:14:7"},"referencedDeclaration":1160,"src":"2755:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$1160_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2748:36:7"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1343,"src":"2799:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2799:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2798:9:7"},"scope":1392,"src":"2720:236:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1380,"nodeType":"Block","src":"3411:133:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":1355,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"3435:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3451:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3435:17:7","trueExpression":{"hexValue":"31","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3447:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3434:19:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1362,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"3474:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3466:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:7","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3466:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3489:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3466:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3465:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:59:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1370,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"3514:10:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3506:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"3506:7:7","typeDescriptions":{}}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3506:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3530:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3536:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3530:8:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":1375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3529:10:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3506:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3505:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:106:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1354,"id":1379,"nodeType":"Return","src":"3418:122:7"}]},"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"2960:325:7","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n @param validAfter - First timestamp this UserOperation is valid."},"id":1381,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"3296:19:7","nodeType":"FunctionDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"sigFailed","nameLocation":"3327:9:7","nodeType":"VariableDeclaration","scope":1381,"src":"3322:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1345,"name":"bool","nodeType":"ElementaryTypeName","src":"3322:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"validUntil","nameLocation":"3350:10:7","nodeType":"VariableDeclaration","scope":1381,"src":"3343:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1347,"name":"uint48","nodeType":"ElementaryTypeName","src":"3343:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"validAfter","nameLocation":"3374:10:7","nodeType":"VariableDeclaration","scope":1381,"src":"3367:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1349,"name":"uint48","nodeType":"ElementaryTypeName","src":"3367:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3315:72:7"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"3402:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3401:9:7"},"scope":1392,"src":"3287:257:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1390,"nodeType":"Block","src":"3805:200:7","statements":[{"AST":{"nodeType":"YulBlock","src":"3825:173:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3840:22:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3857:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3851:5:7"},"nodeType":"YulFunctionCall","src":"3851:11:7"},"variables":[{"name":"mem","nodeType":"YulTypedName","src":"3844:3:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3876:22:7","value":{"name":"data.length","nodeType":"YulIdentifier","src":"3887:11:7"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3880:3:7","type":""}]},{"expression":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3925:3:7"},{"name":"data.offset","nodeType":"YulIdentifier","src":"3930:11:7"},{"name":"len","nodeType":"YulIdentifier","src":"3943:3:7"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3912:12:7"},"nodeType":"YulFunctionCall","src":"3912:35:7"},"nodeType":"YulExpressionStatement","src":"3912:35:7"},{"nodeType":"YulAssignment","src":"3961:26:7","value":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3978:3:7"},{"name":"len","nodeType":"YulIdentifier","src":"3983:3:7"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3968:9:7"},"nodeType":"YulFunctionCall","src":"3968:19:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3961:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1384,"isOffset":false,"isSlot":false,"src":"3887:11:7","suffix":"length","valueSize":1},{"declaration":1384,"isOffset":true,"isSlot":false,"src":"3930:11:7","suffix":"offset","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"3961:3:7","valueSize":1}],"id":1389,"nodeType":"InlineAssembly","src":"3816:182:7"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"3548:179:7","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":1391,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3742:14:7","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"data","nameLocation":"3772:4:7","nodeType":"VariableDeclaration","scope":1391,"src":"3757:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1383,"name":"bytes","nodeType":"ElementaryTypeName","src":"3757:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3756:21:7"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"ret","nameLocation":"3800:3:7","nodeType":"VariableDeclaration","scope":1391,"src":"3792:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3792:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3791:13:7"},"scope":1392,"src":"3733:272:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"37:3968:7"},"id":7},"contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[1425],"UserOperation":[1774]},"id":1426,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1393,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:8"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":1394,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1426,"sourceUnit":1775,"src":"65:29:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"98:45:8","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":1425,"linearizedBaseContracts":[1425],"name":"IAggregator","nameLocation":"155:11:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"174:274:8","text":" Validate aggregated signature.\n Revert if the aggregated signature does not match the given list of operations.\n @param userOps   - Array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"e3563a4f","id":1405,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"463:18:8","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"userOps","nameLocation":"517:7:8","nodeType":"VariableDeclaration","scope":1405,"src":"492:32:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$1774_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":1398,"nodeType":"UserDefinedTypeName","pathNode":{"id":1397,"name":"UserOperation","nameLocations":["492:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"492:13:8"},"referencedDeclaration":1774,"src":"492:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"id":1399,"nodeType":"ArrayTypeName","src":"492:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$1774_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"signature","nameLocation":"550:9:8","nodeType":"VariableDeclaration","scope":1405,"src":"535:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"535:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"481:85:8"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"580:0:8"},"scope":1425,"src":"454:127:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"589:616:8","text":" Validate signature of a single userOp.\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"64c530cd","id":1414,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1220:23:8","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"userOp","nameLocation":"1277:6:8","nodeType":"VariableDeclaration","scope":1414,"src":"1254:29:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1408,"nodeType":"UserDefinedTypeName","pathNode":{"id":1407,"name":"UserOperation","nameLocations":["1254:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"1254:13:8"},"referencedDeclaration":1774,"src":"1254:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1243:47:8"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1327:12:8","nodeType":"VariableDeclaration","scope":1414,"src":"1314:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1411,"name":"bytes","nodeType":"ElementaryTypeName","src":"1314:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1313:27:8"},"scope":1425,"src":"1211:130:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"1349:393:8","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation.\n @param userOps              - Array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"275e2d79","id":1424,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1757:19:8","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"userOps","nameLocation":"1812:7:8","nodeType":"VariableDeclaration","scope":1424,"src":"1787:32:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$1774_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":1417,"nodeType":"UserDefinedTypeName","pathNode":{"id":1416,"name":"UserOperation","nameLocations":["1787:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"1787:13:8"},"referencedDeclaration":1774,"src":"1787:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"id":1418,"nodeType":"ArrayTypeName","src":"1787:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$1774_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1776:50:8"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1863:19:8","nodeType":"VariableDeclaration","scope":1424,"src":"1850:32:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"1850:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1849:34:8"},"scope":1425,"src":"1748:136:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1426,"src":"145:1742:8","usedErrors":[],"usedEvents":[]}],"src":"37:1852:8"},"id":8},"contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[1425],"IEntryPoint":[1579],"INonceManager":[1598],"IStakeManager":[1748],"UserOperation":[1774]},"id":1580,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1427,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"168:24:9"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":1428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1580,"sourceUnit":1775,"src":"322:29:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":1429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1580,"sourceUnit":1749,"src":"353:29:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":1430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1580,"sourceUnit":1426,"src":"384:27:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":1431,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1580,"sourceUnit":1599,"src":"413:29:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1432,"name":"IStakeManager","nameLocations":["471:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1748,"src":"471:13:9"},"id":1433,"nodeType":"InheritanceSpecifier","src":"471:13:9"},{"baseName":{"id":1434,"name":"INonceManager","nameLocations":["486:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1598,"src":"486:13:9"},"id":1435,"nodeType":"InheritanceSpecifier","src":"486:13:9"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1579,"linearizedBaseContracts":[1579,1598,1748],"name":"IEntryPoint","nameLocation":"456:11:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":1451,"name":"UserOperationEvent","nameLocation":"1277:18:9","nodeType":"EventDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1322:10:9","nodeType":"VariableDeclaration","scope":1451,"src":"1306:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1306:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1439,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1359:6:9","nodeType":"VariableDeclaration","scope":1451,"src":"1343:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"1343:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1441,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1392:9:9","nodeType":"VariableDeclaration","scope":1451,"src":"1376:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1420:5:9","nodeType":"VariableDeclaration","scope":1451,"src":"1412:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1445,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1441:7:9","nodeType":"VariableDeclaration","scope":1451,"src":"1436:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1444,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1447,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1467:13:9","nodeType":"VariableDeclaration","scope":1451,"src":"1459:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1449,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1499:13:9","nodeType":"VariableDeclaration","scope":1451,"src":"1491:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1295:224:9"},"src":"1271:249:9"},{"anonymous":false,"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"1528:355:9","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":1462,"name":"AccountDeployed","nameLocation":"1895:15:9","nodeType":"EventDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1937:10:9","nodeType":"VariableDeclaration","scope":1462,"src":"1921:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1921:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1456,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1974:6:9","nodeType":"VariableDeclaration","scope":1462,"src":"1958:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1458,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1999:7:9","nodeType":"VariableDeclaration","scope":1462,"src":"1991:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1457,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1460,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"2025:9:9","nodeType":"VariableDeclaration","scope":1462,"src":"2017:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"2017:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1910:131:9"},"src":"1889:153:9"},{"anonymous":false,"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"2050:367:9","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":1473,"name":"UserOperationRevertReason","nameLocation":"2429:25:9","nodeType":"EventDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2481:10:9","nodeType":"VariableDeclaration","scope":1473,"src":"2465:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2465:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1467,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2518:6:9","nodeType":"VariableDeclaration","scope":1473,"src":"2502:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1466,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1469,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2543:5:9","nodeType":"VariableDeclaration","scope":1473,"src":"2535:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1471,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2565:12:9","nodeType":"VariableDeclaration","scope":1473,"src":"2559:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1470,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2454:130:9"},"src":"2423:162:9"},{"anonymous":false,"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"2593:382:9","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":1484,"name":"PostOpRevertReason","nameLocation":"2987:18:9","nodeType":"EventDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3032:10:9","nodeType":"VariableDeclaration","scope":1484,"src":"3016:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3016:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1478,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3069:6:9","nodeType":"VariableDeclaration","scope":1484,"src":"3053:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"3053:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1480,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3094:5:9","nodeType":"VariableDeclaration","scope":1484,"src":"3086:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1482,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3116:12:9","nodeType":"VariableDeclaration","scope":1484,"src":"3110:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1481,"name":"bytes","nodeType":"ElementaryTypeName","src":"3110:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3005:130:9"},"src":"2981:155:9"},{"anonymous":false,"documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"3144:161:9","text":" An event emitted by handleOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":1487,"name":"BeforeExecution","nameLocation":"3317:15:9","nodeType":"EventDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[],"src":"3332:2:9"},"src":"3311:24:9"},{"anonymous":false,"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"3343:190:9","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":1492,"name":"SignatureAggregatorChanged","nameLocation":"3545:26:9","nodeType":"EventDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3588:10:9","nodeType":"VariableDeclaration","scope":1492,"src":"3572:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"3572:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3571:28:9"},"src":"3539:61:9"},{"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"3608:785:9","text":" A custom revert error of handleOps, to identify the offending op.\n Should be caught in off-chain handleOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":1499,"name":"FailedOp","nameLocation":"4405:8:9","nodeType":"ErrorDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"opIndex","nameLocation":"4422:7:9","nodeType":"VariableDeclaration","scope":1499,"src":"4414:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"4414:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"reason","nameLocation":"4438:6:9","nodeType":"VariableDeclaration","scope":1499,"src":"4431:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1496,"name":"string","nodeType":"ElementaryTypeName","src":"4431:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4413:32:9"},"src":"4399:47:9"},{"errorSelector":"ad7954bc","id":1503,"name":"PostOpReverted","nameLocation":"4460:14:9","nodeType":"ErrorDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"returnData","nameLocation":"4481:10:9","nodeType":"VariableDeclaration","scope":1503,"src":"4475:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1500,"name":"bytes","nodeType":"ElementaryTypeName","src":"4475:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4474:18:9"},"src":"4454:39:9"},{"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"4501:193:9","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":1508,"name":"SignatureValidationFailed","nameLocation":"4706:25:9","nodeType":"ErrorDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"aggregator","nameLocation":"4740:10:9","nodeType":"VariableDeclaration","scope":1508,"src":"4732:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"4732:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4731:20:9"},"src":"4700:52:9"},{"errorSelector":"6ca7b806","id":1512,"name":"SenderAddressResult","nameLocation":"4808:19:9","nodeType":"ErrorDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"sender","nameLocation":"4836:6:9","nodeType":"VariableDeclaration","scope":1512,"src":"4828:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"4828:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4827:16:9"},"src":"4802:42:9"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":1522,"members":[{"constant":false,"id":1516,"mutability":"mutable","name":"userOps","nameLocation":"4948:7:9","nodeType":"VariableDeclaration","scope":1522,"src":"4932:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$1774_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":1514,"nodeType":"UserDefinedTypeName","pathNode":{"id":1513,"name":"UserOperation","nameLocations":["4932:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"4932:13:9"},"referencedDeclaration":1774,"src":"4932:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"id":1515,"nodeType":"ArrayTypeName","src":"4932:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$1774_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"aggregator","nameLocation":"5009:10:9","nodeType":"VariableDeclaration","scope":1522,"src":"4997:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$1425","typeString":"contract IAggregator"},"typeName":{"id":1518,"nodeType":"UserDefinedTypeName","pathNode":{"id":1517,"name":"IAggregator","nameLocations":["4997:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1425,"src":"4997:11:9"},"referencedDeclaration":1425,"src":"4997:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$1425","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"signature","nameLocation":"5069:9:9","nodeType":"VariableDeclaration","scope":1522,"src":"5063:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1520,"name":"bytes","nodeType":"ElementaryTypeName","src":"5063:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"4900:20:9","nodeType":"StructDefinition","scope":1579,"src":"4893:193:9","visibility":"public"},{"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"5094:390:9","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"1fad948c","id":1532,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5499:9:9","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"ops","nameLocation":"5544:3:9","nodeType":"VariableDeclaration","scope":1532,"src":"5519:28:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$1774_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":1525,"nodeType":"UserDefinedTypeName","pathNode":{"id":1524,"name":"UserOperation","nameLocations":["5519:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"5519:13:9"},"referencedDeclaration":1774,"src":"5519:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"id":1526,"nodeType":"ArrayTypeName","src":"5519:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$1774_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"beneficiary","nameLocation":"5574:11:9","nodeType":"VariableDeclaration","scope":1532,"src":"5558:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"5558:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5508:84:9"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[],"src":"5601:0:9"},"scope":1579,"src":"5490:112:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"5610:264:9","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"4b1d7cf5","id":1542,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"5889:19:9","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"5951:16:9","nodeType":"VariableDeclaration","scope":1542,"src":"5919:48:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$1522_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":1535,"nodeType":"UserDefinedTypeName","pathNode":{"id":1534,"name":"UserOpsPerAggregator","nameLocations":["5919:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":1522,"src":"5919:20:9"},"referencedDeclaration":1522,"src":"5919:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$1522_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":1536,"nodeType":"ArrayTypeName","src":"5919:22:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$1522_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"beneficiary","nameLocation":"5994:11:9","nodeType":"VariableDeclaration","scope":1542,"src":"5978:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"5978:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5908:104:9"},"returnParameters":{"id":1541,"nodeType":"ParameterList","parameters":[],"src":"6021:0:9"},"scope":1579,"src":"5880:142:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"6030:275:9","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n @param userOp - The user operation to generate the request ID for."},"functionSelector":"a6193531","id":1551,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6320:13:9","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"userOp","nameLocation":"6367:6:9","nodeType":"VariableDeclaration","scope":1551,"src":"6344:29:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1545,"nodeType":"UserDefinedTypeName","pathNode":{"id":1544,"name":"UserOperation","nameLocations":["6344:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"6344:13:9"},"referencedDeclaration":1774,"src":"6344:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6333:47:9"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1551,"src":"6404:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6404:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6403:9:9"},"scope":1579,"src":"6311:102:9","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"6421:641:9","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\n @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\n @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":1565,"members":[{"constant":false,"id":1554,"mutability":"mutable","name":"preOpGas","nameLocation":"7105:8:9","nodeType":"VariableDeclaration","scope":1565,"src":"7097:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"7097:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"prefund","nameLocation":"7132:7:9","nodeType":"VariableDeclaration","scope":1565,"src":"7124:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"sigFailed","nameLocation":"7155:9:9","nodeType":"VariableDeclaration","scope":1565,"src":"7150:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1557,"name":"bool","nodeType":"ElementaryTypeName","src":"7150:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"validAfter","nameLocation":"7182:10:9","nodeType":"VariableDeclaration","scope":1565,"src":"7175:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1559,"name":"uint48","nodeType":"ElementaryTypeName","src":"7175:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"validUntil","nameLocation":"7210:10:9","nodeType":"VariableDeclaration","scope":1565,"src":"7203:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1561,"name":"uint48","nodeType":"ElementaryTypeName","src":"7203:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"paymasterContext","nameLocation":"7237:16:9","nodeType":"VariableDeclaration","scope":1565,"src":"7231:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1563,"name":"bytes","nodeType":"ElementaryTypeName","src":"7231:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7075:10:9","nodeType":"StructDefinition","scope":1579,"src":"7068:193:9","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"7269:127:9","text":" Returned aggregated signature info:\n The aggregator returned by the account, and its current stake."},"id":1572,"members":[{"constant":false,"id":1568,"mutability":"mutable","name":"aggregator","nameLocation":"7448:10:9","nodeType":"VariableDeclaration","scope":1572,"src":"7440:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"7440:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"stakeInfo","nameLocation":"7479:9:9","nodeType":"VariableDeclaration","scope":1572,"src":"7469:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$1700_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":1570,"nodeType":"UserDefinedTypeName","pathNode":{"id":1569,"name":"StakeInfo","nameLocations":["7469:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1700,"src":"7469:9:9"},"referencedDeclaration":1700,"src":"7469:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$1700_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7409:19:9","nodeType":"StructDefinition","scope":1579,"src":"7402:94:9","visibility":"public"},{"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"7504:343:9","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":1578,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"7862:16:9","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"initCode","nameLocation":"7892:8:9","nodeType":"VariableDeclaration","scope":1578,"src":"7879:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1574,"name":"bytes","nodeType":"ElementaryTypeName","src":"7879:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7878:23:9"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[],"src":"7910:0:9"},"scope":1579,"src":"7853:58:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1580,"src":"446:7470:9","usedErrors":[1499,1503,1508,1512],"usedEvents":[1451,1462,1473,1484,1487,1492,1653,1661,1669,1675,1683]}],"src":"168:7750:9"},"id":9},"contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[1598]},"id":1599,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1581,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1598,"linearizedBaseContracts":[1598],"name":"INonceManager","nameLocation":"75:13:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"98:424:10","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":1591,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"537:8:10","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"sender","nameLocation":"554:6:10","nodeType":"VariableDeclaration","scope":1591,"src":"546:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"key","nameLocation":"570:3:10","nodeType":"VariableDeclaration","scope":1591,"src":"562:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1585,"name":"uint192","nodeType":"ElementaryTypeName","src":"562:7:10","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"545:29:10"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"nonce","nameLocation":"611:5:10","nodeType":"VariableDeclaration","scope":1591,"src":"603:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"602:15:10"},"scope":1598,"src":"528:90:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"626:456:10","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":1597,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1097:14:10","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"key","nameLocation":"1120:3:10","nodeType":"VariableDeclaration","scope":1597,"src":"1112:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1593,"name":"uint192","nodeType":"ElementaryTypeName","src":"1112:7:10","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1111:13:10"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[],"src":"1133:0:10"},"scope":1598,"src":"1088:46:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1599,"src":"65:1072:10","usedErrors":[],"usedEvents":[]}],"src":"37:1102:10"},"id":10},"contracts/interfaces/IOracle.sol":{"ast":{"absolutePath":"contracts/interfaces/IOracle.sol","exportedSymbols":{"IOracle":[1609]},"id":1610,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1600,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IOracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1609,"linearizedBaseContracts":[1609],"name":"IOracle","nameLocation":"75:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"92:88:11","text":" return amount of tokens that are required to receive that much eth."},"functionSelector":"d1eca9cf","id":1608,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenValueOfEth","nameLocation":"195:18:11","nodeType":"FunctionDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"ethOutput","nameLocation":"222:9:11","nodeType":"VariableDeclaration","scope":1608,"src":"214:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"214:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"213:19:11"},"returnParameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"tokenInput","nameLocation":"264:10:11","nodeType":"VariableDeclaration","scope":1608,"src":"256:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"255:20:11"},"scope":1609,"src":"186:90:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1610,"src":"65:214:11","usedErrors":[],"usedEvents":[]}],"src":"37:242:11"},"id":11},"contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[1644],"UserOperation":[1774]},"id":1645,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1611,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:12"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":1612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1645,"sourceUnit":1775,"src":"65:29:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"98:219:12","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":1644,"linearizedBaseContracts":[1644],"name":"IPaymaster","nameLocation":"329:10:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":1617,"members":[{"id":1614,"name":"opSucceeded","nameLocation":"405:11:12","nodeType":"EnumValue","src":"405:11:12"},{"id":1615,"name":"opReverted","nameLocation":"483:10:12","nodeType":"EnumValue","src":"483:10:12"},{"id":1616,"name":"postOpReverted","nameLocation":"654:14:12","nodeType":"EnumValue","src":"654:14:12"}],"name":"PostOpMode","nameLocation":"352:10:12","nodeType":"EnumDefinition","src":"347:328:12"},{"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"683:1458:12","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                                    otherwise, an address of an \"authorizer\" contract.\n                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"f465c77e","id":1632,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2156:23:12","nodeType":"FunctionDefinition","parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"userOp","nameLocation":"2213:6:12","nodeType":"VariableDeclaration","scope":1632,"src":"2190:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1620,"nodeType":"UserDefinedTypeName","pathNode":{"id":1619,"name":"UserOperation","nameLocations":["2190:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"2190:13:12"},"referencedDeclaration":1774,"src":"2190:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"userOpHash","nameLocation":"2238:10:12","nodeType":"VariableDeclaration","scope":1632,"src":"2230:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2230:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"maxCost","nameLocation":"2267:7:12","nodeType":"VariableDeclaration","scope":1632,"src":"2259:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2259:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2179:102:12"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"context","nameLocation":"2313:7:12","nodeType":"VariableDeclaration","scope":1632,"src":"2300:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1627,"name":"bytes","nodeType":"ElementaryTypeName","src":"2300:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"validationData","nameLocation":"2330:14:12","nodeType":"VariableDeclaration","scope":1632,"src":"2322:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2299:46:12"},"scope":1644,"src":"2147:199:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"2354:716:12","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call)."},"functionSelector":"a9a23409","id":1643,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3085:6:12","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"mode","nameLocation":"3113:4:12","nodeType":"VariableDeclaration","scope":1643,"src":"3102:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1635,"nodeType":"UserDefinedTypeName","pathNode":{"id":1634,"name":"PostOpMode","nameLocations":["3102:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"3102:10:12"},"referencedDeclaration":1617,"src":"3102:10:12","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"context","nameLocation":"3143:7:12","nodeType":"VariableDeclaration","scope":1643,"src":"3128:22:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1637,"name":"bytes","nodeType":"ElementaryTypeName","src":"3128:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"actualGasCost","nameLocation":"3169:13:12","nodeType":"VariableDeclaration","scope":1643,"src":"3161:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"3161:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3091:98:12"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"3198:0:12"},"scope":1644,"src":"3076:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1645,"src":"319:2883:12","usedErrors":[],"usedEvents":[]}],"src":"37:3167:12"},"id":12},"contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[1748]},"id":1749,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1646,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"42:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"70:216:13","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":1748,"linearizedBaseContracts":[1748],"name":"IStakeManager","nameLocation":"298:13:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":1653,"name":"Deposited","nameLocation":"325:9:13","nodeType":"EventDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"351:7:13","nodeType":"VariableDeclaration","scope":1653,"src":"335:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1651,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"368:12:13","nodeType":"VariableDeclaration","scope":1653,"src":"360:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"334:47:13"},"src":"319:63:13"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":1661,"name":"Withdrawn","nameLocation":"396:9:13","nodeType":"EventDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"432:7:13","nodeType":"VariableDeclaration","scope":1661,"src":"416:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1657,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"458:15:13","nodeType":"VariableDeclaration","scope":1661,"src":"450:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"492:6:13","nodeType":"VariableDeclaration","scope":1661,"src":"484:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:100:13"},"src":"390:116:13"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":1669,"name":"StakeLocked","nameLocation":"578:11:13","nodeType":"EventDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"616:7:13","nodeType":"VariableDeclaration","scope":1669,"src":"600:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1665,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"642:11:13","nodeType":"VariableDeclaration","scope":1669,"src":"634:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1667,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"672:15:13","nodeType":"VariableDeclaration","scope":1669,"src":"664:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"589:105:13"},"src":"572:123:13"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":1675,"name":"StakeUnlocked","nameLocation":"767:13:13","nodeType":"EventDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"797:7:13","nodeType":"VariableDeclaration","scope":1675,"src":"781:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"781:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"814:12:13","nodeType":"VariableDeclaration","scope":1675,"src":"806:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"780:47:13"},"src":"761:67:13"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":1683,"name":"StakeWithdrawn","nameLocation":"842:14:13","nodeType":"EventDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"883:7:13","nodeType":"VariableDeclaration","scope":1683,"src":"867:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1676,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1679,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"909:15:13","nodeType":"VariableDeclaration","scope":1683,"src":"901:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1681,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"943:6:13","nodeType":"VariableDeclaration","scope":1683,"src":"935:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"856:100:13"},"src":"836:121:13"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"965:697:13","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n      and the rest fit into a 2nd cell.\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":1695,"members":[{"constant":false,"id":1686,"mutability":"mutable","name":"deposit","nameLocation":"1706:7:13","nodeType":"VariableDeclaration","scope":1695,"src":"1698:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1685,"name":"uint112","nodeType":"ElementaryTypeName","src":"1698:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"staked","nameLocation":"1729:6:13","nodeType":"VariableDeclaration","scope":1695,"src":"1724:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1687,"name":"bool","nodeType":"ElementaryTypeName","src":"1724:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"stake","nameLocation":"1754:5:13","nodeType":"VariableDeclaration","scope":1695,"src":"1746:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1689,"name":"uint112","nodeType":"ElementaryTypeName","src":"1746:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1777:15:13","nodeType":"VariableDeclaration","scope":1695,"src":"1770:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1691,"name":"uint32","nodeType":"ElementaryTypeName","src":"1770:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"withdrawTime","nameLocation":"1810:12:13","nodeType":"VariableDeclaration","scope":1695,"src":"1803:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1693,"name":"uint48","nodeType":"ElementaryTypeName","src":"1803:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1675:11:13","nodeType":"StructDefinition","scope":1748,"src":"1668:162:13","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":1700,"members":[{"constant":false,"id":1697,"mutability":"mutable","name":"stake","nameLocation":"1938:5:13","nodeType":"VariableDeclaration","scope":1700,"src":"1930:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1962:15:13","nodeType":"VariableDeclaration","scope":1700,"src":"1954:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1954:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1909:9:13","nodeType":"StructDefinition","scope":1748,"src":"1902:83:13","visibility":"public"},{"documentation":{"id":1701,"nodeType":"StructuredDocumentation","src":"1993:153:13","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":1709,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2161:14:13","nodeType":"FunctionDefinition","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"account","nameLocation":"2194:7:13","nodeType":"VariableDeclaration","scope":1709,"src":"2186:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"2186:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2175:33:13"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"info","nameLocation":"2251:4:13","nodeType":"VariableDeclaration","scope":1709,"src":"2232:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$1695_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":1706,"nodeType":"UserDefinedTypeName","pathNode":{"id":1705,"name":"DepositInfo","nameLocations":["2232:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1695,"src":"2232:11:13"},"referencedDeclaration":1695,"src":"2232:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$1695_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2231:25:13"},"scope":1748,"src":"2152:105:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"2265:159:13","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":1717,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2439:9:13","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"account","nameLocation":"2457:7:13","nodeType":"VariableDeclaration","scope":1717,"src":"2449:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"2449:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2448:17:13"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1717,"src":"2489:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2488:9:13"},"scope":1748,"src":"2430:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"2506:109:13","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":1723,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2630:9:13","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"account","nameLocation":"2648:7:13","nodeType":"VariableDeclaration","scope":1723,"src":"2640:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"2640:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2639:17:13"},"returnParameters":{"id":1722,"nodeType":"ParameterList","parameters":[],"src":"2673:0:13"},"scope":1748,"src":"2621:53:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"2682:207:13","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":1729,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2904:8:13","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2920:16:13","nodeType":"VariableDeclaration","scope":1729,"src":"2913:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1725,"name":"uint32","nodeType":"ElementaryTypeName","src":"2913:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2912:25:13"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[],"src":"2954:0:13"},"scope":1748,"src":"2895:60:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"2963:131:13","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":1733,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3109:11:13","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"3120:2:13"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[],"src":"3131:0:13"},"scope":1748,"src":"3100:32:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"3140:201:13","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":1739,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3356:13:13","nodeType":"FunctionDefinition","parameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3386:15:13","nodeType":"VariableDeclaration","scope":1739,"src":"3370:31:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"3370:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3369:33:13"},"returnParameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"3411:0:13"},"scope":1748,"src":"3347:65:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"3420:174:13","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":1747,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3609:10:13","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3646:15:13","nodeType":"VariableDeclaration","scope":1747,"src":"3630:31:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"3630:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3680:14:13","nodeType":"VariableDeclaration","scope":1747,"src":"3672:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3672:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:82:13"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[],"src":"3710:0:13"},"scope":1748,"src":"3600:111:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1749,"src":"288:3426:13","usedErrors":[],"usedEvents":[1653,1661,1669,1675,1683]}],"src":"42:3674:13"},"id":13},"contracts/interfaces/UserOperation.sol":{"ast":{"absolutePath":"contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[1774]},"id":1775,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1750,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:14"},{"canonicalName":"UserOperation","documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"65:1193:14","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor/\n @param callData              - The method call to execute on this account.\n @param callGasLimit          - The gas limit passed to the callData method call.\n @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param maxFeePerGas          - Same as EIP-1559 gas parameter.\n @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\n @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":1774,"members":[{"constant":false,"id":1753,"mutability":"mutable","name":"sender","nameLocation":"1296:6:14","nodeType":"VariableDeclaration","scope":1774,"src":"1288:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"1288:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"nonce","nameLocation":"1317:5:14","nodeType":"VariableDeclaration","scope":1774,"src":"1309:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"initCode","nameLocation":"1335:8:14","nodeType":"VariableDeclaration","scope":1774,"src":"1329:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1756,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"callData","nameLocation":"1356:8:14","nodeType":"VariableDeclaration","scope":1774,"src":"1350:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1758,"name":"bytes","nodeType":"ElementaryTypeName","src":"1350:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"callGasLimit","nameLocation":"1379:12:14","nodeType":"VariableDeclaration","scope":1774,"src":"1371:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1406:20:14","nodeType":"VariableDeclaration","scope":1774,"src":"1398:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1398:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1441:18:14","nodeType":"VariableDeclaration","scope":1774,"src":"1433:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1474:12:14","nodeType":"VariableDeclaration","scope":1774,"src":"1466:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1466:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1501:20:14","nodeType":"VariableDeclaration","scope":1774,"src":"1493:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1534:16:14","nodeType":"VariableDeclaration","scope":1774,"src":"1528:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1770,"name":"bytes","nodeType":"ElementaryTypeName","src":"1528:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"signature","nameLocation":"1563:9:14","nodeType":"VariableDeclaration","scope":1774,"src":"1557:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1772,"name":"bytes","nodeType":"ElementaryTypeName","src":"1557:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1267:13:14","nodeType":"StructDefinition","scope":1775,"src":"1260:316:14","visibility":"public"}],"src":"37:1541:14"},"id":14},"contracts/utils/LegacyTokenPaymaster.sol":{"ast":{"absolutePath":"contracts/utils/LegacyTokenPaymaster.sol","exportedSymbols":{"BasePaymaster":[1150],"Context":[925],"ERC20":[799],"IAggregator":[1425],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"IEntryPoint":[1579],"INonceManager":[1598],"IPaymaster":[1644],"IStakeManager":[1748],"LegacyTokenPaymaster":[2042],"Ownable":[147],"UserOperation":[1774],"ValidationData":[1160],"_intersectTimeRange":[1306],"_packValidationData":[1343,1381],"_parseValidationData":[1220],"calldataKeccak":[1391]},"id":2043,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1776,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1777,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2043,"sourceUnit":800,"src":"104:55:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/BasePaymaster.sol","file":"../core/BasePaymaster.sol","id":1778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2043,"sourceUnit":1151,"src":"161:35:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1780,"name":"BasePaymaster","nameLocations":["1265:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":1150,"src":"1265:13:15"},"id":1781,"nodeType":"InheritanceSpecifier","src":"1265:13:15"},{"baseName":{"id":1782,"name":"ERC20","nameLocations":["1280:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"1280:5:15"},"id":1783,"nodeType":"InheritanceSpecifier","src":"1280:5:15"}],"canonicalName":"LegacyTokenPaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"200:1030:15","text":" A sample paymaster that defines itself as a token to pay for gas.\n The paymaster IS the token to use, since a paymaster cannot use an external contract.\n Also, the exchange rate has to be fixed, since it can't reference an external Uniswap or other exchange contract.\n subclass should override \"getTokenValueOfEth\" to provide actual token exchange rate, settable by the owner.\n Known Limitation: this paymaster is exploitable when put into a batch with multiple ops (of different accounts):\n - while a single op can't exploit the paymaster (if postOp fails to withdraw the tokens, the user's op is reverted,\n   and then we know we can withdraw the tokens), multiple ops with different senders (all using this paymaster)\n   in a batch can withdraw funds from 2nd and further ops, forcing the paymaster itself to pay (from its deposit)\n - Possible workarounds are either use a more complex paymaster scheme (e.g. the DepositPaymaster) or\n   to whitelist the account and the called method ids."},"fullyImplemented":true,"id":2042,"linearizedBaseContracts":[2042,799,189,903,877,1150,147,925,1644],"name":"LegacyTokenPaymaster","nameLocation":"1241:20:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"796d4371","id":1786,"mutability":"constant","name":"COST_OF_POST","nameLocation":"1356:12:15","nodeType":"VariableDeclaration","scope":2042,"src":"1332:44:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1332:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3135303030","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:5:15","typeDescriptions":{"typeIdentifier":"t_rational_15000_by_1","typeString":"int_const 15000"},"value":"15000"},"visibility":"public"},{"constant":false,"functionSelector":"9f5ca221","id":1788,"mutability":"immutable","name":"theFactory","nameLocation":"1410:10:15","nodeType":"VariableDeclaration","scope":2042,"src":"1385:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1385:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":1831,"nodeType":"Block","src":"1564:249:15","statements":[{"expression":{"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1805,"name":"theFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"1575:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1806,"name":"accountFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"1588:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1575:27:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1808,"nodeType":"ExpressionStatement","src":"1575:27:15"},{"expression":{"arguments":[{"arguments":[{"id":1812,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1656:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_LegacyTokenPaymaster_$2042","typeString":"contract LegacyTokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LegacyTokenPaymaster_$2042","typeString":"contract LegacyTokenPaymaster"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1648:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:15","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1648:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1663:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1809,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"1642:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1816,"nodeType":"ExpressionStatement","src":"1642:23:15"},{"expression":{"arguments":[{"arguments":[{"id":1820,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1771:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_LegacyTokenPaymaster_$2042","typeString":"contract LegacyTokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LegacyTokenPaymaster_$2042","typeString":"contract LegacyTokenPaymaster"}],"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1763:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"1763:7:15","typeDescriptions":{}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1763:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1822,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1778:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1782:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1778:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1795:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1825,"name":"uint","nodeType":"ElementaryTypeName","src":"1795:4:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1824,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1790:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1790:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1801:3:15","memberName":"max","nodeType":"MemberAccess","src":"1790:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1817,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"1754:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1754:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"1754:51:15"}]},"id":1832,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1798,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"1519:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1799,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"1528:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1800,"kind":"baseConstructorSpecifier","modifierName":{"id":1797,"name":"ERC20","nameLocations":["1513:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"1513:5:15"},"nodeType":"ModifierInvocation","src":"1513:23:15"},{"arguments":[{"id":1802,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1551:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}}],"id":1803,"kind":"baseConstructorSpecifier","modifierName":{"id":1801,"name":"BasePaymaster","nameLocations":["1537:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":1150,"src":"1537:13:15"},"nodeType":"ModifierInvocation","src":"1537:26:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"accountFactory","nameLocation":"1449:14:15","nodeType":"VariableDeclaration","scope":1832,"src":"1441:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"1441:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"_symbol","nameLocation":"1479:7:15","nodeType":"VariableDeclaration","scope":1832,"src":"1465:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1791,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"_entryPoint","nameLocation":"1500:11:15","nodeType":"VariableDeclaration","scope":1832,"src":"1488:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"},"typeName":{"id":1794,"nodeType":"UserDefinedTypeName","pathNode":{"id":1793,"name":"IEntryPoint","nameLocations":["1488:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1579,"src":"1488:11:15"},"referencedDeclaration":1579,"src":"1488:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1579","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1440:72:15"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[],"src":"1564:0:15"},"scope":2042,"src":"1429:384:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1847,"nodeType":"Block","src":"2099:43:15","statements":[{"expression":{"arguments":[{"id":1843,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2116:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1844,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"2127:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1842,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2110:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"ExpressionStatement","src":"2110:24:15"}]},"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"1823:196:15","text":" helpers for owner, to mint and withdraw tokens.\n @param recipient - the address that will receive the minted tokens.\n @param amount - the amount it will receive."},"functionSelector":"f0dda65c","id":1848,"implemented":true,"kind":"function","modifiers":[{"id":1840,"kind":"modifierInvocation","modifierName":{"id":1839,"name":"onlyOwner","nameLocations":["2089:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2089:9:15"},"nodeType":"ModifierInvocation","src":"2089:9:15"}],"name":"mintTokens","nameLocation":"2034:10:15","nodeType":"FunctionDefinition","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"recipient","nameLocation":"2053:9:15","nodeType":"VariableDeclaration","scope":1848,"src":"2045:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"2045:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1837,"mutability":"mutable","name":"amount","nameLocation":"2072:6:15","nodeType":"VariableDeclaration","scope":1848,"src":"2064:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2064:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2044:35:15"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[],"src":"2099:0:15"},"scope":2042,"src":"2025:117:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[126],"body":{"id":1886,"nodeType":"Block","src":"2471:285:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":1860,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2545:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_LegacyTokenPaymaster_$2042","typeString":"contract LegacyTokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LegacyTokenPaymaster_$2042","typeString":"contract LegacyTokenPaymaster"}],"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2537:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"2537:7:15","typeDescriptions":{}}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2537:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1862,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2552:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2552:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2561:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1857,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"2528:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2528:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"2528:35:15"},{"expression":{"arguments":[{"id":1870,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"2598:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1867,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2574:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LegacyTokenPaymaster_$2042_$","typeString":"type(contract super LegacyTokenPaymaster)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2580:17:15","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":126,"src":"2574:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2574:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1872,"nodeType":"ExpressionStatement","src":"2574:33:15"},{"expression":{"arguments":[{"arguments":[{"id":1876,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2716:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_LegacyTokenPaymaster_$2042","typeString":"contract LegacyTokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LegacyTokenPaymaster_$2042","typeString":"contract LegacyTokenPaymaster"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2708:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"2708:7:15","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2708:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1878,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"2723:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1880,"name":"uint","nodeType":"ElementaryTypeName","src":"2738:4:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1879,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2733:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:15","memberName":"max","nodeType":"MemberAccess","src":"2733:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1873,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"2699:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"ExpressionStatement","src":"2699:49:15"}]},"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"2150:236:15","text":" transfer paymaster ownership.\n owner of this paymaster is allowed to withdraw funds (tokens transferred to this paymaster's balance)\n when changing owner, the old owner's withdrawal rights are revoked."},"functionSelector":"f2fde38b","id":1887,"implemented":true,"kind":"function","modifiers":[{"id":1855,"kind":"modifierInvocation","modifierName":{"id":1854,"name":"onlyOwner","nameLocations":["2461:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2461:9:15"},"nodeType":"ModifierInvocation","src":"2461:9:15"}],"name":"transferOwnership","nameLocation":"2401:17:15","nodeType":"FunctionDefinition","overrides":{"id":1853,"nodeType":"OverrideSpecifier","overrides":[],"src":"2444:8:15"},"parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"newOwner","nameLocation":"2427:8:15","nodeType":"VariableDeclaration","scope":1887,"src":"2419:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"2419:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2418:18:15"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[],"src":"2471:0:15"},"scope":2042,"src":"2392:364:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1898,"nodeType":"Block","src":"2988:40:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1894,"name":"valueEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"3006:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3017:3:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3006:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1893,"id":1897,"nodeType":"Return","src":"2999:21:15"}]},"id":1899,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenValueOfEth","nameLocation":"2900:18:15","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"valueEth","nameLocation":"2927:8:15","nodeType":"VariableDeclaration","scope":1899,"src":"2919:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2919:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2918:18:15"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"valueToken","nameLocation":"2976:10:15","nodeType":"VariableDeclaration","scope":1899,"src":"2968:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2967:20:15"},"scope":2042,"src":"2891:137:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[995],"body":{"id":1969,"nodeType":"Block","src":"3485:738:15","statements":[{"assignments":[1916],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"tokenPrefund","nameLocation":"3504:12:15","nodeType":"VariableDeclaration","scope":1969,"src":"3496:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1920,"initialValue":{"arguments":[{"id":1918,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"3538:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1917,"name":"getTokenValueOfEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"3519:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3519:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3496:58:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1922,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3759:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3766:20:15","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":1763,"src":"3759:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1924,"name":"COST_OF_POST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"3789:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3759:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e5061796d61737465723a2067617320746f6f206c6f7720666f7220706f73744f70","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3803:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98","typeString":"literal_string \"TokenPaymaster: gas too low for postOp\""},"value":"TokenPaymaster: gas too low for postOp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98","typeString":"literal_string \"TokenPaymaster: gas too low for postOp\""}],"id":1921,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3751:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3751:93:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"ExpressionStatement","src":"3751:93:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1929,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3861:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3868:8:15","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"3861:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3877:6:15","memberName":"length","nodeType":"MemberAccess","src":"3861:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3887:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3861:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1959,"nodeType":"Block","src":"4058:108:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1951,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"4093:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4100:6:15","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1753,"src":"4093:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1950,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"4083:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4083:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1954,"name":"tokenPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"4111:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4083:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e5061796d61737465723a206e6f2062616c616e6365","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4125:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a","typeString":"literal_string \"TokenPaymaster: no balance\""},"value":"TokenPaymaster: no balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a","typeString":"literal_string \"TokenPaymaster: no balance\""}],"id":1949,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4075:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4075:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1958,"nodeType":"ExpressionStatement","src":"4075:79:15"}]},"id":1960,"nodeType":"IfStatement","src":"3857:309:15","trueBody":{"id":1948,"nodeType":"Block","src":"3890:162:15","statements":[{"expression":{"arguments":[{"id":1935,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3926:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":1934,"name":"_validateConstructor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"3905:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UserOperation_$1774_calldata_ptr_$returns$__$","typeString":"function (struct UserOperation calldata) view"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3905:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1937,"nodeType":"ExpressionStatement","src":"3905:28:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1940,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3966:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3973:6:15","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1753,"src":"3966:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1939,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"3956:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3956:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1943,"name":"tokenPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"3984:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3956:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e5061796d61737465723a206e6f2062616c616e636520287072652d63726561746529","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3998:41:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d","typeString":"literal_string \"TokenPaymaster: no balance (pre-create)\""},"value":"TokenPaymaster: no balance (pre-create)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d","typeString":"literal_string \"TokenPaymaster: no balance (pre-create)\""}],"id":1938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3948:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3948:92:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1947,"nodeType":"ExpressionStatement","src":"3948:92:15"}]}},{"expression":{"components":[{"arguments":[{"expression":{"id":1963,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"4197:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:6:15","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1753,"src":"4197:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1961,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4186:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4190:6:15","memberName":"encode","nodeType":"MemberAccess","src":"4186:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4186:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4213:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4185:30:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_rational_0_by_1_$","typeString":"tuple(bytes memory,int_const 0)"}},"functionReturnParameters":1914,"id":1968,"nodeType":"Return","src":"4178:37:15"}]},"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"3036:246:15","text":" validate the request:\n if this is a constructor call, make sure it is a known account.\n verify the sender has enough tokens.\n (since the paymaster is also the token, there is no notion of \"approval\")"},"id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"3297:24:15","nodeType":"FunctionDefinition","overrides":{"id":1909,"nodeType":"OverrideSpecifier","overrides":[],"src":"3421:8:15"},"parameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"userOp","nameLocation":"3345:6:15","nodeType":"VariableDeclaration","scope":1970,"src":"3322:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1902,"nodeType":"UserDefinedTypeName","pathNode":{"id":1901,"name":"UserOperation","nameLocations":["3322:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"3322:13:15"},"referencedDeclaration":1774,"src":"3322:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"3353:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3353:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"requiredPreFund","nameLocation":"3385:15:15","nodeType":"VariableDeclaration","scope":1970,"src":"3377:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"3377:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3321:80:15"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"context","nameLocation":"3452:7:15","nodeType":"VariableDeclaration","scope":1970,"src":"3439:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1910,"name":"bytes","nodeType":"ElementaryTypeName","src":"3439:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"validationData","nameLocation":"3469:14:15","nodeType":"VariableDeclaration","scope":1970,"src":"3461:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"3461:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3438:46:15"},"scope":2042,"src":"3288:935:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1997,"nodeType":"Block","src":"4474:160:15","statements":[{"assignments":[1977],"declarations":[{"constant":false,"id":1977,"mutability":"mutable","name":"factory","nameLocation":"4493:7:15","nodeType":"VariableDeclaration","scope":1997,"src":"4485:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"4485:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1989,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":1982,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"4519:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4526:8:15","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"4519:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3230","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4539:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4519:23:15","startExpression":{"hexValue":"30","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4535:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4511:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1980,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4511:7:15","typeDescriptions":{}}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4511:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4503:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1978,"name":"address","nodeType":"ElementaryTypeName","src":"4503:7:15","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4503:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4485:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"4563:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1992,"name":"theFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"4574:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4563:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e5061796d61737465723a2077726f6e67206163636f756e7420666163746f7279","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6","typeString":"literal_string \"TokenPaymaster: wrong account factory\""},"value":"TokenPaymaster: wrong account factory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6","typeString":"literal_string \"TokenPaymaster: wrong account factory\""}],"id":1990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4555:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1996,"nodeType":"ExpressionStatement","src":"4555:71:15"}]},"id":1998,"implemented":true,"kind":"function","modifiers":[],"name":"_validateConstructor","nameLocation":"4400:20:15","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"userOp","nameLocation":"4444:6:15","nodeType":"VariableDeclaration","scope":1998,"src":"4421:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1972,"nodeType":"UserDefinedTypeName","pathNode":{"id":1971,"name":"UserOperation","nameLocations":["4421:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"4421:13:15"},"referencedDeclaration":1774,"src":"4421:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$1774_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"4420:31:15"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[],"src":"4474:0:15"},"scope":2042,"src":"4391:243:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1038],"body":{"id":2040,"nodeType":"Block","src":"5213:416:15","statements":[{"expression":{"components":[{"id":2010,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"5317:4:15","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"}}],"id":2011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5316:6:15","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"}},"id":2012,"nodeType":"ExpressionStatement","src":"5316:6:15"},{"assignments":[2014],"declarations":[{"constant":false,"id":2014,"mutability":"mutable","name":"sender","nameLocation":"5341:6:15","nodeType":"VariableDeclaration","scope":2040,"src":"5333:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2022,"initialValue":{"arguments":[{"id":2017,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"5361:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5371:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"5371:7:15","typeDescriptions":{}}}],"id":2020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5370:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":2015,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5350:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5354:6:15","memberName":"decode","nodeType":"MemberAccess","src":"5350:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"5333:47:15"},{"assignments":[2024],"declarations":[{"constant":false,"id":2024,"mutability":"mutable","name":"charge","nameLocation":"5399:6:15","nodeType":"VariableDeclaration","scope":2040,"src":"5391:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2030,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"5427:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2027,"name":"COST_OF_POST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"5443:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5427:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2025,"name":"getTokenValueOfEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"5408:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5391:65:15"},{"expression":{"arguments":[{"id":2032,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"5591:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2035,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5607:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_LegacyTokenPaymaster_$2042","typeString":"contract LegacyTokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LegacyTokenPaymaster_$2042","typeString":"contract LegacyTokenPaymaster"}],"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5599:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2033,"name":"address","nodeType":"ElementaryTypeName","src":"5599:7:15","typeDescriptions":{}}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5599:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2037,"name":"charge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"5614:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2031,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5581:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5581:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"ExpressionStatement","src":"5581:40:15"}]},"documentation":{"id":1999,"nodeType":"StructuredDocumentation","src":"4642:466:15","text":" actual charge of user.\n this method will be called just after the user's TX with mode==OpSucceeded|OpReverted (account pays in both cases)\n BUT: if the user changed its balance in a way that will cause  postOp to revert, then it gets called again, after reverting\n the user's TX , back to the state it was before the transaction started (before the validatePaymasterUserOp),\n and the transaction should succeed there."},"id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"5123:7:15","nodeType":"FunctionDefinition","overrides":{"id":2008,"nodeType":"OverrideSpecifier","overrides":[],"src":"5204:8:15"},"parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"mode","nameLocation":"5142:4:15","nodeType":"VariableDeclaration","scope":2041,"src":"5131:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":2001,"nodeType":"UserDefinedTypeName","pathNode":{"id":2000,"name":"PostOpMode","nameLocations":["5131:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"5131:10:15"},"referencedDeclaration":1617,"src":"5131:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1617","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"context","nameLocation":"5163:7:15","nodeType":"VariableDeclaration","scope":2041,"src":"5148:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2003,"name":"bytes","nodeType":"ElementaryTypeName","src":"5148:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"actualGasCost","nameLocation":"5180:13:15","nodeType":"VariableDeclaration","scope":2041,"src":"5172:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"5172:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5130:64:15"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[],"src":"5213:0:15"},"scope":2042,"src":"5114:515:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2043,"src":"1232:4400:15","usedErrors":[13,18,159,164,169,178,183,188],"usedEvents":[24,811,820]}],"src":"37:5595:15"},"id":15},"contracts/utils/OracleHelper.sol":{"ast":{"absolutePath":"contracts/utils/OracleHelper.sol","exportedSymbols":{},"id":2044,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[],"src":"8114:0:16"},"id":16},"contracts/utils/TokenPaymaster.sol":{"ast":{"absolutePath":"contracts/utils/TokenPaymaster.sol","exportedSymbols":{},"id":2045,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[],"src":"11755:0:17"},"id":17},"contracts/utils/UniswapHelper.sol":{"ast":{"absolutePath":"contracts/utils/UniswapHelper.sol","exportedSymbols":{},"id":2046,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[],"src":"5007:0:18"},"id":18}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"contracts/core/BasePaymaster.sol":{"BasePaymaster":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. Validates that the postOp is called only by the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xbd3189ba19234b7983c343fd70058e21de970feb4bc941c57f14820eb35878a8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d738449768414ab9d4d111113f4641bd0fbc833f9baf74d8ccebe43fe8d7bb\",\"dweb:/ipfs/QmSwpXHUerFzwJFyyLqyGGbzsLTwSimdcMKX5FKksNouEm\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- Array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- Array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"Validate aggregated signature. Revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Validate signature of a single userOp. This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps, to identify the offending op. Should be caught in off-chain handleOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]}},\"version\":1}"}},"contracts/interfaces/IOracle.sol":{"IOracle":{"abi":[{"inputs":[{"internalType":"uint256","name":"ethOutput","type":"uint256"}],"name":"getTokenValueOfEth","outputs":[{"internalType":"uint256","name":"tokenInput","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getTokenValueOfEth(uint256)":"d1eca9cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethOutput\",\"type\":\"uint256\"}],\"name\":\"getTokenValueOfEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenInput\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTokenValueOfEth(uint256)\":{\"notice\":\"return amount of tokens that are required to receive that much eth.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOracle.sol\":\"IOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOracle.sol\":{\"keccak256\":\"0xd14e536123cff4de90533248efde2996c58edaf8289f0907a09af39ff5571650\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f41ee1a3354f42f1d76ed56b96953792148d55583dcd0eb565ff42831d5c24b3\",\"dweb:/ipfs/QmdN6YeZyr7DaDexeHGAQph3FVmD1VEH25cQa2BhaiWw2z\"]}},\"version\":1}"}},"contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]}},\"version\":1}"}},"contracts/utils/LegacyTokenPaymaster.sol":{"LegacyTokenPaymaster":{"abi":[{"inputs":[{"internalType":"address","name":"accountFactory","type":"address"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"COST_OF_POST","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"theFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1832":{"entryPoint":null,"id":1832,"parameterSlots":3,"returnSlots":0},"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_954":{"entryPoint":null,"id":954,"parameterSlots":1,"returnSlots":0},"@_approve_690":{"entryPoint":753,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":1342,"id":750,"parameterSlots":4,"returnSlots":0},"@_mint_639":{"entryPoint":612,"id":639,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":416,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_606":{"entryPoint":779,"id":606,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":2200,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1920,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IEntryPoint_$1579_fromMemory":{"entryPoint":2372,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":2275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_contract$_IEntryPoint_$1579_fromMemory":{"entryPoint":2395,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2518,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3488,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2535,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3505,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3566,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":2071,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1822,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":2102,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2675,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2564,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3429,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2996,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1874,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IEntryPoint_$1579":{"entryPoint":2326,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1842,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2811,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2957,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2831,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2156,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2696,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2622,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":3121,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2017,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2821,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":3089,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3382,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2575,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1970,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2871,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1943,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1948,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1837,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1832,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1953,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2712,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":3076,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2929,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2725,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2881,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1894,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IEntryPoint_$1579":{"entryPoint":2346,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2924,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11122:19","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:19","statements":[{"nodeType":"YulAssignment","src":"57:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:19"},"nodeType":"YulFunctionCall","src":"67:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:19","type":""}],"src":"7:75:19"},{"body":{"nodeType":"YulBlock","src":"177:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:19"},"nodeType":"YulFunctionCall","src":"187:12:19"},"nodeType":"YulExpressionStatement","src":"187:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:19"},{"body":{"nodeType":"YulBlock","src":"300:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:19"},"nodeType":"YulFunctionCall","src":"310:12:19"},"nodeType":"YulExpressionStatement","src":"310:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:19"},{"body":{"nodeType":"YulBlock","src":"379:81:19","statements":[{"nodeType":"YulAssignment","src":"389:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:19"},"nodeType":"YulFunctionCall","src":"400:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:19","type":""}],"src":"334:126:19"},{"body":{"nodeType":"YulBlock","src":"511:51:19","statements":[{"nodeType":"YulAssignment","src":"521:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:19"},"nodeType":"YulFunctionCall","src":"532:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:19","type":""}],"src":"466:96:19"},{"body":{"nodeType":"YulBlock","src":"611:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:19"},"nodeType":"YulFunctionCall","src":"670:12:19"},"nodeType":"YulExpressionStatement","src":"670:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:19"},"nodeType":"YulFunctionCall","src":"641:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:19"},"nodeType":"YulFunctionCall","src":"631:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:19"},"nodeType":"YulFunctionCall","src":"624:43:19"},"nodeType":"YulIf","src":"621:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:19","type":""}],"src":"568:122:19"},{"body":{"nodeType":"YulBlock","src":"759:80:19","statements":[{"nodeType":"YulAssignment","src":"769:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:19"},"nodeType":"YulFunctionCall","src":"778:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:19"},"nodeType":"YulFunctionCall","src":"800:33:19"},"nodeType":"YulExpressionStatement","src":"800:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:19","type":""}],"src":"696:143:19"},{"body":{"nodeType":"YulBlock","src":"934:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:19"},"nodeType":"YulFunctionCall","src":"944:12:19"},"nodeType":"YulExpressionStatement","src":"944:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:19"},{"body":{"nodeType":"YulBlock","src":"1057:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:19"},"nodeType":"YulFunctionCall","src":"1067:12:19"},"nodeType":"YulExpressionStatement","src":"1067:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:19"},{"body":{"nodeType":"YulBlock","src":"1139:54:19","statements":[{"nodeType":"YulAssignment","src":"1149:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:19"},"nodeType":"YulFunctionCall","src":"1163:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:19"},"nodeType":"YulFunctionCall","src":"1179:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:19"},"nodeType":"YulFunctionCall","src":"1159:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:19","type":""}],"src":"1091:102:19"},{"body":{"nodeType":"YulBlock","src":"1227:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:19"},"nodeType":"YulFunctionCall","src":"1237:88:19"},"nodeType":"YulExpressionStatement","src":"1237:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:19"},"nodeType":"YulFunctionCall","src":"1334:15:19"},"nodeType":"YulExpressionStatement","src":"1334:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:19"},"nodeType":"YulFunctionCall","src":"1358:15:19"},"nodeType":"YulExpressionStatement","src":"1358:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:19"},{"body":{"nodeType":"YulBlock","src":"1428:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:19"},"nodeType":"YulFunctionCall","src":"1468:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:19"},"nodeType":"YulFunctionCall","src":"1456:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:19"},"nodeType":"YulFunctionCall","src":"1609:18:19"},"nodeType":"YulExpressionStatement","src":"1609:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:19"},"nodeType":"YulFunctionCall","src":"1547:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:19"},"nodeType":"YulFunctionCall","src":"1583:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:19"},"nodeType":"YulFunctionCall","src":"1544:62:19"},"nodeType":"YulIf","src":"1541:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:19"},"nodeType":"YulFunctionCall","src":"1638:22:19"},"nodeType":"YulExpressionStatement","src":"1638:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:19","type":""}],"src":"1385:281:19"},{"body":{"nodeType":"YulBlock","src":"1713:88:19","statements":[{"nodeType":"YulAssignment","src":"1723:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:19"},"nodeType":"YulFunctionCall","src":"1733:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:19"},"nodeType":"YulFunctionCall","src":"1762:33:19"},"nodeType":"YulExpressionStatement","src":"1762:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:19","type":""}],"src":"1672:129:19"},{"body":{"nodeType":"YulBlock","src":"1874:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"1979:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1981:16:19"},"nodeType":"YulFunctionCall","src":"1981:18:19"},"nodeType":"YulExpressionStatement","src":"1981:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1951:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1959:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1948:2:19"},"nodeType":"YulFunctionCall","src":"1948:30:19"},"nodeType":"YulIf","src":"1945:56:19"},{"nodeType":"YulAssignment","src":"2011:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2041:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2019:21:19"},"nodeType":"YulFunctionCall","src":"2019:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2011:4:19"}]},{"nodeType":"YulAssignment","src":"2085:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2097:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2093:3:19"},"nodeType":"YulFunctionCall","src":"2093:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2085:4:19"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1858:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1869:4:19","type":""}],"src":"1807:308:19"},{"body":{"nodeType":"YulBlock","src":"2183:184:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2193:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2202:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2197:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2262:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2287:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"2292:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2283:3:19"},"nodeType":"YulFunctionCall","src":"2283:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2306:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"2311:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2302:3:19"},"nodeType":"YulFunctionCall","src":"2302:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2296:5:19"},"nodeType":"YulFunctionCall","src":"2296:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2276:6:19"},"nodeType":"YulFunctionCall","src":"2276:39:19"},"nodeType":"YulExpressionStatement","src":"2276:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2223:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"2226:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2220:2:19"},"nodeType":"YulFunctionCall","src":"2220:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2234:19:19","statements":[{"nodeType":"YulAssignment","src":"2236:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2245:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"2248:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2241:3:19"},"nodeType":"YulFunctionCall","src":"2241:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2236:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"2216:3:19","statements":[]},"src":"2212:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2345:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2350:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2341:3:19"},"nodeType":"YulFunctionCall","src":"2341:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"2359:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2334:6:19"},"nodeType":"YulFunctionCall","src":"2334:27:19"},"nodeType":"YulExpressionStatement","src":"2334:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2165:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2170:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"2175:6:19","type":""}],"src":"2121:246:19"},{"body":{"nodeType":"YulBlock","src":"2468:339:19","statements":[{"nodeType":"YulAssignment","src":"2478:75:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:19"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2503:41:19"},"nodeType":"YulFunctionCall","src":"2503:49:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2487:15:19"},"nodeType":"YulFunctionCall","src":"2487:66:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2478:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2569:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"2576:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2562:6:19"},"nodeType":"YulFunctionCall","src":"2562:21:19"},"nodeType":"YulExpressionStatement","src":"2562:21:19"},{"nodeType":"YulVariableDeclaration","src":"2592:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2607:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2614:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:19"},"nodeType":"YulFunctionCall","src":"2603:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2596:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2657:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2659:77:19"},"nodeType":"YulFunctionCall","src":"2659:79:19"},"nodeType":"YulExpressionStatement","src":"2659:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2638:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2643:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:19"},"nodeType":"YulFunctionCall","src":"2634:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"2652:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2631:2:19"},"nodeType":"YulFunctionCall","src":"2631:25:19"},"nodeType":"YulIf","src":"2628:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2784:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"2789:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2794:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2749:34:19"},"nodeType":"YulFunctionCall","src":"2749:52:19"},"nodeType":"YulExpressionStatement","src":"2749:52:19"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2441:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"2446:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2454:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2462:5:19","type":""}],"src":"2373:434:19"},{"body":{"nodeType":"YulBlock","src":"2900:282:19","statements":[{"body":{"nodeType":"YulBlock","src":"2949:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2951:77:19"},"nodeType":"YulFunctionCall","src":"2951:79:19"},"nodeType":"YulExpressionStatement","src":"2951:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2928:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2936:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2924:3:19"},"nodeType":"YulFunctionCall","src":"2924:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"2943:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2920:3:19"},"nodeType":"YulFunctionCall","src":"2920:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2913:6:19"},"nodeType":"YulFunctionCall","src":"2913:35:19"},"nodeType":"YulIf","src":"2910:122:19"},{"nodeType":"YulVariableDeclaration","src":"3041:27:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3061:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3055:5:19"},"nodeType":"YulFunctionCall","src":"3055:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3045:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3077:99:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3149:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3157:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3145:3:19"},"nodeType":"YulFunctionCall","src":"3145:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"3164:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"3172:3:19"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3086:58:19"},"nodeType":"YulFunctionCall","src":"3086:90:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3077:5:19"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2878:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2886:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2894:5:19","type":""}],"src":"2827:355:19"},{"body":{"nodeType":"YulBlock","src":"3253:51:19","statements":[{"nodeType":"YulAssignment","src":"3263:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3292:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3274:17:19"},"nodeType":"YulFunctionCall","src":"3274:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3263:7:19"}]}]},"name":"cleanup_t_contract$_IEntryPoint_$1579","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3235:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3245:7:19","type":""}],"src":"3188:116:19"},{"body":{"nodeType":"YulBlock","src":"3373:99:19","statements":[{"body":{"nodeType":"YulBlock","src":"3450:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3459:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3462:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3452:6:19"},"nodeType":"YulFunctionCall","src":"3452:12:19"},"nodeType":"YulExpressionStatement","src":"3452:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3396:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3441:5:19"}],"functionName":{"name":"cleanup_t_contract$_IEntryPoint_$1579","nodeType":"YulIdentifier","src":"3403:37:19"},"nodeType":"YulFunctionCall","src":"3403:44:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3393:2:19"},"nodeType":"YulFunctionCall","src":"3393:55:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3386:6:19"},"nodeType":"YulFunctionCall","src":"3386:63:19"},"nodeType":"YulIf","src":"3383:83:19"}]},"name":"validator_revert_t_contract$_IEntryPoint_$1579","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3366:5:19","type":""}],"src":"3310:162:19"},{"body":{"nodeType":"YulBlock","src":"3561:100:19","statements":[{"nodeType":"YulAssignment","src":"3571:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3586:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3580:5:19"},"nodeType":"YulFunctionCall","src":"3580:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3571:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3649:5:19"}],"functionName":{"name":"validator_revert_t_contract$_IEntryPoint_$1579","nodeType":"YulIdentifier","src":"3602:46:19"},"nodeType":"YulFunctionCall","src":"3602:53:19"},"nodeType":"YulExpressionStatement","src":"3602:53:19"}]},"name":"abi_decode_t_contract$_IEntryPoint_$1579_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3539:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"3547:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3555:5:19","type":""}],"src":"3478:183:19"},{"body":{"nodeType":"YulBlock","src":"3808:735:19","statements":[{"body":{"nodeType":"YulBlock","src":"3854:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3856:77:19"},"nodeType":"YulFunctionCall","src":"3856:79:19"},"nodeType":"YulExpressionStatement","src":"3856:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3829:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3838:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3825:3:19"},"nodeType":"YulFunctionCall","src":"3825:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3850:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3821:3:19"},"nodeType":"YulFunctionCall","src":"3821:32:19"},"nodeType":"YulIf","src":"3818:119:19"},{"nodeType":"YulBlock","src":"3947:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3962:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3976:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3966:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3991:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4037:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4048:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4033:3:19"},"nodeType":"YulFunctionCall","src":"4033:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4057:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4001:31:19"},"nodeType":"YulFunctionCall","src":"4001:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3991:6:19"}]}]},{"nodeType":"YulBlock","src":"4085:292:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:39:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4124:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4135:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4120:3:19"},"nodeType":"YulFunctionCall","src":"4120:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4114:5:19"},"nodeType":"YulFunctionCall","src":"4114:25:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"4186:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4188:77:19"},"nodeType":"YulFunctionCall","src":"4188:79:19"},"nodeType":"YulExpressionStatement","src":"4188:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4158:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4166:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4155:2:19"},"nodeType":"YulFunctionCall","src":"4155:30:19"},"nodeType":"YulIf","src":"4152:117:19"},{"nodeType":"YulAssignment","src":"4283:84:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4339:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4350:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4335:3:19"},"nodeType":"YulFunctionCall","src":"4335:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4359:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4293:41:19"},"nodeType":"YulFunctionCall","src":"4293:74:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4283:6:19"}]}]},{"nodeType":"YulBlock","src":"4387:149:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4402:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4416:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4406:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4432:94:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4498:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4509:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4494:3:19"},"nodeType":"YulFunctionCall","src":"4494:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4518:7:19"}],"functionName":{"name":"abi_decode_t_contract$_IEntryPoint_$1579_fromMemory","nodeType":"YulIdentifier","src":"4442:51:19"},"nodeType":"YulFunctionCall","src":"4442:84:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4432:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_contract$_IEntryPoint_$1579_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3762:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3773:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3785:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3793:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3801:6:19","type":""}],"src":"3667:876:19"},{"body":{"nodeType":"YulBlock","src":"4614:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4631:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4654:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4636:17:19"},"nodeType":"YulFunctionCall","src":"4636:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4624:6:19"},"nodeType":"YulFunctionCall","src":"4624:37:19"},"nodeType":"YulExpressionStatement","src":"4624:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4602:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4609:3:19","type":""}],"src":"4549:118:19"},{"body":{"nodeType":"YulBlock","src":"4771:124:19","statements":[{"nodeType":"YulAssignment","src":"4781:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4793:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4804:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:19"},"nodeType":"YulFunctionCall","src":"4789:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4781:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:19"},"nodeType":"YulFunctionCall","src":"4870:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4817:43:19"},"nodeType":"YulFunctionCall","src":"4817:71:19"},"nodeType":"YulExpressionStatement","src":"4817:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4743:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4755:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4766:4:19","type":""}],"src":"4673:222:19"},{"body":{"nodeType":"YulBlock","src":"4960:40:19","statements":[{"nodeType":"YulAssignment","src":"4971:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4987:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4981:5:19"},"nodeType":"YulFunctionCall","src":"4981:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4971:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4943:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4953:6:19","type":""}],"src":"4901:99:19"},{"body":{"nodeType":"YulBlock","src":"5034:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5051:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5054:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5044:6:19"},"nodeType":"YulFunctionCall","src":"5044:88:19"},"nodeType":"YulExpressionStatement","src":"5044:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5148:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5151:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5141:6:19"},"nodeType":"YulFunctionCall","src":"5141:15:19"},"nodeType":"YulExpressionStatement","src":"5141:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5172:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5175:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5165:6:19"},"nodeType":"YulFunctionCall","src":"5165:15:19"},"nodeType":"YulExpressionStatement","src":"5165:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5006:180:19"},{"body":{"nodeType":"YulBlock","src":"5243:269:19","statements":[{"nodeType":"YulAssignment","src":"5253:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5267:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"5273:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5263:3:19"},"nodeType":"YulFunctionCall","src":"5263:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5253:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"5284:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5314:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"5320:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5310:3:19"},"nodeType":"YulFunctionCall","src":"5310:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5288:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"5361:51:19","statements":[{"nodeType":"YulAssignment","src":"5375:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5389:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5397:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5385:3:19"},"nodeType":"YulFunctionCall","src":"5385:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5375:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5341:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5334:6:19"},"nodeType":"YulFunctionCall","src":"5334:26:19"},"nodeType":"YulIf","src":"5331:81:19"},{"body":{"nodeType":"YulBlock","src":"5464:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"5478:16:19"},"nodeType":"YulFunctionCall","src":"5478:18:19"},"nodeType":"YulExpressionStatement","src":"5478:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5428:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5451:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5459:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5448:2:19"},"nodeType":"YulFunctionCall","src":"5448:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5425:2:19"},"nodeType":"YulFunctionCall","src":"5425:38:19"},"nodeType":"YulIf","src":"5422:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5227:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5236:6:19","type":""}],"src":"5192:320:19"},{"body":{"nodeType":"YulBlock","src":"5572:87:19","statements":[{"nodeType":"YulAssignment","src":"5582:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5590:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5582:4:19"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5610:1:19","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"5613:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:19"},"nodeType":"YulFunctionCall","src":"5603:14:19"},"nodeType":"YulExpressionStatement","src":"5603:14:19"},{"nodeType":"YulAssignment","src":"5626:26:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5644:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5647:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5634:9:19"},"nodeType":"YulFunctionCall","src":"5634:18:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5626:4:19"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5559:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5567:4:19","type":""}],"src":"5518:141:19"},{"body":{"nodeType":"YulBlock","src":"5709:49:19","statements":[{"nodeType":"YulAssignment","src":"5719:33:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5737:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5744:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5733:3:19"},"nodeType":"YulFunctionCall","src":"5733:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"5749:2:19","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5729:3:19"},"nodeType":"YulFunctionCall","src":"5729:23:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5719:6:19"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5692:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5702:6:19","type":""}],"src":"5665:93:19"},{"body":{"nodeType":"YulBlock","src":"5817:54:19","statements":[{"nodeType":"YulAssignment","src":"5827:37:19","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5852:4:19"},{"name":"value","nodeType":"YulIdentifier","src":"5858:5:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5848:3:19"},"nodeType":"YulFunctionCall","src":"5848:16:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5827:8:19"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5792:4:19","type":""},{"name":"value","nodeType":"YulTypedName","src":"5798:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5808:8:19","type":""}],"src":"5764:107:19"},{"body":{"nodeType":"YulBlock","src":"5953:317:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5963:35:19","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"5984:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"5996:1:19","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5980:3:19"},"nodeType":"YulFunctionCall","src":"5980:18:19"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"5967:9:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6007:109:19","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"6038:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6049:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"6019:18:19"},"nodeType":"YulFunctionCall","src":"6019:97:19"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6011:4:19","type":""}]},{"nodeType":"YulAssignment","src":"6125:51:19","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"6156:9:19"},{"name":"toInsert","nodeType":"YulIdentifier","src":"6167:8:19"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"6137:18:19"},"nodeType":"YulFunctionCall","src":"6137:39:19"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"6125:8:19"}]},{"nodeType":"YulAssignment","src":"6185:30:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6198:5:19"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"6209:4:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6205:3:19"},"nodeType":"YulFunctionCall","src":"6205:9:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6194:3:19"},"nodeType":"YulFunctionCall","src":"6194:21:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6185:5:19"}]},{"nodeType":"YulAssignment","src":"6224:40:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6237:5:19"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"6248:8:19"},{"name":"mask","nodeType":"YulIdentifier","src":"6258:4:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6244:3:19"},"nodeType":"YulFunctionCall","src":"6244:19:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6234:2:19"},"nodeType":"YulFunctionCall","src":"6234:30:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6224:6:19"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5914:5:19","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"5921:10:19","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"5933:8:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5946:6:19","type":""}],"src":"5877:393:19"},{"body":{"nodeType":"YulBlock","src":"6321:32:19","statements":[{"nodeType":"YulAssignment","src":"6331:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"6342:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6331:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6303:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6313:7:19","type":""}],"src":"6276:77:19"},{"body":{"nodeType":"YulBlock","src":"6391:28:19","statements":[{"nodeType":"YulAssignment","src":"6401:12:19","value":{"name":"value","nodeType":"YulIdentifier","src":"6408:5:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6401:3:19"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6377:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6387:3:19","type":""}],"src":"6359:60:19"},{"body":{"nodeType":"YulBlock","src":"6485:82:19","statements":[{"nodeType":"YulAssignment","src":"6495:66:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6553:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6535:17:19"},"nodeType":"YulFunctionCall","src":"6535:24:19"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"6526:8:19"},"nodeType":"YulFunctionCall","src":"6526:34:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6508:17:19"},"nodeType":"YulFunctionCall","src":"6508:53:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6495:9:19"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6465:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6475:9:19","type":""}],"src":"6425:142:19"},{"body":{"nodeType":"YulBlock","src":"6620:28:19","statements":[{"nodeType":"YulAssignment","src":"6630:12:19","value":{"name":"value","nodeType":"YulIdentifier","src":"6637:5:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6630:3:19"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6606:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6616:3:19","type":""}],"src":"6573:75:19"},{"body":{"nodeType":"YulBlock","src":"6730:193:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6740:63:19","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"6795:7:19"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6764:30:19"},"nodeType":"YulFunctionCall","src":"6764:39:19"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"6744:16:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6819:4:19"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6859:4:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6853:5:19"},"nodeType":"YulFunctionCall","src":"6853:11:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6866:6:19"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"6898:16:19"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"6874:23:19"},"nodeType":"YulFunctionCall","src":"6874:41:19"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"6825:27:19"},"nodeType":"YulFunctionCall","src":"6825:91:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6812:6:19"},"nodeType":"YulFunctionCall","src":"6812:105:19"},"nodeType":"YulExpressionStatement","src":"6812:105:19"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6707:4:19","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6713:6:19","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"6721:7:19","type":""}],"src":"6654:269:19"},{"body":{"nodeType":"YulBlock","src":"6978:24:19","statements":[{"nodeType":"YulAssignment","src":"6988:8:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6995:1:19","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6988:3:19"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6974:3:19","type":""}],"src":"6929:73:19"},{"body":{"nodeType":"YulBlock","src":"7061:136:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7071:46:19","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"7085:30:19"},"nodeType":"YulFunctionCall","src":"7085:32:19"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"7075:6:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7170:4:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7176:6:19"},{"name":"zero_0","nodeType":"YulIdentifier","src":"7184:6:19"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7126:43:19"},"nodeType":"YulFunctionCall","src":"7126:65:19"},"nodeType":"YulExpressionStatement","src":"7126:65:19"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7047:4:19","type":""},{"name":"offset","nodeType":"YulTypedName","src":"7053:6:19","type":""}],"src":"7008:189:19"},{"body":{"nodeType":"YulBlock","src":"7253:136:19","statements":[{"body":{"nodeType":"YulBlock","src":"7320:63:19","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7364:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7371:1:19","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"7334:29:19"},"nodeType":"YulFunctionCall","src":"7334:39:19"},"nodeType":"YulExpressionStatement","src":"7334:39:19"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7273:5:19"},{"name":"end","nodeType":"YulIdentifier","src":"7280:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7270:2:19"},"nodeType":"YulFunctionCall","src":"7270:14:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7285:26:19","statements":[{"nodeType":"YulAssignment","src":"7287:22:19","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7300:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7307:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7296:3:19"},"nodeType":"YulFunctionCall","src":"7296:13:19"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"7287:5:19"}]}]},"pre":{"nodeType":"YulBlock","src":"7267:2:19","statements":[]},"src":"7263:120:19"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"7241:5:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"7248:3:19","type":""}],"src":"7203:186:19"},{"body":{"nodeType":"YulBlock","src":"7474:464:19","statements":[{"body":{"nodeType":"YulBlock","src":"7500:431:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7514:54:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7562:5:19"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7530:31:19"},"nodeType":"YulFunctionCall","src":"7530:38:19"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"7518:8:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7581:63:19","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7604:8:19"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7632:10:19"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7614:17:19"},"nodeType":"YulFunctionCall","src":"7614:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7600:3:19"},"nodeType":"YulFunctionCall","src":"7600:44:19"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"7585:11:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"7801:27:19","statements":[{"nodeType":"YulAssignment","src":"7803:23:19","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"7818:8:19"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7803:11:19"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7785:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"7797:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7782:2:19"},"nodeType":"YulFunctionCall","src":"7782:18:19"},"nodeType":"YulIf","src":"7779:49:19"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7870:11:19"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7887:8:19"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7915:3:19"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7897:17:19"},"nodeType":"YulFunctionCall","src":"7897:22:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7883:3:19"},"nodeType":"YulFunctionCall","src":"7883:37:19"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"7841:28:19"},"nodeType":"YulFunctionCall","src":"7841:80:19"},"nodeType":"YulExpressionStatement","src":"7841:80:19"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7491:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7496:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7488:2:19"},"nodeType":"YulFunctionCall","src":"7488:11:19"},"nodeType":"YulIf","src":"7485:446:19"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"7450:5:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"7457:3:19","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"7462:10:19","type":""}],"src":"7395:543:19"},{"body":{"nodeType":"YulBlock","src":"8007:54:19","statements":[{"nodeType":"YulAssignment","src":"8017:37:19","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"8042:4:19"},{"name":"value","nodeType":"YulIdentifier","src":"8048:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8038:3:19"},"nodeType":"YulFunctionCall","src":"8038:16:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8017:8:19"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7982:4:19","type":""},{"name":"value","nodeType":"YulTypedName","src":"7988:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7998:8:19","type":""}],"src":"7944:117:19"},{"body":{"nodeType":"YulBlock","src":"8118:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8128:68:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8177:1:19","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"8180:5:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8173:3:19"},"nodeType":"YulFunctionCall","src":"8173:13:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8192:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8188:3:19"},"nodeType":"YulFunctionCall","src":"8188:6:19"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"8144:28:19"},"nodeType":"YulFunctionCall","src":"8144:51:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8140:3:19"},"nodeType":"YulFunctionCall","src":"8140:56:19"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8132:4:19","type":""}]},{"nodeType":"YulAssignment","src":"8205:25:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8219:4:19"},{"name":"mask","nodeType":"YulIdentifier","src":"8225:4:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8215:3:19"},"nodeType":"YulFunctionCall","src":"8215:15:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8205:6:19"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8095:4:19","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"8101:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8111:6:19","type":""}],"src":"8067:169:19"},{"body":{"nodeType":"YulBlock","src":"8322:214:19","statements":[{"nodeType":"YulAssignment","src":"8455:37:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8482:4:19"},{"name":"len","nodeType":"YulIdentifier","src":"8488:3:19"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8463:18:19"},"nodeType":"YulFunctionCall","src":"8463:29:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8455:4:19"}]},{"nodeType":"YulAssignment","src":"8501:29:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8512:4:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8522:1:19","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"8525:3:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8518:3:19"},"nodeType":"YulFunctionCall","src":"8518:11:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8509:2:19"},"nodeType":"YulFunctionCall","src":"8509:21:19"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"8501:4:19"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8303:4:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"8309:3:19","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"8317:4:19","type":""}],"src":"8241:295:19"},{"body":{"nodeType":"YulBlock","src":"8633:1303:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8644:51:19","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8691:3:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8658:32:19"},"nodeType":"YulFunctionCall","src":"8658:37:19"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"8648:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"8780:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8782:16:19"},"nodeType":"YulFunctionCall","src":"8782:18:19"},"nodeType":"YulExpressionStatement","src":"8782:18:19"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8752:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8760:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8749:2:19"},"nodeType":"YulFunctionCall","src":"8749:30:19"},"nodeType":"YulIf","src":"8746:56:19"},{"nodeType":"YulVariableDeclaration","src":"8812:52:19","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8858:4:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8852:5:19"},"nodeType":"YulFunctionCall","src":"8852:11:19"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8826:25:19"},"nodeType":"YulFunctionCall","src":"8826:38:19"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"8816:6:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8957:4:19"},{"name":"oldLen","nodeType":"YulIdentifier","src":"8963:6:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"8971:6:19"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"8911:45:19"},"nodeType":"YulFunctionCall","src":"8911:67:19"},"nodeType":"YulExpressionStatement","src":"8911:67:19"},{"nodeType":"YulVariableDeclaration","src":"8988:18:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9005:1:19","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8992:9:19","type":""}]},{"nodeType":"YulAssignment","src":"9016:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9029:4:19","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9016:9:19"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9080:611:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9094:37:19","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9113:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9125:4:19","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9121:3:19"},"nodeType":"YulFunctionCall","src":"9121:9:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9109:3:19"},"nodeType":"YulFunctionCall","src":"9109:22:19"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9098:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9145:51:19","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9191:4:19"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"9159:31:19"},"nodeType":"YulFunctionCall","src":"9159:37:19"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9149:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9209:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9218:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9213:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"9277:163:19","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9302:6:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9320:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9325:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9316:3:19"},"nodeType":"YulFunctionCall","src":"9316:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9310:5:19"},"nodeType":"YulFunctionCall","src":"9310:26:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9295:6:19"},"nodeType":"YulFunctionCall","src":"9295:42:19"},"nodeType":"YulExpressionStatement","src":"9295:42:19"},{"nodeType":"YulAssignment","src":"9354:24:19","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9368:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9376:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9364:3:19"},"nodeType":"YulFunctionCall","src":"9364:14:19"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9354:6:19"}]},{"nodeType":"YulAssignment","src":"9395:31:19","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9412:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9423:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9408:3:19"},"nodeType":"YulFunctionCall","src":"9408:18:19"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9395:9:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9243:1:19"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9246:7:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9240:2:19"},"nodeType":"YulFunctionCall","src":"9240:14:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9255:21:19","statements":[{"nodeType":"YulAssignment","src":"9257:17:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9266:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"9269:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9262:3:19"},"nodeType":"YulFunctionCall","src":"9262:12:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9257:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"9236:3:19","statements":[]},"src":"9232:208:19"},{"body":{"nodeType":"YulBlock","src":"9476:156:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9494:43:19","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9521:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9526:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9517:3:19"},"nodeType":"YulFunctionCall","src":"9517:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9511:5:19"},"nodeType":"YulFunctionCall","src":"9511:26:19"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9498:9:19","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9561:6:19"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"9588:9:19"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9603:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9611:4:19","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9599:3:19"},"nodeType":"YulFunctionCall","src":"9599:17:19"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"9569:18:19"},"nodeType":"YulFunctionCall","src":"9569:48:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9554:6:19"},"nodeType":"YulFunctionCall","src":"9554:64:19"},"nodeType":"YulExpressionStatement","src":"9554:64:19"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9459:7:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"9468:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9456:2:19"},"nodeType":"YulFunctionCall","src":"9456:19:19"},"nodeType":"YulIf","src":"9453:179:19"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9652:4:19"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9666:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9674:1:19","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9662:3:19"},"nodeType":"YulFunctionCall","src":"9662:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"9678:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9658:3:19"},"nodeType":"YulFunctionCall","src":"9658:22:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9645:6:19"},"nodeType":"YulFunctionCall","src":"9645:36:19"},"nodeType":"YulExpressionStatement","src":"9645:36:19"}]},"nodeType":"YulCase","src":"9073:618:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9078:1:19","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9708:222:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9722:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9735:1:19","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9726:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"9759:67:19","statements":[{"nodeType":"YulAssignment","src":"9777:35:19","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9796:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9801:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9792:3:19"},"nodeType":"YulFunctionCall","src":"9792:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9786:5:19"},"nodeType":"YulFunctionCall","src":"9786:26:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9777:5:19"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"9752:6:19"},"nodeType":"YulIf","src":"9749:77:19"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9846:4:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9905:5:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"9912:6:19"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9852:52:19"},"nodeType":"YulFunctionCall","src":"9852:67:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9839:6:19"},"nodeType":"YulFunctionCall","src":"9839:81:19"},"nodeType":"YulExpressionStatement","src":"9839:81:19"}]},"nodeType":"YulCase","src":"9700:230:19","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9053:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9061:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9050:2:19"},"nodeType":"YulFunctionCall","src":"9050:14:19"},"nodeType":"YulSwitch","src":"9043:887:19"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8622:4:19","type":""},{"name":"src","nodeType":"YulTypedName","src":"8628:3:19","type":""}],"src":"8541:1395:19"},{"body":{"nodeType":"YulBlock","src":"9970:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9987:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9990:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9980:6:19"},"nodeType":"YulFunctionCall","src":"9980:88:19"},"nodeType":"YulExpressionStatement","src":"9980:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10084:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10087:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10077:6:19"},"nodeType":"YulFunctionCall","src":"10077:15:19"},"nodeType":"YulExpressionStatement","src":"10077:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10108:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10111:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10101:6:19"},"nodeType":"YulFunctionCall","src":"10101:15:19"},"nodeType":"YulExpressionStatement","src":"10101:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9942:180:19"},{"body":{"nodeType":"YulBlock","src":"10172:147:19","statements":[{"nodeType":"YulAssignment","src":"10182:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10205:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10187:17:19"},"nodeType":"YulFunctionCall","src":"10187:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10182:1:19"}]},{"nodeType":"YulAssignment","src":"10216:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10239:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10221:17:19"},"nodeType":"YulFunctionCall","src":"10221:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10216:1:19"}]},{"nodeType":"YulAssignment","src":"10250:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10261:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"10264:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10257:3:19"},"nodeType":"YulFunctionCall","src":"10257:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10250:3:19"}]},{"body":{"nodeType":"YulBlock","src":"10290:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10292:16:19"},"nodeType":"YulFunctionCall","src":"10292:18:19"},"nodeType":"YulExpressionStatement","src":"10292:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10282:1:19"},{"name":"sum","nodeType":"YulIdentifier","src":"10285:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10279:2:19"},"nodeType":"YulFunctionCall","src":"10279:10:19"},"nodeType":"YulIf","src":"10276:36:19"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10159:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"10162:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10168:3:19","type":""}],"src":"10128:191:19"},{"body":{"nodeType":"YulBlock","src":"10390:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10407:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10430:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10412:17:19"},"nodeType":"YulFunctionCall","src":"10412:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10400:6:19"},"nodeType":"YulFunctionCall","src":"10400:37:19"},"nodeType":"YulExpressionStatement","src":"10400:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10378:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10385:3:19","type":""}],"src":"10325:118:19"},{"body":{"nodeType":"YulBlock","src":"10603:288:19","statements":[{"nodeType":"YulAssignment","src":"10613:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10625:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10636:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10621:3:19"},"nodeType":"YulFunctionCall","src":"10621:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10613:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10693:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10706:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10717:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10702:3:19"},"nodeType":"YulFunctionCall","src":"10702:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10649:43:19"},"nodeType":"YulFunctionCall","src":"10649:71:19"},"nodeType":"YulExpressionStatement","src":"10649:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10774:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10787:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10798:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10783:3:19"},"nodeType":"YulFunctionCall","src":"10783:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10730:43:19"},"nodeType":"YulFunctionCall","src":"10730:72:19"},"nodeType":"YulExpressionStatement","src":"10730:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10856:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10869:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10880:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10865:3:19"},"nodeType":"YulFunctionCall","src":"10865:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10812:43:19"},"nodeType":"YulFunctionCall","src":"10812:72:19"},"nodeType":"YulExpressionStatement","src":"10812:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10559:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10571:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10579:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10587:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10598:4:19","type":""}],"src":"10449:442:19"},{"body":{"nodeType":"YulBlock","src":"10995:124:19","statements":[{"nodeType":"YulAssignment","src":"11005:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11017:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11028:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11013:3:19"},"nodeType":"YulFunctionCall","src":"11013:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11005:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11085:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11098:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11109:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11094:3:19"},"nodeType":"YulFunctionCall","src":"11094:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11041:43:19"},"nodeType":"YulFunctionCall","src":"11041:71:19"},"nodeType":"YulExpressionStatement","src":"11041:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10967:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10979:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10990:4:19","type":""}],"src":"10897:222:19"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$1579(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$1579(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$1579(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$1579_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$1579(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_contract$_IEntryPoint_$1579_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IEntryPoint_$1579_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b50604051620033353803806200333583398181016040528101906200003791906200095b565b81828232600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b05760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a79190620009e7565b60405180910390fd5b620000c181620001a060201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050816004908162000108919062000c4f565b5080600590816200011a919062000c4f565b5050508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620001643060016200026460201b60201c565b6200019730337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620002f160201b60201c565b50505062000e0b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002d95760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002d09190620009e7565b60405180910390fd5b620002ed600083836200030b60201b60201c565b5050565b6200030683838360016200053e60201b60201c565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200036157806003600082825462000354919062000d65565b9250508190555062000439565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620003f1578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620003e89392919062000db1565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004845780600360008282540392505081905550620004d2565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000531919062000dee565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603620005b35760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401620005aa9190620009e7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620006285760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016200061f9190620009e7565b60405180910390fd5b81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801562000718578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516200070f919062000dee565b60405180910390a35b50505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200075f8262000732565b9050919050565b620007718162000752565b81146200077d57600080fd5b50565b600081519050620007918162000766565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620007ec82620007a1565b810181811067ffffffffffffffff821117156200080e576200080d620007b2565b5b80604052505050565b6000620008236200071e565b9050620008318282620007e1565b919050565b600067ffffffffffffffff821115620008545762000853620007b2565b5b6200085f82620007a1565b9050602081019050919050565b60005b838110156200088c5780820151818401526020810190506200086f565b60008484015250505050565b6000620008af620008a98462000836565b62000817565b905082815260208101848484011115620008ce57620008cd6200079c565b5b620008db8482856200086c565b509392505050565b600082601f830112620008fb57620008fa62000797565b5b81516200090d84826020860162000898565b91505092915050565b6000620009238262000752565b9050919050565b620009358162000916565b81146200094157600080fd5b50565b60008151905062000955816200092a565b92915050565b60008060006060848603121562000977576200097662000728565b5b6000620009878682870162000780565b935050602084015167ffffffffffffffff811115620009ab57620009aa6200072d565b5b620009b986828701620008e3565b9250506040620009cc8682870162000944565b9150509250925092565b620009e18162000752565b82525050565b6000602082019050620009fe6000830184620009d6565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a5757607f821691505b60208210810362000a6d5762000a6c62000a0f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000ad77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000a98565b62000ae3868362000a98565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000b3062000b2a62000b248462000afb565b62000b05565b62000afb565b9050919050565b6000819050919050565b62000b4c8362000b0f565b62000b6462000b5b8262000b37565b84845462000aa5565b825550505050565b600090565b62000b7b62000b6c565b62000b8881848462000b41565b505050565b5b8181101562000bb05762000ba460008262000b71565b60018101905062000b8e565b5050565b601f82111562000bff5762000bc98162000a73565b62000bd48462000a88565b8101602085101562000be4578190505b62000bfc62000bf38562000a88565b83018262000b8d565b50505b505050565b600082821c905092915050565b600062000c246000198460080262000c04565b1980831691505092915050565b600062000c3f838362000c11565b9150826002028217905092915050565b62000c5a8262000a04565b67ffffffffffffffff81111562000c765762000c75620007b2565b5b62000c82825462000a3e565b62000c8f82828562000bb4565b600060209050601f83116001811462000cc7576000841562000cb2578287015190505b62000cbe858262000c31565b86555062000d2e565b601f19841662000cd78662000a73565b60005b8281101562000d015784890151825560018201915060208501945060208101905062000cda565b8683101562000d21578489015162000d1d601f89168262000c11565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000d728262000afb565b915062000d7f8362000afb565b925082820190508082111562000d9a5762000d9962000d36565b5b92915050565b62000dab8162000afb565b82525050565b600060608201905062000dc86000830186620009d6565b62000dd7602083018562000da0565b62000de6604083018462000da0565b949350505050565b600060208201905062000e05600083018462000da0565b92915050565b60805160a0516124cc62000e69600039600081816108aa015261171901526000818161056d015281816106c30152818161090b01528181610937015281816109c101528181610a5101528181610af00152610f7d01526124cc6000f3fe60806040526004361061014b5760003560e01c80639f5ca221116100b6578063c399ec881161006f578063c399ec8814610461578063d0e30db01461048c578063dd62ed3e14610496578063f0dda65c146104d3578063f2fde38b146104fc578063f465c77e146105255761014b565b80639f5ca22114610365578063a9059cbb14610390578063a9a23409146103cd578063b0d691fe146103f6578063bb9fe6bf14610421578063c23a5cea146104385761014b565b8063313ce56711610108578063313ce5671461026557806370a0823114610290578063715018a6146102cd578063796d4371146102e45780638da5cb5b1461030f57806395d89b411461033a5761014b565b80630396cb601461015057806306fdde031461016c578063095ea7b31461019757806318160ddd146101d4578063205c2878146101ff57806323b872dd14610228575b600080fd5b61016a600480360381019061016591906117ef565b610563565b005b34801561017857600080fd5b506101816105fa565b60405161018e91906118ac565b60405180910390f35b3480156101a357600080fd5b506101be60048036038101906101b99190611962565b61068c565b6040516101cb91906119bd565b60405180910390f35b3480156101e057600080fd5b506101e96106af565b6040516101f691906119e7565b60405180910390f35b34801561020b57600080fd5b5061022660048036038101906102219190611a40565b6106b9565b005b34801561023457600080fd5b5061024f600480360381019061024a9190611a80565b610752565b60405161025c91906119bd565b60405180910390f35b34801561027157600080fd5b5061027a610781565b6040516102879190611aef565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b29190611b0a565b61078a565b6040516102c491906119e7565b60405180910390f35b3480156102d957600080fd5b506102e26107d3565b005b3480156102f057600080fd5b506102f96107e7565b60405161030691906119e7565b60405180910390f35b34801561031b57600080fd5b506103246107ed565b6040516103319190611b46565b60405180910390f35b34801561034657600080fd5b5061034f610816565b60405161035c91906118ac565b60405180910390f35b34801561037157600080fd5b5061037a6108a8565b6040516103879190611b46565b60405180910390f35b34801561039c57600080fd5b506103b760048036038101906103b29190611962565b6108cc565b6040516103c491906119bd565b60405180910390f35b3480156103d957600080fd5b506103f460048036038101906103ef9190611beb565b6108ef565b005b34801561040257600080fd5b5061040b610909565b6040516104189190611cbe565b60405180910390f35b34801561042d57600080fd5b5061043661092d565b005b34801561044457600080fd5b5061045f600480360381019061045a9190611cd9565b6109b7565b005b34801561046d57600080fd5b50610476610a4d565b60405161048391906119e7565b60405180910390f35b610494610aee565b005b3480156104a257600080fd5b506104bd60048036038101906104b89190611d06565b610b7c565b6040516104ca91906119e7565b60405180910390f35b3480156104df57600080fd5b506104fa60048036038101906104f59190611962565b610c03565b005b34801561050857600080fd5b50610523600480360381019061051e9190611b0a565b610c19565b005b34801561053157600080fd5b5061054c60048036038101906105479190611da1565b610c6b565b60405161055a929190611e65565b60405180910390f35b61056b610c8e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016105c59190611ea4565b6000604051808303818588803b1580156105de57600080fd5b505af11580156105f2573d6000803e3d6000fd5b505050505050565b60606004805461060990611eee565b80601f016020809104026020016040519081016040528092919081815260200182805461063590611eee565b80156106825780601f1061065757610100808354040283529160200191610682565b820191906000526020600020905b81548152906001019060200180831161066557829003601f168201915b5050505050905090565b600080610697610d15565b90506106a4818585610d1d565b600191505092915050565b6000600354905090565b6106c1610c8e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b815260040161071c929190611f2e565b600060405180830381600087803b15801561073657600080fd5b505af115801561074a573d6000803e3d6000fd5b505050505050565b60008061075d610d15565b905061076a858285610d2f565b610775858585610dc3565b60019150509392505050565b60006012905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107db610c8e565b6107e56000610eb7565b565b613a9881565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461082590611eee565b80601f016020809104026020016040519081016040528092919081815260200182805461085190611eee565b801561089e5780601f106108735761010080835404028352916020019161089e565b820191906000526020600020905b81548152906001019060200180831161088157829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108d7610d15565b90506108e4818585610dc3565b600191505092915050565b6108f7610f7b565b6109038484848461100b565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610935610c8e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099d57600080fd5b505af11580156109b1573d6000803e3d6000fd5b50505050565b6109bf610c8e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b8152600401610a189190611f57565b600060405180830381600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610aa89190611b46565b602060405180830381865afa158015610ac5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae99190611f87565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610b489190611b46565b6000604051808303818588803b158015610b6157600080fd5b505af1158015610b75573d6000803e3d6000fd5b5050505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610c0b610c8e565b610c15828261104b565b5050565b610c21610c8e565b610c3430610c2d6107ed565b6000610d1d565b610c3d816110cd565b610c6830827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610d1d565b50565b60606000610c77610f7b565b610c82858585611153565b91509150935093915050565b610c96610d15565b73ffffffffffffffffffffffffffffffffffffffff16610cb46107ed565b73ffffffffffffffffffffffffffffffffffffffff1614610d1357610cd7610d15565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d0a9190611b46565b60405180910390fd5b565b600033905090565b610d2a83838360016112ce565b505050565b6000610d3b8484610b7c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610dbd5781811015610dad578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610da493929190611fb4565b60405180910390fd5b610dbc848484840360006112ce565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e355760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e2c9190611b46565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea75760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e9e9190611b46565b60405180910390fd5b610eb28383836114a5565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611009576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100090612037565b60405180910390fd5b565b6000838381019061101c9190611cd9565b90506000611036613a98846110319190612086565b6116cd565b9050611043823083610dc3565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110bd5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110b49190611b46565b60405180910390fd5b6110c9600083836114a5565b5050565b6110d5610c8e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111475760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161113e9190611b46565b60405180910390fd5b61115081610eb7565b50565b6060600080611161846116cd565b9050613a988660a00135116111ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a29061212c565b60405180910390fd5b60008680604001906111bd919061215b565b90501461122f576111cd866116e3565b806111e98760000160208101906111e49190611b0a565b61078a565b101561122a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122190612230565b60405180910390fd5b61128d565b8061124b8760000160208101906112469190611b0a565b61078a565b101561128c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112839061229c565b60405180910390fd5b5b8560000160208101906112a09190611b0a565b6040516020016112b09190611b46565b60405160208183030381529060405260009250925050935093915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036113405760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113379190611b46565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113b25760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113a99190611b46565b60405180910390fd5b81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561149f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161149691906119e7565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114f75780600360008282546114eb9190612086565b925050819055506115cc565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611584578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161157b93929190611fb4565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116155780600360008282540392505081905550611663565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116c091906119e7565b60405180910390a3505050565b60006064826116dc91906122eb565b9050919050565b60008180604001906116f5919061215b565b60009060149261170793929190612326565b9061171291906123a5565b60601c90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179c90612476565b60405180910390fd5b5050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6117cc816117b3565b81146117d757600080fd5b50565b6000813590506117e9816117c3565b92915050565b600060208284031215611805576118046117a9565b5b6000611813848285016117da565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561185657808201518184015260208101905061183b565b60008484015250505050565b6000601f19601f8301169050919050565b600061187e8261181c565b6118888185611827565b9350611898818560208601611838565b6118a181611862565b840191505092915050565b600060208201905081810360008301526118c68184611873565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118f9826118ce565b9050919050565b611909816118ee565b811461191457600080fd5b50565b60008135905061192681611900565b92915050565b6000819050919050565b61193f8161192c565b811461194a57600080fd5b50565b60008135905061195c81611936565b92915050565b60008060408385031215611979576119786117a9565b5b600061198785828601611917565b92505060206119988582860161194d565b9150509250929050565b60008115159050919050565b6119b7816119a2565b82525050565b60006020820190506119d260008301846119ae565b92915050565b6119e18161192c565b82525050565b60006020820190506119fc60008301846119d8565b92915050565b6000611a0d826118ce565b9050919050565b611a1d81611a02565b8114611a2857600080fd5b50565b600081359050611a3a81611a14565b92915050565b60008060408385031215611a5757611a566117a9565b5b6000611a6585828601611a2b565b9250506020611a768582860161194d565b9150509250929050565b600080600060608486031215611a9957611a986117a9565b5b6000611aa786828701611917565b9350506020611ab886828701611917565b9250506040611ac98682870161194d565b9150509250925092565b600060ff82169050919050565b611ae981611ad3565b82525050565b6000602082019050611b046000830184611ae0565b92915050565b600060208284031215611b2057611b1f6117a9565b5b6000611b2e84828501611917565b91505092915050565b611b40816118ee565b82525050565b6000602082019050611b5b6000830184611b37565b92915050565b60038110611b6e57600080fd5b50565b600081359050611b8081611b61565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611bab57611baa611b86565b5b8235905067ffffffffffffffff811115611bc857611bc7611b8b565b5b602083019150836001820283011115611be457611be3611b90565b5b9250929050565b60008060008060608587031215611c0557611c046117a9565b5b6000611c1387828801611b71565b945050602085013567ffffffffffffffff811115611c3457611c336117ae565b5b611c4087828801611b95565b93509350506040611c538782880161194d565b91505092959194509250565b6000819050919050565b6000611c84611c7f611c7a846118ce565b611c5f565b6118ce565b9050919050565b6000611c9682611c69565b9050919050565b6000611ca882611c8b565b9050919050565b611cb881611c9d565b82525050565b6000602082019050611cd36000830184611caf565b92915050565b600060208284031215611cef57611cee6117a9565b5b6000611cfd84828501611a2b565b91505092915050565b60008060408385031215611d1d57611d1c6117a9565b5b6000611d2b85828601611917565b9250506020611d3c85828601611917565b9150509250929050565b600080fd5b60006101608284031215611d6257611d61611d46565b5b81905092915050565b6000819050919050565b611d7e81611d6b565b8114611d8957600080fd5b50565b600081359050611d9b81611d75565b92915050565b600080600060608486031215611dba57611db96117a9565b5b600084013567ffffffffffffffff811115611dd857611dd76117ae565b5b611de486828701611d4b565b9350506020611df586828701611d8c565b9250506040611e068682870161194d565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000611e3782611e10565b611e418185611e1b565b9350611e51818560208601611838565b611e5a81611862565b840191505092915050565b60006040820190508181036000830152611e7f8185611e2c565b9050611e8e60208301846119d8565b9392505050565b611e9e816117b3565b82525050565b6000602082019050611eb96000830184611e95565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f0657607f821691505b602082108103611f1957611f18611ebf565b5b50919050565b611f2881611a02565b82525050565b6000604082019050611f436000830185611f1f565b611f5060208301846119d8565b9392505050565b6000602082019050611f6c6000830184611f1f565b92915050565b600081519050611f8181611936565b92915050565b600060208284031215611f9d57611f9c6117a9565b5b6000611fab84828501611f72565b91505092915050565b6000606082019050611fc96000830186611b37565b611fd660208301856119d8565b611fe360408301846119d8565b949350505050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b6000612021601583611827565b915061202c82611feb565b602082019050919050565b6000602082019050818103600083015261205081612014565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120918261192c565b915061209c8361192c565b92508282019050808211156120b4576120b3612057565b5b92915050565b7f546f6b656e5061796d61737465723a2067617320746f6f206c6f7720666f722060008201527f706f73744f700000000000000000000000000000000000000000000000000000602082015250565b6000612116602683611827565b9150612121826120ba565b604082019050919050565b6000602082019050818103600083015261214581612109565b9050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126121785761217761214c565b5b80840192508235915067ffffffffffffffff82111561219a57612199612151565b5b6020830192506001820236038313156121b6576121b5612156565b5b509250929050565b7f546f6b656e5061796d61737465723a206e6f2062616c616e636520287072652d60008201527f6372656174652900000000000000000000000000000000000000000000000000602082015250565b600061221a602783611827565b9150612225826121be565b604082019050919050565b600060208201905081810360008301526122498161220d565b9050919050565b7f546f6b656e5061796d61737465723a206e6f2062616c616e6365000000000000600082015250565b6000612286601a83611827565b915061229182612250565b602082019050919050565b600060208201905081810360008301526122b581612279565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006122f68261192c565b91506123018361192c565b925082612311576123106122bc565b5b828204905092915050565b600080fd5b600080fd5b6000808585111561233a5761233961231c565b5b8386111561234b5761234a612321565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b600082821b905092915050565b60006123b18383612361565b826123bc813561236c565b925060148210156123fc576123f77fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802612398565b831692505b505092915050565b7f546f6b656e5061796d61737465723a2077726f6e67206163636f756e7420666160008201527f63746f7279000000000000000000000000000000000000000000000000000000602082015250565b6000612460602583611827565b915061246b82612404565b604082019050919050565b6000602082019050818103600083015261248f81612453565b905091905056fea2646970667358221220c9ac67e0e4f0feea8139075f21f5025ee4c0efc531a31e0663f3da35a6aa058564736f6c63430008140033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3335 CODESIZE SUB DUP1 PUSH3 0x3335 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x95B JUMP JUMPDEST DUP2 DUP3 DUP3 ORIGIN PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA7 SWAP2 SWAP1 PUSH3 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC1 DUP2 PUSH3 0x1A0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP2 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x108 SWAP2 SWAP1 PUSH3 0xC4F JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP2 PUSH3 0x11A SWAP2 SWAP1 PUSH3 0xC4F JUMP JUMPDEST POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0x164 ADDRESS PUSH1 0x1 PUSH3 0x264 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x197 ADDRESS CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH3 0x2F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xE0B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2D9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D0 SWAP2 SWAP1 PUSH3 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2ED PUSH1 0x0 DUP4 DUP4 PUSH3 0x30B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x306 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH3 0x53E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x361 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x354 SWAP2 SWAP1 PUSH3 0xD65 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x439 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x3F1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xDB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x484 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4D2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x531 SWAP2 SWAP1 PUSH3 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x5B3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5AA SWAP2 SWAP1 PUSH3 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x628 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x61F SWAP2 SWAP1 PUSH3 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH3 0x718 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH3 0x70F SWAP2 SWAP1 PUSH3 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x75F DUP3 PUSH3 0x732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x771 DUP2 PUSH3 0x752 JUMP JUMPDEST DUP2 EQ PUSH3 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x791 DUP2 PUSH3 0x766 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x7EC DUP3 PUSH3 0x7A1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x80E JUMPI PUSH3 0x80D PUSH3 0x7B2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x823 PUSH3 0x71E JUMP JUMPDEST SWAP1 POP PUSH3 0x831 DUP3 DUP3 PUSH3 0x7E1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x854 JUMPI PUSH3 0x853 PUSH3 0x7B2 JUMP JUMPDEST JUMPDEST PUSH3 0x85F DUP3 PUSH3 0x7A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x88C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x86F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8AF PUSH3 0x8A9 DUP5 PUSH3 0x836 JUMP JUMPDEST PUSH3 0x817 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x8CE JUMPI PUSH3 0x8CD PUSH3 0x79C JUMP JUMPDEST JUMPDEST PUSH3 0x8DB DUP5 DUP3 DUP6 PUSH3 0x86C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x8FB JUMPI PUSH3 0x8FA PUSH3 0x797 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x90D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x898 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x923 DUP3 PUSH3 0x752 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x935 DUP2 PUSH3 0x916 JUMP JUMPDEST DUP2 EQ PUSH3 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x955 DUP2 PUSH3 0x92A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x977 JUMPI PUSH3 0x976 PUSH3 0x728 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x987 DUP7 DUP3 DUP8 ADD PUSH3 0x780 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x9AB JUMPI PUSH3 0x9AA PUSH3 0x72D JUMP JUMPDEST JUMPDEST PUSH3 0x9B9 DUP7 DUP3 DUP8 ADD PUSH3 0x8E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x9CC DUP7 DUP3 DUP8 ADD PUSH3 0x944 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x9E1 DUP2 PUSH3 0x752 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9FE PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xA57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xA6D JUMPI PUSH3 0xA6C PUSH3 0xA0F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xAD7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xA98 JUMP JUMPDEST PUSH3 0xAE3 DUP7 DUP4 PUSH3 0xA98 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB30 PUSH3 0xB2A PUSH3 0xB24 DUP5 PUSH3 0xAFB JUMP JUMPDEST PUSH3 0xB05 JUMP JUMPDEST PUSH3 0xAFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB4C DUP4 PUSH3 0xB0F JUMP JUMPDEST PUSH3 0xB64 PUSH3 0xB5B DUP3 PUSH3 0xB37 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xAA5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xB7B PUSH3 0xB6C JUMP JUMPDEST PUSH3 0xB88 DUP2 DUP5 DUP5 PUSH3 0xB41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xBB0 JUMPI PUSH3 0xBA4 PUSH1 0x0 DUP3 PUSH3 0xB71 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xB8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xBFF JUMPI PUSH3 0xBC9 DUP2 PUSH3 0xA73 JUMP JUMPDEST PUSH3 0xBD4 DUP5 PUSH3 0xA88 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xBE4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xBFC PUSH3 0xBF3 DUP6 PUSH3 0xA88 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xB8D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC24 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xC04 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC3F DUP4 DUP4 PUSH3 0xC11 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC5A DUP3 PUSH3 0xA04 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xC76 JUMPI PUSH3 0xC75 PUSH3 0x7B2 JUMP JUMPDEST JUMPDEST PUSH3 0xC82 DUP3 SLOAD PUSH3 0xA3E JUMP JUMPDEST PUSH3 0xC8F DUP3 DUP3 DUP6 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xCC7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xCB2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xCBE DUP6 DUP3 PUSH3 0xC31 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xD2E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xCD7 DUP7 PUSH3 0xA73 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xD01 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xCDA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xD21 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xD1D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xC11 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xD72 DUP3 PUSH3 0xAFB JUMP JUMPDEST SWAP2 POP PUSH3 0xD7F DUP4 PUSH3 0xAFB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xD9A JUMPI PUSH3 0xD99 PUSH3 0xD36 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xDAB DUP2 PUSH3 0xAFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xDC8 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x9D6 JUMP JUMPDEST PUSH3 0xDD7 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xDA0 JUMP JUMPDEST PUSH3 0xDE6 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xDA0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE05 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xDA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x24CC PUSH3 0xE69 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x8AA ADD MSTORE PUSH2 0x1719 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x56D ADD MSTORE DUP2 DUP2 PUSH2 0x6C3 ADD MSTORE DUP2 DUP2 PUSH2 0x90B ADD MSTORE DUP2 DUP2 PUSH2 0x937 ADD MSTORE DUP2 DUP2 PUSH2 0x9C1 ADD MSTORE DUP2 DUP2 PUSH2 0xA51 ADD MSTORE DUP2 DUP2 PUSH2 0xAF0 ADD MSTORE PUSH2 0xF7D ADD MSTORE PUSH2 0x24CC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F5CA221 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC399EC88 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x525 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x9F5CA221 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x438 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x796D4371 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33A JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x228 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x7D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x92D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x476 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x494 PUSH2 0xAEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x523 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55A SWAP3 SWAP2 SWAP1 PUSH2 0x1E65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56B PUSH2 0xC8E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x609 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x635 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x682 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x657 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x682 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x665 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x697 PUSH2 0xD15 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A4 DUP2 DUP6 DUP6 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C1 PUSH2 0xC8E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP3 SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x75D PUSH2 0xD15 JUMP JUMPDEST SWAP1 POP PUSH2 0x76A DUP6 DUP3 DUP6 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x775 DUP6 DUP6 DUP6 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DB PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x7E5 PUSH1 0x0 PUSH2 0xEB7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3A98 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x825 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x851 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x89E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x873 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x89E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x881 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8D7 PUSH2 0xD15 JUMP JUMPDEST SWAP1 POP PUSH2 0x8E4 DUP2 DUP6 DUP6 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F7 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x903 DUP5 DUP5 DUP5 DUP5 PUSH2 0x100B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x935 PUSH2 0xC8E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9BF PUSH2 0xC8E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE9 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC0B PUSH2 0xC8E JUMP JUMPDEST PUSH2 0xC15 DUP3 DUP3 PUSH2 0x104B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC21 PUSH2 0xC8E JUMP JUMPDEST PUSH2 0xC34 ADDRESS PUSH2 0xC2D PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xC3D DUP2 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0xC68 ADDRESS DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xD1D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC77 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xC82 DUP6 DUP6 DUP6 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC96 PUSH2 0xD15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB4 PUSH2 0x7ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD13 JUMPI PUSH2 0xCD7 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0A SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD2A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3B DUP5 DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xDBD JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDAD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDBC DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x12CE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE35 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9E SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB2 DUP4 DUP4 DUP4 PUSH2 0x14A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP2 ADD SWAP1 PUSH2 0x101C SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1036 PUSH2 0x3A98 DUP5 PUSH2 0x1031 SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP PUSH2 0x1043 DUP3 ADDRESS DUP4 PUSH2 0xDC3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10BD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B4 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C9 PUSH1 0x0 DUP4 DUP4 PUSH2 0x14A5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10D5 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1147 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113E SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0xEB7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x1161 DUP5 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP PUSH2 0x3A98 DUP7 PUSH1 0xA0 ADD CALLDATALOAD GT PUSH2 0x11AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x11BD SWAP2 SWAP1 PUSH2 0x215B JUMP JUMPDEST SWAP1 POP EQ PUSH2 0x122F JUMPI PUSH2 0x11CD DUP7 PUSH2 0x16E3 JUMP JUMPDEST DUP1 PUSH2 0x11E9 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11E4 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST LT ISZERO PUSH2 0x122A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1221 SWAP1 PUSH2 0x2230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x128D JUMP JUMPDEST DUP1 PUSH2 0x124B DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1246 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST LT ISZERO PUSH2 0x128C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1283 SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12B0 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x0 SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1340 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A9 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x149F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1496 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14F7 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14EB SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1584 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1615 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1663 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16C0 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x16DC SWAP2 SWAP1 PUSH2 0x22EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x215B JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x14 SWAP3 PUSH2 0x1707 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2326 JUMP JUMPDEST SWAP1 PUSH2 0x1712 SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179C SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17CC DUP2 PUSH2 0x17B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E9 DUP2 PUSH2 0x17C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1813 DUP5 DUP3 DUP6 ADD PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1856 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x183B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187E DUP3 PUSH2 0x181C JUMP JUMPDEST PUSH2 0x1888 DUP2 DUP6 PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP PUSH2 0x1898 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x18A1 DUP2 PUSH2 0x1862 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18C6 DUP2 DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F9 DUP3 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1909 DUP2 PUSH2 0x18EE JUMP JUMPDEST DUP2 EQ PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1926 DUP2 PUSH2 0x1900 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193F DUP2 PUSH2 0x192C JUMP JUMPDEST DUP2 EQ PUSH2 0x194A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x195C DUP2 PUSH2 0x1936 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1979 JUMPI PUSH2 0x1978 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1987 DUP6 DUP3 DUP7 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1998 DUP6 DUP3 DUP7 ADD PUSH2 0x194D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B7 DUP2 PUSH2 0x19A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19E1 DUP2 PUSH2 0x192C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0D DUP3 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1D DUP2 PUSH2 0x1A02 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3A DUP2 PUSH2 0x1A14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A57 JUMPI PUSH2 0x1A56 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A65 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A76 DUP6 DUP3 DUP7 ADD PUSH2 0x194D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH2 0x1A98 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AA7 DUP7 DUP3 DUP8 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AB8 DUP7 DUP3 DUP8 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AC9 DUP7 DUP3 DUP8 ADD PUSH2 0x194D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE9 DUP2 PUSH2 0x1AD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B04 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B20 JUMPI PUSH2 0x1B1F PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2E DUP5 DUP3 DUP6 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B40 DUP2 PUSH2 0x18EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1B6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B80 DUP2 PUSH2 0x1B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1BAB JUMPI PUSH2 0x1BAA PUSH2 0x1B86 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x1B8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1BE4 JUMPI PUSH2 0x1BE3 PUSH2 0x1B90 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C05 JUMPI PUSH2 0x1C04 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C13 DUP8 DUP3 DUP9 ADD PUSH2 0x1B71 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x17AE JUMP JUMPDEST JUMPDEST PUSH2 0x1C40 DUP8 DUP3 DUP9 ADD PUSH2 0x1B95 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C53 DUP8 DUP3 DUP9 ADD PUSH2 0x194D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C84 PUSH2 0x1C7F PUSH2 0x1C7A DUP5 PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x1C5F JUMP JUMPDEST PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C96 DUP3 PUSH2 0x1C69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA8 DUP3 PUSH2 0x1C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB8 DUP2 PUSH2 0x1C9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CD3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CEF JUMPI PUSH2 0x1CEE PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CFD DUP5 DUP3 DUP6 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D1D JUMPI PUSH2 0x1D1C PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D2B DUP6 DUP3 DUP7 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D3C DUP6 DUP3 DUP7 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D62 JUMPI PUSH2 0x1D61 PUSH2 0x1D46 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D7E DUP2 PUSH2 0x1D6B JUMP JUMPDEST DUP2 EQ PUSH2 0x1D89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9B DUP2 PUSH2 0x1D75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DBA JUMPI PUSH2 0x1DB9 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x17AE JUMP JUMPDEST JUMPDEST PUSH2 0x1DE4 DUP7 DUP3 DUP8 ADD PUSH2 0x1D4B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DF5 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E06 DUP7 DUP3 DUP8 ADD PUSH2 0x194D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E37 DUP3 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0x1E41 DUP2 DUP6 PUSH2 0x1E1B JUMP JUMPDEST SWAP4 POP PUSH2 0x1E51 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x1E5A DUP2 PUSH2 0x1862 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E7F DUP2 DUP6 PUSH2 0x1E2C JUMP JUMPDEST SWAP1 POP PUSH2 0x1E8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1E9E DUP2 PUSH2 0x17B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F06 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F19 JUMPI PUSH2 0x1F18 PUSH2 0x1EBF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F28 DUP2 PUSH2 0x1A02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F43 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x1F50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F81 DUP2 PUSH2 0x1936 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9D JUMPI PUSH2 0x1F9C PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FAB DUP5 DUP3 DUP6 ADD PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FC9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B37 JUMP JUMPDEST PUSH2 0x1FD6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x1FE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19D8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2021 PUSH1 0x15 DUP4 PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP PUSH2 0x202C DUP3 PUSH2 0x1FEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2050 DUP2 PUSH2 0x2014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2091 DUP3 PUSH2 0x192C JUMP JUMPDEST SWAP2 POP PUSH2 0x209C DUP4 PUSH2 0x192C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20B4 JUMPI PUSH2 0x20B3 PUSH2 0x2057 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E5061796D61737465723A2067617320746F6F206C6F7720666F7220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x706F73744F700000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2116 PUSH1 0x26 DUP4 PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP PUSH2 0x2121 DUP3 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2145 DUP2 PUSH2 0x2109 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2178 JUMPI PUSH2 0x2177 PUSH2 0x214C JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x219A JUMPI PUSH2 0x2199 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x21B6 JUMPI PUSH2 0x21B5 PUSH2 0x2156 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5061796D61737465723A206E6F2062616C616E636520287072652D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6372656174652900000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221A PUSH1 0x27 DUP4 PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP PUSH2 0x2225 DUP3 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2249 DUP2 PUSH2 0x220D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5061796D61737465723A206E6F2062616C616E6365000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2286 PUSH1 0x1A DUP4 PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP PUSH2 0x2291 DUP3 PUSH2 0x2250 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B5 DUP2 PUSH2 0x2279 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22F6 DUP3 PUSH2 0x192C JUMP JUMPDEST SWAP2 POP PUSH2 0x2301 DUP4 PUSH2 0x192C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2311 JUMPI PUSH2 0x2310 PUSH2 0x22BC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x233A JUMPI PUSH2 0x2339 PUSH2 0x231C JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x234B JUMPI PUSH2 0x234A PUSH2 0x2321 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B1 DUP4 DUP4 PUSH2 0x2361 JUMP JUMPDEST DUP3 PUSH2 0x23BC DUP2 CALLDATALOAD PUSH2 0x236C JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x23FC JUMPI PUSH2 0x23F7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x2398 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E5061796D61737465723A2077726F6E67206163636F756E74206661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63746F7279000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2460 PUSH1 0x25 DUP4 PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP PUSH2 0x246B DUP3 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x248F DUP2 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xAC PUSH8 0xE0E4F0FEEA813907 PUSH0 0x21 CREATE2 MUL 0x5E 0xE4 0xC0 0xEF 0xC5 BALANCE LOG3 0x1E MOD PUSH4 0xF3DA35A6 0xAA SDIV DUP6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1232:4400:15:-:0;;;1429:384;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1519:7;1528;1551:11;579:9:6;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;614:11:6::1;601:24;;;;;;;;::::0;::::1;534:99:::0;1970:5:2;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1588:14:15::2;1575:27;;;;;;;;::::0;::::2;1642:23;1656:4;1663:1;1642:5;;;:23;;:::i;:::-;1754:51;1771:4;1778:10;1790:14;1754:8;;;:51;;:::i;:::-;1429:384:::0;;;1232:4400;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;;;:37;;:::i;:::-;8989:128;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:246::-;2202:1;2212:113;2226:6;2223:1;2220:13;2212:113;;;2311:1;2306:3;2302:11;2296:18;2292:1;2287:3;2283:11;2276:39;2248:2;2245:1;2241:10;2236:15;;2212:113;;;2359:1;2350:6;2345:3;2341:16;2334:27;2183:184;2121:246;;;:::o;2373:434::-;2462:5;2487:66;2503:49;2545:6;2503:49;:::i;:::-;2487:66;:::i;:::-;2478:75;;2576:6;2569:5;2562:21;2614:4;2607:5;2603:16;2652:3;2643:6;2638:3;2634:16;2631:25;2628:112;;;2659:79;;:::i;:::-;2628:112;2749:52;2794:6;2789:3;2784;2749:52;:::i;:::-;2468:339;2373:434;;;;;:::o;2827:355::-;2894:5;2943:3;2936:4;2928:6;2924:17;2920:27;2910:122;;2951:79;;:::i;:::-;2910:122;3061:6;3055:13;3086:90;3172:3;3164:6;3157:4;3149:6;3145:17;3086:90;:::i;:::-;3077:99;;2900:282;2827:355;;;;:::o;3188:116::-;3245:7;3274:24;3292:5;3274:24;:::i;:::-;3263:35;;3188:116;;;:::o;3310:162::-;3403:44;3441:5;3403:44;:::i;:::-;3396:5;3393:55;3383:83;;3462:1;3459;3452:12;3383:83;3310:162;:::o;3478:183::-;3555:5;3586:6;3580:13;3571:22;;3602:53;3649:5;3602:53;:::i;:::-;3478:183;;;;:::o;3667:876::-;3785:6;3793;3801;3850:2;3838:9;3829:7;3825:23;3821:32;3818:119;;;3856:79;;:::i;:::-;3818:119;3976:1;4001:64;4057:7;4048:6;4037:9;4033:22;4001:64;:::i;:::-;3991:74;;3947:128;4135:2;4124:9;4120:18;4114:25;4166:18;4158:6;4155:30;4152:117;;;4188:79;;:::i;:::-;4152:117;4293:74;4359:7;4350:6;4339:9;4335:22;4293:74;:::i;:::-;4283:84;;4085:292;4416:2;4442:84;4518:7;4509:6;4498:9;4494:22;4442:84;:::i;:::-;4432:94;;4387:149;3667:876;;;;;:::o;4549:118::-;4636:24;4654:5;4636:24;:::i;:::-;4631:3;4624:37;4549:118;;:::o;4673:222::-;4766:4;4804:2;4793:9;4789:18;4781:26;;4817:71;4885:1;4874:9;4870:17;4861:6;4817:71;:::i;:::-;4673:222;;;;:::o;4901:99::-;4953:6;4987:5;4981:12;4971:22;;4901:99;;;:::o;5006:180::-;5054:77;5051:1;5044:88;5151:4;5148:1;5141:15;5175:4;5172:1;5165:15;5192:320;5236:6;5273:1;5267:4;5263:12;5253:22;;5320:1;5314:4;5310:12;5341:18;5331:81;;5397:4;5389:6;5385:17;5375:27;;5331:81;5459:2;5451:6;5448:14;5428:18;5425:38;5422:84;;5478:18;;:::i;:::-;5422:84;5243:269;5192:320;;;:::o;5518:141::-;5567:4;5590:3;5582:11;;5613:3;5610:1;5603:14;5647:4;5644:1;5634:18;5626:26;;5518:141;;;:::o;5665:93::-;5702:6;5749:2;5744;5737:5;5733:14;5729:23;5719:33;;5665:93;;;:::o;5764:107::-;5808:8;5858:5;5852:4;5848:16;5827:37;;5764:107;;;;:::o;5877:393::-;5946:6;5996:1;5984:10;5980:18;6019:97;6049:66;6038:9;6019:97;:::i;:::-;6137:39;6167:8;6156:9;6137:39;:::i;:::-;6125:51;;6209:4;6205:9;6198:5;6194:21;6185:30;;6258:4;6248:8;6244:19;6237:5;6234:30;6224:40;;5953:317;;5877:393;;;;;:::o;6276:77::-;6313:7;6342:5;6331:16;;6276:77;;;:::o;6359:60::-;6387:3;6408:5;6401:12;;6359:60;;;:::o;6425:142::-;6475:9;6508:53;6526:34;6535:24;6553:5;6535:24;:::i;:::-;6526:34;:::i;:::-;6508:53;:::i;:::-;6495:66;;6425:142;;;:::o;6573:75::-;6616:3;6637:5;6630:12;;6573:75;;;:::o;6654:269::-;6764:39;6795:7;6764:39;:::i;:::-;6825:91;6874:41;6898:16;6874:41;:::i;:::-;6866:6;6859:4;6853:11;6825:91;:::i;:::-;6819:4;6812:105;6730:193;6654:269;;;:::o;6929:73::-;6974:3;6929:73;:::o;7008:189::-;7085:32;;:::i;:::-;7126:65;7184:6;7176;7170:4;7126:65;:::i;:::-;7061:136;7008:189;;:::o;7203:186::-;7263:120;7280:3;7273:5;7270:14;7263:120;;;7334:39;7371:1;7364:5;7334:39;:::i;:::-;7307:1;7300:5;7296:13;7287:22;;7263:120;;;7203:186;;:::o;7395:543::-;7496:2;7491:3;7488:11;7485:446;;;7530:38;7562:5;7530:38;:::i;:::-;7614:29;7632:10;7614:29;:::i;:::-;7604:8;7600:44;7797:2;7785:10;7782:18;7779:49;;;7818:8;7803:23;;7779:49;7841:80;7897:22;7915:3;7897:22;:::i;:::-;7887:8;7883:37;7870:11;7841:80;:::i;:::-;7500:431;;7485:446;7395:543;;;:::o;7944:117::-;7998:8;8048:5;8042:4;8038:16;8017:37;;7944:117;;;;:::o;8067:169::-;8111:6;8144:51;8192:1;8188:6;8180:5;8177:1;8173:13;8144:51;:::i;:::-;8140:56;8225:4;8219;8215:15;8205:25;;8118:118;8067:169;;;;:::o;8241:295::-;8317:4;8463:29;8488:3;8482:4;8463:29;:::i;:::-;8455:37;;8525:3;8522:1;8518:11;8512:4;8509:21;8501:29;;8241:295;;;;:::o;8541:1395::-;8658:37;8691:3;8658:37;:::i;:::-;8760:18;8752:6;8749:30;8746:56;;;8782:18;;:::i;:::-;8746:56;8826:38;8858:4;8852:11;8826:38;:::i;:::-;8911:67;8971:6;8963;8957:4;8911:67;:::i;:::-;9005:1;9029:4;9016:17;;9061:2;9053:6;9050:14;9078:1;9073:618;;;;9735:1;9752:6;9749:77;;;9801:9;9796:3;9792:19;9786:26;9777:35;;9749:77;9852:67;9912:6;9905:5;9852:67;:::i;:::-;9846:4;9839:81;9708:222;9043:887;;9073:618;9125:4;9121:9;9113:6;9109:22;9159:37;9191:4;9159:37;:::i;:::-;9218:1;9232:208;9246:7;9243:1;9240:14;9232:208;;;9325:9;9320:3;9316:19;9310:26;9302:6;9295:42;9376:1;9368:6;9364:14;9354:24;;9423:2;9412:9;9408:18;9395:31;;9269:4;9266:1;9262:12;9257:17;;9232:208;;;9468:6;9459:7;9456:19;9453:179;;;9526:9;9521:3;9517:19;9511:26;9569:48;9611:4;9603:6;9599:17;9588:9;9569:48;:::i;:::-;9561:6;9554:64;9476:156;9453:179;9678:1;9674;9666:6;9662:14;9658:22;9652:4;9645:36;9080:611;;;9043:887;;8633:1303;;;8541:1395;;:::o;9942:180::-;9990:77;9987:1;9980:88;10087:4;10084:1;10077:15;10111:4;10108:1;10101:15;10128:191;10168:3;10187:20;10205:1;10187:20;:::i;:::-;10182:25;;10221:20;10239:1;10221:20;:::i;:::-;10216:25;;10264:1;10261;10257:9;10250:16;;10285:3;10282:1;10279:10;10276:36;;;10292:18;;:::i;:::-;10276:36;10128:191;;;;:::o;10325:118::-;10412:24;10430:5;10412:24;:::i;:::-;10407:3;10400:37;10325:118;;:::o;10449:442::-;10598:4;10636:2;10625:9;10621:18;10613:26;;10649:71;10717:1;10706:9;10702:17;10693:6;10649:71;:::i;:::-;10730:72;10798:2;10787:9;10783:18;10774:6;10730:72;:::i;:::-;10812;10880:2;10869:9;10865:18;10856:6;10812:72;:::i;:::-;10449:442;;;;;;:::o;10897:222::-;10990:4;11028:2;11017:9;11013:18;11005:26;;11041:71;11109:1;11098:9;11094:17;11085:6;11041:71;:::i;:::-;10897:222;;;;:::o;1232:4400:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@COST_OF_POST_1786":{"entryPoint":2023,"id":1786,"parameterSlots":0,"returnSlots":0},"@_approve_690":{"entryPoint":3357,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":4814,"id":750,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3214,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_639":{"entryPoint":4171,"id":639,"parameterSlots":2,"returnSlots":0},"@_msgSender_915":{"entryPoint":3349,"id":915,"parameterSlots":0,"returnSlots":1},"@_postOp_2041":{"entryPoint":4107,"id":2041,"parameterSlots":4,"returnSlots":0},"@_requireFromEntryPoint_1149":{"entryPoint":3963,"id":1149,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_798":{"entryPoint":3375,"id":798,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3767,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_529":{"entryPoint":3523,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":5285,"id":606,"parameterSlots":3,"returnSlots":0},"@_validateConstructor_1998":{"entryPoint":5859,"id":1998,"parameterSlots":1,"returnSlots":0},"@_validatePaymasterUserOp_1970":{"entryPoint":4435,"id":1970,"parameterSlots":3,"returnSlots":2},"@addStake_1091":{"entryPoint":1379,"id":1091,"parameterSlots":1,"returnSlots":0},"@allowance_426":{"entryPoint":2940,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":1676,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":1930,"id":385,"parameterSlots":1,"returnSlots":1},"@decimals_363":{"entryPoint":1921,"id":363,"parameterSlots":0,"returnSlots":1},"@deposit_1055":{"entryPoint":2798,"id":1055,"parameterSlots":0,"returnSlots":0},"@entryPoint_939":{"entryPoint":2313,"id":939,"parameterSlots":0,"returnSlots":0},"@getDeposit_1106":{"entryPoint":2637,"id":1106,"parameterSlots":0,"returnSlots":1},"@getTokenValueOfEth_1899":{"entryPoint":5837,"id":1899,"parameterSlots":1,"returnSlots":1},"@mintTokens_1848":{"entryPoint":3075,"id":1848,"parameterSlots":2,"returnSlots":0},"@name_345":{"entryPoint":1530,"id":345,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":2029,"id":67,"parameterSlots":0,"returnSlots":1},"@postOp_1017":{"entryPoint":2287,"id":1017,"parameterSlots":4,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2003,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_354":{"entryPoint":2070,"id":354,"parameterSlots":0,"returnSlots":1},"@theFactory_1788":{"entryPoint":2216,"id":1788,"parameterSlots":0,"returnSlots":0},"@totalSupply_372":{"entryPoint":1711,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_482":{"entryPoint":1874,"id":482,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":4301,"id":126,"parameterSlots":1,"returnSlots":0},"@transferOwnership_1887":{"entryPoint":3097,"id":1887,"parameterSlots":1,"returnSlots":0},"@transfer_409":{"entryPoint":2252,"id":409,"parameterSlots":2,"returnSlots":1},"@unlockStake_1118":{"entryPoint":2349,"id":1118,"parameterSlots":0,"returnSlots":0},"@validatePaymasterUserOp_980":{"entryPoint":3179,"id":980,"parameterSlots":3,"returnSlots":2},"@withdrawStake_1133":{"entryPoint":2487,"id":1133,"parameterSlots":1,"returnSlots":0},"@withdrawTo_1073":{"entryPoint":1721,"id":1073,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":6423,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":6699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":7061,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_enum$_PostOpMode_$1617":{"entryPoint":7025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_UserOperation_$1774_calldata_ptr":{"entryPoint":7499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6477,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":8050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":6106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":7385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":6720,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_address":{"entryPoint":7430,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6784,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6498,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_enum$_PostOpMode_$1617t_bytes_calldata_ptrt_uint256":{"entryPoint":7147,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_struct$_UserOperation_$1774_calldata_ptrt_bytes32t_uint256":{"entryPoint":7585,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8071,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":6127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":7967,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6967,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6574,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":7724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IEntryPoint_$1579_to_t_address_fromStack":{"entryPoint":7343,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack":{"entryPoint":8212,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d_to_t_string_memory_ptr_fromStack":{"entryPoint":8717,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a_to_t_string_memory_ptr_fromStack":{"entryPoint":8825,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6_to_t_string_memory_ptr_fromStack":{"entryPoint":9299,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98_to_t_string_memory_ptr_fromStack":{"entryPoint":8457,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6616,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":7829,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6880,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":8023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":7982,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8116,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6589,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":7781,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$1579__to_t_address__fromStack_reversed":{"entryPoint":7358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8247,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8752,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8860,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8492,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":7844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":6895,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":8539,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_calldata_ptr":{"entryPoint":9057,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7696,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6172,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7707,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6183,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":8998,"id":null,"parameterSlots":4,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":8326,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8939,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6382,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":6658,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6562,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes20":{"entryPoint":9068,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7531,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6350,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6444,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":6067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6867,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20":{"entryPoint":9125,"id":null,"parameterSlots":2,"returnSlots":1},"convert_t_contract$_IEntryPoint_$1579_to_t_address":{"entryPoint":7325,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":7307,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":7273,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6200,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7918,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":7263,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8279,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8892,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7871,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":7051,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7046,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":8529,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":7494,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":8524,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":8993,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":8988,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":7056,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":8534,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6062,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6057,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6242,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":9112,"id":null,"parameterSlots":2,"returnSlots":1},"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9":{"entryPoint":8171,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d":{"entryPoint":8638,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a":{"entryPoint":8784,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6":{"entryPoint":9220,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98":{"entryPoint":8378,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6400,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":6676,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7541,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_PostOpMode_$1617":{"entryPoint":7009,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6454,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":6083,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24922:19","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:19","statements":[{"nodeType":"YulAssignment","src":"57:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:19"},"nodeType":"YulFunctionCall","src":"67:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:19","type":""}],"src":"7:75:19"},{"body":{"nodeType":"YulBlock","src":"177:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:19"},"nodeType":"YulFunctionCall","src":"187:12:19"},"nodeType":"YulExpressionStatement","src":"187:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:19"},{"body":{"nodeType":"YulBlock","src":"300:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:19"},"nodeType":"YulFunctionCall","src":"310:12:19"},"nodeType":"YulExpressionStatement","src":"310:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:19"},{"body":{"nodeType":"YulBlock","src":"378:49:19","statements":[{"nodeType":"YulAssignment","src":"388:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"410:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:19"},"nodeType":"YulFunctionCall","src":"399:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:19","type":""}],"src":"334:93:19"},{"body":{"nodeType":"YulBlock","src":"475:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"531:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"540:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"543:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"533:6:19"},"nodeType":"YulFunctionCall","src":"533:12:19"},"nodeType":"YulExpressionStatement","src":"533:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"505:16:19"},"nodeType":"YulFunctionCall","src":"505:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"495:2:19"},"nodeType":"YulFunctionCall","src":"495:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"488:6:19"},"nodeType":"YulFunctionCall","src":"488:42:19"},"nodeType":"YulIf","src":"485:62:19"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"468:5:19","type":""}],"src":"433:120:19"},{"body":{"nodeType":"YulBlock","src":"610:86:19","statements":[{"nodeType":"YulAssignment","src":"620:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"642:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"629:12:19"},"nodeType":"YulFunctionCall","src":"629:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"620:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"684:5:19"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"658:25:19"},"nodeType":"YulFunctionCall","src":"658:32:19"},"nodeType":"YulExpressionStatement","src":"658:32:19"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"588:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"596:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"604:5:19","type":""}],"src":"559:137:19"},{"body":{"nodeType":"YulBlock","src":"767:262:19","statements":[{"body":{"nodeType":"YulBlock","src":"813:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"815:77:19"},"nodeType":"YulFunctionCall","src":"815:79:19"},"nodeType":"YulExpressionStatement","src":"815:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"788:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"797:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"784:3:19"},"nodeType":"YulFunctionCall","src":"784:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"809:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"780:3:19"},"nodeType":"YulFunctionCall","src":"780:32:19"},"nodeType":"YulIf","src":"777:119:19"},{"nodeType":"YulBlock","src":"906:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"921:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"935:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"925:6:19","type":""}]},{"nodeType":"YulAssignment","src":"950:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"984:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"995:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"980:3:19"},"nodeType":"YulFunctionCall","src":"980:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1004:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"960:19:19"},"nodeType":"YulFunctionCall","src":"960:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"950:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"737:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"748:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"760:6:19","type":""}],"src":"702:327:19"},{"body":{"nodeType":"YulBlock","src":"1094:40:19","statements":[{"nodeType":"YulAssignment","src":"1105:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1121:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1115:5:19"},"nodeType":"YulFunctionCall","src":"1115:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1105:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1077:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1087:6:19","type":""}],"src":"1035:99:19"},{"body":{"nodeType":"YulBlock","src":"1236:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1253:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"1258:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1246:6:19"},"nodeType":"YulFunctionCall","src":"1246:19:19"},"nodeType":"YulExpressionStatement","src":"1246:19:19"},{"nodeType":"YulAssignment","src":"1274:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1293:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1298:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1289:3:19"},"nodeType":"YulFunctionCall","src":"1289:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1274:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1208:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"1213:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1224:11:19","type":""}],"src":"1140:169:19"},{"body":{"nodeType":"YulBlock","src":"1377:184:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1387:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1396:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1391:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1456:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1481:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"1486:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:19"},"nodeType":"YulFunctionCall","src":"1477:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1500:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"1505:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1496:3:19"},"nodeType":"YulFunctionCall","src":"1496:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1490:5:19"},"nodeType":"YulFunctionCall","src":"1490:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1470:6:19"},"nodeType":"YulFunctionCall","src":"1470:39:19"},"nodeType":"YulExpressionStatement","src":"1470:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1417:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"1420:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1414:2:19"},"nodeType":"YulFunctionCall","src":"1414:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1428:19:19","statements":[{"nodeType":"YulAssignment","src":"1430:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1439:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"1442:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1435:3:19"},"nodeType":"YulFunctionCall","src":"1435:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1430:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"1410:3:19","statements":[]},"src":"1406:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1539:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"1544:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1535:3:19"},"nodeType":"YulFunctionCall","src":"1535:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"1553:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1528:6:19"},"nodeType":"YulFunctionCall","src":"1528:27:19"},"nodeType":"YulExpressionStatement","src":"1528:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1359:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1364:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"1369:6:19","type":""}],"src":"1315:246:19"},{"body":{"nodeType":"YulBlock","src":"1615:54:19","statements":[{"nodeType":"YulAssignment","src":"1625:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1643:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1650:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1639:3:19"},"nodeType":"YulFunctionCall","src":"1639:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1655:3:19"},"nodeType":"YulFunctionCall","src":"1655:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1635:3:19"},"nodeType":"YulFunctionCall","src":"1635:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1625:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1598:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1608:6:19","type":""}],"src":"1567:102:19"},{"body":{"nodeType":"YulBlock","src":"1767:285:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1777:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1824:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1791:32:19"},"nodeType":"YulFunctionCall","src":"1791:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1781:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1839:78:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1905:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"1910:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1846:58:19"},"nodeType":"YulFunctionCall","src":"1846:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1839:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1965:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1972:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1961:3:19"},"nodeType":"YulFunctionCall","src":"1961:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"1979:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"1984:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1926:34:19"},"nodeType":"YulFunctionCall","src":"1926:65:19"},"nodeType":"YulExpressionStatement","src":"1926:65:19"},{"nodeType":"YulAssignment","src":"2000:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2011:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2038:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2016:21:19"},"nodeType":"YulFunctionCall","src":"2016:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2007:3:19"},"nodeType":"YulFunctionCall","src":"2007:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2000:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1748:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1755:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1763:3:19","type":""}],"src":"1675:377:19"},{"body":{"nodeType":"YulBlock","src":"2176:195:19","statements":[{"nodeType":"YulAssignment","src":"2186:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2198:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2209:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2194:3:19"},"nodeType":"YulFunctionCall","src":"2194:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2186:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2233:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2244:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:19"},"nodeType":"YulFunctionCall","src":"2229:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2252:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2258:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2248:3:19"},"nodeType":"YulFunctionCall","src":"2248:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2222:6:19"},"nodeType":"YulFunctionCall","src":"2222:47:19"},"nodeType":"YulExpressionStatement","src":"2222:47:19"},{"nodeType":"YulAssignment","src":"2278:86:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2350:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"2359:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2286:63:19"},"nodeType":"YulFunctionCall","src":"2286:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2278:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2148:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2160:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2171:4:19","type":""}],"src":"2058:313:19"},{"body":{"nodeType":"YulBlock","src":"2422:81:19","statements":[{"nodeType":"YulAssignment","src":"2432:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2447:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2454:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2443:3:19"},"nodeType":"YulFunctionCall","src":"2443:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2432:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2404:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2414:7:19","type":""}],"src":"2377:126:19"},{"body":{"nodeType":"YulBlock","src":"2554:51:19","statements":[{"nodeType":"YulAssignment","src":"2564:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2593:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2575:17:19"},"nodeType":"YulFunctionCall","src":"2575:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2564:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2536:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2546:7:19","type":""}],"src":"2509:96:19"},{"body":{"nodeType":"YulBlock","src":"2654:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"2711:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2720:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2723:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2713:6:19"},"nodeType":"YulFunctionCall","src":"2713:12:19"},"nodeType":"YulExpressionStatement","src":"2713:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2677:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2702:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2684:17:19"},"nodeType":"YulFunctionCall","src":"2684:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2674:2:19"},"nodeType":"YulFunctionCall","src":"2674:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2667:6:19"},"nodeType":"YulFunctionCall","src":"2667:43:19"},"nodeType":"YulIf","src":"2664:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2647:5:19","type":""}],"src":"2611:122:19"},{"body":{"nodeType":"YulBlock","src":"2791:87:19","statements":[{"nodeType":"YulAssignment","src":"2801:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2823:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2810:12:19"},"nodeType":"YulFunctionCall","src":"2810:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2801:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2866:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2839:26:19"},"nodeType":"YulFunctionCall","src":"2839:33:19"},"nodeType":"YulExpressionStatement","src":"2839:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2769:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2777:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2785:5:19","type":""}],"src":"2739:139:19"},{"body":{"nodeType":"YulBlock","src":"2929:32:19","statements":[{"nodeType":"YulAssignment","src":"2939:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"2950:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2939:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2911:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2921:7:19","type":""}],"src":"2884:77:19"},{"body":{"nodeType":"YulBlock","src":"3010:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"3067:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3076:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3079:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3069:6:19"},"nodeType":"YulFunctionCall","src":"3069:12:19"},"nodeType":"YulExpressionStatement","src":"3069:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3033:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3058:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3040:17:19"},"nodeType":"YulFunctionCall","src":"3040:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3030:2:19"},"nodeType":"YulFunctionCall","src":"3030:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3023:6:19"},"nodeType":"YulFunctionCall","src":"3023:43:19"},"nodeType":"YulIf","src":"3020:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3003:5:19","type":""}],"src":"2967:122:19"},{"body":{"nodeType":"YulBlock","src":"3147:87:19","statements":[{"nodeType":"YulAssignment","src":"3157:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3179:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3166:12:19"},"nodeType":"YulFunctionCall","src":"3166:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3157:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3222:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3195:26:19"},"nodeType":"YulFunctionCall","src":"3195:33:19"},"nodeType":"YulExpressionStatement","src":"3195:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3125:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"3133:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3141:5:19","type":""}],"src":"3095:139:19"},{"body":{"nodeType":"YulBlock","src":"3323:391:19","statements":[{"body":{"nodeType":"YulBlock","src":"3369:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3371:77:19"},"nodeType":"YulFunctionCall","src":"3371:79:19"},"nodeType":"YulExpressionStatement","src":"3371:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3344:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3353:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3340:3:19"},"nodeType":"YulFunctionCall","src":"3340:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3365:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3336:3:19"},"nodeType":"YulFunctionCall","src":"3336:32:19"},"nodeType":"YulIf","src":"3333:119:19"},{"nodeType":"YulBlock","src":"3462:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3477:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3491:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3481:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3506:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3541:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3552:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3537:3:19"},"nodeType":"YulFunctionCall","src":"3537:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3561:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3516:20:19"},"nodeType":"YulFunctionCall","src":"3516:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3506:6:19"}]}]},{"nodeType":"YulBlock","src":"3589:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3604:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3618:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3608:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3634:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3669:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3680:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3665:3:19"},"nodeType":"YulFunctionCall","src":"3665:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3689:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3644:20:19"},"nodeType":"YulFunctionCall","src":"3644:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3634:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3285:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3296:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3308:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3316:6:19","type":""}],"src":"3240:474:19"},{"body":{"nodeType":"YulBlock","src":"3762:48:19","statements":[{"nodeType":"YulAssignment","src":"3772:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3797:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3790:6:19"},"nodeType":"YulFunctionCall","src":"3790:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3783:6:19"},"nodeType":"YulFunctionCall","src":"3783:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3772:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3744:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3754:7:19","type":""}],"src":"3720:90:19"},{"body":{"nodeType":"YulBlock","src":"3875:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3892:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3912:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3897:14:19"},"nodeType":"YulFunctionCall","src":"3897:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3885:6:19"},"nodeType":"YulFunctionCall","src":"3885:34:19"},"nodeType":"YulExpressionStatement","src":"3885:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3863:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3870:3:19","type":""}],"src":"3816:109:19"},{"body":{"nodeType":"YulBlock","src":"4023:118:19","statements":[{"nodeType":"YulAssignment","src":"4033:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4045:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4056:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4041:3:19"},"nodeType":"YulFunctionCall","src":"4041:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4033:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4107:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4120:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4131:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4116:3:19"},"nodeType":"YulFunctionCall","src":"4116:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4069:37:19"},"nodeType":"YulFunctionCall","src":"4069:65:19"},"nodeType":"YulExpressionStatement","src":"4069:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3995:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4007:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4018:4:19","type":""}],"src":"3931:210:19"},{"body":{"nodeType":"YulBlock","src":"4212:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4229:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4252:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4234:17:19"},"nodeType":"YulFunctionCall","src":"4234:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4222:6:19"},"nodeType":"YulFunctionCall","src":"4222:37:19"},"nodeType":"YulExpressionStatement","src":"4222:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4200:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4207:3:19","type":""}],"src":"4147:118:19"},{"body":{"nodeType":"YulBlock","src":"4369:124:19","statements":[{"nodeType":"YulAssignment","src":"4379:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4391:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4402:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4387:3:19"},"nodeType":"YulFunctionCall","src":"4387:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4379:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4459:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4472:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4483:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4468:3:19"},"nodeType":"YulFunctionCall","src":"4468:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4415:43:19"},"nodeType":"YulFunctionCall","src":"4415:71:19"},"nodeType":"YulExpressionStatement","src":"4415:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4341:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4353:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4364:4:19","type":""}],"src":"4271:222:19"},{"body":{"nodeType":"YulBlock","src":"4552:51:19","statements":[{"nodeType":"YulAssignment","src":"4562:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4591:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4573:17:19"},"nodeType":"YulFunctionCall","src":"4573:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4562:7:19"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4534:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4544:7:19","type":""}],"src":"4499:104:19"},{"body":{"nodeType":"YulBlock","src":"4660:87:19","statements":[{"body":{"nodeType":"YulBlock","src":"4725:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4734:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4737:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4727:6:19"},"nodeType":"YulFunctionCall","src":"4727:12:19"},"nodeType":"YulExpressionStatement","src":"4727:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4683:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4716:5:19"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"4690:25:19"},"nodeType":"YulFunctionCall","src":"4690:32:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4680:2:19"},"nodeType":"YulFunctionCall","src":"4680:43:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4673:6:19"},"nodeType":"YulFunctionCall","src":"4673:51:19"},"nodeType":"YulIf","src":"4670:71:19"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4653:5:19","type":""}],"src":"4609:138:19"},{"body":{"nodeType":"YulBlock","src":"4813:95:19","statements":[{"nodeType":"YulAssignment","src":"4823:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4845:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4832:12:19"},"nodeType":"YulFunctionCall","src":"4832:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4823:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4896:5:19"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"4861:34:19"},"nodeType":"YulFunctionCall","src":"4861:41:19"},"nodeType":"YulExpressionStatement","src":"4861:41:19"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4791:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"4799:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4807:5:19","type":""}],"src":"4753:155:19"},{"body":{"nodeType":"YulBlock","src":"5005:399:19","statements":[{"body":{"nodeType":"YulBlock","src":"5051:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5053:77:19"},"nodeType":"YulFunctionCall","src":"5053:79:19"},"nodeType":"YulExpressionStatement","src":"5053:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5026:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5035:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5022:3:19"},"nodeType":"YulFunctionCall","src":"5022:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"5047:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5018:3:19"},"nodeType":"YulFunctionCall","src":"5018:32:19"},"nodeType":"YulIf","src":"5015:119:19"},{"nodeType":"YulBlock","src":"5144:125:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5159:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5173:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5163:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5188:71:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5231:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5242:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5227:3:19"},"nodeType":"YulFunctionCall","src":"5227:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5251:7:19"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"5198:28:19"},"nodeType":"YulFunctionCall","src":"5198:61:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5188:6:19"}]}]},{"nodeType":"YulBlock","src":"5279:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5294:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5308:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5298:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5324:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5359:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5370:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5355:3:19"},"nodeType":"YulFunctionCall","src":"5355:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5379:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5334:20:19"},"nodeType":"YulFunctionCall","src":"5334:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5324:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4967:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4978:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4990:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4998:6:19","type":""}],"src":"4914:490:19"},{"body":{"nodeType":"YulBlock","src":"5510:519:19","statements":[{"body":{"nodeType":"YulBlock","src":"5556:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5558:77:19"},"nodeType":"YulFunctionCall","src":"5558:79:19"},"nodeType":"YulExpressionStatement","src":"5558:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5531:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5540:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5527:3:19"},"nodeType":"YulFunctionCall","src":"5527:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5523:3:19"},"nodeType":"YulFunctionCall","src":"5523:32:19"},"nodeType":"YulIf","src":"5520:119:19"},{"nodeType":"YulBlock","src":"5649:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5664:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5678:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5668:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5693:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5728:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5739:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5724:3:19"},"nodeType":"YulFunctionCall","src":"5724:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5748:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5703:20:19"},"nodeType":"YulFunctionCall","src":"5703:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5693:6:19"}]}]},{"nodeType":"YulBlock","src":"5776:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5791:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5805:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5795:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5821:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5856:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5867:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5852:3:19"},"nodeType":"YulFunctionCall","src":"5852:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5876:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5831:20:19"},"nodeType":"YulFunctionCall","src":"5831:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5821:6:19"}]}]},{"nodeType":"YulBlock","src":"5904:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5919:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5933:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5923:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5949:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5984:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5995:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5980:3:19"},"nodeType":"YulFunctionCall","src":"5980:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6004:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5959:20:19"},"nodeType":"YulFunctionCall","src":"5959:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5949:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5464:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5475:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5487:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5495:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5503:6:19","type":""}],"src":"5410:619:19"},{"body":{"nodeType":"YulBlock","src":"6078:43:19","statements":[{"nodeType":"YulAssignment","src":"6088:27:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6103:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6110:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6099:3:19"},"nodeType":"YulFunctionCall","src":"6099:16:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6088:7:19"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6060:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6070:7:19","type":""}],"src":"6035:86:19"},{"body":{"nodeType":"YulBlock","src":"6188:51:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6205:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6226:5:19"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6210:15:19"},"nodeType":"YulFunctionCall","src":"6210:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6198:6:19"},"nodeType":"YulFunctionCall","src":"6198:35:19"},"nodeType":"YulExpressionStatement","src":"6198:35:19"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6176:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6183:3:19","type":""}],"src":"6127:112:19"},{"body":{"nodeType":"YulBlock","src":"6339:120:19","statements":[{"nodeType":"YulAssignment","src":"6349:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6361:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6372:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6357:3:19"},"nodeType":"YulFunctionCall","src":"6357:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6349:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6425:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6438:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6449:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6434:3:19"},"nodeType":"YulFunctionCall","src":"6434:17:19"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"6385:39:19"},"nodeType":"YulFunctionCall","src":"6385:67:19"},"nodeType":"YulExpressionStatement","src":"6385:67:19"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6311:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6323:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6334:4:19","type":""}],"src":"6245:214:19"},{"body":{"nodeType":"YulBlock","src":"6531:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"6577:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6579:77:19"},"nodeType":"YulFunctionCall","src":"6579:79:19"},"nodeType":"YulExpressionStatement","src":"6579:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6552:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6561:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6548:3:19"},"nodeType":"YulFunctionCall","src":"6548:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"6573:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6544:3:19"},"nodeType":"YulFunctionCall","src":"6544:32:19"},"nodeType":"YulIf","src":"6541:119:19"},{"nodeType":"YulBlock","src":"6670:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6685:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6699:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6689:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6714:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6749:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6760:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6745:3:19"},"nodeType":"YulFunctionCall","src":"6745:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6769:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6724:20:19"},"nodeType":"YulFunctionCall","src":"6724:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6714:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6501:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6512:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6524:6:19","type":""}],"src":"6465:329:19"},{"body":{"nodeType":"YulBlock","src":"6865:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6882:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6905:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6887:17:19"},"nodeType":"YulFunctionCall","src":"6887:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6875:6:19"},"nodeType":"YulFunctionCall","src":"6875:37:19"},"nodeType":"YulExpressionStatement","src":"6875:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6853:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6860:3:19","type":""}],"src":"6800:118:19"},{"body":{"nodeType":"YulBlock","src":"7022:124:19","statements":[{"nodeType":"YulAssignment","src":"7032:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7044:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7055:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7040:3:19"},"nodeType":"YulFunctionCall","src":"7040:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7032:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7112:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7125:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7136:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7121:3:19"},"nodeType":"YulFunctionCall","src":"7121:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7068:43:19"},"nodeType":"YulFunctionCall","src":"7068:71:19"},"nodeType":"YulExpressionStatement","src":"7068:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6994:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7006:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7017:4:19","type":""}],"src":"6924:222:19"},{"body":{"nodeType":"YulBlock","src":"7210:56:19","statements":[{"body":{"nodeType":"YulBlock","src":"7244:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7253:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7256:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7246:6:19"},"nodeType":"YulFunctionCall","src":"7246:12:19"},"nodeType":"YulExpressionStatement","src":"7246:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7233:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7240:1:19","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7230:2:19"},"nodeType":"YulFunctionCall","src":"7230:12:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7223:6:19"},"nodeType":"YulFunctionCall","src":"7223:20:19"},"nodeType":"YulIf","src":"7220:40:19"}]},"name":"validator_revert_t_enum$_PostOpMode_$1617","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7203:5:19","type":""}],"src":"7152:114:19"},{"body":{"nodeType":"YulBlock","src":"7339:102:19","statements":[{"nodeType":"YulAssignment","src":"7349:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7371:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7358:12:19"},"nodeType":"YulFunctionCall","src":"7358:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7349:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7429:5:19"}],"functionName":{"name":"validator_revert_t_enum$_PostOpMode_$1617","nodeType":"YulIdentifier","src":"7387:41:19"},"nodeType":"YulFunctionCall","src":"7387:48:19"},"nodeType":"YulExpressionStatement","src":"7387:48:19"}]},"name":"abi_decode_t_enum$_PostOpMode_$1617","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7317:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"7325:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7333:5:19","type":""}],"src":"7272:169:19"},{"body":{"nodeType":"YulBlock","src":"7536:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7553:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7556:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7546:6:19"},"nodeType":"YulFunctionCall","src":"7546:12:19"},"nodeType":"YulExpressionStatement","src":"7546:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"7447:117:19"},{"body":{"nodeType":"YulBlock","src":"7659:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7676:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7679:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7669:6:19"},"nodeType":"YulFunctionCall","src":"7669:12:19"},"nodeType":"YulExpressionStatement","src":"7669:12:19"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"7570:117:19"},{"body":{"nodeType":"YulBlock","src":"7782:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7799:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7802:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7792:6:19"},"nodeType":"YulFunctionCall","src":"7792:12:19"},"nodeType":"YulExpressionStatement","src":"7792:12:19"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7693:117:19"},{"body":{"nodeType":"YulBlock","src":"7903:478:19","statements":[{"body":{"nodeType":"YulBlock","src":"7952:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7954:77:19"},"nodeType":"YulFunctionCall","src":"7954:79:19"},"nodeType":"YulExpressionStatement","src":"7954:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7931:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"7939:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7927:3:19"},"nodeType":"YulFunctionCall","src":"7927:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"7946:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7923:3:19"},"nodeType":"YulFunctionCall","src":"7923:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7916:6:19"},"nodeType":"YulFunctionCall","src":"7916:35:19"},"nodeType":"YulIf","src":"7913:122:19"},{"nodeType":"YulAssignment","src":"8044:30:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8067:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8054:12:19"},"nodeType":"YulFunctionCall","src":"8054:20:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8044:6:19"}]},{"body":{"nodeType":"YulBlock","src":"8117:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"8119:77:19"},"nodeType":"YulFunctionCall","src":"8119:79:19"},"nodeType":"YulExpressionStatement","src":"8119:79:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8089:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8097:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8086:2:19"},"nodeType":"YulFunctionCall","src":"8086:30:19"},"nodeType":"YulIf","src":"8083:117:19"},{"nodeType":"YulAssignment","src":"8209:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8225:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8233:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8221:3:19"},"nodeType":"YulFunctionCall","src":"8221:17:19"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8209:8:19"}]},{"body":{"nodeType":"YulBlock","src":"8292:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"8294:77:19"},"nodeType":"YulFunctionCall","src":"8294:79:19"},"nodeType":"YulExpressionStatement","src":"8294:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8257:8:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8271:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8279:4:19","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8267:3:19"},"nodeType":"YulFunctionCall","src":"8267:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8253:3:19"},"nodeType":"YulFunctionCall","src":"8253:32:19"},{"name":"end","nodeType":"YulIdentifier","src":"8287:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8250:2:19"},"nodeType":"YulFunctionCall","src":"8250:41:19"},"nodeType":"YulIf","src":"8247:128:19"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7870:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"7878:3:19","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"7886:8:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"7896:6:19","type":""}],"src":"7829:552:19"},{"body":{"nodeType":"YulBlock","src":"8521:713:19","statements":[{"body":{"nodeType":"YulBlock","src":"8567:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8569:77:19"},"nodeType":"YulFunctionCall","src":"8569:79:19"},"nodeType":"YulExpressionStatement","src":"8569:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8542:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"8551:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8538:3:19"},"nodeType":"YulFunctionCall","src":"8538:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"8563:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8534:3:19"},"nodeType":"YulFunctionCall","src":"8534:32:19"},"nodeType":"YulIf","src":"8531:119:19"},{"nodeType":"YulBlock","src":"8660:132:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8675:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8689:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8679:6:19","type":""}]},{"nodeType":"YulAssignment","src":"8704:78:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8754:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8765:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8750:3:19"},"nodeType":"YulFunctionCall","src":"8750:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8774:7:19"}],"functionName":{"name":"abi_decode_t_enum$_PostOpMode_$1617","nodeType":"YulIdentifier","src":"8714:35:19"},"nodeType":"YulFunctionCall","src":"8714:68:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8704:6:19"}]}]},{"nodeType":"YulBlock","src":"8802:297:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8817:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8848:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8859:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8844:3:19"},"nodeType":"YulFunctionCall","src":"8844:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8831:12:19"},"nodeType":"YulFunctionCall","src":"8831:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8821:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"8910:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8912:77:19"},"nodeType":"YulFunctionCall","src":"8912:79:19"},"nodeType":"YulExpressionStatement","src":"8912:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8882:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8890:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8879:2:19"},"nodeType":"YulFunctionCall","src":"8879:30:19"},"nodeType":"YulIf","src":"8876:117:19"},{"nodeType":"YulAssignment","src":"9007:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9061:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"9072:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9057:3:19"},"nodeType":"YulFunctionCall","src":"9057:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9081:7:19"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"9025:31:19"},"nodeType":"YulFunctionCall","src":"9025:64:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9007:6:19"},{"name":"value2","nodeType":"YulIdentifier","src":"9015:6:19"}]}]},{"nodeType":"YulBlock","src":"9109:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9124:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9138:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9128:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9154:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9189:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"9200:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9185:3:19"},"nodeType":"YulFunctionCall","src":"9185:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9209:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9164:20:19"},"nodeType":"YulFunctionCall","src":"9164:53:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9154:6:19"}]}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$1617t_bytes_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8467:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8478:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8490:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8498:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8506:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8514:6:19","type":""}],"src":"8387:847:19"},{"body":{"nodeType":"YulBlock","src":"9272:28:19","statements":[{"nodeType":"YulAssignment","src":"9282:12:19","value":{"name":"value","nodeType":"YulIdentifier","src":"9289:5:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9282:3:19"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9258:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9268:3:19","type":""}],"src":"9240:60:19"},{"body":{"nodeType":"YulBlock","src":"9366:82:19","statements":[{"nodeType":"YulAssignment","src":"9376:66:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9434:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9416:17:19"},"nodeType":"YulFunctionCall","src":"9416:24:19"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"9407:8:19"},"nodeType":"YulFunctionCall","src":"9407:34:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9389:17:19"},"nodeType":"YulFunctionCall","src":"9389:53:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9376:9:19"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9346:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9356:9:19","type":""}],"src":"9306:142:19"},{"body":{"nodeType":"YulBlock","src":"9514:66:19","statements":[{"nodeType":"YulAssignment","src":"9524:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9568:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"9537:30:19"},"nodeType":"YulFunctionCall","src":"9537:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9524:9:19"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9494:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9504:9:19","type":""}],"src":"9454:126:19"},{"body":{"nodeType":"YulBlock","src":"9666:66:19","statements":[{"nodeType":"YulAssignment","src":"9676:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9720:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"9689:30:19"},"nodeType":"YulFunctionCall","src":"9689:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9676:9:19"}]}]},"name":"convert_t_contract$_IEntryPoint_$1579_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9646:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9656:9:19","type":""}],"src":"9586:146:19"},{"body":{"nodeType":"YulBlock","src":"9823:86:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9840:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9896:5:19"}],"functionName":{"name":"convert_t_contract$_IEntryPoint_$1579_to_t_address","nodeType":"YulIdentifier","src":"9845:50:19"},"nodeType":"YulFunctionCall","src":"9845:57:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9833:6:19"},"nodeType":"YulFunctionCall","src":"9833:70:19"},"nodeType":"YulExpressionStatement","src":"9833:70:19"}]},"name":"abi_encode_t_contract$_IEntryPoint_$1579_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9811:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9818:3:19","type":""}],"src":"9738:171:19"},{"body":{"nodeType":"YulBlock","src":"10033:144:19","statements":[{"nodeType":"YulAssignment","src":"10043:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10055:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10066:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10051:3:19"},"nodeType":"YulFunctionCall","src":"10051:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10043:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10143:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10156:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10167:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10152:3:19"},"nodeType":"YulFunctionCall","src":"10152:17:19"}],"functionName":{"name":"abi_encode_t_contract$_IEntryPoint_$1579_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10079:63:19"},"nodeType":"YulFunctionCall","src":"10079:91:19"},"nodeType":"YulExpressionStatement","src":"10079:91:19"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$1579__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10005:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10017:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10028:4:19","type":""}],"src":"9915:262:19"},{"body":{"nodeType":"YulBlock","src":"10257:271:19","statements":[{"body":{"nodeType":"YulBlock","src":"10303:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10305:77:19"},"nodeType":"YulFunctionCall","src":"10305:79:19"},"nodeType":"YulExpressionStatement","src":"10305:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10278:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"10287:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10274:3:19"},"nodeType":"YulFunctionCall","src":"10274:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"10299:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10270:3:19"},"nodeType":"YulFunctionCall","src":"10270:32:19"},"nodeType":"YulIf","src":"10267:119:19"},{"nodeType":"YulBlock","src":"10396:125:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10411:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10425:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10415:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10440:71:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10483:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10494:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10479:3:19"},"nodeType":"YulFunctionCall","src":"10479:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10503:7:19"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"10450:28:19"},"nodeType":"YulFunctionCall","src":"10450:61:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10440:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10227:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10238:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10250:6:19","type":""}],"src":"10183:345:19"},{"body":{"nodeType":"YulBlock","src":"10617:391:19","statements":[{"body":{"nodeType":"YulBlock","src":"10663:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10665:77:19"},"nodeType":"YulFunctionCall","src":"10665:79:19"},"nodeType":"YulExpressionStatement","src":"10665:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10638:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"10647:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10634:3:19"},"nodeType":"YulFunctionCall","src":"10634:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"10659:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10630:3:19"},"nodeType":"YulFunctionCall","src":"10630:32:19"},"nodeType":"YulIf","src":"10627:119:19"},{"nodeType":"YulBlock","src":"10756:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10771:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10785:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10775:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10800:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10835:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10846:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10831:3:19"},"nodeType":"YulFunctionCall","src":"10831:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10855:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10810:20:19"},"nodeType":"YulFunctionCall","src":"10810:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10800:6:19"}]}]},{"nodeType":"YulBlock","src":"10883:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10898:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10912:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10902:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10928:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10963:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10974:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10959:3:19"},"nodeType":"YulFunctionCall","src":"10959:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10983:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10938:20:19"},"nodeType":"YulFunctionCall","src":"10938:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10928:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10579:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10590:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10602:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10610:6:19","type":""}],"src":"10534:474:19"},{"body":{"nodeType":"YulBlock","src":"11103:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11120:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11123:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11113:6:19"},"nodeType":"YulFunctionCall","src":"11113:12:19"},"nodeType":"YulExpressionStatement","src":"11113:12:19"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"11014:117:19"},{"body":{"nodeType":"YulBlock","src":"11250:153:19","statements":[{"body":{"nodeType":"YulBlock","src":"11290:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"11292:77:19"},"nodeType":"YulFunctionCall","src":"11292:79:19"},"nodeType":"YulExpressionStatement","src":"11292:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"11271:3:19"},{"name":"offset","nodeType":"YulIdentifier","src":"11276:6:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11267:3:19"},"nodeType":"YulFunctionCall","src":"11267:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"11285:3:19","type":"","value":"352"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11263:3:19"},"nodeType":"YulFunctionCall","src":"11263:26:19"},"nodeType":"YulIf","src":"11260:113:19"},{"nodeType":"YulAssignment","src":"11382:15:19","value":{"name":"offset","nodeType":"YulIdentifier","src":"11391:6:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11382:5:19"}]}]},"name":"abi_decode_t_struct$_UserOperation_$1774_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11228:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"11236:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11244:5:19","type":""}],"src":"11165:238:19"},{"body":{"nodeType":"YulBlock","src":"11454:32:19","statements":[{"nodeType":"YulAssignment","src":"11464:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"11475:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11464:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11436:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11446:7:19","type":""}],"src":"11409:77:19"},{"body":{"nodeType":"YulBlock","src":"11535:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"11592:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11601:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11604:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11594:6:19"},"nodeType":"YulFunctionCall","src":"11594:12:19"},"nodeType":"YulExpressionStatement","src":"11594:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11558:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11583:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11565:17:19"},"nodeType":"YulFunctionCall","src":"11565:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11555:2:19"},"nodeType":"YulFunctionCall","src":"11555:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11548:6:19"},"nodeType":"YulFunctionCall","src":"11548:43:19"},"nodeType":"YulIf","src":"11545:63:19"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11528:5:19","type":""}],"src":"11492:122:19"},{"body":{"nodeType":"YulBlock","src":"11672:87:19","statements":[{"nodeType":"YulAssignment","src":"11682:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11704:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11691:12:19"},"nodeType":"YulFunctionCall","src":"11691:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11682:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11747:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"11720:26:19"},"nodeType":"YulFunctionCall","src":"11720:33:19"},"nodeType":"YulExpressionStatement","src":"11720:33:19"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11650:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"11658:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11666:5:19","type":""}],"src":"11620:139:19"},{"body":{"nodeType":"YulBlock","src":"11898:712:19","statements":[{"body":{"nodeType":"YulBlock","src":"11944:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11946:77:19"},"nodeType":"YulFunctionCall","src":"11946:79:19"},"nodeType":"YulExpressionStatement","src":"11946:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11919:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11928:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11915:3:19"},"nodeType":"YulFunctionCall","src":"11915:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"11940:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11911:3:19"},"nodeType":"YulFunctionCall","src":"11911:32:19"},"nodeType":"YulIf","src":"11908:119:19"},{"nodeType":"YulBlock","src":"12037:310:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12052:45:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12094:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:19"},"nodeType":"YulFunctionCall","src":"12079:17:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12066:12:19"},"nodeType":"YulFunctionCall","src":"12066:31:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12056:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"12144:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12146:77:19"},"nodeType":"YulFunctionCall","src":"12146:79:19"},"nodeType":"YulExpressionStatement","src":"12146:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12116:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12124:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12113:2:19"},"nodeType":"YulFunctionCall","src":"12113:30:19"},"nodeType":"YulIf","src":"12110:117:19"},{"nodeType":"YulAssignment","src":"12241:96:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12309:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12320:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12305:3:19"},"nodeType":"YulFunctionCall","src":"12305:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12329:7:19"}],"functionName":{"name":"abi_decode_t_struct$_UserOperation_$1774_calldata_ptr","nodeType":"YulIdentifier","src":"12251:53:19"},"nodeType":"YulFunctionCall","src":"12251:86:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12241:6:19"}]}]},{"nodeType":"YulBlock","src":"12357:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12372:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12386:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12376:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12402:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12437:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12448:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12433:3:19"},"nodeType":"YulFunctionCall","src":"12433:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12457:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12412:20:19"},"nodeType":"YulFunctionCall","src":"12412:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12402:6:19"}]}]},{"nodeType":"YulBlock","src":"12485:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12500:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12514:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12504:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12530:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12565:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12576:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12561:3:19"},"nodeType":"YulFunctionCall","src":"12561:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12585:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12540:20:19"},"nodeType":"YulFunctionCall","src":"12540:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12530:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_UserOperation_$1774_calldata_ptrt_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11852:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11863:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11875:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11883:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11891:6:19","type":""}],"src":"11765:845:19"},{"body":{"nodeType":"YulBlock","src":"12674:40:19","statements":[{"nodeType":"YulAssignment","src":"12685:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12701:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12695:5:19"},"nodeType":"YulFunctionCall","src":"12695:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12685:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12657:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12667:6:19","type":""}],"src":"12616:98:19"},{"body":{"nodeType":"YulBlock","src":"12815:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12832:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"12837:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12825:6:19"},"nodeType":"YulFunctionCall","src":"12825:19:19"},"nodeType":"YulExpressionStatement","src":"12825:19:19"},{"nodeType":"YulAssignment","src":"12853:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12872:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12877:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12868:3:19"},"nodeType":"YulFunctionCall","src":"12868:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12853:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12787:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"12792:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12803:11:19","type":""}],"src":"12720:168:19"},{"body":{"nodeType":"YulBlock","src":"12984:283:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12994:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13040:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13008:31:19"},"nodeType":"YulFunctionCall","src":"13008:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12998:6:19","type":""}]},{"nodeType":"YulAssignment","src":"13055:77:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13120:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"13125:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13062:57:19"},"nodeType":"YulFunctionCall","src":"13062:70:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13055:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13180:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"13187:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13176:3:19"},"nodeType":"YulFunctionCall","src":"13176:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"13194:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"13199:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13141:34:19"},"nodeType":"YulFunctionCall","src":"13141:65:19"},"nodeType":"YulExpressionStatement","src":"13141:65:19"},{"nodeType":"YulAssignment","src":"13215:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13226:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13253:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13231:21:19"},"nodeType":"YulFunctionCall","src":"13231:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13222:3:19"},"nodeType":"YulFunctionCall","src":"13222:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13215:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12965:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12972:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12980:3:19","type":""}],"src":"12894:373:19"},{"body":{"nodeType":"YulBlock","src":"13417:275:19","statements":[{"nodeType":"YulAssignment","src":"13427:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13439:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13450:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13435:3:19"},"nodeType":"YulFunctionCall","src":"13435:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13427:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13474:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13485:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13470:3:19"},"nodeType":"YulFunctionCall","src":"13470:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13493:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"13499:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13489:3:19"},"nodeType":"YulFunctionCall","src":"13489:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13463:6:19"},"nodeType":"YulFunctionCall","src":"13463:47:19"},"nodeType":"YulExpressionStatement","src":"13463:47:19"},{"nodeType":"YulAssignment","src":"13519:84:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13589:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"13598:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13527:61:19"},"nodeType":"YulFunctionCall","src":"13527:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13519:4:19"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13657:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13670:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13681:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13666:3:19"},"nodeType":"YulFunctionCall","src":"13666:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13613:43:19"},"nodeType":"YulFunctionCall","src":"13613:72:19"},"nodeType":"YulExpressionStatement","src":"13613:72:19"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13381:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13393:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13401:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13412:4:19","type":""}],"src":"13273:419:19"},{"body":{"nodeType":"YulBlock","src":"13761:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13778:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13800:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"13783:16:19"},"nodeType":"YulFunctionCall","src":"13783:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13771:6:19"},"nodeType":"YulFunctionCall","src":"13771:36:19"},"nodeType":"YulExpressionStatement","src":"13771:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13749:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13756:3:19","type":""}],"src":"13698:115:19"},{"body":{"nodeType":"YulBlock","src":"13915:122:19","statements":[{"nodeType":"YulAssignment","src":"13925:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13937:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13948:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13933:3:19"},"nodeType":"YulFunctionCall","src":"13933:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13925:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14003:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14016:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14027:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14012:3:19"},"nodeType":"YulFunctionCall","src":"14012:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"13961:41:19"},"nodeType":"YulFunctionCall","src":"13961:69:19"},"nodeType":"YulExpressionStatement","src":"13961:69:19"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13887:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13899:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13910:4:19","type":""}],"src":"13819:218:19"},{"body":{"nodeType":"YulBlock","src":"14071:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14088:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14091:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14081:6:19"},"nodeType":"YulFunctionCall","src":"14081:88:19"},"nodeType":"YulExpressionStatement","src":"14081:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14185:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14188:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14178:6:19"},"nodeType":"YulFunctionCall","src":"14178:15:19"},"nodeType":"YulExpressionStatement","src":"14178:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14209:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14212:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14202:6:19"},"nodeType":"YulFunctionCall","src":"14202:15:19"},"nodeType":"YulExpressionStatement","src":"14202:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"14043:180:19"},{"body":{"nodeType":"YulBlock","src":"14280:269:19","statements":[{"nodeType":"YulAssignment","src":"14290:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14304:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"14310:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14300:3:19"},"nodeType":"YulFunctionCall","src":"14300:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14290:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"14321:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14351:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"14357:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14347:3:19"},"nodeType":"YulFunctionCall","src":"14347:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14325:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"14398:51:19","statements":[{"nodeType":"YulAssignment","src":"14412:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14426:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"14434:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14422:3:19"},"nodeType":"YulFunctionCall","src":"14422:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14412:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14378:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14371:6:19"},"nodeType":"YulFunctionCall","src":"14371:26:19"},"nodeType":"YulIf","src":"14368:81:19"},{"body":{"nodeType":"YulBlock","src":"14501:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"14515:16:19"},"nodeType":"YulFunctionCall","src":"14515:18:19"},"nodeType":"YulExpressionStatement","src":"14515:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14465:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14488:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"14496:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14485:2:19"},"nodeType":"YulFunctionCall","src":"14485:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14462:2:19"},"nodeType":"YulFunctionCall","src":"14462:38:19"},"nodeType":"YulIf","src":"14459:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14264:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14273:6:19","type":""}],"src":"14229:320:19"},{"body":{"nodeType":"YulBlock","src":"14636:61:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14653:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14684:5:19"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"14658:25:19"},"nodeType":"YulFunctionCall","src":"14658:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14646:6:19"},"nodeType":"YulFunctionCall","src":"14646:45:19"},"nodeType":"YulExpressionStatement","src":"14646:45:19"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14624:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14631:3:19","type":""}],"src":"14555:142:19"},{"body":{"nodeType":"YulBlock","src":"14845:222:19","statements":[{"nodeType":"YulAssignment","src":"14855:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14867:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14878:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14863:3:19"},"nodeType":"YulFunctionCall","src":"14863:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14855:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14951:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14964:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14975:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14960:3:19"},"nodeType":"YulFunctionCall","src":"14960:17:19"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"14891:59:19"},"nodeType":"YulFunctionCall","src":"14891:87:19"},"nodeType":"YulExpressionStatement","src":"14891:87:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15032:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15045:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15056:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15041:3:19"},"nodeType":"YulFunctionCall","src":"15041:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14988:43:19"},"nodeType":"YulFunctionCall","src":"14988:72:19"},"nodeType":"YulExpressionStatement","src":"14988:72:19"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14809:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14821:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14829:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14840:4:19","type":""}],"src":"14703:364:19"},{"body":{"nodeType":"YulBlock","src":"15187:140:19","statements":[{"nodeType":"YulAssignment","src":"15197:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15209:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15220:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15205:3:19"},"nodeType":"YulFunctionCall","src":"15205:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15197:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15293:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15306:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15317:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15302:3:19"},"nodeType":"YulFunctionCall","src":"15302:17:19"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"15233:59:19"},"nodeType":"YulFunctionCall","src":"15233:87:19"},"nodeType":"YulExpressionStatement","src":"15233:87:19"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15159:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15171:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15182:4:19","type":""}],"src":"15073:254:19"},{"body":{"nodeType":"YulBlock","src":"15396:80:19","statements":[{"nodeType":"YulAssignment","src":"15406:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15421:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15415:5:19"},"nodeType":"YulFunctionCall","src":"15415:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15406:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15464:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"15437:26:19"},"nodeType":"YulFunctionCall","src":"15437:33:19"},"nodeType":"YulExpressionStatement","src":"15437:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15374:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"15382:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15390:5:19","type":""}],"src":"15333:143:19"},{"body":{"nodeType":"YulBlock","src":"15559:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"15605:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15607:77:19"},"nodeType":"YulFunctionCall","src":"15607:79:19"},"nodeType":"YulExpressionStatement","src":"15607:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15580:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15589:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15576:3:19"},"nodeType":"YulFunctionCall","src":"15576:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"15601:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15572:3:19"},"nodeType":"YulFunctionCall","src":"15572:32:19"},"nodeType":"YulIf","src":"15569:119:19"},{"nodeType":"YulBlock","src":"15698:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"15713:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"15727:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15717:6:19","type":""}]},{"nodeType":"YulAssignment","src":"15742:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15788:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"15799:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15784:3:19"},"nodeType":"YulFunctionCall","src":"15784:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15808:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"15752:31:19"},"nodeType":"YulFunctionCall","src":"15752:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15742:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15529:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15540:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15552:6:19","type":""}],"src":"15482:351:19"},{"body":{"nodeType":"YulBlock","src":"15993:288:19","statements":[{"nodeType":"YulAssignment","src":"16003:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16015:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16026:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16011:3:19"},"nodeType":"YulFunctionCall","src":"16011:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16003:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16083:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16096:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16107:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16092:3:19"},"nodeType":"YulFunctionCall","src":"16092:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16039:43:19"},"nodeType":"YulFunctionCall","src":"16039:71:19"},"nodeType":"YulExpressionStatement","src":"16039:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16164:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16177:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16188:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16173:3:19"},"nodeType":"YulFunctionCall","src":"16173:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16120:43:19"},"nodeType":"YulFunctionCall","src":"16120:72:19"},"nodeType":"YulExpressionStatement","src":"16120:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16246:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16259:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16270:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16255:3:19"},"nodeType":"YulFunctionCall","src":"16255:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16202:43:19"},"nodeType":"YulFunctionCall","src":"16202:72:19"},"nodeType":"YulExpressionStatement","src":"16202:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15949:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15961:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15969:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15977:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15988:4:19","type":""}],"src":"15839:442:19"},{"body":{"nodeType":"YulBlock","src":"16393:65:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16415:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"16423:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16411:3:19"},"nodeType":"YulFunctionCall","src":"16411:14:19"},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","kind":"string","nodeType":"YulLiteral","src":"16427:23:19","type":"","value":"Sender not EntryPoint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16404:6:19"},"nodeType":"YulFunctionCall","src":"16404:47:19"},"nodeType":"YulExpressionStatement","src":"16404:47:19"}]},"name":"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16385:6:19","type":""}],"src":"16287:171:19"},{"body":{"nodeType":"YulBlock","src":"16610:220:19","statements":[{"nodeType":"YulAssignment","src":"16620:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16686:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16691:2:19","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16627:58:19"},"nodeType":"YulFunctionCall","src":"16627:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16620:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16792:3:19"}],"functionName":{"name":"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","nodeType":"YulIdentifier","src":"16703:88:19"},"nodeType":"YulFunctionCall","src":"16703:93:19"},"nodeType":"YulExpressionStatement","src":"16703:93:19"},{"nodeType":"YulAssignment","src":"16805:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16816:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16821:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16812:3:19"},"nodeType":"YulFunctionCall","src":"16812:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16805:3:19"}]}]},"name":"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16598:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16606:3:19","type":""}],"src":"16464:366:19"},{"body":{"nodeType":"YulBlock","src":"17007:248:19","statements":[{"nodeType":"YulAssignment","src":"17017:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17029:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"17040:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17025:3:19"},"nodeType":"YulFunctionCall","src":"17025:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17017:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17064:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"17075:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17060:3:19"},"nodeType":"YulFunctionCall","src":"17060:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17083:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"17089:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17079:3:19"},"nodeType":"YulFunctionCall","src":"17079:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17053:6:19"},"nodeType":"YulFunctionCall","src":"17053:47:19"},"nodeType":"YulExpressionStatement","src":"17053:47:19"},{"nodeType":"YulAssignment","src":"17109:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17243:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17117:124:19"},"nodeType":"YulFunctionCall","src":"17117:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17109:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16987:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17002:4:19","type":""}],"src":"16836:419:19"},{"body":{"nodeType":"YulBlock","src":"17289:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17306:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17309:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17299:6:19"},"nodeType":"YulFunctionCall","src":"17299:88:19"},"nodeType":"YulExpressionStatement","src":"17299:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17403:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17406:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17396:6:19"},"nodeType":"YulFunctionCall","src":"17396:15:19"},"nodeType":"YulExpressionStatement","src":"17396:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17427:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17430:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17420:6:19"},"nodeType":"YulFunctionCall","src":"17420:15:19"},"nodeType":"YulExpressionStatement","src":"17420:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17261:180:19"},{"body":{"nodeType":"YulBlock","src":"17491:147:19","statements":[{"nodeType":"YulAssignment","src":"17501:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17524:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17506:17:19"},"nodeType":"YulFunctionCall","src":"17506:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17501:1:19"}]},{"nodeType":"YulAssignment","src":"17535:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17558:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17540:17:19"},"nodeType":"YulFunctionCall","src":"17540:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17535:1:19"}]},{"nodeType":"YulAssignment","src":"17569:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17580:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"17583:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17576:3:19"},"nodeType":"YulFunctionCall","src":"17576:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17569:3:19"}]},{"body":{"nodeType":"YulBlock","src":"17609:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17611:16:19"},"nodeType":"YulFunctionCall","src":"17611:18:19"},"nodeType":"YulExpressionStatement","src":"17611:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17601:1:19"},{"name":"sum","nodeType":"YulIdentifier","src":"17604:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17598:2:19"},"nodeType":"YulFunctionCall","src":"17598:10:19"},"nodeType":"YulIf","src":"17595:36:19"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17478:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"17481:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17487:3:19","type":""}],"src":"17447:191:19"},{"body":{"nodeType":"YulBlock","src":"17750:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17772:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"17780:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17768:3:19"},"nodeType":"YulFunctionCall","src":"17768:14:19"},{"hexValue":"546f6b656e5061796d61737465723a2067617320746f6f206c6f7720666f7220","kind":"string","nodeType":"YulLiteral","src":"17784:34:19","type":"","value":"TokenPaymaster: gas too low for "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17761:6:19"},"nodeType":"YulFunctionCall","src":"17761:58:19"},"nodeType":"YulExpressionStatement","src":"17761:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17840:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"17848:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17836:3:19"},"nodeType":"YulFunctionCall","src":"17836:15:19"},{"hexValue":"706f73744f70","kind":"string","nodeType":"YulLiteral","src":"17853:8:19","type":"","value":"postOp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17829:6:19"},"nodeType":"YulFunctionCall","src":"17829:33:19"},"nodeType":"YulExpressionStatement","src":"17829:33:19"}]},"name":"store_literal_in_memory_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17742:6:19","type":""}],"src":"17644:225:19"},{"body":{"nodeType":"YulBlock","src":"18021:220:19","statements":[{"nodeType":"YulAssignment","src":"18031:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18097:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18102:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18038:58:19"},"nodeType":"YulFunctionCall","src":"18038:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18031:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18203:3:19"}],"functionName":{"name":"store_literal_in_memory_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98","nodeType":"YulIdentifier","src":"18114:88:19"},"nodeType":"YulFunctionCall","src":"18114:93:19"},"nodeType":"YulExpressionStatement","src":"18114:93:19"},{"nodeType":"YulAssignment","src":"18216:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18227:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18232:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18223:3:19"},"nodeType":"YulFunctionCall","src":"18223:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18216:3:19"}]}]},"name":"abi_encode_t_stringliteral_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18009:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18017:3:19","type":""}],"src":"17875:366:19"},{"body":{"nodeType":"YulBlock","src":"18418:248:19","statements":[{"nodeType":"YulAssignment","src":"18428:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18440:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18451:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18436:3:19"},"nodeType":"YulFunctionCall","src":"18436:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18428:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18475:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18486:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18471:3:19"},"nodeType":"YulFunctionCall","src":"18471:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18494:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"18500:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18490:3:19"},"nodeType":"YulFunctionCall","src":"18490:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18464:6:19"},"nodeType":"YulFunctionCall","src":"18464:47:19"},"nodeType":"YulExpressionStatement","src":"18464:47:19"},{"nodeType":"YulAssignment","src":"18520:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18654:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18528:124:19"},"nodeType":"YulFunctionCall","src":"18528:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18520:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18398:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18413:4:19","type":""}],"src":"18247:419:19"},{"body":{"nodeType":"YulBlock","src":"18761:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18778:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18781:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18771:6:19"},"nodeType":"YulFunctionCall","src":"18771:12:19"},"nodeType":"YulExpressionStatement","src":"18771:12:19"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"18672:117:19"},{"body":{"nodeType":"YulBlock","src":"18884:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18901:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18904:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18894:6:19"},"nodeType":"YulFunctionCall","src":"18894:12:19"},"nodeType":"YulExpressionStatement","src":"18894:12:19"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"18795:117:19"},{"body":{"nodeType":"YulBlock","src":"19007:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19024:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19027:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19017:6:19"},"nodeType":"YulFunctionCall","src":"19017:12:19"},"nodeType":"YulExpressionStatement","src":"19017:12:19"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"18918:117:19"},{"body":{"nodeType":"YulBlock","src":"19131:634:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19141:51:19","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"19180:11:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19167:12:19"},"nodeType":"YulFunctionCall","src":"19167:25:19"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"19145:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"19286:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"19288:77:19"},"nodeType":"YulFunctionCall","src":"19288:79:19"},"nodeType":"YulExpressionStatement","src":"19288:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"19215:18:19"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"19243:12:19"},"nodeType":"YulFunctionCall","src":"19243:14:19"},{"name":"base_ref","nodeType":"YulIdentifier","src":"19259:8:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19239:3:19"},"nodeType":"YulFunctionCall","src":"19239:29:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19274:4:19","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"19280:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19270:3:19"},"nodeType":"YulFunctionCall","src":"19270:12:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19235:3:19"},"nodeType":"YulFunctionCall","src":"19235:48:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19211:3:19"},"nodeType":"YulFunctionCall","src":"19211:73:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19204:6:19"},"nodeType":"YulFunctionCall","src":"19204:81:19"},"nodeType":"YulIf","src":"19201:168:19"},{"nodeType":"YulAssignment","src":"19378:41:19","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"19390:8:19"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"19400:18:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19386:3:19"},"nodeType":"YulFunctionCall","src":"19386:33:19"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"19378:4:19"}]},{"nodeType":"YulAssignment","src":"19429:28:19","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"19452:4:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19439:12:19"},"nodeType":"YulFunctionCall","src":"19439:18:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19429:6:19"}]},{"body":{"nodeType":"YulBlock","src":"19500:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"19502:77:19"},"nodeType":"YulFunctionCall","src":"19502:79:19"},"nodeType":"YulExpressionStatement","src":"19502:79:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19472:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19480:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19469:2:19"},"nodeType":"YulFunctionCall","src":"19469:30:19"},"nodeType":"YulIf","src":"19466:117:19"},{"nodeType":"YulAssignment","src":"19592:21:19","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"19604:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"19610:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19600:3:19"},"nodeType":"YulFunctionCall","src":"19600:13:19"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"19592:4:19"}]},{"body":{"nodeType":"YulBlock","src":"19675:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"19677:77:19"},"nodeType":"YulFunctionCall","src":"19677:79:19"},"nodeType":"YulExpressionStatement","src":"19677:79:19"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"19629:4:19"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"19639:12:19"},"nodeType":"YulFunctionCall","src":"19639:14:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19659:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19667:4:19","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19655:3:19"},"nodeType":"YulFunctionCall","src":"19655:17:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19635:3:19"},"nodeType":"YulFunctionCall","src":"19635:38:19"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"19625:3:19"},"nodeType":"YulFunctionCall","src":"19625:49:19"},"nodeType":"YulIf","src":"19622:136:19"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"19092:8:19","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"19102:11:19","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"19118:4:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"19124:6:19","type":""}],"src":"19041:724:19"},{"body":{"nodeType":"YulBlock","src":"19877:120:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19899:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19907:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19895:3:19"},"nodeType":"YulFunctionCall","src":"19895:14:19"},{"hexValue":"546f6b656e5061796d61737465723a206e6f2062616c616e636520287072652d","kind":"string","nodeType":"YulLiteral","src":"19911:34:19","type":"","value":"TokenPaymaster: no balance (pre-"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19888:6:19"},"nodeType":"YulFunctionCall","src":"19888:58:19"},"nodeType":"YulExpressionStatement","src":"19888:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19967:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19975:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19963:3:19"},"nodeType":"YulFunctionCall","src":"19963:15:19"},{"hexValue":"63726561746529","kind":"string","nodeType":"YulLiteral","src":"19980:9:19","type":"","value":"create)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19956:6:19"},"nodeType":"YulFunctionCall","src":"19956:34:19"},"nodeType":"YulExpressionStatement","src":"19956:34:19"}]},"name":"store_literal_in_memory_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19869:6:19","type":""}],"src":"19771:226:19"},{"body":{"nodeType":"YulBlock","src":"20149:220:19","statements":[{"nodeType":"YulAssignment","src":"20159:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20225:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"20230:2:19","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20166:58:19"},"nodeType":"YulFunctionCall","src":"20166:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20159:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20331:3:19"}],"functionName":{"name":"store_literal_in_memory_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d","nodeType":"YulIdentifier","src":"20242:88:19"},"nodeType":"YulFunctionCall","src":"20242:93:19"},"nodeType":"YulExpressionStatement","src":"20242:93:19"},{"nodeType":"YulAssignment","src":"20344:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20355:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"20360:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20351:3:19"},"nodeType":"YulFunctionCall","src":"20351:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20344:3:19"}]}]},"name":"abi_encode_t_stringliteral_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20137:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20145:3:19","type":""}],"src":"20003:366:19"},{"body":{"nodeType":"YulBlock","src":"20546:248:19","statements":[{"nodeType":"YulAssignment","src":"20556:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20568:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20579:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20564:3:19"},"nodeType":"YulFunctionCall","src":"20564:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20556:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20603:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20614:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20599:3:19"},"nodeType":"YulFunctionCall","src":"20599:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20622:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"20628:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20618:3:19"},"nodeType":"YulFunctionCall","src":"20618:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20592:6:19"},"nodeType":"YulFunctionCall","src":"20592:47:19"},"nodeType":"YulExpressionStatement","src":"20592:47:19"},{"nodeType":"YulAssignment","src":"20648:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20782:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20656:124:19"},"nodeType":"YulFunctionCall","src":"20656:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20648:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20526:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20541:4:19","type":""}],"src":"20375:419:19"},{"body":{"nodeType":"YulBlock","src":"20906:70:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20928:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"20936:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20924:3:19"},"nodeType":"YulFunctionCall","src":"20924:14:19"},{"hexValue":"546f6b656e5061796d61737465723a206e6f2062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"20940:28:19","type":"","value":"TokenPaymaster: no balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20917:6:19"},"nodeType":"YulFunctionCall","src":"20917:52:19"},"nodeType":"YulExpressionStatement","src":"20917:52:19"}]},"name":"store_literal_in_memory_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20898:6:19","type":""}],"src":"20800:176:19"},{"body":{"nodeType":"YulBlock","src":"21128:220:19","statements":[{"nodeType":"YulAssignment","src":"21138:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21204:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"21209:2:19","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21145:58:19"},"nodeType":"YulFunctionCall","src":"21145:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21138:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21310:3:19"}],"functionName":{"name":"store_literal_in_memory_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a","nodeType":"YulIdentifier","src":"21221:88:19"},"nodeType":"YulFunctionCall","src":"21221:93:19"},"nodeType":"YulExpressionStatement","src":"21221:93:19"},{"nodeType":"YulAssignment","src":"21323:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21334:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"21339:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21330:3:19"},"nodeType":"YulFunctionCall","src":"21330:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21323:3:19"}]}]},"name":"abi_encode_t_stringliteral_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21116:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21124:3:19","type":""}],"src":"20982:366:19"},{"body":{"nodeType":"YulBlock","src":"21525:248:19","statements":[{"nodeType":"YulAssignment","src":"21535:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21547:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21558:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21543:3:19"},"nodeType":"YulFunctionCall","src":"21543:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21535:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21582:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21593:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21578:3:19"},"nodeType":"YulFunctionCall","src":"21578:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21601:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21607:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21597:3:19"},"nodeType":"YulFunctionCall","src":"21597:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21571:6:19"},"nodeType":"YulFunctionCall","src":"21571:47:19"},"nodeType":"YulExpressionStatement","src":"21571:47:19"},{"nodeType":"YulAssignment","src":"21627:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21761:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21635:124:19"},"nodeType":"YulFunctionCall","src":"21635:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21627:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21505:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21520:4:19","type":""}],"src":"21354:419:19"},{"body":{"nodeType":"YulBlock","src":"21807:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21824:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21827:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21817:6:19"},"nodeType":"YulFunctionCall","src":"21817:88:19"},"nodeType":"YulExpressionStatement","src":"21817:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21921:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21924:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21914:6:19"},"nodeType":"YulFunctionCall","src":"21914:15:19"},"nodeType":"YulExpressionStatement","src":"21914:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21945:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21948:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21938:6:19"},"nodeType":"YulFunctionCall","src":"21938:15:19"},"nodeType":"YulExpressionStatement","src":"21938:15:19"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21779:180:19"},{"body":{"nodeType":"YulBlock","src":"22007:143:19","statements":[{"nodeType":"YulAssignment","src":"22017:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22040:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22022:17:19"},"nodeType":"YulFunctionCall","src":"22022:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22017:1:19"}]},{"nodeType":"YulAssignment","src":"22051:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22074:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22056:17:19"},"nodeType":"YulFunctionCall","src":"22056:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22051:1:19"}]},{"body":{"nodeType":"YulBlock","src":"22098:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22100:16:19"},"nodeType":"YulFunctionCall","src":"22100:18:19"},"nodeType":"YulExpressionStatement","src":"22100:18:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22095:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22088:6:19"},"nodeType":"YulFunctionCall","src":"22088:9:19"},"nodeType":"YulIf","src":"22085:35:19"},{"nodeType":"YulAssignment","src":"22130:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22139:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"22142:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22135:3:19"},"nodeType":"YulFunctionCall","src":"22135:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22130:1:19"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21996:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"21999:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22005:1:19","type":""}],"src":"21965:185:19"},{"body":{"nodeType":"YulBlock","src":"22245:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22262:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22265:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22255:6:19"},"nodeType":"YulFunctionCall","src":"22255:12:19"},"nodeType":"YulExpressionStatement","src":"22255:12:19"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulFunctionDefinition","src":"22156:117:19"},{"body":{"nodeType":"YulBlock","src":"22368:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22385:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22388:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22378:6:19"},"nodeType":"YulFunctionCall","src":"22378:12:19"},"nodeType":"YulExpressionStatement","src":"22378:12:19"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulFunctionDefinition","src":"22279:117:19"},{"body":{"nodeType":"YulBlock","src":"22528:343:19","statements":[{"body":{"nodeType":"YulBlock","src":"22566:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulIdentifier","src":"22568:77:19"},"nodeType":"YulFunctionCall","src":"22568:79:19"},"nodeType":"YulExpressionStatement","src":"22568:79:19"}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"22544:10:19"},{"name":"endIndex","nodeType":"YulIdentifier","src":"22556:8:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22541:2:19"},"nodeType":"YulFunctionCall","src":"22541:24:19"},"nodeType":"YulIf","src":"22538:111:19"},{"body":{"nodeType":"YulBlock","src":"22682:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulIdentifier","src":"22684:77:19"},"nodeType":"YulFunctionCall","src":"22684:79:19"},"nodeType":"YulExpressionStatement","src":"22684:79:19"}]},"condition":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"22664:8:19"},{"name":"length","nodeType":"YulIdentifier","src":"22674:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22661:2:19"},"nodeType":"YulFunctionCall","src":"22661:20:19"},"nodeType":"YulIf","src":"22658:107:19"},{"nodeType":"YulAssignment","src":"22774:44:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22791:6:19"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"22803:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"22815:1:19","type":"","value":"1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22799:3:19"},"nodeType":"YulFunctionCall","src":"22799:18:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22787:3:19"},"nodeType":"YulFunctionCall","src":"22787:31:19"},"variableNames":[{"name":"offsetOut","nodeType":"YulIdentifier","src":"22774:9:19"}]},{"nodeType":"YulAssignment","src":"22827:38:19","value":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"22844:8:19"},{"name":"startIndex","nodeType":"YulIdentifier","src":"22854:10:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22840:3:19"},"nodeType":"YulFunctionCall","src":"22840:25:19"},"variableNames":[{"name":"lengthOut","nodeType":"YulIdentifier","src":"22827:9:19"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22466:6:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"22474:6:19","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"22482:10:19","type":""},{"name":"endIndex","nodeType":"YulTypedName","src":"22494:8:19","type":""}],"returnVariables":[{"name":"offsetOut","nodeType":"YulTypedName","src":"22507:9:19","type":""},{"name":"lengthOut","nodeType":"YulTypedName","src":"22518:9:19","type":""}],"src":"22402:469:19"},{"body":{"nodeType":"YulBlock","src":"22942:31:19","statements":[{"nodeType":"YulAssignment","src":"22953:13:19","value":{"name":"len","nodeType":"YulIdentifier","src":"22963:3:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22953:6:19"}]}]},"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22920:5:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"22927:3:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22935:6:19","type":""}],"src":"22877:96:19"},{"body":{"nodeType":"YulBlock","src":"23037:28:19","statements":[{"nodeType":"YulAssignment","src":"23047:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"23055:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23047:4:19"}]}]},"name":"array_dataslot_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23024:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"23032:4:19","type":""}],"src":"22979:86:19"},{"body":{"nodeType":"YulBlock","src":"23116:105:19","statements":[{"nodeType":"YulAssignment","src":"23126:89:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23141:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"23148:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23137:3:19"},"nodeType":"YulFunctionCall","src":"23137:78:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23126:7:19"}]}]},"name":"cleanup_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23098:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23108:7:19","type":""}],"src":"23071:150:19"},{"body":{"nodeType":"YulBlock","src":"23280:54:19","statements":[{"nodeType":"YulAssignment","src":"23290:37:19","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"23315:4:19"},{"name":"value","nodeType":"YulIdentifier","src":"23321:5:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23311:3:19"},"nodeType":"YulFunctionCall","src":"23311:16:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"23290:8:19"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"23255:4:19","type":""},{"name":"value","nodeType":"YulTypedName","src":"23261:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"23271:8:19","type":""}],"src":"23227:107:19"},{"body":{"nodeType":"YulBlock","src":"23437:455:19","statements":[{"nodeType":"YulVariableDeclaration","src":"23448:59:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23496:5:19"},{"name":"len","nodeType":"YulIdentifier","src":"23503:3:19"}],"functionName":{"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"23462:33:19"},"nodeType":"YulFunctionCall","src":"23462:45:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23452:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23516:21:19","value":{"name":"array","nodeType":"YulIdentifier","src":"23532:5:19"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"23520:8:19","type":""}]},{"nodeType":"YulAssignment","src":"23547:50:19","value":{"arguments":[{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"23587:8:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23574:12:19"},"nodeType":"YulFunctionCall","src":"23574:22:19"}],"functionName":{"name":"cleanup_t_bytes20","nodeType":"YulIdentifier","src":"23556:17:19"},"nodeType":"YulFunctionCall","src":"23556:41:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23547:5:19"}]},{"body":{"nodeType":"YulBlock","src":"23625:260:19","statements":[{"nodeType":"YulAssignment","src":"23639:236:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23669:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23736:1:19","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23743:2:19","type":"","value":"20"},{"name":"length","nodeType":"YulIdentifier","src":"23747:6:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23739:3:19"},"nodeType":"YulFunctionCall","src":"23739:15:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23732:3:19"},"nodeType":"YulFunctionCall","src":"23732:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"23777:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"23692:18:19"},"nodeType":"YulFunctionCall","src":"23692:169:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23648:3:19"},"nodeType":"YulFunctionCall","src":"23648:227:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23639:5:19"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23613:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"23621:2:19","type":"","value":"20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23610:2:19"},"nodeType":"YulFunctionCall","src":"23610:14:19"},"nodeType":"YulIf","src":"23607:278:19"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"23416:5:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"23423:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23431:5:19","type":""}],"src":"23340:552:19"},{"body":{"nodeType":"YulBlock","src":"24004:118:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24026:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"24034:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24022:3:19"},"nodeType":"YulFunctionCall","src":"24022:14:19"},{"hexValue":"546f6b656e5061796d61737465723a2077726f6e67206163636f756e74206661","kind":"string","nodeType":"YulLiteral","src":"24038:34:19","type":"","value":"TokenPaymaster: wrong account fa"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24015:6:19"},"nodeType":"YulFunctionCall","src":"24015:58:19"},"nodeType":"YulExpressionStatement","src":"24015:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24094:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"24102:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24090:3:19"},"nodeType":"YulFunctionCall","src":"24090:15:19"},{"hexValue":"63746f7279","kind":"string","nodeType":"YulLiteral","src":"24107:7:19","type":"","value":"ctory"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24083:6:19"},"nodeType":"YulFunctionCall","src":"24083:32:19"},"nodeType":"YulExpressionStatement","src":"24083:32:19"}]},"name":"store_literal_in_memory_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23996:6:19","type":""}],"src":"23898:224:19"},{"body":{"nodeType":"YulBlock","src":"24274:220:19","statements":[{"nodeType":"YulAssignment","src":"24284:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24350:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"24355:2:19","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24291:58:19"},"nodeType":"YulFunctionCall","src":"24291:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24284:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24456:3:19"}],"functionName":{"name":"store_literal_in_memory_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6","nodeType":"YulIdentifier","src":"24367:88:19"},"nodeType":"YulFunctionCall","src":"24367:93:19"},"nodeType":"YulExpressionStatement","src":"24367:93:19"},{"nodeType":"YulAssignment","src":"24469:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24480:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"24485:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24476:3:19"},"nodeType":"YulFunctionCall","src":"24476:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24469:3:19"}]}]},"name":"abi_encode_t_stringliteral_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24262:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24270:3:19","type":""}],"src":"24128:366:19"},{"body":{"nodeType":"YulBlock","src":"24671:248:19","statements":[{"nodeType":"YulAssignment","src":"24681:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24693:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24704:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24689:3:19"},"nodeType":"YulFunctionCall","src":"24689:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24681:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24728:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24739:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24724:3:19"},"nodeType":"YulFunctionCall","src":"24724:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24747:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"24753:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24743:3:19"},"nodeType":"YulFunctionCall","src":"24743:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24717:6:19"},"nodeType":"YulFunctionCall","src":"24717:47:19"},"nodeType":"YulExpressionStatement","src":"24717:47:19"},{"nodeType":"YulAssignment","src":"24773:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24907:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24781:124:19"},"nodeType":"YulFunctionCall","src":"24781:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24773:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24651:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24666:4:19","type":""}],"src":"24500:419:19"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_PostOpMode_$1617(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_PostOpMode_$1617(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_PostOpMode_$1617(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_enum$_PostOpMode_$1617t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_PostOpMode_$1617(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$1579_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$1579_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$1579_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$1579__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$1579_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct UserOperation\n    function abi_decode_t_struct$_UserOperation_$1774_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 352) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$1774_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$1774_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender not EntryPoint\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenPaymaster: gas too low for \")\n\n        mstore(add(memPtr, 32), \"postOp\")\n\n    }\n\n    function abi_encode_t_stringliteral_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e63029b4be8f7147d8fa8c7176417177721349d796aec4cd58131ce1ae4a4e98_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function store_literal_in_memory_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenPaymaster: no balance (pre-\")\n\n        mstore(add(memPtr, 32), \"create)\")\n\n    }\n\n    function abi_encode_t_stringliteral_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3a5fd70368e4e698a4b1ca2306756bd67295a1b90e45690e5829cd9be775e0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenPaymaster: no balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba1208b32158094aac35ebe5e696720821cdfa1d15e4b106c836c9b43fcf322a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes20(calldataload(dataArea))\n\n        if lt(length, 20) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(20, length)),\n                    0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function store_literal_in_memory_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenPaymaster: wrong account fa\")\n\n        mstore(add(memPtr, 32), \"ctory\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8acd6a8133474c975607944c89a9c2827b6234a8b3c94e8e794cae85c818cf6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"939":[{"length":32,"start":1389},{"length":32,"start":1731},{"length":32,"start":2315},{"length":32,"start":2359},{"length":32,"start":2497},{"length":32,"start":2641},{"length":32,"start":2800},{"length":32,"start":3965}],"1788":[{"length":32,"start":2218},{"length":32,"start":5913}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F5CA221 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC399EC88 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x525 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x9F5CA221 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x438 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x796D4371 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33A JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x228 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x7D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x92D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x476 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x494 PUSH2 0xAEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x523 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55A SWAP3 SWAP2 SWAP1 PUSH2 0x1E65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56B PUSH2 0xC8E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x609 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x635 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x682 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x657 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x682 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x665 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x697 PUSH2 0xD15 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A4 DUP2 DUP6 DUP6 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C1 PUSH2 0xC8E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP3 SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x75D PUSH2 0xD15 JUMP JUMPDEST SWAP1 POP PUSH2 0x76A DUP6 DUP3 DUP6 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x775 DUP6 DUP6 DUP6 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DB PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x7E5 PUSH1 0x0 PUSH2 0xEB7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3A98 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x825 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x851 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x89E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x873 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x89E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x881 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8D7 PUSH2 0xD15 JUMP JUMPDEST SWAP1 POP PUSH2 0x8E4 DUP2 DUP6 DUP6 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F7 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x903 DUP5 DUP5 DUP5 DUP5 PUSH2 0x100B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x935 PUSH2 0xC8E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9BF PUSH2 0xC8E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE9 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC0B PUSH2 0xC8E JUMP JUMPDEST PUSH2 0xC15 DUP3 DUP3 PUSH2 0x104B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC21 PUSH2 0xC8E JUMP JUMPDEST PUSH2 0xC34 ADDRESS PUSH2 0xC2D PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xC3D DUP2 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0xC68 ADDRESS DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xD1D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC77 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xC82 DUP6 DUP6 DUP6 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC96 PUSH2 0xD15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB4 PUSH2 0x7ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD13 JUMPI PUSH2 0xCD7 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0A SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD2A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3B DUP5 DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xDBD JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDAD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDBC DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x12CE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE35 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9E SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB2 DUP4 DUP4 DUP4 PUSH2 0x14A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP2 ADD SWAP1 PUSH2 0x101C SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1036 PUSH2 0x3A98 DUP5 PUSH2 0x1031 SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP PUSH2 0x1043 DUP3 ADDRESS DUP4 PUSH2 0xDC3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10BD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B4 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C9 PUSH1 0x0 DUP4 DUP4 PUSH2 0x14A5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10D5 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1147 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113E SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0xEB7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x1161 DUP5 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP PUSH2 0x3A98 DUP7 PUSH1 0xA0 ADD CALLDATALOAD GT PUSH2 0x11AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A2 SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x11BD SWAP2 SWAP1 PUSH2 0x215B JUMP JUMPDEST SWAP1 POP EQ PUSH2 0x122F JUMPI PUSH2 0x11CD DUP7 PUSH2 0x16E3 JUMP JUMPDEST DUP1 PUSH2 0x11E9 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11E4 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST LT ISZERO PUSH2 0x122A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1221 SWAP1 PUSH2 0x2230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x128D JUMP JUMPDEST DUP1 PUSH2 0x124B DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1246 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST LT ISZERO PUSH2 0x128C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1283 SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12B0 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x0 SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1340 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A9 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x149F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1496 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14F7 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14EB SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1584 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1615 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1663 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16C0 SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x16DC SWAP2 SWAP1 PUSH2 0x22EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x215B JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x14 SWAP3 PUSH2 0x1707 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2326 JUMP JUMPDEST SWAP1 PUSH2 0x1712 SWAP2 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179C SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17CC DUP2 PUSH2 0x17B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E9 DUP2 PUSH2 0x17C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1813 DUP5 DUP3 DUP6 ADD PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1856 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x183B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187E DUP3 PUSH2 0x181C JUMP JUMPDEST PUSH2 0x1888 DUP2 DUP6 PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP PUSH2 0x1898 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x18A1 DUP2 PUSH2 0x1862 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18C6 DUP2 DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F9 DUP3 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1909 DUP2 PUSH2 0x18EE JUMP JUMPDEST DUP2 EQ PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1926 DUP2 PUSH2 0x1900 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193F DUP2 PUSH2 0x192C JUMP JUMPDEST DUP2 EQ PUSH2 0x194A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x195C DUP2 PUSH2 0x1936 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1979 JUMPI PUSH2 0x1978 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1987 DUP6 DUP3 DUP7 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1998 DUP6 DUP3 DUP7 ADD PUSH2 0x194D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B7 DUP2 PUSH2 0x19A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19E1 DUP2 PUSH2 0x192C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0D DUP3 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1D DUP2 PUSH2 0x1A02 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3A DUP2 PUSH2 0x1A14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A57 JUMPI PUSH2 0x1A56 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A65 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A76 DUP6 DUP3 DUP7 ADD PUSH2 0x194D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH2 0x1A98 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AA7 DUP7 DUP3 DUP8 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AB8 DUP7 DUP3 DUP8 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AC9 DUP7 DUP3 DUP8 ADD PUSH2 0x194D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE9 DUP2 PUSH2 0x1AD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B04 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B20 JUMPI PUSH2 0x1B1F PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2E DUP5 DUP3 DUP6 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B40 DUP2 PUSH2 0x18EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1B6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B80 DUP2 PUSH2 0x1B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1BAB JUMPI PUSH2 0x1BAA PUSH2 0x1B86 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x1B8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1BE4 JUMPI PUSH2 0x1BE3 PUSH2 0x1B90 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C05 JUMPI PUSH2 0x1C04 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C13 DUP8 DUP3 DUP9 ADD PUSH2 0x1B71 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x17AE JUMP JUMPDEST JUMPDEST PUSH2 0x1C40 DUP8 DUP3 DUP9 ADD PUSH2 0x1B95 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C53 DUP8 DUP3 DUP9 ADD PUSH2 0x194D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C84 PUSH2 0x1C7F PUSH2 0x1C7A DUP5 PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x1C5F JUMP JUMPDEST PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C96 DUP3 PUSH2 0x1C69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA8 DUP3 PUSH2 0x1C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB8 DUP2 PUSH2 0x1C9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CD3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CEF JUMPI PUSH2 0x1CEE PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CFD DUP5 DUP3 DUP6 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D1D JUMPI PUSH2 0x1D1C PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D2B DUP6 DUP3 DUP7 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D3C DUP6 DUP3 DUP7 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D62 JUMPI PUSH2 0x1D61 PUSH2 0x1D46 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D7E DUP2 PUSH2 0x1D6B JUMP JUMPDEST DUP2 EQ PUSH2 0x1D89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9B DUP2 PUSH2 0x1D75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DBA JUMPI PUSH2 0x1DB9 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x17AE JUMP JUMPDEST JUMPDEST PUSH2 0x1DE4 DUP7 DUP3 DUP8 ADD PUSH2 0x1D4B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DF5 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E06 DUP7 DUP3 DUP8 ADD PUSH2 0x194D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E37 DUP3 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0x1E41 DUP2 DUP6 PUSH2 0x1E1B JUMP JUMPDEST SWAP4 POP PUSH2 0x1E51 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x1E5A DUP2 PUSH2 0x1862 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E7F DUP2 DUP6 PUSH2 0x1E2C JUMP JUMPDEST SWAP1 POP PUSH2 0x1E8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1E9E DUP2 PUSH2 0x17B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F06 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F19 JUMPI PUSH2 0x1F18 PUSH2 0x1EBF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F28 DUP2 PUSH2 0x1A02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F43 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x1F50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F81 DUP2 PUSH2 0x1936 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9D JUMPI PUSH2 0x1F9C PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FAB DUP5 DUP3 DUP6 ADD PUSH2 0x1F72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FC9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B37 JUMP JUMPDEST PUSH2 0x1FD6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x1FE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19D8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2021 PUSH1 0x15 DUP4 PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP PUSH2 0x202C DUP3 PUSH2 0x1FEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2050 DUP2 PUSH2 0x2014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2091 DUP3 PUSH2 0x192C JUMP JUMPDEST SWAP2 POP PUSH2 0x209C DUP4 PUSH2 0x192C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20B4 JUMPI PUSH2 0x20B3 PUSH2 0x2057 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E5061796D61737465723A2067617320746F6F206C6F7720666F7220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x706F73744F700000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2116 PUSH1 0x26 DUP4 PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP PUSH2 0x2121 DUP3 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2145 DUP2 PUSH2 0x2109 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2178 JUMPI PUSH2 0x2177 PUSH2 0x214C JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x219A JUMPI PUSH2 0x2199 PUSH2 0x2151 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x21B6 JUMPI PUSH2 0x21B5 PUSH2 0x2156 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5061796D61737465723A206E6F2062616C616E636520287072652D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6372656174652900000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221A PUSH1 0x27 DUP4 PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP PUSH2 0x2225 DUP3 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2249 DUP2 PUSH2 0x220D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E5061796D61737465723A206E6F2062616C616E6365000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2286 PUSH1 0x1A DUP4 PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP PUSH2 0x2291 DUP3 PUSH2 0x2250 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B5 DUP2 PUSH2 0x2279 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22F6 DUP3 PUSH2 0x192C JUMP JUMPDEST SWAP2 POP PUSH2 0x2301 DUP4 PUSH2 0x192C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2311 JUMPI PUSH2 0x2310 PUSH2 0x22BC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x233A JUMPI PUSH2 0x2339 PUSH2 0x231C JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x234B JUMPI PUSH2 0x234A PUSH2 0x2321 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B1 DUP4 DUP4 PUSH2 0x2361 JUMP JUMPDEST DUP3 PUSH2 0x23BC DUP2 CALLDATALOAD PUSH2 0x236C JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x23FC JUMPI PUSH2 0x23F7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x2398 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E5061796D61737465723A2077726F6E67206163636F756E74206661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63746F7279000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2460 PUSH1 0x25 DUP4 PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP PUSH2 0x246B DUP3 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x248F DUP2 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xAC PUSH8 0xE0E4F0FEEA813907 PUSH0 0x21 CREATE2 MUL 0x5E 0xE4 0xC0 0xEF 0xC5 BALANCE LOG3 0x1E MOD PUSH4 0xF3DA35A6 0xAA SDIV DUP6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1232:4400:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3695:142:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3287:176:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5039:244:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1332:44:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1385:35:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1480:223:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;486:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4203:85;;;;;;;;;;;;;:::i;:::-;;4516:135;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3925:113;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3009:106;;;:::i;:::-;;3846:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2025:117:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2392:364;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;673:322:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3695:142;1531:13:0;:11;:13::i;:::-;3775:10:6::1;:19;;;3802:9;3813:15;3775:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3695:142:::0;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;3287:176:6:-;1531:13:0;:11;:13::i;:::-;3409:10:6::1;:21;;;3431:15;3448:6;3409:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3287:176:::0;;:::o;5039:244:2:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1332:44:15:-;1371:5;1332:44;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;1385:35:15:-;;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1480:223:6:-;1623:24;:22;:24::i;:::-;1658:37;1666:4;1672:7;;1681:13;1658:7;:37::i;:::-;1480:223;;;;:::o;486:39::-;;;:::o;4203:85::-;1531:13:0;:11;:13::i;:::-;4256:10:6::1;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4203:85::o:0;4516:135::-;1531:13:0;:11;:13::i;:::-;4602:10:6::1;:24;;;4627:15;4602:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4516:135:::0;:::o;3925:113::-;3968:7;3995:10;:20;;;4024:4;3995:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3988:42;;3925:113;:::o;3009:106::-;3054:10;:20;;;3082:9;3101:4;3054:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3009:106::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2025:117:15:-;1531:13:0;:11;:13::i;:::-;2110:24:15::1;2116:9;2127:6;2110:5;:24::i;:::-;2025:117:::0;;:::o;2392:364::-;1531:13:0;:11;:13::i;:::-;2528:35:15::1;2545:4;2552:7;:5;:7::i;:::-;2561:1;2528:8;:35::i;:::-;2574:33;2598:8;2574:23;:33::i;:::-;2699:49;2716:4;2723:8;2733:14;2699:8;:49::i;:::-;2392:364:::0;:::o;673:322:6:-;835:20;857:22;892:24;:22;:24::i;:::-;934:53;959:6;967:10;979:7;934:24;:53::i;:::-;927:60;;;;673:322;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;4735:137:6:-;4827:10;4805:33;;:10;:33;;;4797:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4735:137::o;5114:515:15:-;5333:14;5361:7;;5350:30;;;;;;;:::i;:::-;5333:47;;5391:14;5408:48;1371:5;5427:13;:28;;;;:::i;:::-;5408:18;:48::i;:::-;5391:65;;5581:40;5591:6;5607:4;5614:6;5581:9;:40::i;:::-;5213:416;;5114:515;;;;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3288:935:15:-;3439:20;3461:22;3496:20;3519:35;3538:15;3519:18;:35::i;:::-;3496:58;;1371:5;3759:6;:27;;;:42;3751:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;3887:1;3861:6;:15;;;;;;;;:::i;:::-;:22;;:27;3857:309;;3905:28;3926:6;3905:20;:28::i;:::-;3984:12;3956:24;3966:6;:13;;;;;;;;;;:::i;:::-;3956:9;:24::i;:::-;:40;;3948:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;3857:309;;;4111:12;4083:24;4093:6;:13;;;;;;;;;;:::i;:::-;4083:9;:24::i;:::-;:40;;4075:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3857:309;4197:6;:13;;;;;;;;;;:::i;:::-;4186:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;4213:1;4178:37;;;;;3288:935;;;;;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2891:137:15:-;2968:18;3017:3;3006:8;:14;;;;:::i;:::-;2999:21;;2891:137;;;:::o;4391:243::-;4485:15;4519:6;:15;;;;;;;;:::i;:::-;4535:1;4519:23;4539:2;4519:23;;;;;;;:::i;:::-;4511:32;;;;;:::i;:::-;4503:41;;4485:59;;4574:10;4563:21;;:7;:21;;;4555:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;4474:160;4391:243;:::o;88:117:19:-;197:1;194;187:12;211:117;320:1;317;310:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:99::-;1087:6;1121:5;1115:12;1105:22;;1035:99;;;:::o;1140:169::-;1224:11;1258:6;1253:3;1246:19;1298:4;1293:3;1289:14;1274:29;;1140:169;;;;:::o;1315:246::-;1396:1;1406:113;1420:6;1417:1;1414:13;1406:113;;;1505:1;1500:3;1496:11;1490:18;1486:1;1481:3;1477:11;1470:39;1442:2;1439:1;1435:10;1430:15;;1406:113;;;1553:1;1544:6;1539:3;1535:16;1528:27;1377:184;1315:246;;;:::o;1567:102::-;1608:6;1659:2;1655:7;1650:2;1643:5;1639:14;1635:28;1625:38;;1567:102;;;:::o;1675:377::-;1763:3;1791:39;1824:5;1791:39;:::i;:::-;1846:71;1910:6;1905:3;1846:71;:::i;:::-;1839:78;;1926:65;1984:6;1979:3;1972:4;1965:5;1961:16;1926:65;:::i;:::-;2016:29;2038:6;2016:29;:::i;:::-;2011:3;2007:39;2000:46;;1767:285;1675:377;;;;:::o;2058:313::-;2171:4;2209:2;2198:9;2194:18;2186:26;;2258:9;2252:4;2248:20;2244:1;2233:9;2229:17;2222:47;2286:78;2359:4;2350:6;2286:78;:::i;:::-;2278:86;;2058:313;;;;:::o;2377:126::-;2414:7;2454:42;2447:5;2443:54;2432:65;;2377:126;;;:::o;2509:96::-;2546:7;2575:24;2593:5;2575:24;:::i;:::-;2564:35;;2509:96;;;:::o;2611:122::-;2684:24;2702:5;2684:24;:::i;:::-;2677:5;2674:35;2664:63;;2723:1;2720;2713:12;2664:63;2611:122;:::o;2739:139::-;2785:5;2823:6;2810:20;2801:29;;2839:33;2866:5;2839:33;:::i;:::-;2739:139;;;;:::o;2884:77::-;2921:7;2950:5;2939:16;;2884:77;;;:::o;2967:122::-;3040:24;3058:5;3040:24;:::i;:::-;3033:5;3030:35;3020:63;;3079:1;3076;3069:12;3020:63;2967:122;:::o;3095:139::-;3141:5;3179:6;3166:20;3157:29;;3195:33;3222:5;3195:33;:::i;:::-;3095:139;;;;:::o;3240:474::-;3308:6;3316;3365:2;3353:9;3344:7;3340:23;3336:32;3333:119;;;3371:79;;:::i;:::-;3333:119;3491:1;3516:53;3561:7;3552:6;3541:9;3537:22;3516:53;:::i;:::-;3506:63;;3462:117;3618:2;3644:53;3689:7;3680:6;3669:9;3665:22;3644:53;:::i;:::-;3634:63;;3589:118;3240:474;;;;;:::o;3720:90::-;3754:7;3797:5;3790:13;3783:21;3772:32;;3720:90;;;:::o;3816:109::-;3897:21;3912:5;3897:21;:::i;:::-;3892:3;3885:34;3816:109;;:::o;3931:210::-;4018:4;4056:2;4045:9;4041:18;4033:26;;4069:65;4131:1;4120:9;4116:17;4107:6;4069:65;:::i;:::-;3931:210;;;;:::o;4147:118::-;4234:24;4252:5;4234:24;:::i;:::-;4229:3;4222:37;4147:118;;:::o;4271:222::-;4364:4;4402:2;4391:9;4387:18;4379:26;;4415:71;4483:1;4472:9;4468:17;4459:6;4415:71;:::i;:::-;4271:222;;;;:::o;4499:104::-;4544:7;4573:24;4591:5;4573:24;:::i;:::-;4562:35;;4499:104;;;:::o;4609:138::-;4690:32;4716:5;4690:32;:::i;:::-;4683:5;4680:43;4670:71;;4737:1;4734;4727:12;4670:71;4609:138;:::o;4753:155::-;4807:5;4845:6;4832:20;4823:29;;4861:41;4896:5;4861:41;:::i;:::-;4753:155;;;;:::o;4914:490::-;4990:6;4998;5047:2;5035:9;5026:7;5022:23;5018:32;5015:119;;;5053:79;;:::i;:::-;5015:119;5173:1;5198:61;5251:7;5242:6;5231:9;5227:22;5198:61;:::i;:::-;5188:71;;5144:125;5308:2;5334:53;5379:7;5370:6;5359:9;5355:22;5334:53;:::i;:::-;5324:63;;5279:118;4914:490;;;;;:::o;5410:619::-;5487:6;5495;5503;5552:2;5540:9;5531:7;5527:23;5523:32;5520:119;;;5558:79;;:::i;:::-;5520:119;5678:1;5703:53;5748:7;5739:6;5728:9;5724:22;5703:53;:::i;:::-;5693:63;;5649:117;5805:2;5831:53;5876:7;5867:6;5856:9;5852:22;5831:53;:::i;:::-;5821:63;;5776:118;5933:2;5959:53;6004:7;5995:6;5984:9;5980:22;5959:53;:::i;:::-;5949:63;;5904:118;5410:619;;;;;:::o;6035:86::-;6070:7;6110:4;6103:5;6099:16;6088:27;;6035:86;;;:::o;6127:112::-;6210:22;6226:5;6210:22;:::i;:::-;6205:3;6198:35;6127:112;;:::o;6245:214::-;6334:4;6372:2;6361:9;6357:18;6349:26;;6385:67;6449:1;6438:9;6434:17;6425:6;6385:67;:::i;:::-;6245:214;;;;:::o;6465:329::-;6524:6;6573:2;6561:9;6552:7;6548:23;6544:32;6541:119;;;6579:79;;:::i;:::-;6541:119;6699:1;6724:53;6769:7;6760:6;6749:9;6745:22;6724:53;:::i;:::-;6714:63;;6670:117;6465:329;;;;:::o;6800:118::-;6887:24;6905:5;6887:24;:::i;:::-;6882:3;6875:37;6800:118;;:::o;6924:222::-;7017:4;7055:2;7044:9;7040:18;7032:26;;7068:71;7136:1;7125:9;7121:17;7112:6;7068:71;:::i;:::-;6924:222;;;;:::o;7152:114::-;7240:1;7233:5;7230:12;7220:40;;7256:1;7253;7246:12;7220:40;7152:114;:::o;7272:169::-;7333:5;7371:6;7358:20;7349:29;;7387:48;7429:5;7387:48;:::i;:::-;7272:169;;;;:::o;7447:117::-;7556:1;7553;7546:12;7570:117;7679:1;7676;7669:12;7693:117;7802:1;7799;7792:12;7829:552;7886:8;7896:6;7946:3;7939:4;7931:6;7927:17;7923:27;7913:122;;7954:79;;:::i;:::-;7913:122;8067:6;8054:20;8044:30;;8097:18;8089:6;8086:30;8083:117;;;8119:79;;:::i;:::-;8083:117;8233:4;8225:6;8221:17;8209:29;;8287:3;8279:4;8271:6;8267:17;8257:8;8253:32;8250:41;8247:128;;;8294:79;;:::i;:::-;8247:128;7829:552;;;;;:::o;8387:847::-;8490:6;8498;8506;8514;8563:2;8551:9;8542:7;8538:23;8534:32;8531:119;;;8569:79;;:::i;:::-;8531:119;8689:1;8714:68;8774:7;8765:6;8754:9;8750:22;8714:68;:::i;:::-;8704:78;;8660:132;8859:2;8848:9;8844:18;8831:32;8890:18;8882:6;8879:30;8876:117;;;8912:79;;:::i;:::-;8876:117;9025:64;9081:7;9072:6;9061:9;9057:22;9025:64;:::i;:::-;9007:82;;;;8802:297;9138:2;9164:53;9209:7;9200:6;9189:9;9185:22;9164:53;:::i;:::-;9154:63;;9109:118;8387:847;;;;;;;:::o;9240:60::-;9268:3;9289:5;9282:12;;9240:60;;;:::o;9306:142::-;9356:9;9389:53;9407:34;9416:24;9434:5;9416:24;:::i;:::-;9407:34;:::i;:::-;9389:53;:::i;:::-;9376:66;;9306:142;;;:::o;9454:126::-;9504:9;9537:37;9568:5;9537:37;:::i;:::-;9524:50;;9454:126;;;:::o;9586:146::-;9656:9;9689:37;9720:5;9689:37;:::i;:::-;9676:50;;9586:146;;;:::o;9738:171::-;9845:57;9896:5;9845:57;:::i;:::-;9840:3;9833:70;9738:171;;:::o;9915:262::-;10028:4;10066:2;10055:9;10051:18;10043:26;;10079:91;10167:1;10156:9;10152:17;10143:6;10079:91;:::i;:::-;9915:262;;;;:::o;10183:345::-;10250:6;10299:2;10287:9;10278:7;10274:23;10270:32;10267:119;;;10305:79;;:::i;:::-;10267:119;10425:1;10450:61;10503:7;10494:6;10483:9;10479:22;10450:61;:::i;:::-;10440:71;;10396:125;10183:345;;;;:::o;10534:474::-;10602:6;10610;10659:2;10647:9;10638:7;10634:23;10630:32;10627:119;;;10665:79;;:::i;:::-;10627:119;10785:1;10810:53;10855:7;10846:6;10835:9;10831:22;10810:53;:::i;:::-;10800:63;;10756:117;10912:2;10938:53;10983:7;10974:6;10963:9;10959:22;10938:53;:::i;:::-;10928:63;;10883:118;10534:474;;;;;:::o;11014:117::-;11123:1;11120;11113:12;11165:238;11244:5;11285:3;11276:6;11271:3;11267:16;11263:26;11260:113;;;11292:79;;:::i;:::-;11260:113;11391:6;11382:15;;11165:238;;;;:::o;11409:77::-;11446:7;11475:5;11464:16;;11409:77;;;:::o;11492:122::-;11565:24;11583:5;11565:24;:::i;:::-;11558:5;11555:35;11545:63;;11604:1;11601;11594:12;11545:63;11492:122;:::o;11620:139::-;11666:5;11704:6;11691:20;11682:29;;11720:33;11747:5;11720:33;:::i;:::-;11620:139;;;;:::o;11765:845::-;11875:6;11883;11891;11940:2;11928:9;11919:7;11915:23;11911:32;11908:119;;;11946:79;;:::i;:::-;11908:119;12094:1;12083:9;12079:17;12066:31;12124:18;12116:6;12113:30;12110:117;;;12146:79;;:::i;:::-;12110:117;12251:86;12329:7;12320:6;12309:9;12305:22;12251:86;:::i;:::-;12241:96;;12037:310;12386:2;12412:53;12457:7;12448:6;12437:9;12433:22;12412:53;:::i;:::-;12402:63;;12357:118;12514:2;12540:53;12585:7;12576:6;12565:9;12561:22;12540:53;:::i;:::-;12530:63;;12485:118;11765:845;;;;;:::o;12616:98::-;12667:6;12701:5;12695:12;12685:22;;12616:98;;;:::o;12720:168::-;12803:11;12837:6;12832:3;12825:19;12877:4;12872:3;12868:14;12853:29;;12720:168;;;;:::o;12894:373::-;12980:3;13008:38;13040:5;13008:38;:::i;:::-;13062:70;13125:6;13120:3;13062:70;:::i;:::-;13055:77;;13141:65;13199:6;13194:3;13187:4;13180:5;13176:16;13141:65;:::i;:::-;13231:29;13253:6;13231:29;:::i;:::-;13226:3;13222:39;13215:46;;12984:283;12894:373;;;;:::o;13273:419::-;13412:4;13450:2;13439:9;13435:18;13427:26;;13499:9;13493:4;13489:20;13485:1;13474:9;13470:17;13463:47;13527:76;13598:4;13589:6;13527:76;:::i;:::-;13519:84;;13613:72;13681:2;13670:9;13666:18;13657:6;13613:72;:::i;:::-;13273:419;;;;;:::o;13698:115::-;13783:23;13800:5;13783:23;:::i;:::-;13778:3;13771:36;13698:115;;:::o;13819:218::-;13910:4;13948:2;13937:9;13933:18;13925:26;;13961:69;14027:1;14016:9;14012:17;14003:6;13961:69;:::i;:::-;13819:218;;;;:::o;14043:180::-;14091:77;14088:1;14081:88;14188:4;14185:1;14178:15;14212:4;14209:1;14202:15;14229:320;14273:6;14310:1;14304:4;14300:12;14290:22;;14357:1;14351:4;14347:12;14378:18;14368:81;;14434:4;14426:6;14422:17;14412:27;;14368:81;14496:2;14488:6;14485:14;14465:18;14462:38;14459:84;;14515:18;;:::i;:::-;14459:84;14280:269;14229:320;;;:::o;14555:142::-;14658:32;14684:5;14658:32;:::i;:::-;14653:3;14646:45;14555:142;;:::o;14703:364::-;14840:4;14878:2;14867:9;14863:18;14855:26;;14891:87;14975:1;14964:9;14960:17;14951:6;14891:87;:::i;:::-;14988:72;15056:2;15045:9;15041:18;15032:6;14988:72;:::i;:::-;14703:364;;;;;:::o;15073:254::-;15182:4;15220:2;15209:9;15205:18;15197:26;;15233:87;15317:1;15306:9;15302:17;15293:6;15233:87;:::i;:::-;15073:254;;;;:::o;15333:143::-;15390:5;15421:6;15415:13;15406:22;;15437:33;15464:5;15437:33;:::i;:::-;15333:143;;;;:::o;15482:351::-;15552:6;15601:2;15589:9;15580:7;15576:23;15572:32;15569:119;;;15607:79;;:::i;:::-;15569:119;15727:1;15752:64;15808:7;15799:6;15788:9;15784:22;15752:64;:::i;:::-;15742:74;;15698:128;15482:351;;;;:::o;15839:442::-;15988:4;16026:2;16015:9;16011:18;16003:26;;16039:71;16107:1;16096:9;16092:17;16083:6;16039:71;:::i;:::-;16120:72;16188:2;16177:9;16173:18;16164:6;16120:72;:::i;:::-;16202;16270:2;16259:9;16255:18;16246:6;16202:72;:::i;:::-;15839:442;;;;;;:::o;16287:171::-;16427:23;16423:1;16415:6;16411:14;16404:47;16287:171;:::o;16464:366::-;16606:3;16627:67;16691:2;16686:3;16627:67;:::i;:::-;16620:74;;16703:93;16792:3;16703:93;:::i;:::-;16821:2;16816:3;16812:12;16805:19;;16464:366;;;:::o;16836:419::-;17002:4;17040:2;17029:9;17025:18;17017:26;;17089:9;17083:4;17079:20;17075:1;17064:9;17060:17;17053:47;17117:131;17243:4;17117:131;:::i;:::-;17109:139;;16836:419;;;:::o;17261:180::-;17309:77;17306:1;17299:88;17406:4;17403:1;17396:15;17430:4;17427:1;17420:15;17447:191;17487:3;17506:20;17524:1;17506:20;:::i;:::-;17501:25;;17540:20;17558:1;17540:20;:::i;:::-;17535:25;;17583:1;17580;17576:9;17569:16;;17604:3;17601:1;17598:10;17595:36;;;17611:18;;:::i;:::-;17595:36;17447:191;;;;:::o;17644:225::-;17784:34;17780:1;17772:6;17768:14;17761:58;17853:8;17848:2;17840:6;17836:15;17829:33;17644:225;:::o;17875:366::-;18017:3;18038:67;18102:2;18097:3;18038:67;:::i;:::-;18031:74;;18114:93;18203:3;18114:93;:::i;:::-;18232:2;18227:3;18223:12;18216:19;;17875:366;;;:::o;18247:419::-;18413:4;18451:2;18440:9;18436:18;18428:26;;18500:9;18494:4;18490:20;18486:1;18475:9;18471:17;18464:47;18528:131;18654:4;18528:131;:::i;:::-;18520:139;;18247:419;;;:::o;18672:117::-;18781:1;18778;18771:12;18795:117;18904:1;18901;18894:12;18918:117;19027:1;19024;19017:12;19041:724;19118:4;19124:6;19180:11;19167:25;19280:1;19274:4;19270:12;19259:8;19243:14;19239:29;19235:48;19215:18;19211:73;19201:168;;19288:79;;:::i;:::-;19201:168;19400:18;19390:8;19386:33;19378:41;;19452:4;19439:18;19429:28;;19480:18;19472:6;19469:30;19466:117;;;19502:79;;:::i;:::-;19466:117;19610:2;19604:4;19600:13;19592:21;;19667:4;19659:6;19655:17;19639:14;19635:38;19629:4;19625:49;19622:136;;;19677:79;;:::i;:::-;19622:136;19131:634;19041:724;;;;;:::o;19771:226::-;19911:34;19907:1;19899:6;19895:14;19888:58;19980:9;19975:2;19967:6;19963:15;19956:34;19771:226;:::o;20003:366::-;20145:3;20166:67;20230:2;20225:3;20166:67;:::i;:::-;20159:74;;20242:93;20331:3;20242:93;:::i;:::-;20360:2;20355:3;20351:12;20344:19;;20003:366;;;:::o;20375:419::-;20541:4;20579:2;20568:9;20564:18;20556:26;;20628:9;20622:4;20618:20;20614:1;20603:9;20599:17;20592:47;20656:131;20782:4;20656:131;:::i;:::-;20648:139;;20375:419;;;:::o;20800:176::-;20940:28;20936:1;20928:6;20924:14;20917:52;20800:176;:::o;20982:366::-;21124:3;21145:67;21209:2;21204:3;21145:67;:::i;:::-;21138:74;;21221:93;21310:3;21221:93;:::i;:::-;21339:2;21334:3;21330:12;21323:19;;20982:366;;;:::o;21354:419::-;21520:4;21558:2;21547:9;21543:18;21535:26;;21607:9;21601:4;21597:20;21593:1;21582:9;21578:17;21571:47;21635:131;21761:4;21635:131;:::i;:::-;21627:139;;21354:419;;;:::o;21779:180::-;21827:77;21824:1;21817:88;21924:4;21921:1;21914:15;21948:4;21945:1;21938:15;21965:185;22005:1;22022:20;22040:1;22022:20;:::i;:::-;22017:25;;22056:20;22074:1;22056:20;:::i;:::-;22051:25;;22095:1;22085:35;;22100:18;;:::i;:::-;22085:35;22142:1;22139;22135:9;22130:14;;21965:185;;;;:::o;22156:117::-;22265:1;22262;22255:12;22279:117;22388:1;22385;22378:12;22402:469;22507:9;22518;22556:8;22544:10;22541:24;22538:111;;;22568:79;;:::i;:::-;22538:111;22674:6;22664:8;22661:20;22658:107;;;22684:79;;:::i;:::-;22658:107;22815:1;22803:10;22799:18;22791:6;22787:31;22774:44;;22854:10;22844:8;22840:25;22827:38;;22402:469;;;;;;;:::o;22877:96::-;22935:6;22963:3;22953:13;;22877:96;;;;:::o;23071:150::-;23108:7;23148:66;23141:5;23137:78;23126:89;;23071:150;;;:::o;23227:107::-;23271:8;23321:5;23315:4;23311:16;23290:37;;23227:107;;;;:::o;23340:552::-;23431:5;23462:45;23503:3;23496:5;23462:45;:::i;:::-;23532:5;23556:41;23587:8;23574:22;23556:41;:::i;:::-;23547:50;;23621:2;23613:6;23610:14;23607:278;;;23692:169;23777:66;23747:6;23743:2;23739:15;23736:1;23732:23;23692:169;:::i;:::-;23669:5;23648:227;23639:236;;23607:278;23437:455;;23340:552;;;;:::o;23898:224::-;24038:34;24034:1;24026:6;24022:14;24015:58;24107:7;24102:2;24094:6;24090:15;24083:32;23898:224;:::o;24128:366::-;24270:3;24291:67;24355:2;24350:3;24291:67;:::i;:::-;24284:74;;24367:93;24456:3;24367:93;:::i;:::-;24485:2;24480:3;24476:12;24469:19;;24128:366;;;:::o;24500:419::-;24666:4;24704:2;24693:9;24689:18;24681:26;;24753:9;24747:4;24743:20;24739:1;24728:9;24724:17;24717:47;24781:131;24907:4;24781:131;:::i;:::-;24773:139;;24500:419;;;:::o"},"methodIdentifiers":{"COST_OF_POST()":"796d4371","addStake(uint32)":"0396cb60","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","mintTokens(address,uint256)":"f0dda65c","name()":"06fdde03","owner()":"8da5cb5b","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","symbol()":"95d89b41","theFactory()":"9f5ca221","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accountFactory\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COST_OF_POST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"theFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mintTokens(address,uint256)\":{\"params\":{\"amount\":\"- the amount it will receive.\",\"recipient\":\"- the address that will receive the minted tokens.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"mintTokens(address,uint256)\":{\"notice\":\"helpers for owner, to mint and withdraw tokens.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"transferOwnership(address)\":{\"notice\":\"transfer paymaster ownership. owner of this paymaster is allowed to withdraw funds (tokens transferred to this paymaster's balance) when changing owner, the old owner's withdrawal rights are revoked.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"A sample paymaster that defines itself as a token to pay for gas. The paymaster IS the token to use, since a paymaster cannot use an external contract. Also, the exchange rate has to be fixed, since it can't reference an external Uniswap or other exchange contract. subclass should override \\\"getTokenValueOfEth\\\" to provide actual token exchange rate, settable by the owner. Known Limitation: this paymaster is exploitable when put into a batch with multiple ops (of different accounts): - while a single op can't exploit the paymaster (if postOp fails to withdraw the tokens, the user's op is reverted,   and then we know we can withdraw the tokens), multiple ops with different senders (all using this paymaster)   in a batch can withdraw funds from 2nd and further ops, forcing the paymaster itself to pay (from its deposit) - Possible workarounds are either use a more complex paymaster scheme (e.g. the DepositPaymaster) or   to whitelist the account and the called method ids.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LegacyTokenPaymaster.sol\":\"LegacyTokenPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xbd3189ba19234b7983c343fd70058e21de970feb4bc941c57f14820eb35878a8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d738449768414ab9d4d111113f4641bd0fbc833f9baf74d8ccebe43fe8d7bb\",\"dweb:/ipfs/QmSwpXHUerFzwJFyyLqyGGbzsLTwSimdcMKX5FKksNouEm\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]},\"contracts/utils/LegacyTokenPaymaster.sol\":{\"keccak256\":\"0xdbed634706903048c1ebc5957e8cfc02902c605a58b746ae2d54d66496ae18f5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9aca31778d5d47aef05cb1ae10cb16979e3d088fa6e20a9dd74c027ae7173052\",\"dweb:/ipfs/QmWvXbpPEEAXk3J89PC3LKgpuMhHsjRRSt8qLAFCasJs1V\"]}},\"version\":1}"}}}}}