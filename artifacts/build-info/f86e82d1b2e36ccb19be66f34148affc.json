{"id":"f86e82d1b2e36ccb19be66f34148affc","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/core/BasePaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.20;\r\n\r\n/* solhint-disable reason-string */\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../interfaces/IPaymaster.sol\";\r\nimport \"../interfaces/IEntryPoint.sol\";\r\nimport \"./Helpers.sol\";\r\n\r\n/**\r\n * Helper class for creating a paymaster.\r\n * provides helper methods for staking.\r\n * Validates that the postOp is called only by the entryPoint.\r\n */\r\nabstract contract BasePaymaster is IPaymaster, Ownable {\r\n    IEntryPoint public immutable entryPoint;\r\n\r\n    constructor(IEntryPoint _entryPoint) Ownable(tx.origin) {\r\n        entryPoint = _entryPoint;\r\n    }\r\n\r\n    /// @inheritdoc IPaymaster\r\n    function validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external override returns (bytes memory context, uint256 validationData) {\r\n        _requireFromEntryPoint();\r\n        return _validatePaymasterUserOp(userOp, userOpHash, maxCost);\r\n    }\r\n\r\n    /**\r\n     * Validate a user operation.\r\n     * @param userOp     - The user operation.\r\n     * @param userOpHash - The hash of the user operation.\r\n     * @param maxCost    - The maximum cost of the user operation.\r\n     */\r\n    function _validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) internal virtual returns (bytes memory context, uint256 validationData);\r\n\r\n    /// @inheritdoc IPaymaster\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) external override {\r\n        _requireFromEntryPoint();\r\n        _postOp(mode, context, actualGasCost);\r\n    }\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * (verified to be called only through the entryPoint)\r\n     * @dev If subclass returns a non-empty context from validatePaymasterUserOp,\r\n     *      it must also implement this method.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. still has to pay for gas.\r\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\r\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\r\n     */\r\n    function _postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) internal virtual {\r\n        (mode, context, actualGasCost); // unused params\r\n        // subclass must override this method if validatePaymasterUserOp returns a context\r\n        revert(\"must override\");\r\n    }\r\n\r\n    /**\r\n     * Add a deposit for this paymaster, used for paying for transaction fees.\r\n     */\r\n    function deposit() public payable {\r\n        entryPoint.depositTo{value: msg.value}(address(this));\r\n    }\r\n\r\n    /**\r\n     * Withdraw value from the deposit.\r\n     * @param withdrawAddress - Target to send to.\r\n     * @param amount          - Amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 amount\r\n    ) public onlyOwner {\r\n        entryPoint.withdrawTo(withdrawAddress, amount);\r\n    }\r\n\r\n    /**\r\n     * Add stake for this paymaster.\r\n     * This method can also carry eth value to add to the current stake.\r\n     * @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased.\r\n     */\r\n    function addStake(uint32 unstakeDelaySec) external payable onlyOwner {\r\n        entryPoint.addStake{value: msg.value}(unstakeDelaySec);\r\n    }\r\n\r\n    /**\r\n     * Return current paymaster's deposit on the entryPoint.\r\n     */\r\n    function getDeposit() public view returns (uint256) {\r\n        return entryPoint.balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * Unlock the stake, in order to withdraw it.\r\n     * The paymaster can't serve requests once unlocked, until it calls addStake again\r\n     */\r\n    function unlockStake() external onlyOwner {\r\n        entryPoint.unlockStake();\r\n    }\r\n\r\n    /**\r\n     * Withdraw the entire paymaster's stake.\r\n     * stake must be unlocked first (and then wait for the unstakeDelay to be over)\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external onlyOwner {\r\n        entryPoint.withdrawStake(withdrawAddress);\r\n    }\r\n\r\n    /**\r\n     * Validate the call is made from a valid entrypoint\r\n     */\r\n    function _requireFromEntryPoint() internal virtual {\r\n        require(msg.sender == address(entryPoint), \"Sender not EntryPoint\");\r\n    }\r\n}"},"contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\n/**\r\n * Returned data from validateUserOp.\r\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and\r\n * parsed by `_parseValidationData`.\r\n * @param aggregator  - address(0) - The account validated the signature by itself.\r\n *                      address(1) - The account failed to validate the signature.\r\n *                      otherwise - This is an address of a signature aggregator that must\r\n *                                  be used to validate the signature.\r\n * @param validAfter  - This UserOp is valid only after this timestamp.\r\n * @param validaUntil - This UserOp is valid only up to this timestamp.\r\n */\r\nstruct ValidationData {\r\n    address aggregator;\r\n    uint48 validAfter;\r\n    uint48 validUntil;\r\n}\r\n\r\n/**\r\n * Extract sigFailed, validAfter, validUntil.\r\n * Also convert zero validUntil to type(uint48).max.\r\n * @param validationData - The packed validation data.\r\n */\r\nfunction _parseValidationData(\r\n    uint validationData\r\n) pure returns (ValidationData memory data) {\r\n    address aggregator = address(uint160(validationData));\r\n    uint48 validUntil = uint48(validationData >> 160);\r\n    if (validUntil == 0) {\r\n        validUntil = type(uint48).max;\r\n    }\r\n    uint48 validAfter = uint48(validationData >> (48 + 160));\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Intersect account and paymaster ranges.\r\n * @param validationData          - The packed validation data of the account.\r\n * @param paymasterValidationData - The packed validation data of the paymaster.\r\n */\r\nfunction _intersectTimeRange(\r\n    uint256 validationData,\r\n    uint256 paymasterValidationData\r\n) pure returns (ValidationData memory) {\r\n    ValidationData memory accountValidationData = _parseValidationData(\r\n        validationData\r\n    );\r\n    ValidationData memory pmValidationData = _parseValidationData(\r\n        paymasterValidationData\r\n    );\r\n    address aggregator = accountValidationData.aggregator;\r\n    if (aggregator == address(0)) {\r\n        aggregator = pmValidationData.aggregator;\r\n    }\r\n    uint48 validAfter = accountValidationData.validAfter;\r\n    uint48 validUntil = accountValidationData.validUntil;\r\n    uint48 pmValidAfter = pmValidationData.validAfter;\r\n    uint48 pmValidUntil = pmValidationData.validUntil;\r\n\r\n    if (validAfter < pmValidAfter) validAfter = pmValidAfter;\r\n    if (validUntil > pmValidUntil) validUntil = pmValidUntil;\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp.\r\n * @param data - The ValidationData to pack.\r\n */\r\nfunction _packValidationData(\r\n    ValidationData memory data\r\n) pure returns (uint256) {\r\n    return\r\n        uint160(data.aggregator) |\r\n        (uint256(data.validUntil) << 160) |\r\n        (uint256(data.validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\r\n * @param sigFailed  - True for signature failure, false for success.\r\n * @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\r\n * @param validAfter - First timestamp this UserOperation is valid.\r\n */\r\nfunction _packValidationData(\r\n    bool sigFailed,\r\n    uint48 validUntil,\r\n    uint48 validAfter\r\n) pure returns (uint256) {\r\n    return\r\n        (sigFailed ? 1 : 0) |\r\n        (uint256(validUntil) << 160) |\r\n        (uint256(validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * keccak function over calldata.\r\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\r\n */\r\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\r\n        assembly {\r\n            let mem := mload(0x40)\r\n            let len := data.length\r\n            calldatacopy(mem, data.offset, len)\r\n            ret := keccak256(mem, len)\r\n        }\r\n    }"},"contracts/core/UserOperationLib.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.20;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\nimport {calldataKeccak} from \"./Helpers.sol\";\r\nimport \"../interfaces/UserOperation.sol\";\r\n\r\n/**\r\n * Utility functions helpful when working with UserOperation structs.\r\n */\r\nlibrary UserOperationLib {\r\n    /**\r\n     * Get sender from user operation data.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function getSender(\r\n        UserOperation calldata userOp\r\n    ) internal pure returns (address) {\r\n        address data;\r\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\r\n        assembly {\r\n            data := calldataload(userOp)\r\n        }\r\n        return address(uint160(data));\r\n    }\r\n\r\n    /**\r\n     * Relayer/block builder might submit the TX with higher priorityFee,\r\n     * but the user should not pay above what he signed for.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function gasPrice(\r\n        UserOperation calldata userOp\r\n    ) internal view returns (uint256) {\r\n        unchecked {\r\n            uint256 maxFeePerGas = userOp.maxFeePerGas;\r\n            uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\r\n            if (maxFeePerGas == maxPriorityFeePerGas) {\r\n                //legacy mode (for networks that don't support basefee opcode)\r\n                return maxFeePerGas;\r\n            }\r\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pack the user operation data into bytes for hashing.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function pack(\r\n        UserOperation calldata userOp\r\n    ) internal pure returns (bytes memory ret) {\r\n        address sender = getSender(userOp);\r\n        uint256 nonce = userOp.nonce;\r\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\r\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\r\n        uint256 callGasLimit = userOp.callGasLimit;\r\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\r\n        uint256 preVerificationGas = userOp.preVerificationGas;\r\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\r\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\r\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\r\n\r\n        return abi.encode(\r\n            sender, nonce,\r\n            hashInitCode, hashCallData,\r\n            callGasLimit, verificationGasLimit, preVerificationGas,\r\n            maxFeePerGas, maxPriorityFeePerGas,\r\n            hashPaymasterAndData\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Hash the user operation data.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function hash(\r\n        UserOperation calldata userOp\r\n    ) internal pure returns (bytes32) {\r\n        return keccak256(pack(userOp));\r\n    }\r\n\r\n    /**\r\n     * The minimum of two numbers.\r\n     * @param a - First number.\r\n     * @param b - Second number.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}"},"contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\n/**\r\n * Aggregated Signatures validator.\r\n */\r\ninterface IAggregator {\r\n    /**\r\n     * Validate aggregated signature.\r\n     * Revert if the aggregated signature does not match the given list of operations.\r\n     * @param userOps   - Array of UserOperations to validate the signature for.\r\n     * @param signature - The aggregated signature.\r\n     */\r\n    function validateSignatures(\r\n        UserOperation[] calldata userOps,\r\n        bytes calldata signature\r\n    ) external view;\r\n\r\n    /**\r\n     * Validate signature of a single userOp.\r\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\r\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\r\n     * @param userOp        - The userOperation received from the user.\r\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\r\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\r\n     */\r\n    function validateUserOpSignature(\r\n        UserOperation calldata userOp\r\n    ) external view returns (bytes memory sigForUserOp);\r\n\r\n    /**\r\n     * Aggregate multiple signatures into a single value.\r\n     * This method is called off-chain to calculate the signature to pass with handleOps()\r\n     * bundler MAY use optimized custom code perform this aggregation.\r\n     * @param userOps              - Array of UserOperations to collect the signatures from.\r\n     * @return aggregatedSignature - The aggregated signature.\r\n     */\r\n    function aggregateSignatures(\r\n        UserOperation[] calldata userOps\r\n    ) external view returns (bytes memory aggregatedSignature);\r\n}\r\n"},"contracts/interfaces/IEntryPoint.sol":{"content":"/**\r\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\r\n ** Only one instance required on each chain.\r\n **/\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable reason-string */\r\n\r\nimport \"./UserOperation.sol\";\r\nimport \"./IStakeManager.sol\";\r\nimport \"./IAggregator.sol\";\r\nimport \"./INonceManager.sol\";\r\n\r\ninterface IEntryPoint is IStakeManager, INonceManager {\r\n    /***\r\n     * An event emitted after each successful request.\r\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\r\n     * @param sender        - The account that generates this request.\r\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\r\n     * @param nonce         - The nonce value from the request.\r\n     * @param success       - True if the sender transaction succeeded, false if reverted.\r\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\r\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\r\n     *                        validation and execution).\r\n     */\r\n    event UserOperationEvent(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address indexed paymaster,\r\n        uint256 nonce,\r\n        bool success,\r\n        uint256 actualGasCost,\r\n        uint256 actualGasUsed\r\n    );\r\n\r\n    /**\r\n     * Account \"sender\" was deployed.\r\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\r\n     * @param sender     - The account that is deployed\r\n     * @param factory    - The factory used to deploy this account (in the initCode)\r\n     * @param paymaster  - The paymaster used by this UserOp\r\n     */\r\n    event AccountDeployed(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address factory,\r\n        address paymaster\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event UserOperationRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event PostOpRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted by handleOps(), before starting the execution loop.\r\n     * Any event emitted before this event, is part of the validation.\r\n     */\r\n    event BeforeExecution();\r\n\r\n    /**\r\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\r\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\r\n     */\r\n    event SignatureAggregatorChanged(address indexed aggregator);\r\n\r\n    /**\r\n     * A custom revert error of handleOps, to identify the offending op.\r\n     * Should be caught in off-chain handleOps simulation and not happen on-chain.\r\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\r\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\r\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\r\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\r\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\r\n     *                  so a failure can be attributed to the correct entity.\r\n     */\r\n    error FailedOp(uint256 opIndex, string reason);\r\n\r\n    error PostOpReverted(bytes returnData);\r\n\r\n    /**\r\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\r\n     * @param aggregator The aggregator that failed to verify the signature\r\n     */\r\n    error SignatureValidationFailed(address aggregator);\r\n\r\n    // Return value of getSenderAddress.\r\n    error SenderAddressResult(address sender);\r\n\r\n    // UserOps handled, per aggregator.\r\n    struct UserOpsPerAggregator {\r\n        UserOperation[] userOps;\r\n        // Aggregator address\r\n        IAggregator aggregator;\r\n        // Aggregated signature\r\n        bytes signature;\r\n    }\r\n\r\n    /**\r\n     * Execute a batch of UserOperations.\r\n     * No signature aggregator is used.\r\n     * If any account requires an aggregator (that is, it returned an aggregator when\r\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\r\n     * @param ops         - The operations to execute.\r\n     * @param beneficiary - The address to receive the fees.\r\n     */\r\n    function handleOps(\r\n        UserOperation[] calldata ops,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Execute a batch of UserOperation with Aggregators\r\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\r\n     * @param beneficiary      - The address to receive the fees.\r\n     */\r\n    function handleAggregatedOps(\r\n        UserOpsPerAggregator[] calldata opsPerAggregator,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Generate a request Id - unique identifier for this request.\r\n     * The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\r\n     * @param userOp - The user operation to generate the request ID for.\r\n     */\r\n    function getUserOpHash(\r\n        UserOperation calldata userOp\r\n    ) external view returns (bytes32);\r\n\r\n    /**\r\n     * Gas and return values during simulation.\r\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\r\n     * @param prefund          - The required prefund for this operation\r\n     * @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\r\n     * @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\r\n     */\r\n    struct ReturnInfo {\r\n        uint256 preOpGas;\r\n        uint256 prefund;\r\n        bool sigFailed;\r\n        uint48 validAfter;\r\n        uint48 validUntil;\r\n        bytes paymasterContext;\r\n    }\r\n\r\n    /**\r\n     * Returned aggregated signature info:\r\n     * The aggregator returned by the account, and its current stake.\r\n     */\r\n    struct AggregatorStakeInfo {\r\n        address aggregator;\r\n        StakeInfo stakeInfo;\r\n    }\r\n\r\n    /**\r\n     * Get counterfactual sender address.\r\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\r\n     * This method always revert, and returns the address in SenderAddressResult error\r\n     * @param initCode - The constructor code to be passed into the UserOperation.\r\n     */\r\n    function getSenderAddress(bytes memory initCode) external;\r\n\r\n}\r\n"},"contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\ninterface INonceManager {\r\n\r\n    /**\r\n     * Return the next nonce for this sender.\r\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\r\n     * But UserOp with different keys can come with arbitrary order.\r\n     *\r\n     * @param sender the account address\r\n     * @param key the high 192 bit of the nonce\r\n     * @return nonce a full nonce to pass for next UserOp with this sender.\r\n     */\r\n    function getNonce(address sender, uint192 key)\r\n    external view returns (uint256 nonce);\r\n\r\n    /**\r\n     * Manually increment the nonce of the sender.\r\n     * This method is exposed just for completeness..\r\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\r\n     * as the EntryPoint will update the nonce regardless.\r\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\r\n     * UserOperations will not pay extra for the first transaction with a given key.\r\n     */\r\n    function incrementNonce(uint192 key) external;\r\n}\r\n"},"contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\n/**\r\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\r\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\r\n */\r\ninterface IPaymaster {\r\n    enum PostOpMode {\r\n        // User op succeeded.\r\n        opSucceeded,\r\n        // User op reverted. Still has to pay for gas.\r\n        opReverted,\r\n        // User op succeeded, but caused postOp to revert.\r\n        // Only used internally in the EntryPoint - Paymasters will not be called again.\r\n        postOpReverted\r\n    }\r\n\r\n    /**\r\n     * Payment validation: check if paymaster agrees to pay.\r\n     * Must verify sender is the entryPoint.\r\n     * Revert to reject this request.\r\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\r\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\r\n     * @param userOp          - The user operation.\r\n     * @param userOpHash      - Hash of the user's request data.\r\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\r\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\r\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\r\n     *                          value of validateUserOperation.\r\n     *                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\r\n     *                                                    otherwise, an address of an \"authorizer\" contract.\r\n     *                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\r\n     *                          <6-byte> validAfter - first timestamp this operation is valid\r\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external returns (bytes memory context, uint256 validationData);\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * Must verify sender is the entryPoint.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. still has to pay for gas.\r\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\r\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\r\n     */\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * Manage deposits and stakes.\r\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\r\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\r\n */\r\ninterface IStakeManager {\r\n    event Deposited(address indexed account, uint256 totalDeposit);\r\n\r\n    event Withdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    // Emitted when stake or unstake delay are modified.\r\n    event StakeLocked(\r\n        address indexed account,\r\n        uint256 totalStaked,\r\n        uint256 unstakeDelaySec\r\n    );\r\n\r\n    // Emitted once a stake is scheduled for withdrawal.\r\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\r\n\r\n    event StakeWithdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @param deposit         - The entity's deposit.\r\n     * @param staked          - True if this entity is staked.\r\n     * @param stake           - Actual amount of ether staked for this entity.\r\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\r\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\r\n     * @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\r\n     *      and the rest fit into a 2nd cell.\r\n     *      - 112 bit allows for 10^15 eth\r\n     *      - 48 bit for full timestamp\r\n     *      - 32 bit allows 150 years for unstake delay\r\n     */\r\n    struct DepositInfo {\r\n        uint112 deposit;\r\n        bool staked;\r\n        uint112 stake;\r\n        uint32 unstakeDelaySec;\r\n        uint48 withdrawTime;\r\n    }\r\n\r\n    // API struct used by getStakeInfo and simulateValidation.\r\n    struct StakeInfo {\r\n        uint256 stake;\r\n        uint256 unstakeDelaySec;\r\n    }\r\n\r\n    /**\r\n     * Get deposit info.\r\n     * @param account - The account to query.\r\n     * @return info   - Full deposit information of given account.\r\n     */\r\n    function getDepositInfo(\r\n        address account\r\n    ) external view returns (DepositInfo memory info);\r\n\r\n    /**\r\n     * Get account balance.\r\n     * @param account - The account to query.\r\n     * @return        - The deposit (for gas payment) of the account.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * Add to the deposit of the given account.\r\n     * @param account - The account to add to.\r\n     */\r\n    function depositTo(address account) external payable;\r\n\r\n    /**\r\n     * Add to the account's stake - amount and delay\r\n     * any pending unstake is first cancelled.\r\n     * @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\r\n     */\r\n    function addStake(uint32 _unstakeDelaySec) external payable;\r\n\r\n    /**\r\n     * Attempt to unlock the stake.\r\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\r\n     */\r\n    function unlockStake() external;\r\n\r\n    /**\r\n     * Withdraw from the (unlocked) stake.\r\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external;\r\n\r\n    /**\r\n     * Withdraw from the deposit.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     * @param withdrawAmount  - The amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 withdrawAmount\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * User Operation struct\r\n * @param sender                - The sender account of this request.\r\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\r\n * @param initCode              - If set, the account contract will be created by this constructor/\r\n * @param callData              - The method call to execute on this account.\r\n * @param callGasLimit          - The gas limit passed to the callData method call.\r\n * @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\r\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\r\n *                                Covers batch overhead.\r\n * @param maxFeePerGas          - Same as EIP-1559 gas parameter.\r\n * @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\r\n * @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\r\n *                                The paymaster will pay for the transaction instead of the sender.\r\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\r\n */\r\nstruct UserOperation {\r\n    address sender;\r\n    uint256 nonce;\r\n    bytes initCode;\r\n    bytes callData;\r\n    uint256 callGasLimit;\r\n    uint256 verificationGasLimit;\r\n    uint256 preVerificationGas;\r\n    uint256 maxFeePerGas;\r\n    uint256 maxPriorityFeePerGas;\r\n    bytes paymasterAndData;\r\n    bytes signature;\r\n}\r\n"},"contracts/utils/VerifyingPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.20;\r\n\r\n/* solhint-disable reason-string */\r\n/* solhint-disable no-inline-assembly */\r\n\r\nimport \"../core/BasePaymaster.sol\";\r\nimport \"../core/UserOperationLib.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\r\n\r\n/**\r\n * A sample paymaster that uses external service to decide whether to pay for the UserOp.\r\n * The paymaster trusts an external signer to sign the transaction.\r\n * The calling user must pass the UserOp to that external signer first, which performs\r\n * whatever off-chain verification before signing the UserOp.\r\n * Note that this signature is NOT a replacement for the account-specific signature:\r\n * - the paymaster checks a signature to agree to PAY for GAS.\r\n * - the account checks a signature to prove identity and account ownership.\r\n */\r\n \r\ncontract VerifyingPaymaster is BasePaymaster {\r\n\r\n    using ECDSA for bytes32;\r\n    using UserOperationLib for UserOperation;\r\n\r\n    address public Admin;\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == Admin, \"only admin\");\r\n        _;\r\n    }\r\n\r\n    address public verifyingSigner;\r\n\r\n    uint256 private constant VALID_TIMESTAMP_OFFSET = 20;\r\n\r\n    uint256 private constant SIGNATURE_OFFSET = 84;\r\n\r\n    constructor(IEntryPoint _entryPoint, address _verifyingSigner) BasePaymaster(_entryPoint) {\r\n        verifyingSigner = _verifyingSigner;\r\n        Admin = msg.sender;\r\n    }\r\n\r\n    function ChangeAdmin(address _newAdmin) public onlyAdmin {\r\n        Admin = _newAdmin;\r\n    }\r\n\r\n    /**\r\n     * return the hash we're going to sign off-chain (and validate on-chain)\r\n     * this method is called by the off-chain service, to sign the request.\r\n     * it is called on-chain from the validatePaymasterUserOp, to validate the signature.\r\n     * note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\",\r\n     * which will carry the signature itself.\r\n     */\r\n\r\n    function getHash(UserOperation calldata userOp, uint48 validUntil, uint48 validAfter)\r\n    public view returns (bytes32) {\r\n        return keccak256(abi.encodePacked(\r\n            getPartialHash(userOp, validUntil, validAfter),\r\n            block.chainid,\r\n            address(this)\r\n        ));\r\n}\r\n\r\nfunction getPartialHash(UserOperation calldata userOp, uint48 validUntil, uint48 validAfter)\r\n    internal pure returns (bytes memory) {\r\n        address sender = userOp.getSender();\r\n        return abi.encode(\r\n            sender,\r\n            userOp.nonce,\r\n            keccak256(userOp.initCode),\r\n            keccak256(userOp.callData),\r\n            userOp.callGasLimit,\r\n            userOp.verificationGasLimit,\r\n            userOp.preVerificationGas,\r\n            userOp.maxFeePerGas,\r\n            userOp.maxPriorityFeePerGas,\r\n            validUntil,\r\n            validAfter\r\n        );\r\n}\r\n\r\n\r\n    /**\r\n     * verify our external signer signed this request.\r\n     * the \"paymasterAndData\" is expected to be the paymaster and a signature over the entire request params\r\n     * paymasterAndData[:20] : address(this)\r\n     * paymasterAndData[20:84] : abi.encode(validUntil, validAfter)\r\n     * paymasterAndData[84:] : signature\r\n     */\r\n\r\n    function _validatePaymasterUserOp(UserOperation calldata userOp, bytes32 /*userOpHash*/, uint256 requiredPreFund)\r\n    internal view override returns (bytes memory context, uint256 vcalidationData) {\r\n        (requiredPreFund);\r\n\r\n        (uint48 validUntil, uint48 validAfter, bytes calldata signature) = parsePaymasterAndData(userOp.paymasterAndData);\r\n        //ECDSA library supports both 64 and 65-byte long signatures.\r\n        // we only \"require\" it here so that the revert reason on invalid signature will be of \"VerifyingPaymaster\", and not \"ECDSA\"\r\n        require(signature.length == 64 || signature.length == 65, \"VerifyingPaymaster: invalid signature length in paymasterAndData\");\r\n        bytes32 hash = MessageHashUtils.toEthSignedMessageHash(getHash(userOp, validUntil, validAfter));\r\n\r\n        //don't revert on signature failure: return SIG_VALIDATION_FAILED\r\n        if (verifyingSigner != ECDSA.recover(hash, signature)) {\r\n            return (\"\",_packValidationData(true,validUntil,validAfter));\r\n        }\r\n\r\n        //no need for other on-chain validation: entire UserOp should have been checked\r\n        // by the external service prior to signing it.\r\n        return (\"\",_packValidationData(false,validUntil,validAfter));\r\n    }\r\n\r\n    function validatePaymasterUserOpPub(UserOperation calldata userOp, bytes32 /*userOpHash*/, uint256 requiredPreFund)\r\n    external view returns (bytes memory context, uint256 vcalidationData) {\r\n        (requiredPreFund);\r\n\r\n        (uint48 validUntil, uint48 validAfter, bytes calldata signature) = parsePaymasterAndData(userOp.paymasterAndData);\r\n        //ECDSA library supports both 64 and 65-byte long signatures.\r\n        // we only \"require\" it here so that the revert reason on invalid signature will be of \"VerifyingPaymaster\", and not \"ECDSA\"\r\n        require(signature.length == 64 || signature.length == 65, \"VerifyingPaymaster: invalid signature length in paymasterAndData\");\r\n        bytes32 hash = MessageHashUtils.toEthSignedMessageHash(getHash(userOp, validUntil, validAfter));\r\n\r\n        //don't revert on signature failure: return SIG_VALIDATION_FAILED\r\n        require(verifyingSigner == ECDSA.recover(hash, signature), \"err sig\");\r\n\r\n        //no need for other on-chain validation: entire UserOp should have been checked\r\n        // by the external service prior to signing it.\r\n        return (\"\",_packValidationData(false,validUntil,validAfter));\r\n    }\r\n\r\n    function parsePaymasterAndData(bytes calldata paymasterAndData) public pure returns(uint48 validUntil, uint48 validAfter, bytes calldata signature) {\r\n        (validUntil, validAfter) = abi.decode(paymasterAndData[VALID_TIMESTAMP_OFFSET:SIGNATURE_OFFSET],(uint48, uint48));\r\n        signature = paymasterAndData[SIGNATURE_OFFSET:];\r\n    }\r\n\r\n\r\n    function withdrawBalance() external onlyAdmin {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n\r\n    receive() external payable {}\r\n\r\n    \r\n    \r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[169],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":170,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":169,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,169],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[169]},"id":170,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":169,"linearizedBaseContracts":[169],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":169,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":169,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":170,"src":"624:235:1","usedErrors":[],"usedEvents":[]}],"src":"101:759:1"},"id":1},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1900],"SignedMath":[2005],"Strings":[424]},"id":425,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":171,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":425,"sourceUnit":1901,"src":"127:37:2","symbolAliases":[{"foreign":{"id":172,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"135:4:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":425,"sourceUnit":2006,"src":"165:49:2","symbolAliases":[{"foreign":{"id":174,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"173:10:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"216:34:2","text":" @dev String operations."},"fullyImplemented":true,"id":424,"linearizedBaseContracts":[424],"name":"Strings","nameLocation":"259:7:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":179,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:2","nodeType":"VariableDeclaration","scope":424,"src":"273:56:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":177,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:2","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":182,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:2","nodeType":"VariableDeclaration","scope":424,"src":"335:42:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":180,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"384:81:2","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":189,"name":"StringsInsufficientHexLength","nameLocation":"476:28:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"value","nameLocation":"513:5:2","nodeType":"VariableDeclaration","scope":189,"src":"505:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"length","nameLocation":"528:6:2","nodeType":"VariableDeclaration","scope":189,"src":"520:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:2"},"src":"470:66:2"},{"body":{"id":236,"nodeType":"Block","src":"708:627:2","statements":[{"id":235,"nodeType":"UncheckedBlock","src":"718:611:2","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"length","nameLocation":"750:6:2","nodeType":"VariableDeclaration","scope":235,"src":"742:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":205,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"770:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":199,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"759:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1900_$","typeString":"type(library Math)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:2","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"759:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:2"},{"assignments":[207],"declarations":[{"constant":false,"id":207,"mutability":"mutable","name":"buffer","nameLocation":"808:6:2","nodeType":"VariableDeclaration","scope":235,"src":"794:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":206,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":212,"initialValue":{"arguments":[{"id":210,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"828:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":208,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:2"},{"assignments":[214],"declarations":[{"constant":false,"id":214,"mutability":"mutable","name":"ptr","nameLocation":"857:3:2","nodeType":"VariableDeclaration","scope":235,"src":"849:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":215,"nodeType":"VariableDeclarationStatement","src":"849:11:2"},{"AST":{"nodeType":"YulBlock","src":"930:67:2","statements":[{"nodeType":"YulAssignment","src":"948:35:2","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:2","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:2"},"nodeType":"YulFunctionCall","src":"967:15:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:2"},"nodeType":"YulFunctionCall","src":"955:28:2"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:2"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":207,"isOffset":false,"isSlot":false,"src":"959:6:2","valueSize":1},{"declaration":198,"isOffset":false,"isSlot":false,"src":"975:6:2","valueSize":1},{"declaration":214,"isOffset":false,"isSlot":false,"src":"948:3:2","valueSize":1}],"id":216,"nodeType":"InlineAssembly","src":"921:76:2"},{"body":{"id":231,"nodeType":"Block","src":"1023:269:2","statements":[{"expression":{"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:2","subExpression":{"id":218,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"1041:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":220,"nodeType":"ExpressionStatement","src":"1041:5:2"},{"AST":{"nodeType":"YulBlock","src":"1124:86:2","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:2"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:2","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:2"},"nodeType":"YulFunctionCall","src":"1164:14:2"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:2"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:2"},"nodeType":"YulFunctionCall","src":"1159:32:2"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:2"},"nodeType":"YulFunctionCall","src":"1146:46:2"},"nodeType":"YulExpressionStatement","src":"1146:46:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":179,"isOffset":false,"isSlot":false,"src":"1180:10:2","valueSize":1},{"declaration":214,"isOffset":false,"isSlot":false,"src":"1154:3:2","valueSize":1},{"declaration":192,"isOffset":false,"isSlot":false,"src":"1168:5:2","valueSize":1}],"id":221,"nodeType":"InlineAssembly","src":"1115:95:2"},{"expression":{"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"1227:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":225,"nodeType":"ExpressionStatement","src":"1227:11:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"1260:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"IfStatement","src":"1256:21:2","trueBody":{"id":229,"nodeType":"Break","src":"1272:5:2"}}]},"condition":{"hexValue":"74727565","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":232,"nodeType":"WhileStatement","src":"1010:282:2"},{"expression":{"id":233,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1312:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":196,"id":234,"nodeType":"Return","src":"1305:13:2"}]}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"542:90:2","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":237,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:2","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"value","nameLocation":"663:5:2","nodeType":"VariableDeclaration","scope":237,"src":"655:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:2"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"693:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":194,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:2"},"scope":424,"src":"637:698:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":262,"nodeType":"Block","src":"1511:92:2","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"1542:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:2","trueExpression":{"hexValue":"2d","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"1588:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":255,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"1573:10:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2005_$","typeString":"type(library SignedMath)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:2","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"1573:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":254,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1564:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":245,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:2","typeDescriptions":{}}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:2","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":244,"id":261,"nodeType":"Return","src":"1521:75:2"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"1341:89:2","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":263,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:2","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"value","nameLocation":"1466:5:2","nodeType":"VariableDeclaration","scope":263,"src":"1459:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":239,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:2"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"1496:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":242,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:2"},"scope":424,"src":"1435:168:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"1782:100:2","statements":[{"id":281,"nodeType":"UncheckedBlock","src":"1792:84:2","statements":[{"expression":{"arguments":[{"id":272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1835:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1854:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":273,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1842:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1900_$","typeString":"type(library Math)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:2","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"1842:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":271,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[283,366,386],"referencedDeclaration":366,"src":"1823:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":270,"id":280,"nodeType":"Return","src":"1816:49:2"}]}]},"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"1609:94:2","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:2","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"value","nameLocation":"1737:5:2","nodeType":"VariableDeclaration","scope":283,"src":"1729:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:2"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":283,"src":"1767:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":268,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:2"},"scope":424,"src":"1708:174:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":365,"nodeType":"Block","src":"2095:435:2","statements":[{"assignments":[294],"declarations":[{"constant":false,"id":294,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:2","nodeType":"VariableDeclaration","scope":365,"src":"2105:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":296,"initialValue":{"id":295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"2126:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:2"},{"assignments":[298],"declarations":[{"constant":false,"id":298,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:2","nodeType":"VariableDeclaration","scope":365,"src":"2141:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":297,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":307,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":302,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2177:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":299,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:2"},{"expression":{"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":308,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2198:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":310,"indexExpression":{"hexValue":"30","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":313,"nodeType":"ExpressionStatement","src":"2198:15:2"},{"expression":{"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":314,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2223:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":316,"indexExpression":{"hexValue":"31","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":319,"nodeType":"ExpressionStatement","src":"2223:15:2"},{"body":{"id":348,"nodeType":"Block","src":"2293:95:2","statements":[{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":334,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2307:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":336,"indexExpression":{"id":335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2314:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":337,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"2319:10:2","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":341,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":338,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2330:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:2","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":343,"nodeType":"ExpressionStatement","src":"2307:40:2"},{"expression":{"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":344,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2361:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":347,"nodeType":"ExpressionStatement","src":"2361:16:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":328,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2281:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":349,"initializationExpression":{"assignments":[321],"declarations":[{"constant":false,"id":321,"mutability":"mutable","name":"i","nameLocation":"2261:1:2","nodeType":"VariableDeclaration","scope":349,"src":"2253:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":327,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":323,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2269:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:2"},"loopExpression":{"expression":{"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:2","subExpression":{"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2290:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ExpressionStatement","src":"2288:3:2"},"nodeType":"ForStatement","src":"2248:140:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":350,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2401:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":359,"nodeType":"IfStatement","src":"2397:96:2","trueBody":{"id":358,"nodeType":"Block","src":"2418:75:2","statements":[{"errorCall":{"arguments":[{"id":354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"2468:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":355,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2475:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":353,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2439:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":357,"nodeType":"RevertStatement","src":"2432:50:2"}]}},{"expression":{"arguments":[{"id":362,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2516:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":360,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:2","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":292,"id":364,"nodeType":"Return","src":"2502:21:2"}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"1888:112:2","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":366,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:2","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"value","nameLocation":"2034:5:2","nodeType":"VariableDeclaration","scope":366,"src":"2026:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"length","nameLocation":"2049:6:2","nodeType":"VariableDeclaration","scope":366,"src":"2041:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:2"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":366,"src":"2080:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":290,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:2"},"scope":424,"src":"2005:525:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":385,"nodeType":"Block","src":"2762:75:2","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":379,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2807:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":377,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:2","typeDescriptions":{}}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:2","typeDescriptions":{}}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":382,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2815:14:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":374,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[283,366,386],"referencedDeclaration":366,"src":"2779:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":373,"id":384,"nodeType":"Return","src":"2772:58:2"}]},"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"2536:148:2","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":386,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:2","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"addr","nameLocation":"2718:4:2","nodeType":"VariableDeclaration","scope":386,"src":"2710:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:2"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"2747:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":371,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:2"},"scope":424,"src":"2689:148:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":422,"nodeType":"Block","src":"2992:104:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"3015:1:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":396,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:2","typeDescriptions":{}}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:2","memberName":"length","nodeType":"MemberAccess","src":"3009:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"3034:1:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":401,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:2","typeDescriptions":{}}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:2","memberName":"length","nodeType":"MemberAccess","src":"3028:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":410,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"3063:1:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":408,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:2","typeDescriptions":{}}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":407,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"3086:1:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":414,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:2","typeDescriptions":{}}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":413,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":395,"id":421,"nodeType":"Return","src":"3002:87:2"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"2843:66:2","text":" @dev Returns true if the two strings are equal."},"id":423,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:2","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"a","nameLocation":"2943:1:2","nodeType":"VariableDeclaration","scope":423,"src":"2929:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":388,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"b","nameLocation":"2960:1:2","nodeType":"VariableDeclaration","scope":423,"src":"2946:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":390,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:2"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":423,"src":"2986:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":393,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:2"},"scope":424,"src":"2914:182:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":425,"src":"251:2847:2","usedErrors":[189],"usedEvents":[]}],"src":"101:2998:2"},"id":2},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[772]},"id":773,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":426,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"138:205:3","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":772,"linearizedBaseContracts":[772],"name":"ECDSA","nameLocation":"352:5:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":432,"members":[{"id":428,"name":"NoError","nameLocation":"392:7:3","nodeType":"EnumValue","src":"392:7:3"},{"id":429,"name":"InvalidSignature","nameLocation":"409:16:3","nodeType":"EnumValue","src":"409:16:3"},{"id":430,"name":"InvalidSignatureLength","nameLocation":"435:22:3","nodeType":"EnumValue","src":"435:22:3"},{"id":431,"name":"InvalidSignatureS","nameLocation":"467:17:3","nodeType":"EnumValue","src":"467:17:3"}],"name":"RecoverError","nameLocation":"369:12:3","nodeType":"EnumDefinition","src":"364:126:3"},{"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"496:63:3","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":435,"name":"ECDSAInvalidSignature","nameLocation":"570:21:3","nodeType":"ErrorDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[],"src":"591:2:3"},"src":"564:30:3"},{"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"600:60:3","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":440,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:3","nodeType":"ErrorDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"length","nameLocation":"707:6:3","nodeType":"VariableDeclaration","scope":440,"src":"699:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:3"},"src":"665:50:3"},{"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"721:85:3","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":445,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:3","nodeType":"ErrorDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"s","nameLocation":"848:1:3","nodeType":"VariableDeclaration","scope":445,"src":"840:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:3"},"src":"811:40:3"},{"body":{"id":497,"nodeType":"Block","src":"2242:653:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":460,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"2256:9:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:3","memberName":"length","nodeType":"MemberAccess","src":"2256:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:3","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":495,"nodeType":"Block","src":"2781:108:3","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:3","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":486,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2815:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$432_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:3","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":430,"src":"2815:35:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":490,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"2860:9:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:3","memberName":"length","nodeType":"MemberAccess","src":"2860:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:3","typeDescriptions":{}}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":459,"id":494,"nodeType":"Return","src":"2795:83:3"}]},"id":496,"nodeType":"IfStatement","src":"2252:637:3","trueBody":{"id":481,"nodeType":"Block","src":"2280:495:3","statements":[{"assignments":[465],"declarations":[{"constant":false,"id":465,"mutability":"mutable","name":"r","nameLocation":"2302:1:3","nodeType":"VariableDeclaration","scope":481,"src":"2294:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":466,"nodeType":"VariableDeclarationStatement","src":"2294:9:3"},{"assignments":[468],"declarations":[{"constant":false,"id":468,"mutability":"mutable","name":"s","nameLocation":"2325:1:3","nodeType":"VariableDeclaration","scope":481,"src":"2317:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":469,"nodeType":"VariableDeclarationStatement","src":"2317:9:3"},{"assignments":[471],"declarations":[{"constant":false,"id":471,"mutability":"mutable","name":"v","nameLocation":"2346:1:3","nodeType":"VariableDeclaration","scope":481,"src":"2340:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":470,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":472,"nodeType":"VariableDeclarationStatement","src":"2340:7:3"},{"AST":{"nodeType":"YulBlock","src":"2548:171:3","statements":[{"nodeType":"YulAssignment","src":"2566:32:3","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:3"},"nodeType":"YulFunctionCall","src":"2577:20:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:3"},"nodeType":"YulFunctionCall","src":"2571:27:3"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:3"}]},{"nodeType":"YulAssignment","src":"2615:32:3","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:3"},"nodeType":"YulFunctionCall","src":"2626:20:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:3"},"nodeType":"YulFunctionCall","src":"2620:27:3"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:3"}]},{"nodeType":"YulAssignment","src":"2664:41:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:3","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:3","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:3"},"nodeType":"YulFunctionCall","src":"2683:20:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:3"},"nodeType":"YulFunctionCall","src":"2677:27:3"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:3"},"nodeType":"YulFunctionCall","src":"2669:36:3"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:3"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":465,"isOffset":false,"isSlot":false,"src":"2566:1:3","valueSize":1},{"declaration":468,"isOffset":false,"isSlot":false,"src":"2615:1:3","valueSize":1},{"declaration":450,"isOffset":false,"isSlot":false,"src":"2581:9:3","valueSize":1},{"declaration":450,"isOffset":false,"isSlot":false,"src":"2630:9:3","valueSize":1},{"declaration":450,"isOffset":false,"isSlot":false,"src":"2687:9:3","valueSize":1},{"declaration":471,"isOffset":false,"isSlot":false,"src":"2664:1:3","valueSize":1}],"id":473,"nodeType":"InlineAssembly","src":"2539:180:3"},{"expression":{"arguments":[{"id":475,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"2750:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":476,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"2756:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":477,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2759:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":478,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"2762:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":474,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[498,578,686],"referencedDeclaration":686,"src":"2739:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":459,"id":480,"nodeType":"Return","src":"2732:32:3"}]}}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"857:1267:3","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":498,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:3","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"hash","nameLocation":"2157:4:3","nodeType":"VariableDeclaration","scope":498,"src":"2149:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"signature","nameLocation":"2176:9:3","nodeType":"VariableDeclaration","scope":498,"src":"2163:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":449,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:3"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"2210:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"2219:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":455,"nodeType":"UserDefinedTypeName","pathNode":{"id":454,"name":"RecoverError","nameLocations":["2219:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":432,"src":"2219:12:3"},"referencedDeclaration":432,"src":"2219:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"2233:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:3"},"scope":772,"src":"2129:766:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":527,"nodeType":"Block","src":"3789:168:3","statements":[{"assignments":[509,512,514],"declarations":[{"constant":false,"id":509,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:3","nodeType":"VariableDeclaration","scope":527,"src":"3800:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"error","nameLocation":"3832:5:3","nodeType":"VariableDeclaration","scope":527,"src":"3819:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":511,"nodeType":"UserDefinedTypeName","pathNode":{"id":510,"name":"RecoverError","nameLocations":["3819:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":432,"src":"3819:12:3"},"referencedDeclaration":432,"src":"3819:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:3","nodeType":"VariableDeclaration","scope":527,"src":"3839:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":519,"initialValue":{"arguments":[{"id":516,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"3870:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":517,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3876:9:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":515,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[498,578,686],"referencedDeclaration":498,"src":"3859:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:3"},{"expression":{"arguments":[{"id":521,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3908:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},{"id":522,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3915:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":520,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3896:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$432_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"3896:28:3"},{"expression":{"id":525,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3941:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":507,"id":526,"nodeType":"Return","src":"3934:16:3"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"2901:796:3","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":528,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:3","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"hash","nameLocation":"3727:4:3","nodeType":"VariableDeclaration","scope":528,"src":"3719:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"signature","nameLocation":"3746:9:3","nodeType":"VariableDeclaration","scope":528,"src":"3733:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":502,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:3"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":528,"src":"3780:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:3"},"scope":772,"src":"3702:255:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"4285:342:3","statements":[{"id":576,"nodeType":"UncheckedBlock","src":"4295:326:3","statements":[{"assignments":[546],"declarations":[{"constant":false,"id":546,"mutability":"mutable","name":"s","nameLocation":"4327:1:3","nodeType":"VariableDeclaration","scope":576,"src":"4319:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":553,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":547,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4331:2:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:3","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:3","typeDescriptions":{}}},"id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:3"},{"assignments":[555],"declarations":[{"constant":false,"id":555,"mutability":"mutable","name":"v","nameLocation":"4528:1:3","nodeType":"VariableDeclaration","scope":576,"src":"4522:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":554,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":568,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":560,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4547:2:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:3","typeDescriptions":{}}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:3","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:3","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":556,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:3","typeDescriptions":{}}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:3"},{"expression":{"arguments":[{"id":570,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4596:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":571,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"4602:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":572,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"4605:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":573,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"4608:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":569,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[498,578,686],"referencedDeclaration":686,"src":"4585:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":544,"id":575,"nodeType":"Return","src":"4578:32:3"}]}]},"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"3963:205:3","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:3","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"hash","nameLocation":"4201:4:3","nodeType":"VariableDeclaration","scope":578,"src":"4193:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"r","nameLocation":"4215:1:3","nodeType":"VariableDeclaration","scope":578,"src":"4207:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"vs","nameLocation":"4226:2:3","nodeType":"VariableDeclaration","scope":578,"src":"4218:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:3"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":578,"src":"4253:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":578,"src":"4262:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":540,"nodeType":"UserDefinedTypeName","pathNode":{"id":539,"name":"RecoverError","nameLocations":["4262:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":432,"src":"4262:12:3"},"referencedDeclaration":432,"src":"4262:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":578,"src":"4276:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:3"},"scope":772,"src":"4173:454:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":610,"nodeType":"Block","src":"4840:164:3","statements":[{"assignments":[591,594,596],"declarations":[{"constant":false,"id":591,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:3","nodeType":"VariableDeclaration","scope":610,"src":"4851:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"error","nameLocation":"4883:5:3","nodeType":"VariableDeclaration","scope":610,"src":"4870:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":593,"nodeType":"UserDefinedTypeName","pathNode":{"id":592,"name":"RecoverError","nameLocations":["4870:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":432,"src":"4870:12:3"},"referencedDeclaration":432,"src":"4870:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":596,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:3","nodeType":"VariableDeclaration","scope":610,"src":"4890:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":602,"initialValue":{"arguments":[{"id":598,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4921:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":599,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4927:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":600,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4930:2:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":597,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[498,578,686],"referencedDeclaration":578,"src":"4910:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:3"},{"expression":{"arguments":[{"id":604,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4955:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},{"id":605,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"4962:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":603,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"4943:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$432_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"4943:28:3"},{"expression":{"id":608,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4988:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":589,"id":609,"nodeType":"Return","src":"4981:16:3"}]},"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"4633:116:3","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":611,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:3","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"hash","nameLocation":"4779:4:3","nodeType":"VariableDeclaration","scope":611,"src":"4771:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"r","nameLocation":"4793:1:3","nodeType":"VariableDeclaration","scope":611,"src":"4785:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"vs","nameLocation":"4804:2:3","nodeType":"VariableDeclaration","scope":611,"src":"4796:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:3"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":611,"src":"4831:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:3"},"scope":772,"src":"4754:250:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":685,"nodeType":"Block","src":"5298:1372:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":632,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6194:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:3","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:3","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":646,"nodeType":"IfStatement","src":"6182:164:3","trueBody":{"id":645,"nodeType":"Block","src":"6267:79:3","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:3","typeDescriptions":{}}},"id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":640,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6301:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$432_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:3","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":431,"src":"6301:30:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},{"id":642,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6333:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":629,"id":644,"nodeType":"Return","src":"6281:54:3"}]}},{"assignments":[648],"declarations":[{"constant":false,"id":648,"mutability":"mutable","name":"signer","nameLocation":"6448:6:3","nodeType":"VariableDeclaration","scope":685,"src":"6440:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":655,"initialValue":{"arguments":[{"id":650,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6467:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":651,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"6473:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":652,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"6476:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":653,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6479:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":649,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:3","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":656,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"6495:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:3","typeDescriptions":{}}},"id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"nodeType":"IfStatement","src":"6491:113:3","trueBody":{"id":674,"nodeType":"Block","src":"6517:87:3","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:3","typeDescriptions":{}}},"id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":666,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6551:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$432_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:3","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":429,"src":"6551:29:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:3","typeDescriptions":{}}},"id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":629,"id":673,"nodeType":"Return","src":"6531:62:3"}]}},{"expression":{"components":[{"id":676,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"6622:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":677,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6630:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$432_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:3","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":428,"src":"6630:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":629,"id":684,"nodeType":"Return","src":"6614:49:3"}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"5010:125:3","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":686,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:3","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"hash","nameLocation":"5177:4:3","nodeType":"VariableDeclaration","scope":686,"src":"5169:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"v","nameLocation":"5197:1:3","nodeType":"VariableDeclaration","scope":686,"src":"5191:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":615,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"r","nameLocation":"5216:1:3","nodeType":"VariableDeclaration","scope":686,"src":"5208:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"s","nameLocation":"5235:1:3","nodeType":"VariableDeclaration","scope":686,"src":"5227:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:3"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"5266:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"5275:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":625,"nodeType":"UserDefinedTypeName","pathNode":{"id":624,"name":"RecoverError","nameLocations":["5275:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":432,"src":"5275:12:3"},"referencedDeclaration":432,"src":"5275:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"5289:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:3"},"scope":772,"src":"5140:1530:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":721,"nodeType":"Block","src":"6897:166:3","statements":[{"assignments":[701,704,706],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:3","nodeType":"VariableDeclaration","scope":721,"src":"6908:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"error","nameLocation":"6940:5:3","nodeType":"VariableDeclaration","scope":721,"src":"6927:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":703,"nodeType":"UserDefinedTypeName","pathNode":{"id":702,"name":"RecoverError","nameLocations":["6927:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":432,"src":"6927:12:3"},"referencedDeclaration":432,"src":"6927:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:3","nodeType":"VariableDeclaration","scope":721,"src":"6947:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":713,"initialValue":{"arguments":[{"id":708,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"6978:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":709,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"6984:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":710,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"6987:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":711,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"6990:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":707,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[498,578,686],"referencedDeclaration":686,"src":"6967:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$432_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:3"},{"expression":{"arguments":[{"id":715,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"7014:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},{"id":716,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"7021:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":714,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7002:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$432_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"ExpressionStatement","src":"7002:28:3"},{"expression":{"id":719,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"7047:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":699,"id":720,"nodeType":"Return","src":"7040:16:3"}]},"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"6676:122:3","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":722,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:3","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"hash","nameLocation":"6828:4:3","nodeType":"VariableDeclaration","scope":722,"src":"6820:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"v","nameLocation":"6840:1:3","nodeType":"VariableDeclaration","scope":722,"src":"6834:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":690,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"r","nameLocation":"6851:1:3","nodeType":"VariableDeclaration","scope":722,"src":"6843:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"s","nameLocation":"6862:1:3","nodeType":"VariableDeclaration","scope":722,"src":"6854:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:3"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":722,"src":"6888:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:3"},"scope":772,"src":"6803:260:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":770,"nodeType":"Block","src":"7268:460:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7282:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":732,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"7291:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$432_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:3","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":428,"src":"7291:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":737,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7378:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":738,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"7387:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$432_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:3","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":429,"src":"7387:29:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":745,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7483:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":746,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"7492:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$432_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:3","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":430,"src":"7492:35:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":757,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7617:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":758,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"7626:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$432_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:3","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":431,"src":"7626:30:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"nodeType":"IfStatement","src":"7613:109:3","trueBody":{"id":765,"nodeType":"Block","src":"7658:64:3","statements":[{"errorCall":{"arguments":[{"id":762,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7702:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":761,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7679:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"RevertStatement","src":"7672:39:3"}]}},"id":767,"nodeType":"IfStatement","src":"7479:243:3","trueBody":{"id":756,"nodeType":"Block","src":"7529:78:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":752,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7586:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:3","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":749,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7550:27:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"RevertStatement","src":"7543:53:3"}]}},"id":768,"nodeType":"IfStatement","src":"7374:348:3","trueBody":{"id":744,"nodeType":"Block","src":"7418:55:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":741,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"7439:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"RevertStatement","src":"7432:30:3"}]}},"id":769,"nodeType":"IfStatement","src":"7278:444:3","trueBody":{"id":736,"nodeType":"Block","src":"7313:55:3","statements":[{"functionReturnParameters":730,"id":735,"nodeType":"Return","src":"7327:7:3"}]}}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"7069:122:3","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":771,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:3","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"error","nameLocation":"7230:5:3","nodeType":"VariableDeclaration","scope":771,"src":"7217:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":725,"nodeType":"UserDefinedTypeName","pathNode":{"id":724,"name":"RecoverError","nameLocations":["7217:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":432,"src":"7217:12:3"},"referencedDeclaration":432,"src":"7217:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$432","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:3","nodeType":"VariableDeclaration","scope":771,"src":"7237:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:3"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"7268:0:3"},"scope":772,"src":"7196:532:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":773,"src":"344:7386:3","usedErrors":[435,440,445],"usedEvents":[]}],"src":"112:7619:3"},"id":3},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[846],"Strings":[424]},"id":847,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":774,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":776,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":847,"sourceUnit":425,"src":"149:39:4","symbolAliases":[{"foreign":{"id":775,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"157:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"190:330:4","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":846,"linearizedBaseContracts":[846],"name":"MessageHashUtils","nameLocation":"529:16:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":786,"nodeType":"Block","src":"1314:368:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:4","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:4","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:4"},"nodeType":"YulFunctionCall","src":"1390:48:4"},"nodeType":"YulExpressionStatement","src":"1390:48:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:4","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:4"},"nodeType":"YulFunctionCall","src":"1492:25:4"},"nodeType":"YulExpressionStatement","src":"1492:25:4"},{"nodeType":"YulAssignment","src":"1571:31:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:4","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:4","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:4"},"nodeType":"YulFunctionCall","src":"1581:21:4"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":783,"isOffset":false,"isSlot":false,"src":"1571:6:4","valueSize":1},{"declaration":780,"isOffset":false,"isSlot":false,"src":"1505:11:4","valueSize":1}],"id":785,"nodeType":"InlineAssembly","src":"1367:309:4"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"552:665:4","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":787,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:4","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:4","nodeType":"VariableDeclaration","scope":787,"src":"1254:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:4"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"digest","nameLocation":"1306:6:4","nodeType":"VariableDeclaration","scope":787,"src":"1298:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:4"},"scope":846,"src":"1222:460:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":812,"nodeType":"Block","src":"2234:143:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":804,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:4","memberName":"length","nodeType":"MemberAccess","src":"2343:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":802,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2326:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$424_$","typeString":"type(library Strings)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:4","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":237,"src":"2326:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":800,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:4","typeDescriptions":{}}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":808,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"2361:7:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":796,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:4","typeDescriptions":{}}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:4","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:4","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":795,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":794,"id":811,"nodeType":"Return","src":"2244:126:4"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"1688:455:4","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":813,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:4","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"message","nameLocation":"2193:7:4","nodeType":"VariableDeclaration","scope":813,"src":"2180:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":789,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:4"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":813,"src":"2225:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:4"},"scope":846,"src":"2148:229:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":832,"nodeType":"Block","src":"2831:80:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":827,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"2887:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":828,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2898:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":824,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":823,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":822,"id":831,"nodeType":"Return","src":"2841:63:4"}]},"documentation":{"id":814,"nodeType":"StructuredDocumentation","src":"2383:332:4","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":833,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:4","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"validator","nameLocation":"2769:9:4","nodeType":"VariableDeclaration","scope":833,"src":"2761:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"data","nameLocation":"2793:4:4","nodeType":"VariableDeclaration","scope":833,"src":"2780:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":817,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:4"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":833,"src":"2822:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:4"},"scope":846,"src":"2720:191:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":844,"nodeType":"Block","src":"3462:292:4","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:4","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:4"},"nodeType":"YulFunctionCall","src":"3549:11:4"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:4","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:4"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:4","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:4"},"nodeType":"YulFunctionCall","src":"3573:23:4"},"nodeType":"YulExpressionStatement","src":"3573:23:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:4","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:4"},"nodeType":"YulFunctionCall","src":"3616:14:4"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:4"},"nodeType":"YulFunctionCall","src":"3609:39:4"},"nodeType":"YulExpressionStatement","src":"3609:39:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:4","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:4"},"nodeType":"YulFunctionCall","src":"3668:14:4"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:4"},"nodeType":"YulFunctionCall","src":"3661:34:4"},"nodeType":"YulExpressionStatement","src":"3661:34:4"},{"nodeType":"YulAssignment","src":"3708:30:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:4","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:4"},"nodeType":"YulFunctionCall","src":"3718:20:4"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":841,"isOffset":false,"isSlot":false,"src":"3708:6:4","valueSize":1},{"declaration":836,"isOffset":false,"isSlot":false,"src":"3632:15:4","valueSize":1},{"declaration":838,"isOffset":false,"isSlot":false,"src":"3684:10:4","valueSize":1}],"id":843,"nodeType":"InlineAssembly","src":"3515:233:4"}]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"2917:431:4","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":845,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:4","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:4","nodeType":"VariableDeclaration","scope":845,"src":"3378:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:4","nodeType":"VariableDeclaration","scope":845,"src":"3403:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:4"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"digest","nameLocation":"3454:6:4","nodeType":"VariableDeclaration","scope":845,"src":"3446:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:4"},"scope":846,"src":"3353:401:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":847,"src":"521:3235:4","usedErrors":[],"usedEvents":[]}],"src":"123:3634:4"},"id":4},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1900]},"id":1901,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":848,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"129:73:5","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1900,"linearizedBaseContracts":[1900],"name":"Math","nameLocation":"211:4:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"222:50:5","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":852,"name":"MathOverflowedMulDiv","nameLocation":"283:20:5","nodeType":"ErrorDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[],"src":"303:2:5"},"src":"277:29:5"},{"canonicalName":"Math.Rounding","id":857,"members":[{"id":853,"name":"Floor","nameLocation":"336:5:5","nodeType":"EnumValue","src":"336:5:5"},{"id":854,"name":"Ceil","nameLocation":"379:4:5","nodeType":"EnumValue","src":"379:4:5"},{"id":855,"name":"Trunc","nameLocation":"421:5:5","nodeType":"EnumValue","src":"421:5:5"},{"id":856,"name":"Expand","nameLocation":"451:6:5","nodeType":"EnumValue","src":"451:6:5"}],"name":"Rounding","nameLocation":"317:8:5","nodeType":"EnumDefinition","src":"312:169:5"},{"body":{"id":888,"nodeType":"Block","src":"661:140:5","statements":[{"id":887,"nodeType":"UncheckedBlock","src":"671:124:5","statements":[{"assignments":[870],"declarations":[{"constant":false,"id":870,"mutability":"mutable","name":"c","nameLocation":"703:1:5","nodeType":"VariableDeclaration","scope":887,"src":"695:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":874,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":871,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"707:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":872,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"711:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":875,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"730:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":876,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"734:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":882,"nodeType":"IfStatement","src":"726:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":868,"id":881,"nodeType":"Return","src":"737:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":884,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"782:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":868,"id":886,"nodeType":"Return","src":"768:16:5"}]}]},"documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"487:93:5","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":889,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:5","nodeType":"FunctionDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"a","nameLocation":"609:1:5","nodeType":"VariableDeclaration","scope":889,"src":"601:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"b","nameLocation":"620:1:5","nodeType":"VariableDeclaration","scope":889,"src":"612:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:5"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"646:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":864,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"652:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:5"},"scope":1900,"src":"585:216:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":916,"nodeType":"Block","src":"984:113:5","statements":[{"id":915,"nodeType":"UncheckedBlock","src":"994:97:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":901,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1022:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":902,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"1026:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":908,"nodeType":"IfStatement","src":"1018:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":900,"id":907,"nodeType":"Return","src":"1029:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"1074:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1078:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":900,"id":914,"nodeType":"Return","src":"1060:20:5"}]}]},"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"807:96:5","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:5","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"a","nameLocation":"932:1:5","nodeType":"VariableDeclaration","scope":917,"src":"924:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"b","nameLocation":"943:1:5","nodeType":"VariableDeclaration","scope":917,"src":"935:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:5"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"969:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":896,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"975:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:5"},"scope":1900,"src":"908:189:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":958,"nodeType":"Block","src":"1283:417:5","statements":[{"id":957,"nodeType":"UncheckedBlock","src":"1293:401:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"1551:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":936,"nodeType":"IfStatement","src":"1547:28:5","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":928,"id":935,"nodeType":"Return","src":"1559:16:5"}},{"assignments":[938],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"c","nameLocation":"1597:1:5","nodeType":"VariableDeclaration","scope":957,"src":"1589:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":942,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"1601:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1605:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1624:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"1628:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":946,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1633:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":952,"nodeType":"IfStatement","src":"1620:33:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":928,"id":951,"nodeType":"Return","src":"1636:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":954,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1681:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":928,"id":956,"nodeType":"Return","src":"1667:16:5"}]}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"1103:99:5","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":959,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:5","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"a","nameLocation":"1231:1:5","nodeType":"VariableDeclaration","scope":959,"src":"1223:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"b","nameLocation":"1242:1:5","nodeType":"VariableDeclaration","scope":959,"src":"1234:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:5"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"1268:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":924,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"1274:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:5"},"scope":1900,"src":"1207:493:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":986,"nodeType":"Block","src":"1887:114:5","statements":[{"id":985,"nodeType":"UncheckedBlock","src":"1897:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":971,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"1925:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":978,"nodeType":"IfStatement","src":"1921:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":970,"id":977,"nodeType":"Return","src":"1933:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1978:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"1982:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":983,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":970,"id":984,"nodeType":"Return","src":"1964:20:5"}]}]},"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"1706:100:5","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":987,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:5","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"a","nameLocation":"1835:1:5","nodeType":"VariableDeclaration","scope":987,"src":"1827:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"b","nameLocation":"1846:1:5","nodeType":"VariableDeclaration","scope":987,"src":"1838:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:5"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":987,"src":"1872:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":966,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":987,"src":"1878:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:5"},"scope":1900,"src":"1811:190:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1014,"nodeType":"Block","src":"2198:114:5","statements":[{"id":1013,"nodeType":"UncheckedBlock","src":"2208:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2236:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1006,"nodeType":"IfStatement","src":"2232:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":998,"id":1005,"nodeType":"Return","src":"2244:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2289:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2293:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":998,"id":1012,"nodeType":"Return","src":"2275:20:5"}]}]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"2007:110:5","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":1015,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:5","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"a","nameLocation":"2146:1:5","nodeType":"VariableDeclaration","scope":1015,"src":"2138:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"b","nameLocation":"2157:1:5","nodeType":"VariableDeclaration","scope":1015,"src":"2149:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:5"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1015,"src":"2183:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":994,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1015,"src":"2189:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:5"},"scope":1900,"src":"2122:190:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1032,"nodeType":"Block","src":"2449:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1025,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"2466:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1026,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2470:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1029,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2478:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:5","trueExpression":{"id":1028,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"2474:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1024,"id":1031,"nodeType":"Return","src":"2459:20:5"}]},"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"2318:59:5","text":" @dev Returns the largest of two numbers."},"id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:5","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"a","nameLocation":"2403:1:5","nodeType":"VariableDeclaration","scope":1033,"src":"2395:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"b","nameLocation":"2414:1:5","nodeType":"VariableDeclaration","scope":1033,"src":"2406:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:5"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1033,"src":"2440:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:5"},"scope":1900,"src":"2382:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1050,"nodeType":"Block","src":"2624:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2641:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1044,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"2645:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"2653:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:5","trueExpression":{"id":1046,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2649:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1042,"id":1049,"nodeType":"Return","src":"2634:20:5"}]},"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"2492:60:5","text":" @dev Returns the smallest of two numbers."},"id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:5","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"a","nameLocation":"2578:1:5","nodeType":"VariableDeclaration","scope":1051,"src":"2570:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"b","nameLocation":"2589:1:5","nodeType":"VariableDeclaration","scope":1051,"src":"2581:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:5"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1051,"src":"2615:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:5"},"scope":1900,"src":"2557:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1073,"nodeType":"Block","src":"2845:82:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2900:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2904:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2910:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2914:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1060,"id":1072,"nodeType":"Return","src":"2892:28:5"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"2667:102:5","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1074,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:5","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"a","nameLocation":"2799:1:5","nodeType":"VariableDeclaration","scope":1074,"src":"2791:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"b","nameLocation":"2810:1:5","nodeType":"VariableDeclaration","scope":1074,"src":"2802:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:5"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1074,"src":"2836:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:5"},"scope":1900,"src":"2774:153:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"3219:260:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1084,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"3233:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1092,"nodeType":"IfStatement","src":"3229:127:5","trueBody":{"id":1091,"nodeType":"Block","src":"3241:115:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"3340:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1088,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"3344:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1083,"id":1090,"nodeType":"Return","src":"3333:12:5"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1093,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"3444:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"3458:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1101,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"3467:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:5","trueExpression":{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1083,"id":1106,"nodeType":"Return","src":"3437:35:5"}]},"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"2933:210:5","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:5","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"a","nameLocation":"3173:1:5","nodeType":"VariableDeclaration","scope":1108,"src":"3165:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"b","nameLocation":"3184:1:5","nodeType":"VariableDeclaration","scope":1108,"src":"3176:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:5"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1108,"src":"3210:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:5"},"scope":1900,"src":"3148:331:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1233,"nodeType":"Block","src":"3901:4018:5","statements":[{"id":1232,"nodeType":"UncheckedBlock","src":"3911:4002:5","statements":[{"assignments":[1121],"declarations":[{"constant":false,"id":1121,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:5","nodeType":"VariableDeclaration","scope":1232,"src":"4232:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1125,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"4248:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1123,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"4252:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:5"},{"assignments":[1127],"declarations":[{"constant":false,"id":1127,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:5","nodeType":"VariableDeclaration","scope":1232,"src":"4312:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1128,"nodeType":"VariableDeclarationStatement","src":"4312:13:5"},{"AST":{"nodeType":"YulBlock","src":"4392:122:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:5","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:5"},"nodeType":"YulFunctionCall","src":"4433:6:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:5"},"nodeType":"YulFunctionCall","src":"4420:20:5"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:5","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:5","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:5"},"nodeType":"YulFunctionCall","src":"4470:14:5"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:5"},"nodeType":"YulFunctionCall","src":"4486:13:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:5"},"nodeType":"YulFunctionCall","src":"4466:34:5"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1121,"isOffset":false,"isSlot":false,"src":"4478:5:5","valueSize":1},{"declaration":1121,"isOffset":false,"isSlot":false,"src":"4493:5:5","valueSize":1},{"declaration":1127,"isOffset":false,"isSlot":false,"src":"4457:5:5","valueSize":1},{"declaration":1111,"isOffset":false,"isSlot":false,"src":"4427:1:5","valueSize":1},{"declaration":1113,"isOffset":false,"isSlot":false,"src":"4430:1:5","valueSize":1}],"id":1129,"nodeType":"InlineAssembly","src":"4383:131:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1130,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"4595:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1138,"nodeType":"IfStatement","src":"4591:368:5","trueBody":{"id":1137,"nodeType":"Block","src":"4607:352:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1133,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"4925:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1134,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"4933:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1119,"id":1136,"nodeType":"Return","src":"4918:26:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"5065:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1140,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"5080:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1146,"nodeType":"IfStatement","src":"5061:88:5","trueBody":{"id":1145,"nodeType":"Block","src":"5087:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1142,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"5112:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1144,"nodeType":"RevertStatement","src":"5105:29:5"}]}},{"assignments":[1148],"declarations":[{"constant":false,"id":1148,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:5","nodeType":"VariableDeclaration","scope":1232,"src":"5404:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1149,"nodeType":"VariableDeclarationStatement","src":"5404:17:5"},{"AST":{"nodeType":"YulBlock","src":"5444:291:5","statements":[{"nodeType":"YulAssignment","src":"5513:38:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:5"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:5"},"nodeType":"YulFunctionCall","src":"5526:25:5"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:5"}]},{"nodeType":"YulAssignment","src":"5633:41:5","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:5"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:5"},"nodeType":"YulFunctionCall","src":"5653:20:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:5"},"nodeType":"YulFunctionCall","src":"5642:32:5"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:5"}]},{"nodeType":"YulAssignment","src":"5691:30:5","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:5"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:5"},"nodeType":"YulFunctionCall","src":"5700:21:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1115,"isOffset":false,"isSlot":false,"src":"5539:11:5","valueSize":1},{"declaration":1121,"isOffset":false,"isSlot":false,"src":"5667:5:5","valueSize":1},{"declaration":1121,"isOffset":false,"isSlot":false,"src":"5691:5:5","valueSize":1},{"declaration":1121,"isOffset":false,"isSlot":false,"src":"5704:5:5","valueSize":1},{"declaration":1127,"isOffset":false,"isSlot":false,"src":"5633:5:5","valueSize":1},{"declaration":1127,"isOffset":false,"isSlot":false,"src":"5646:5:5","valueSize":1},{"declaration":1148,"isOffset":false,"isSlot":false,"src":"5513:9:5","valueSize":1},{"declaration":1148,"isOffset":false,"isSlot":false,"src":"5656:9:5","valueSize":1},{"declaration":1148,"isOffset":false,"isSlot":false,"src":"5711:9:5","valueSize":1},{"declaration":1111,"isOffset":false,"isSlot":false,"src":"5533:1:5","valueSize":1},{"declaration":1113,"isOffset":false,"isSlot":false,"src":"5536:1:5","valueSize":1}],"id":1150,"nodeType":"InlineAssembly","src":"5435:300:5"},{"assignments":[1152],"declarations":[{"constant":false,"id":1152,"mutability":"mutable","name":"twos","nameLocation":"5947:4:5","nodeType":"VariableDeclaration","scope":1232,"src":"5939:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1159,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"5954:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1155,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"5973:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:5"},{"AST":{"nodeType":"YulBlock","src":"6008:362:5","statements":[{"nodeType":"YulAssignment","src":"6073:37:5","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:5"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:5"},"nodeType":"YulFunctionCall","src":"6088:22:5"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:5"}]},{"nodeType":"YulAssignment","src":"6177:25:5","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:5"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:5"},"nodeType":"YulFunctionCall","src":"6186:16:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:5"}]},{"nodeType":"YulAssignment","src":"6317:39:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:5","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:5"},"nodeType":"YulFunctionCall","src":"6333:12:5"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:5"},"nodeType":"YulFunctionCall","src":"6329:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:5"},"nodeType":"YulFunctionCall","src":"6325:31:5"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1115,"isOffset":false,"isSlot":false,"src":"6073:11:5","valueSize":1},{"declaration":1115,"isOffset":false,"isSlot":false,"src":"6092:11:5","valueSize":1},{"declaration":1121,"isOffset":false,"isSlot":false,"src":"6177:5:5","valueSize":1},{"declaration":1121,"isOffset":false,"isSlot":false,"src":"6190:5:5","valueSize":1},{"declaration":1152,"isOffset":false,"isSlot":false,"src":"6105:4:5","valueSize":1},{"declaration":1152,"isOffset":false,"isSlot":false,"src":"6197:4:5","valueSize":1},{"declaration":1152,"isOffset":false,"isSlot":false,"src":"6317:4:5","valueSize":1},{"declaration":1152,"isOffset":false,"isSlot":false,"src":"6340:4:5","valueSize":1},{"declaration":1152,"isOffset":false,"isSlot":false,"src":"6347:4:5","valueSize":1}],"id":1160,"nodeType":"InlineAssembly","src":"5999:371:5"},{"expression":{"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1161,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6436:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1162,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6445:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1163,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"6453:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1166,"nodeType":"ExpressionStatement","src":"6436:21:5"},{"assignments":[1168],"declarations":[{"constant":false,"id":1168,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:5","nodeType":"VariableDeclaration","scope":1232,"src":"6775:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1175,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1170,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"6798:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:5"},{"expression":{"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1176,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7031:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"7046:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1179,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7060:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1183,"nodeType":"ExpressionStatement","src":"7031:36:5"},{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1184,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7100:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"7115:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1187,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7129:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1191,"nodeType":"ExpressionStatement","src":"7100:36:5"},{"expression":{"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1192,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7170:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"7185:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1195,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7199:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1199,"nodeType":"ExpressionStatement","src":"7170:36:5"},{"expression":{"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1200,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7240:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1202,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"7255:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1203,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7269:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1207,"nodeType":"ExpressionStatement","src":"7240:36:5"},{"expression":{"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1208,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7310:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1210,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"7325:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1211,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1215,"nodeType":"ExpressionStatement","src":"7310:36:5"},{"expression":{"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1216,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7381:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1218,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"7396:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1219,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7410:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1223,"nodeType":"ExpressionStatement","src":"7381:36:5"},{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"7851:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"7860:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1226,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7868:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1229,"nodeType":"ExpressionStatement","src":"7851:24:5"},{"expression":{"id":1230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"7896:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1119,"id":1231,"nodeType":"Return","src":"7889:13:5"}]}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"3485:313:5","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1234,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:5","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"x","nameLocation":"3827:1:5","nodeType":"VariableDeclaration","scope":1234,"src":"3819:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"y","nameLocation":"3838:1:5","nodeType":"VariableDeclaration","scope":1234,"src":"3830:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:5","nodeType":"VariableDeclaration","scope":1234,"src":"3841:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:5"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"result","nameLocation":"3893:6:5","nodeType":"VariableDeclaration","scope":1234,"src":"3885:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:5"},"scope":1900,"src":"3803:4116:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1276,"nodeType":"Block","src":"8161:192:5","statements":[{"assignments":[1250],"declarations":[{"constant":false,"id":1250,"mutability":"mutable","name":"result","nameLocation":"8179:6:5","nodeType":"VariableDeclaration","scope":1276,"src":"8171:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1256,"initialValue":{"arguments":[{"id":1252,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"8195:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1253,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"8198:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1254,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"8201:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1251,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1234,1277],"referencedDeclaration":1234,"src":"8188:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1258,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"8244:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}],"id":1257,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"8227:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$857_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1261,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"8264:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1262,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"8267:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1263,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"8270:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1260,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:5","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1273,"nodeType":"IfStatement","src":"8223:101:5","trueBody":{"id":1272,"nodeType":"Block","src":"8288:36:5","statements":[{"expression":{"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"8302:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1271,"nodeType":"ExpressionStatement","src":"8302:11:5"}]}},{"expression":{"id":1274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"8340:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1248,"id":1275,"nodeType":"Return","src":"8333:13:5"}]},"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"7925:121:5","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1277,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:5","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"x","nameLocation":"8075:1:5","nodeType":"VariableDeclaration","scope":1277,"src":"8067:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"y","nameLocation":"8086:1:5","nodeType":"VariableDeclaration","scope":1277,"src":"8078:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:5","nodeType":"VariableDeclaration","scope":1277,"src":"8089:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:5","nodeType":"VariableDeclaration","scope":1277,"src":"8110:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"},"typeName":{"id":1243,"nodeType":"UserDefinedTypeName","pathNode":{"id":1242,"name":"Rounding","nameLocations":["8110:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"8110:8:5"},"referencedDeclaration":857,"src":"8110:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:5"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1277,"src":"8152:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:5"},"scope":1900,"src":"8051:302:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1388,"nodeType":"Block","src":"8644:1585:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"8658:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1291,"nodeType":"IfStatement","src":"8654:45:5","trueBody":{"id":1290,"nodeType":"Block","src":"8666:33:5","statements":[{"expression":{"hexValue":"30","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1284,"id":1289,"nodeType":"Return","src":"8680:8:5"}]}},{"assignments":[1293],"declarations":[{"constant":false,"id":1293,"mutability":"mutable","name":"result","nameLocation":"9386:6:5","nodeType":"VariableDeclaration","scope":1388,"src":"9378:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1302,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1296,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"9406:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1295,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1556,1591],"referencedDeclaration":1556,"src":"9401:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:5"},{"id":1387,"nodeType":"UncheckedBlock","src":"9815:408:5","statements":[{"expression":{"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9839:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9849:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"9858:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9862:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1313,"nodeType":"ExpressionStatement","src":"9839:35:5"},{"expression":{"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9888:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1315,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9898:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1316,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"9907:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9911:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1324,"nodeType":"ExpressionStatement","src":"9888:35:5"},{"expression":{"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1325,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9937:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1326,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9947:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"9956:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9960:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1335,"nodeType":"ExpressionStatement","src":"9937:35:5"},{"expression":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9986:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9996:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"10005:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10009:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1346,"nodeType":"ExpressionStatement","src":"9986:35:5"},{"expression":{"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10035:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1348,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10045:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"10054:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10058:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1357,"nodeType":"ExpressionStatement","src":"10035:35:5"},{"expression":{"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10084:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10094:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"10103:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10107:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1368,"nodeType":"ExpressionStatement","src":"10084:35:5"},{"expression":{"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10133:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10143:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"10152:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10156:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1379,"nodeType":"ExpressionStatement","src":"10133:35:5"},{"expression":{"arguments":[{"id":1381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10193:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"10201:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"10205:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1380,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"10189:3:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1284,"id":1386,"nodeType":"Return","src":"10182:30:5"}]}]},"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"8359:223:5","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:5","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"a","nameLocation":"8609:1:5","nodeType":"VariableDeclaration","scope":1389,"src":"8601:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:5"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"8635:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:5"},"scope":1900,"src":"8587:1642:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1423,"nodeType":"Block","src":"10405:164:5","statements":[{"id":1422,"nodeType":"UncheckedBlock","src":"10415:148:5","statements":[{"assignments":[1401],"declarations":[{"constant":false,"id":1401,"mutability":"mutable","name":"result","nameLocation":"10447:6:5","nodeType":"VariableDeclaration","scope":1422,"src":"10439:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1405,"initialValue":{"arguments":[{"id":1403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"10461:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1402,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1389,1424],"referencedDeclaration":1389,"src":"10456:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"10484:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1408,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"10511:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}],"id":1407,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"10494:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$857_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1410,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"10524:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"10533:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1413,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"10542:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:5","trueExpression":{"hexValue":"31","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1399,"id":1421,"nodeType":"Return","src":"10477:75:5"}]}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"10235:89:5","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1424,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:5","nodeType":"FunctionDefinition","parameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"a","nameLocation":"10351:1:5","nodeType":"VariableDeclaration","scope":1424,"src":"10343:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:5","nodeType":"VariableDeclaration","scope":1424,"src":"10354:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"},"typeName":{"id":1394,"nodeType":"UserDefinedTypeName","pathNode":{"id":1393,"name":"Rounding","nameLocations":["10354:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"10354:8:5"},"referencedDeclaration":857,"src":"10354:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:5"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1424,"src":"10396:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:5"},"scope":1900,"src":"10329:240:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1555,"nodeType":"Block","src":"10760:922:5","statements":[{"assignments":[1433],"declarations":[{"constant":false,"id":1433,"mutability":"mutable","name":"result","nameLocation":"10778:6:5","nodeType":"VariableDeclaration","scope":1555,"src":"10770:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1435,"initialValue":{"hexValue":"30","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:5"},{"id":1552,"nodeType":"UncheckedBlock","src":"10798:855:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"10826:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1450,"nodeType":"IfStatement","src":"10822:99:5","trueBody":{"id":1449,"nodeType":"Block","src":"10844:77:5","statements":[{"expression":{"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"10862:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1444,"nodeType":"ExpressionStatement","src":"10862:13:5"},{"expression":{"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10893:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"nodeType":"ExpressionStatement","src":"10893:13:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"10938:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1465,"nodeType":"IfStatement","src":"10934:96:5","trueBody":{"id":1464,"nodeType":"Block","src":"10955:75:5","statements":[{"expression":{"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"10973:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1459,"nodeType":"ExpressionStatement","src":"10973:12:5"},{"expression":{"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11003:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1463,"nodeType":"ExpressionStatement","src":"11003:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11047:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"11043:96:5","trueBody":{"id":1479,"nodeType":"Block","src":"11064:75:5","statements":[{"expression":{"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11082:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1474,"nodeType":"ExpressionStatement","src":"11082:12:5"},{"expression":{"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11112:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ExpressionStatement","src":"11112:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11156:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1495,"nodeType":"IfStatement","src":"11152:96:5","trueBody":{"id":1494,"nodeType":"Block","src":"11173:75:5","statements":[{"expression":{"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11191:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ExpressionStatement","src":"11191:12:5"},{"expression":{"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11221:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1493,"nodeType":"ExpressionStatement","src":"11221:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11265:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1510,"nodeType":"IfStatement","src":"11261:93:5","trueBody":{"id":1509,"nodeType":"Block","src":"11281:73:5","statements":[{"expression":{"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11299:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1504,"nodeType":"ExpressionStatement","src":"11299:11:5"},{"expression":{"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11328:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1508,"nodeType":"ExpressionStatement","src":"11328:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11371:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1525,"nodeType":"IfStatement","src":"11367:93:5","trueBody":{"id":1524,"nodeType":"Block","src":"11387:73:5","statements":[{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11405:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1519,"nodeType":"ExpressionStatement","src":"11405:11:5"},{"expression":{"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1520,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11434:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1523,"nodeType":"ExpressionStatement","src":"11434:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11477:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1540,"nodeType":"IfStatement","src":"11473:93:5","trueBody":{"id":1539,"nodeType":"Block","src":"11493:73:5","statements":[{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11511:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1534,"nodeType":"ExpressionStatement","src":"11511:11:5"},{"expression":{"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11540:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1538,"nodeType":"ExpressionStatement","src":"11540:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11583:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1551,"nodeType":"IfStatement","src":"11579:64:5","trueBody":{"id":1550,"nodeType":"Block","src":"11599:44:5","statements":[{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11617:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1549,"nodeType":"ExpressionStatement","src":"11617:11:5"}]}}]},{"expression":{"id":1553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11669:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1431,"id":1554,"nodeType":"Return","src":"11662:13:5"}]},"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"10575:119:5","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:5","nodeType":"FunctionDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"value","nameLocation":"10721:5:5","nodeType":"VariableDeclaration","scope":1556,"src":"10713:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:5"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1556,"src":"10751:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:5"},"scope":1900,"src":"10699:983:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"11915:168:5","statements":[{"id":1589,"nodeType":"UncheckedBlock","src":"11925:152:5","statements":[{"assignments":[1568],"declarations":[{"constant":false,"id":1568,"mutability":"mutable","name":"result","nameLocation":"11957:6:5","nodeType":"VariableDeclaration","scope":1589,"src":"11949:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1572,"initialValue":{"arguments":[{"id":1570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"11971:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1569,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1556,1591],"referencedDeclaration":1556,"src":"11966:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"11998:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1575,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"12025:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}],"id":1574,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"12008:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$857_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"12043:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"12052:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:5","trueExpression":{"hexValue":"31","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1566,"id":1588,"nodeType":"Return","src":"11991:75:5"}]}]},"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"11688:142:5","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:5","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"value","nameLocation":"11857:5:5","nodeType":"VariableDeclaration","scope":1591,"src":"11849:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:5","nodeType":"VariableDeclaration","scope":1591,"src":"11864:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"},"typeName":{"id":1561,"nodeType":"UserDefinedTypeName","pathNode":{"id":1560,"name":"Rounding","nameLocations":["11864:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"11864:8:5"},"referencedDeclaration":857,"src":"11864:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:5"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"11906:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:5"},"scope":1900,"src":"11835:248:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1719,"nodeType":"Block","src":"12276:854:5","statements":[{"assignments":[1600],"declarations":[{"constant":false,"id":1600,"mutability":"mutable","name":"result","nameLocation":"12294:6:5","nodeType":"VariableDeclaration","scope":1719,"src":"12286:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1602,"initialValue":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:5"},{"id":1716,"nodeType":"UncheckedBlock","src":"12314:787:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12342:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1619,"nodeType":"IfStatement","src":"12338:103:5","trueBody":{"id":1618,"nodeType":"Block","src":"12361:80:5","statements":[{"expression":{"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12379:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1613,"nodeType":"ExpressionStatement","src":"12379:17:5"},{"expression":{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"12414:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1617,"nodeType":"ExpressionStatement","src":"12414:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12458:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"12454:103:5","trueBody":{"id":1635,"nodeType":"Block","src":"12477:80:5","statements":[{"expression":{"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12495:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1630,"nodeType":"ExpressionStatement","src":"12495:17:5"},{"expression":{"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"12530:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1634,"nodeType":"ExpressionStatement","src":"12530:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12574:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1653,"nodeType":"IfStatement","src":"12570:103:5","trueBody":{"id":1652,"nodeType":"Block","src":"12593:80:5","statements":[{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12611:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1647,"nodeType":"ExpressionStatement","src":"12611:17:5"},{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"12646:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ExpressionStatement","src":"12646:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12690:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1670,"nodeType":"IfStatement","src":"12686:100:5","trueBody":{"id":1669,"nodeType":"Block","src":"12708:78:5","statements":[{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12726:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ExpressionStatement","src":"12726:16:5"},{"expression":{"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"12760:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1668,"nodeType":"ExpressionStatement","src":"12760:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12803:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"nodeType":"IfStatement","src":"12799:100:5","trueBody":{"id":1686,"nodeType":"Block","src":"12821:78:5","statements":[{"expression":{"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12839:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1681,"nodeType":"ExpressionStatement","src":"12839:16:5"},{"expression":{"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"12873:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1685,"nodeType":"ExpressionStatement","src":"12873:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12916:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1704,"nodeType":"IfStatement","src":"12912:100:5","trueBody":{"id":1703,"nodeType":"Block","src":"12934:78:5","statements":[{"expression":{"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12952:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1698,"nodeType":"ExpressionStatement","src":"12952:16:5"},{"expression":{"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"12986:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1702,"nodeType":"ExpressionStatement","src":"12986:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"13029:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1715,"nodeType":"IfStatement","src":"13025:66:5","trueBody":{"id":1714,"nodeType":"Block","src":"13047:44:5","statements":[{"expression":{"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"13065:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1713,"nodeType":"ExpressionStatement","src":"13065:11:5"}]}}]},{"expression":{"id":1717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"13117:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1598,"id":1718,"nodeType":"Return","src":"13110:13:5"}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"12089:120:5","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":1720,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:5","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"value","nameLocation":"12237:5:5","nodeType":"VariableDeclaration","scope":1720,"src":"12229:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:5"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1720,"src":"12267:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:5"},"scope":1900,"src":"12214:916:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1754,"nodeType":"Block","src":"13365:170:5","statements":[{"id":1753,"nodeType":"UncheckedBlock","src":"13375:154:5","statements":[{"assignments":[1732],"declarations":[{"constant":false,"id":1732,"mutability":"mutable","name":"result","nameLocation":"13407:6:5","nodeType":"VariableDeclaration","scope":1753,"src":"13399:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1736,"initialValue":{"arguments":[{"id":1734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"13422:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1733,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1720,1755],"referencedDeclaration":1720,"src":"13416:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"13449:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1739,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"13476:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}],"id":1738,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"13459:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$857_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"13495:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"13504:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:5","trueExpression":{"hexValue":"31","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1730,"id":1752,"nodeType":"Return","src":"13442:76:5"}]}]},"documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"13136:143:5","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1755,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:5","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"value","nameLocation":"13307:5:5","nodeType":"VariableDeclaration","scope":1755,"src":"13299:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:5","nodeType":"VariableDeclaration","scope":1755,"src":"13314:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"},"typeName":{"id":1725,"nodeType":"UserDefinedTypeName","pathNode":{"id":1724,"name":"Rounding","nameLocations":["13314:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"13314:8:5"},"referencedDeclaration":857,"src":"13314:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:5"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1755,"src":"13356:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:5"},"scope":1900,"src":"13284:251:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1841,"nodeType":"Block","src":"13855:600:5","statements":[{"assignments":[1764],"declarations":[{"constant":false,"id":1764,"mutability":"mutable","name":"result","nameLocation":"13873:6:5","nodeType":"VariableDeclaration","scope":1841,"src":"13865:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1766,"initialValue":{"hexValue":"30","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:5"},{"id":1838,"nodeType":"UncheckedBlock","src":"13893:533:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"13921:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1781,"nodeType":"IfStatement","src":"13917:98:5","trueBody":{"id":1780,"nodeType":"Block","src":"13939:76:5","statements":[{"expression":{"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"13957:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1775,"nodeType":"ExpressionStatement","src":"13957:13:5"},{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"13988:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1779,"nodeType":"ExpressionStatement","src":"13988:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"14032:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1796,"nodeType":"IfStatement","src":"14028:95:5","trueBody":{"id":1795,"nodeType":"Block","src":"14049:74:5","statements":[{"expression":{"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"14067:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1790,"nodeType":"ExpressionStatement","src":"14067:12:5"},{"expression":{"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"14097:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1794,"nodeType":"ExpressionStatement","src":"14097:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"14140:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1811,"nodeType":"IfStatement","src":"14136:95:5","trueBody":{"id":1810,"nodeType":"Block","src":"14157:74:5","statements":[{"expression":{"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"14175:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1805,"nodeType":"ExpressionStatement","src":"14175:12:5"},{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"14205:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"nodeType":"ExpressionStatement","src":"14205:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"14248:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1826,"nodeType":"IfStatement","src":"14244:95:5","trueBody":{"id":1825,"nodeType":"Block","src":"14265:74:5","statements":[{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"14283:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"nodeType":"ExpressionStatement","src":"14283:12:5"},{"expression":{"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"14313:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1824,"nodeType":"ExpressionStatement","src":"14313:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"14356:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1837,"nodeType":"IfStatement","src":"14352:64:5","trueBody":{"id":1836,"nodeType":"Block","src":"14372:44:5","statements":[{"expression":{"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"14390:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1835,"nodeType":"ExpressionStatement","src":"14390:11:5"}]}}]},{"expression":{"id":1839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"14442:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1762,"id":1840,"nodeType":"Return","src":"14435:13:5"}]},"documentation":{"id":1756,"nodeType":"StructuredDocumentation","src":"13541:246:5","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1842,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:5","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"value","nameLocation":"13816:5:5","nodeType":"VariableDeclaration","scope":1842,"src":"13808:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:5"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1842,"src":"13846:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:5"},"scope":1900,"src":"13792:663:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1879,"nodeType":"Block","src":"14692:177:5","statements":[{"id":1878,"nodeType":"UncheckedBlock","src":"14702:161:5","statements":[{"assignments":[1854],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"result","nameLocation":"14734:6:5","nodeType":"VariableDeclaration","scope":1878,"src":"14726:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1858,"initialValue":{"arguments":[{"id":1856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"14750:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1855,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1842,1880],"referencedDeclaration":1842,"src":"14743:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1859,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"14777:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1861,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"14804:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}],"id":1860,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"14787:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$857_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1864,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"14823:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"14838:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:5","trueExpression":{"hexValue":"31","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1852,"id":1877,"nodeType":"Return","src":"14770:82:5"}]}]},"documentation":{"id":1843,"nodeType":"StructuredDocumentation","src":"14461:144:5","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1880,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:5","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"value","nameLocation":"14634:5:5","nodeType":"VariableDeclaration","scope":1880,"src":"14626:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:5","nodeType":"VariableDeclaration","scope":1880,"src":"14641:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"},"typeName":{"id":1847,"nodeType":"UserDefinedTypeName","pathNode":{"id":1846,"name":"Rounding","nameLocations":["14641:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"14641:8:5"},"referencedDeclaration":857,"src":"14641:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:5"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1880,"src":"14683:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:5"},"scope":1900,"src":"14610:259:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1898,"nodeType":"Block","src":"15067:48:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1891,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"15090:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1889,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:5","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1888,"id":1897,"nodeType":"Return","src":"15077:31:5"}]},"documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"14875:113:5","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":1899,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:5","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:5","nodeType":"VariableDeclaration","scope":1899,"src":"15019:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"},"typeName":{"id":1883,"nodeType":"UserDefinedTypeName","pathNode":{"id":1882,"name":"Rounding","nameLocations":["15019:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"15019:8:5"},"referencedDeclaration":857,"src":"15019:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$857","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:5"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1899,"src":"15061:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1886,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:5"},"scope":1900,"src":"14993:122:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1901,"src":"203:14914:5","usedErrors":[852],"usedEvents":[]}],"src":"103:15015:5"},"id":5},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2005]},"id":2006,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1902,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"135:80:6","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2005,"linearizedBaseContracts":[2005],"name":"SignedMath","nameLocation":"224:10:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1920,"nodeType":"Block","src":"376:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"393:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1914,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"397:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1917,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"405:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:6","trueExpression":{"id":1916,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"401:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1912,"id":1919,"nodeType":"Return","src":"386:20:6"}]},"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"241:66:6","text":" @dev Returns the largest of two signed numbers."},"id":1921,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:6","nodeType":"FunctionDefinition","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"a","nameLocation":"332:1:6","nodeType":"VariableDeclaration","scope":1921,"src":"325:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1905,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"b","nameLocation":"342:1:6","nodeType":"VariableDeclaration","scope":1921,"src":"335:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1907,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:6"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"368:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1910,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:6"},"scope":2005,"src":"312:101:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1938,"nodeType":"Block","src":"555:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"572:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1932,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"576:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1935,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"584:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:6","trueExpression":{"id":1934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"580:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1930,"id":1937,"nodeType":"Return","src":"565:20:6"}]},"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"419:67:6","text":" @dev Returns the smallest of two signed numbers."},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:6","nodeType":"FunctionDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"a","nameLocation":"511:1:6","nodeType":"VariableDeclaration","scope":1939,"src":"504:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1923,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"b","nameLocation":"521:1:6","nodeType":"VariableDeclaration","scope":1939,"src":"514:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1925,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:6"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"547:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1928,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:6"},"scope":2005,"src":"491:101:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1982,"nodeType":"Block","src":"797:162:6","statements":[{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"x","nameLocation":"866:1:6","nodeType":"VariableDeclaration","scope":1982,"src":"859:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1949,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1963,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1951,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"871:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1952,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"875:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"882:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1956,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"886:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:6"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1964,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"911:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1969,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"931:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:6","typeDescriptions":{}}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1965,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:6","typeDescriptions":{}}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"945:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1975,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"949:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1948,"id":1981,"nodeType":"Return","src":"904:48:6"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"598:126:6","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:6","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"a","nameLocation":"753:1:6","nodeType":"VariableDeclaration","scope":1983,"src":"746:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1941,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"b","nameLocation":"763:1:6","nodeType":"VariableDeclaration","scope":1983,"src":"756:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1943,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:6"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1983,"src":"789:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1946,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:6"},"scope":2005,"src":"729:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2003,"nodeType":"Block","src":"1103:158:6","statements":[{"id":2002,"nodeType":"UncheckedBlock","src":"1113:142:6","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1993,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"1228:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:6","subExpression":{"id":1997,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"1242:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:6","trueExpression":{"id":1996,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"1237:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:6","typeDescriptions":{}}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1990,"id":2001,"nodeType":"Return","src":"1213:31:6"}]}]},"documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"965:78:6","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:6","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"n","nameLocation":"1068:1:6","nodeType":"VariableDeclaration","scope":2004,"src":"1061:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1985,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:6"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2004,"src":"1094:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:6"},"scope":2005,"src":"1048:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2006,"src":"216:1047:6","usedErrors":[],"usedEvents":[]}],"src":"109:1155:6"},"id":6},"contracts/core/BasePaymaster.sol":{"ast":{"absolutePath":"contracts/core/BasePaymaster.sol","exportedSymbols":{"BasePaymaster":[2230],"Context":[169],"IAggregator":[2685],"IEntryPoint":[2839],"INonceManager":[2858],"IPaymaster":[2893],"IStakeManager":[2997],"Ownable":[147],"UserOperation":[3023],"ValidationData":[2240],"_intersectTimeRange":[2386],"_packValidationData":[2423,2461],"_parseValidationData":[2300],"calldataKeccak":[2471]},"id":2231,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2007,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:7"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2008,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2231,"sourceUnit":148,"src":"104:52:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","id":2009,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2231,"sourceUnit":2894,"src":"158:38:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":2010,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2231,"sourceUnit":2840,"src":"198:39:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":2011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2231,"sourceUnit":2472,"src":"239:23:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2013,"name":"IPaymaster","nameLocations":["459:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":2893,"src":"459:10:7"},"id":2014,"nodeType":"InheritanceSpecifier","src":"459:10:7"},{"baseName":{"id":2015,"name":"Ownable","nameLocations":["471:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"471:7:7"},"id":2016,"nodeType":"InheritanceSpecifier","src":"471:7:7"}],"canonicalName":"BasePaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"266:156:7","text":" Helper class for creating a paymaster.\n provides helper methods for staking.\n Validates that the postOp is called only by the entryPoint."},"fullyImplemented":false,"id":2230,"linearizedBaseContracts":[2230,147,169,2893],"name":"BasePaymaster","nameLocation":"442:13:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b0d691fe","id":2019,"mutability":"immutable","name":"entryPoint","nameLocation":"515:10:7","nodeType":"VariableDeclaration","scope":2230,"src":"486:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"},"typeName":{"id":2018,"nodeType":"UserDefinedTypeName","pathNode":{"id":2017,"name":"IEntryPoint","nameLocations":["486:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2839,"src":"486:11:7"},"referencedDeclaration":2839,"src":"486:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"visibility":"public"},{"body":{"id":2033,"nodeType":"Block","src":"590:43:7","statements":[{"expression":{"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2029,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"601:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2030,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"614:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"src":"601:24:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"id":2032,"nodeType":"ExpressionStatement","src":"601:24:7"}]},"id":2034,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2025,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"579:2:7","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"582:6:7","memberName":"origin","nodeType":"MemberAccess","src":"579:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2027,"kind":"baseConstructorSpecifier","modifierName":{"id":2024,"name":"Ownable","nameLocations":["571:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"571:7:7"},"nodeType":"ModifierInvocation","src":"571:18:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"_entryPoint","nameLocation":"558:11:7","nodeType":"VariableDeclaration","scope":2034,"src":"546:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"},"typeName":{"id":2021,"nodeType":"UserDefinedTypeName","pathNode":{"id":2020,"name":"IEntryPoint","nameLocations":["546:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2839,"src":"546:11:7"},"referencedDeclaration":2839,"src":"546:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"545:25:7"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"590:0:7"},"scope":2230,"src":"534:99:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2881],"body":{"id":2059,"nodeType":"Block","src":"881:114:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2050,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"892:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"892:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2052,"nodeType":"ExpressionStatement","src":"892:24:7"},{"expression":{"arguments":[{"id":2054,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"959:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":2055,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"967:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2056,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"979:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2053,"name":"_validatePaymasterUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"934:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$3023_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":2049,"id":2058,"nodeType":"Return","src":"927:60:7"}]},"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"641:26:7","text":"@inheritdoc IPaymaster"},"functionSelector":"f465c77e","id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"682:23:7","nodeType":"FunctionDefinition","overrides":{"id":2044,"nodeType":"OverrideSpecifier","overrides":[],"src":"817:8:7"},"parameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"userOp","nameLocation":"739:6:7","nodeType":"VariableDeclaration","scope":2060,"src":"716:29:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2037,"nodeType":"UserDefinedTypeName","pathNode":{"id":2036,"name":"UserOperation","nameLocations":["716:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"716:13:7"},"referencedDeclaration":3023,"src":"716:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"userOpHash","nameLocation":"764:10:7","nodeType":"VariableDeclaration","scope":2060,"src":"756:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"756:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2042,"mutability":"mutable","name":"maxCost","nameLocation":"793:7:7","nodeType":"VariableDeclaration","scope":2060,"src":"785:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"785:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"705:102:7"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"context","nameLocation":"848:7:7","nodeType":"VariableDeclaration","scope":2060,"src":"835:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2045,"name":"bytes","nodeType":"ElementaryTypeName","src":"835:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"validationData","nameLocation":"865:14:7","nodeType":"VariableDeclaration","scope":2060,"src":"857:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"834:46:7"},"scope":2230,"src":"673:322:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"1003:223:7","text":" Validate a user operation.\n @param userOp     - The user operation.\n @param userOpHash - The hash of the user operation.\n @param maxCost    - The maximum cost of the user operation."},"id":2075,"implemented":false,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"1241:24:7","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"userOp","nameLocation":"1299:6:7","nodeType":"VariableDeclaration","scope":2075,"src":"1276:29:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2063,"nodeType":"UserDefinedTypeName","pathNode":{"id":2062,"name":"UserOperation","nameLocations":["1276:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"1276:13:7"},"referencedDeclaration":3023,"src":"1276:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"userOpHash","nameLocation":"1324:10:7","nodeType":"VariableDeclaration","scope":2075,"src":"1316:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1316:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"maxCost","nameLocation":"1353:7:7","nodeType":"VariableDeclaration","scope":2075,"src":"1345:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1265:102:7"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"context","nameLocation":"1407:7:7","nodeType":"VariableDeclaration","scope":2075,"src":"1394:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2070,"name":"bytes","nodeType":"ElementaryTypeName","src":"1394:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"validationData","nameLocation":"1424:14:7","nodeType":"VariableDeclaration","scope":2075,"src":"1416:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1416:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1393:46:7"},"scope":2230,"src":"1232:208:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2892],"body":{"id":2096,"nodeType":"Block","src":"1612:91:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2087,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"1623:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2089,"nodeType":"ExpressionStatement","src":"1623:24:7"},{"expression":{"arguments":[{"id":2091,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1666:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$2866","typeString":"enum IPaymaster.PostOpMode"}},{"id":2092,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"1672:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2093,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"1681:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$2866","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2090,"name":"_postOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"1658:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_PostOpMode_$2866_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2095,"nodeType":"ExpressionStatement","src":"1658:37:7"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"1448:26:7","text":"@inheritdoc IPaymaster"},"functionSelector":"a9a23409","id":2097,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"1489:6:7","nodeType":"FunctionDefinition","overrides":{"id":2085,"nodeType":"OverrideSpecifier","overrides":[],"src":"1603:8:7"},"parameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"mode","nameLocation":"1517:4:7","nodeType":"VariableDeclaration","scope":2097,"src":"1506:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$2866","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":2078,"nodeType":"UserDefinedTypeName","pathNode":{"id":2077,"name":"PostOpMode","nameLocations":["1506:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":2866,"src":"1506:10:7"},"referencedDeclaration":2866,"src":"1506:10:7","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$2866","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"context","nameLocation":"1547:7:7","nodeType":"VariableDeclaration","scope":2097,"src":"1532:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2080,"name":"bytes","nodeType":"ElementaryTypeName","src":"1532:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2083,"mutability":"mutable","name":"actualGasCost","nameLocation":"1573:13:7","nodeType":"VariableDeclaration","scope":2097,"src":"1565:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1565:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:98:7"},"returnParameters":{"id":2086,"nodeType":"ParameterList","parameters":[],"src":"1612:0:7"},"scope":2230,"src":"1480:223:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2117,"nodeType":"Block","src":"2711:192:7","statements":[{"expression":{"components":[{"id":2108,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"2723:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$2866","typeString":"enum IPaymaster.PostOpMode"}},{"id":2109,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"2729:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2110,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2738:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2722:30:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_PostOpMode_$2866_$_t_bytes_calldata_ptr_$_t_uint256_$","typeString":"tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":2112,"nodeType":"ExpressionStatement","src":"2722:30:7"},{"expression":{"arguments":[{"hexValue":"6d757374206f76657272696465","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2879:15:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""},"value":"must override"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""}],"id":2113,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2872:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2872:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2116,"nodeType":"ExpressionStatement","src":"2872:23:7"}]},"documentation":{"id":2098,"nodeType":"StructuredDocumentation","src":"1711:862:7","text":" Post-operation handler.\n (verified to be called only through the entryPoint)\n @dev If subclass returns a non-empty context from validatePaymasterUserOp,\n      it must also implement this method.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call)."},"id":2118,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"2588:7:7","nodeType":"FunctionDefinition","parameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"mode","nameLocation":"2617:4:7","nodeType":"VariableDeclaration","scope":2118,"src":"2606:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$2866","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":2100,"nodeType":"UserDefinedTypeName","pathNode":{"id":2099,"name":"PostOpMode","nameLocations":["2606:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":2866,"src":"2606:10:7"},"referencedDeclaration":2866,"src":"2606:10:7","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$2866","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":2103,"mutability":"mutable","name":"context","nameLocation":"2647:7:7","nodeType":"VariableDeclaration","scope":2118,"src":"2632:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2102,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2105,"mutability":"mutable","name":"actualGasCost","nameLocation":"2673:13:7","nodeType":"VariableDeclaration","scope":2118,"src":"2665:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2595:98:7"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[],"src":"2711:0:7"},"scope":2230,"src":"2579:324:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2134,"nodeType":"Block","src":"3043:72:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":2130,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3101:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$2230","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$2230","typeString":"contract BasePaymaster"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3093:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:7","typeDescriptions":{}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2122,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3054:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3065:9:7","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":2972,"src":"3054:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2125,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3082:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3086:5:7","memberName":"value","nodeType":"MemberAccess","src":"3082:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3054:38:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2133,"nodeType":"ExpressionStatement","src":"3054:53:7"}]},"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"2911:92:7","text":" Add a deposit for this paymaster, used for paying for transaction fees."},"functionSelector":"d0e30db0","id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3018:7:7","nodeType":"FunctionDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[],"src":"3025:2:7"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[],"src":"3043:0:7"},"scope":2230,"src":"3009:106:7","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2152,"nodeType":"Block","src":"3398:65:7","statements":[{"expression":{"arguments":[{"id":2148,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3431:15:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2149,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"3448:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2145,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3409:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3420:10:7","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":2996,"src":"3409:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3409:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"ExpressionStatement","src":"3409:46:7"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"3123:158:7","text":" Withdraw value from the deposit.\n @param withdrawAddress - Target to send to.\n @param amount          - Amount to withdraw."},"functionSelector":"205c2878","id":2153,"implemented":true,"kind":"function","modifiers":[{"id":2143,"kind":"modifierInvocation","modifierName":{"id":2142,"name":"onlyOwner","nameLocations":["3388:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3388:9:7"},"nodeType":"ModifierInvocation","src":"3388:9:7"}],"name":"withdrawTo","nameLocation":"3296:10:7","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3333:15:7","nodeType":"VariableDeclaration","scope":2153,"src":"3317:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"3317:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"amount","nameLocation":"3367:6:7","nodeType":"VariableDeclaration","scope":2153,"src":"3359:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"3359:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3306:74:7"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[],"src":"3398:0:7"},"scope":2230,"src":"3287:176:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2170,"nodeType":"Block","src":"3764:73:7","statements":[{"expression":{"arguments":[{"id":2167,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"3813:15:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":2161,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3775:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3786:8:7","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"3775:19:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3802:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3806:5:7","memberName":"value","nodeType":"MemberAccess","src":"3802:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3775:37:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3775:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2169,"nodeType":"ExpressionStatement","src":"3775:54:7"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"3471:218:7","text":" Add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased."},"functionSelector":"0396cb60","id":2171,"implemented":true,"kind":"function","modifiers":[{"id":2159,"kind":"modifierInvocation","modifierName":{"id":2158,"name":"onlyOwner","nameLocations":["3754:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3754:9:7"},"nodeType":"ModifierInvocation","src":"3754:9:7"}],"name":"addStake","nameLocation":"3704:8:7","nodeType":"FunctionDefinition","parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"3720:15:7","nodeType":"VariableDeclaration","scope":2171,"src":"3713:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2155,"name":"uint32","nodeType":"ElementaryTypeName","src":"3713:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3712:24:7"},"returnParameters":{"id":2160,"nodeType":"ParameterList","parameters":[],"src":"3764:0:7"},"scope":2230,"src":"3695:142:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2185,"nodeType":"Block","src":"3977:61:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":2181,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4024:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$2230","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$2230","typeString":"contract BasePaymaster"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4016:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"4016:7:7","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2177,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3995:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4006:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2966,"src":"3995:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3995:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2176,"id":2184,"nodeType":"Return","src":"3988:42:7"}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"3845:74:7","text":" Return current paymaster's deposit on the entryPoint."},"functionSelector":"c399ec88","id":2186,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"3934:10:7","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[],"src":"3944:2:7"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"3968:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3967:9:7"},"scope":2230,"src":"3925:113:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2197,"nodeType":"Block","src":"4245:43:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2192,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"4256:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4267:11:7","memberName":"unlockStake","nodeType":"MemberAccess","referencedDeclaration":2982,"src":"4256:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4256:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"4256:24:7"}]},"documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"4046:151:7","text":" Unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"},"functionSelector":"bb9fe6bf","id":2198,"implemented":true,"kind":"function","modifiers":[{"id":2190,"kind":"modifierInvocation","modifierName":{"id":2189,"name":"onlyOwner","nameLocations":["4235:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4235:9:7"},"nodeType":"ModifierInvocation","src":"4235:9:7"}],"name":"unlockStake","nameLocation":"4212:11:7","nodeType":"FunctionDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[],"src":"4223:2:7"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[],"src":"4245:0:7"},"scope":2230,"src":"4203:85:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2212,"nodeType":"Block","src":"4591:60:7","statements":[{"expression":{"arguments":[{"id":2209,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"4627:15:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":2206,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"4602:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4613:13:7","memberName":"withdrawStake","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"4602:24:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable) external"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2211,"nodeType":"ExpressionStatement","src":"4602:41:7"}]},"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"4296:214:7","text":" Withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":2213,"implemented":true,"kind":"function","modifiers":[{"id":2204,"kind":"modifierInvocation","modifierName":{"id":2203,"name":"onlyOwner","nameLocations":["4581:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4581:9:7"},"nodeType":"ModifierInvocation","src":"4581:9:7"}],"name":"withdrawStake","nameLocation":"4525:13:7","nodeType":"FunctionDefinition","parameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4555:15:7","nodeType":"VariableDeclaration","scope":2213,"src":"4539:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"4539:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"4538:33:7"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[],"src":"4591:0:7"},"scope":2230,"src":"4516:135:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2228,"nodeType":"Block","src":"4786:86:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2218,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4805:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4809:6:7","memberName":"sender","nodeType":"MemberAccess","src":"4805:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2222,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"4827:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}],"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4819:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"4819:7:7","typeDescriptions":{}}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4819:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4805:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4840:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""},"value":"Sender not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""}],"id":2217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4797:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4797:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2227,"nodeType":"ExpressionStatement","src":"4797:67:7"}]},"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"4659:70:7","text":" Validate the call is made from a valid entrypoint"},"id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"4744:22:7","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[],"src":"4766:2:7"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[],"src":"4786:0:7"},"scope":2230,"src":"4735:137:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2231,"src":"424:4451:7","usedErrors":[13,18],"usedEvents":[24]}],"src":"37:4838:7"},"id":7},"contracts/core/Helpers.sol":{"ast":{"absolutePath":"contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[2240],"_intersectTimeRange":[2386],"_packValidationData":[2423,2461],"_parseValidationData":[2300],"calldataKeccak":[2471]},"id":2472,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2232,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:8"},{"canonicalName":"ValidationData","documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"109:649:8","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, with is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validaUntil - This UserOp is valid only up to this timestamp."},"id":2240,"members":[{"constant":false,"id":2235,"mutability":"mutable","name":"aggregator","nameLocation":"797:10:8","nodeType":"VariableDeclaration","scope":2240,"src":"789:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"validAfter","nameLocation":"821:10:8","nodeType":"VariableDeclaration","scope":2240,"src":"814:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2236,"name":"uint48","nodeType":"ElementaryTypeName","src":"814:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"validUntil","nameLocation":"845:10:8","nodeType":"VariableDeclaration","scope":2240,"src":"838:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2238,"name":"uint48","nodeType":"ElementaryTypeName","src":"838:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"767:14:8","nodeType":"StructDefinition","scope":2472,"src":"760:99:8","visibility":"public"},{"body":{"id":2299,"nodeType":"Block","src":"1131:322:8","statements":[{"assignments":[2250],"declarations":[{"constant":false,"id":2250,"mutability":"mutable","name":"aggregator","nameLocation":"1146:10:8","nodeType":"VariableDeclaration","scope":2299,"src":"1138:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2258,"initialValue":{"arguments":[{"arguments":[{"id":2255,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1175:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1167:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2253,"name":"uint160","nodeType":"ElementaryTypeName","src":"1167:7:8","typeDescriptions":{}}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1159:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:8","typeDescriptions":{}}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1138:53:8"},{"assignments":[2260],"declarations":[{"constant":false,"id":2260,"mutability":"mutable","name":"validUntil","nameLocation":"1205:10:8","nodeType":"VariableDeclaration","scope":2299,"src":"1198:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2259,"name":"uint48","nodeType":"ElementaryTypeName","src":"1198:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2267,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1225:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1225:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1218:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2261,"name":"uint48","nodeType":"ElementaryTypeName","src":"1218:6:8","typeDescriptions":{}}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1218:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1198:49:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2268,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"1258:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1272:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1258:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2280,"nodeType":"IfStatement","src":"1254:69:8","trueBody":{"id":2279,"nodeType":"Block","src":"1275:48:8","statements":[{"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2271,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"1286:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1304:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2273,"name":"uint48","nodeType":"ElementaryTypeName","src":"1304:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2272,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1299:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1299:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1312:3:8","memberName":"max","nodeType":"MemberAccess","src":"1299:16:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1286:29:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2278,"nodeType":"ExpressionStatement","src":"1286:29:8"}]}},{"assignments":[2282],"declarations":[{"constant":false,"id":2282,"mutability":"mutable","name":"validAfter","nameLocation":"1336:10:8","nodeType":"VariableDeclaration","scope":2299,"src":"1329:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2281,"name":"uint48","nodeType":"ElementaryTypeName","src":"1329:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2292,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1356:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1375:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1380:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1375:8:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1374:10:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1356:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1349:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2283,"name":"uint48","nodeType":"ElementaryTypeName","src":"1349:6:8","typeDescriptions":{}}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1329:56:8"},{"expression":{"arguments":[{"id":2294,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"1414:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2295,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"1426:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2296,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"1438:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2293,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"1399:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$2240_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":2248,"id":2298,"nodeType":"Return","src":"1392:57:8"}]},"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"863:165:8","text":" Extract sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data."},"id":2300,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1039:20:8","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"validationData","nameLocation":"1071:14:8","nodeType":"VariableDeclaration","scope":2300,"src":"1066:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint","nodeType":"ElementaryTypeName","src":"1066:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1059:29:8"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"data","nameLocation":"1125:4:8","nodeType":"VariableDeclaration","scope":2300,"src":"1103:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2246,"nodeType":"UserDefinedTypeName","pathNode":{"id":2245,"name":"ValidationData","nameLocations":["1103:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"1103:14:8"},"referencedDeclaration":2240,"src":"1103:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1102:28:8"},"scope":2472,"src":"1030:423:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2385,"nodeType":"Block","src":"1809:795:8","statements":[{"assignments":[2313],"declarations":[{"constant":false,"id":2313,"mutability":"mutable","name":"accountValidationData","nameLocation":"1838:21:8","nodeType":"VariableDeclaration","scope":2385,"src":"1816:43:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2312,"nodeType":"UserDefinedTypeName","pathNode":{"id":2311,"name":"ValidationData","nameLocations":["1816:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"1816:14:8"},"referencedDeclaration":2240,"src":"1816:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":2317,"initialValue":{"arguments":[{"id":2315,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1893:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2314,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1862:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2240_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1816:98:8"},{"assignments":[2320],"declarations":[{"constant":false,"id":2320,"mutability":"mutable","name":"pmValidationData","nameLocation":"1943:16:8","nodeType":"VariableDeclaration","scope":2385,"src":"1921:38:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2319,"nodeType":"UserDefinedTypeName","pathNode":{"id":2318,"name":"ValidationData","nameLocations":["1921:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"1921:14:8"},"referencedDeclaration":2240,"src":"1921:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":2324,"initialValue":{"arguments":[{"id":2322,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1993:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2321,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1962:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2240_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1921:102:8"},{"assignments":[2326],"declarations":[{"constant":false,"id":2326,"mutability":"mutable","name":"aggregator","nameLocation":"2038:10:8","nodeType":"VariableDeclaration","scope":2385,"src":"2030:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2325,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2329,"initialValue":{"expression":{"id":2327,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"2051:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"id":2328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2073:10:8","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"2051:32:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2030:53:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"2094:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2116:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2108:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:8","typeDescriptions":{}}},"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2108:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2094:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2342,"nodeType":"IfStatement","src":"2090:89:8","trueBody":{"id":2341,"nodeType":"Block","src":"2120:59:8","statements":[{"expression":{"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2336,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"2131:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2337,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"2144:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"id":2338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2161:10:8","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"2144:27:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2131:40:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2340,"nodeType":"ExpressionStatement","src":"2131:40:8"}]}},{"assignments":[2344],"declarations":[{"constant":false,"id":2344,"mutability":"mutable","name":"validAfter","nameLocation":"2192:10:8","nodeType":"VariableDeclaration","scope":2385,"src":"2185:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2343,"name":"uint48","nodeType":"ElementaryTypeName","src":"2185:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2347,"initialValue":{"expression":{"id":2345,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"2205:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"id":2346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2227:10:8","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2237,"src":"2205:32:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2185:52:8"},{"assignments":[2349],"declarations":[{"constant":false,"id":2349,"mutability":"mutable","name":"validUntil","nameLocation":"2251:10:8","nodeType":"VariableDeclaration","scope":2385,"src":"2244:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2348,"name":"uint48","nodeType":"ElementaryTypeName","src":"2244:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2352,"initialValue":{"expression":{"id":2350,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"2264:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"id":2351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2286:10:8","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"2264:32:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2244:52:8"},{"assignments":[2354],"declarations":[{"constant":false,"id":2354,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2310:12:8","nodeType":"VariableDeclaration","scope":2385,"src":"2303:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2353,"name":"uint48","nodeType":"ElementaryTypeName","src":"2303:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2357,"initialValue":{"expression":{"id":2355,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"2325:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"id":2356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2342:10:8","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2237,"src":"2325:27:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2303:49:8"},{"assignments":[2359],"declarations":[{"constant":false,"id":2359,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2366:12:8","nodeType":"VariableDeclaration","scope":2385,"src":"2359:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2358,"name":"uint48","nodeType":"ElementaryTypeName","src":"2359:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2362,"initialValue":{"expression":{"id":2360,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"2381:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"id":2361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:10:8","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"2381:27:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2359:49:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2363,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"2421:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2364,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"2434:12:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2421:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2370,"nodeType":"IfStatement","src":"2417:56:8","trueBody":{"expression":{"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2366,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"2448:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2367,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"2461:12:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2448:25:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2369,"nodeType":"ExpressionStatement","src":"2448:25:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2371,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2484:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2372,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"2497:12:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2484:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2378,"nodeType":"IfStatement","src":"2480:56:8","trueBody":{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2374,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2511:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2375,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"2524:12:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2511:25:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2377,"nodeType":"ExpressionStatement","src":"2511:25:8"}},{"expression":{"arguments":[{"id":2380,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"2565:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2381,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"2577:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2382,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2589:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2379,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"2550:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$2240_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":2310,"id":2384,"nodeType":"Return","src":"2543:57:8"}]},"documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"1457:214:8","text":" Intersect account and paymaster ranges.\n @param validationData          - The packed validation data of the account.\n @param paymasterValidationData - The packed validation data of the paymaster."},"id":2386,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1682:19:8","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"validationData","nameLocation":"1716:14:8","nodeType":"VariableDeclaration","scope":2386,"src":"1708:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1745:23:8","nodeType":"VariableDeclaration","scope":2386,"src":"1737:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1701:70:8"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2386,"src":"1786:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2308,"nodeType":"UserDefinedTypeName","pathNode":{"id":2307,"name":"ValidationData","nameLocations":["1786:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"1786:14:8"},"referencedDeclaration":2240,"src":"1786:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1785:23:8"},"scope":2472,"src":"1673:931:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2422,"nodeType":"Block","src":"2808:148:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2397,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2839:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"id":2398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2844:10:8","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"2839:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2831:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2395,"name":"uint160","nodeType":"ElementaryTypeName","src":"2831:7:8","typeDescriptions":{}}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2402,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2876:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"id":2403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2881:10:8","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"2876:15:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2868:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:8","typeDescriptions":{}}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2868:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2896:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2868:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2867:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:69:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2411,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2921:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData memory"}},"id":2412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2926:10:8","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2237,"src":"2921:15:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2913:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2913:7:8","typeDescriptions":{}}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2942:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2942:8:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2941:10:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2913:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2912:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:121:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2394,"id":2421,"nodeType":"Return","src":"2815:137:8"}]},"documentation":{"id":2387,"nodeType":"StructuredDocumentation","src":"2608:110:8","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack."},"id":2423,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2729:19:8","nodeType":"FunctionDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"data","nameLocation":"2777:4:8","nodeType":"VariableDeclaration","scope":2423,"src":"2755:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2389,"nodeType":"UserDefinedTypeName","pathNode":{"id":2388,"name":"ValidationData","nameLocations":["2755:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"2755:14:8"},"referencedDeclaration":2240,"src":"2755:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2240_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2748:36:8"},"returnParameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2423,"src":"2799:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2799:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2798:9:8"},"scope":2472,"src":"2720:236:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2460,"nodeType":"Block","src":"3411:133:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":2435,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3435:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3451:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3435:17:8","trueExpression":{"hexValue":"31","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3447:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3434:19:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2442,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"3474:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3466:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:8","typeDescriptions":{}}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3466:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3489:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3466:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3465:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:59:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2450,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"3514:10:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3506:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3506:7:8","typeDescriptions":{}}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3506:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3530:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3536:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3530:8:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3529:10:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3506:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3505:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:106:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2434,"id":2459,"nodeType":"Return","src":"3418:122:8"}]},"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"2960:325:8","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n @param validAfter - First timestamp this UserOperation is valid."},"id":2461,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"3296:19:8","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"sigFailed","nameLocation":"3327:9:8","nodeType":"VariableDeclaration","scope":2461,"src":"3322:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2425,"name":"bool","nodeType":"ElementaryTypeName","src":"3322:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"validUntil","nameLocation":"3350:10:8","nodeType":"VariableDeclaration","scope":2461,"src":"3343:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2427,"name":"uint48","nodeType":"ElementaryTypeName","src":"3343:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"validAfter","nameLocation":"3374:10:8","nodeType":"VariableDeclaration","scope":2461,"src":"3367:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2429,"name":"uint48","nodeType":"ElementaryTypeName","src":"3367:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3315:72:8"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2461,"src":"3402:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3401:9:8"},"scope":2472,"src":"3287:257:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2470,"nodeType":"Block","src":"3805:200:8","statements":[{"AST":{"nodeType":"YulBlock","src":"3825:173:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3840:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3857:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3851:5:8"},"nodeType":"YulFunctionCall","src":"3851:11:8"},"variables":[{"name":"mem","nodeType":"YulTypedName","src":"3844:3:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3876:22:8","value":{"name":"data.length","nodeType":"YulIdentifier","src":"3887:11:8"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3880:3:8","type":""}]},{"expression":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3925:3:8"},{"name":"data.offset","nodeType":"YulIdentifier","src":"3930:11:8"},{"name":"len","nodeType":"YulIdentifier","src":"3943:3:8"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3912:12:8"},"nodeType":"YulFunctionCall","src":"3912:35:8"},"nodeType":"YulExpressionStatement","src":"3912:35:8"},{"nodeType":"YulAssignment","src":"3961:26:8","value":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3978:3:8"},{"name":"len","nodeType":"YulIdentifier","src":"3983:3:8"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3968:9:8"},"nodeType":"YulFunctionCall","src":"3968:19:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3961:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2464,"isOffset":false,"isSlot":false,"src":"3887:11:8","suffix":"length","valueSize":1},{"declaration":2464,"isOffset":true,"isSlot":false,"src":"3930:11:8","suffix":"offset","valueSize":1},{"declaration":2467,"isOffset":false,"isSlot":false,"src":"3961:3:8","valueSize":1}],"id":2469,"nodeType":"InlineAssembly","src":"3816:182:8"}]},"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"3548:179:8","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":2471,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3742:14:8","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"data","nameLocation":"3772:4:8","nodeType":"VariableDeclaration","scope":2471,"src":"3757:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2463,"name":"bytes","nodeType":"ElementaryTypeName","src":"3757:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3756:21:8"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"ret","nameLocation":"3800:3:8","nodeType":"VariableDeclaration","scope":2471,"src":"3792:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3792:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3791:13:8"},"scope":2472,"src":"3733:272:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"37:3968:8"},"id":8},"contracts/core/UserOperationLib.sol":{"ast":{"absolutePath":"contracts/core/UserOperationLib.sol","exportedSymbols":{"UserOperation":[3023],"UserOperationLib":[2651],"calldataKeccak":[2471]},"id":2652,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2473,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:9"},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":2475,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2652,"sourceUnit":2472,"src":"109:45:9","symbolAliases":[{"foreign":{"id":2474,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"117:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"../interfaces/UserOperation.sol","id":2476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2652,"sourceUnit":3024,"src":"156:41:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":2477,"nodeType":"StructuredDocumentation","src":"201:79:9","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":2651,"linearizedBaseContracts":[2651],"name":"UserOperationLib","nameLocation":"290:16:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2498,"nodeType":"Block","src":"524:228:9","statements":[{"assignments":[2487],"declarations":[{"constant":false,"id":2487,"mutability":"mutable","name":"data","nameLocation":"543:4:9","nodeType":"VariableDeclaration","scope":2498,"src":"535:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2486,"name":"address","nodeType":"ElementaryTypeName","src":"535:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2488,"nodeType":"VariableDeclarationStatement","src":"535:12:9"},{"AST":{"nodeType":"YulBlock","src":"651:54:9","statements":[{"nodeType":"YulAssignment","src":"666:28:9","value":{"arguments":[{"name":"userOp","nodeType":"YulIdentifier","src":"687:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"674:12:9"},"nodeType":"YulFunctionCall","src":"674:20:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"666:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2487,"isOffset":false,"isSlot":false,"src":"666:4:9","valueSize":1},{"declaration":2481,"isOffset":false,"isSlot":false,"src":"687:6:9","valueSize":1}],"id":2489,"nodeType":"InlineAssembly","src":"642:63:9"},{"expression":{"arguments":[{"arguments":[{"id":2494,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"738:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"730:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2492,"name":"uint160","nodeType":"ElementaryTypeName","src":"730:7:9","typeDescriptions":{}}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"730:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"722:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2490,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:9","typeDescriptions":{}}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"722:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2485,"id":2497,"nodeType":"Return","src":"715:29:9"}]},"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"314:106:9","text":" Get sender from user operation data.\n @param userOp - The user operation data."},"id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"435:9:9","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"userOp","nameLocation":"478:6:9","nodeType":"VariableDeclaration","scope":2499,"src":"455:29:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2480,"nodeType":"UserDefinedTypeName","pathNode":{"id":2479,"name":"UserOperation","nameLocations":["455:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"455:13:9"},"referencedDeclaration":3023,"src":"455:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"444:47:9"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2499,"src":"515:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2483,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"514:9:9"},"scope":2651,"src":"426:326:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2534,"nodeType":"Block","src":"1061:437:9","statements":[{"id":2533,"nodeType":"UncheckedBlock","src":"1072:419:9","statements":[{"assignments":[2509],"declarations":[{"constant":false,"id":2509,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1105:12:9","nodeType":"VariableDeclaration","scope":2533,"src":"1097:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2512,"initialValue":{"expression":{"id":2510,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"1120:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1127:12:9","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3016,"src":"1120:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1097:42:9"},{"assignments":[2514],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1162:20:9","nodeType":"VariableDeclaration","scope":2533,"src":"1154:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2517,"initialValue":{"expression":{"id":2515,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"1185:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1192:20:9","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3018,"src":"1185:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1154:58:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"1231:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2519,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"1247:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1231:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2524,"nodeType":"IfStatement","src":"1227:176:9","trueBody":{"id":2523,"nodeType":"Block","src":"1269:134:9","statements":[{"expression":{"id":2521,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"1375:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2507,"id":2522,"nodeType":"Return","src":"1368:19:9"}]}},{"expression":{"arguments":[{"id":2526,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"1428:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"1442:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2528,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1465:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1471:7:9","memberName":"basefee","nodeType":"MemberAccess","src":"1465:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1442:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2525,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"1424:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1424:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2507,"id":2532,"nodeType":"Return","src":"1417:62:9"}]}]},"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"760:198:9","text":" Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."},"id":2535,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"973:8:9","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"userOp","nameLocation":"1015:6:9","nodeType":"VariableDeclaration","scope":2535,"src":"992:29:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2502,"nodeType":"UserDefinedTypeName","pathNode":{"id":2501,"name":"UserOperation","nameLocations":["992:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"992:13:9"},"referencedDeclaration":3023,"src":"992:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"981:47:9"},"returnParameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2535,"src":"1052:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1051:9:9"},"scope":2651,"src":"964:534:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2615,"nodeType":"Block","src":"1736:875:9","statements":[{"assignments":[2545],"declarations":[{"constant":false,"id":2545,"mutability":"mutable","name":"sender","nameLocation":"1755:6:9","nodeType":"VariableDeclaration","scope":2615,"src":"1747:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2549,"initialValue":{"arguments":[{"id":2547,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"1774:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":2546,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"1764:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3023_calldata_ptr_$returns$_t_address_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1747:34:9"},{"assignments":[2551],"declarations":[{"constant":false,"id":2551,"mutability":"mutable","name":"nonce","nameLocation":"1800:5:9","nodeType":"VariableDeclaration","scope":2615,"src":"1792:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1792:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2554,"initialValue":{"expression":{"id":2552,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"1808:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1815:5:9","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"1808:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1792:28:9"},{"assignments":[2556],"declarations":[{"constant":false,"id":2556,"mutability":"mutable","name":"hashInitCode","nameLocation":"1839:12:9","nodeType":"VariableDeclaration","scope":2615,"src":"1831:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1831:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2561,"initialValue":{"arguments":[{"expression":{"id":2558,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"1869:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1876:8:9","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3006,"src":"1869:15:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2557,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"1854:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1854:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1831:54:9"},{"assignments":[2563],"declarations":[{"constant":false,"id":2563,"mutability":"mutable","name":"hashCallData","nameLocation":"1904:12:9","nodeType":"VariableDeclaration","scope":2615,"src":"1896:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1896:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2568,"initialValue":{"arguments":[{"expression":{"id":2565,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"1934:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1941:8:9","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":3008,"src":"1934:15:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2564,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"1919:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1919:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1896:54:9"},{"assignments":[2570],"declarations":[{"constant":false,"id":2570,"mutability":"mutable","name":"callGasLimit","nameLocation":"1969:12:9","nodeType":"VariableDeclaration","scope":2615,"src":"1961:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2573,"initialValue":{"expression":{"id":2571,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"1984:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1991:12:9","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":3010,"src":"1984:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1961:42:9"},{"assignments":[2575],"declarations":[{"constant":false,"id":2575,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"2022:20:9","nodeType":"VariableDeclaration","scope":2615,"src":"2014:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2578,"initialValue":{"expression":{"id":2576,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"2045:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2052:20:9","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"2045:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2014:58:9"},{"assignments":[2580],"declarations":[{"constant":false,"id":2580,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2091:18:9","nodeType":"VariableDeclaration","scope":2615,"src":"2083:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2583,"initialValue":{"expression":{"id":2581,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"2112:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2119:18:9","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3014,"src":"2112:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2083:54:9"},{"assignments":[2585],"declarations":[{"constant":false,"id":2585,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2156:12:9","nodeType":"VariableDeclaration","scope":2615,"src":"2148:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2148:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2588,"initialValue":{"expression":{"id":2586,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"2171:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2178:12:9","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3016,"src":"2171:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2148:42:9"},{"assignments":[2590],"declarations":[{"constant":false,"id":2590,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2209:20:9","nodeType":"VariableDeclaration","scope":2615,"src":"2201:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2593,"initialValue":{"expression":{"id":2591,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"2232:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:20:9","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3018,"src":"2232:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2201:58:9"},{"assignments":[2595],"declarations":[{"constant":false,"id":2595,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"2278:20:9","nodeType":"VariableDeclaration","scope":2615,"src":"2270:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2270:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2600,"initialValue":{"arguments":[{"expression":{"id":2597,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"2316:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2323:16:9","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3020,"src":"2316:23:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2596,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"2301:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2301:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2270:70:9"},{"expression":{"arguments":[{"id":2603,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2385:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2604,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"2393:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2605,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"2413:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2606,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"2427:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2607,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"2454:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2608,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"2468:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2609,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"2490:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2610,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"2523:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2611,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"2537:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2612,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"2572:20:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2601,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2360:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2364:6:9","memberName":"encode","nodeType":"MemberAccess","src":"2360:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2360:243:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2543,"id":2614,"nodeType":"Return","src":"2353:250:9"}]},"documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"1506:122:9","text":" Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data."},"id":2616,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"1643:4:9","nodeType":"FunctionDefinition","parameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"userOp","nameLocation":"1681:6:9","nodeType":"VariableDeclaration","scope":2616,"src":"1658:29:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2538,"nodeType":"UserDefinedTypeName","pathNode":{"id":2537,"name":"UserOperation","nameLocations":["1658:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"1658:13:9"},"referencedDeclaration":3023,"src":"1658:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1647:47:9"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"ret","nameLocation":"1731:3:9","nodeType":"VariableDeclaration","scope":2616,"src":"1718:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2541,"name":"bytes","nodeType":"ElementaryTypeName","src":"1718:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1717:18:9"},"scope":2651,"src":"1634:977:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"2817:49:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2627,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"2850:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":2626,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"2845:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3023_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2845:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2625,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2835:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2835:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2624,"id":2630,"nodeType":"Return","src":"2828:30:9"}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"2619:99:9","text":" Hash the user operation data.\n @param userOp - The user operation data."},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"2733:4:9","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"userOp","nameLocation":"2771:6:9","nodeType":"VariableDeclaration","scope":2632,"src":"2748:29:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2619,"nodeType":"UserDefinedTypeName","pathNode":{"id":2618,"name":"UserOperation","nameLocations":["2748:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"2748:13:9"},"referencedDeclaration":3023,"src":"2748:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2737:47:9"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2632,"src":"2808:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2808:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2807:9:9"},"scope":2651,"src":"2724:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2649,"nodeType":"Block","src":"3062:39:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"3080:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2643,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"3084:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3080:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2646,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"3092:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3080:13:9","trueExpression":{"id":2645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"3088:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2641,"id":2648,"nodeType":"Return","src":"3073:20:9"}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"2874:115:9","text":" The minimum of two numbers.\n @param a - First number.\n @param b - Second number."},"id":2650,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3004:3:9","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"a","nameLocation":"3016:1:9","nodeType":"VariableDeclaration","scope":2650,"src":"3008:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"3008:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"b","nameLocation":"3027:1:9","nodeType":"VariableDeclaration","scope":2650,"src":"3019:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3007:22:9"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2650,"src":"3053:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:9:9"},"scope":2651,"src":"2995:106:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2652,"src":"282:2822:9","usedErrors":[],"usedEvents":[]}],"src":"37:3067:9"},"id":9},"contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[2685],"UserOperation":[3023]},"id":2686,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2653,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:10"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":2654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2686,"sourceUnit":3024,"src":"65:29:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"98:45:10","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":2685,"linearizedBaseContracts":[2685],"name":"IAggregator","nameLocation":"155:11:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2656,"nodeType":"StructuredDocumentation","src":"174:274:10","text":" Validate aggregated signature.\n Revert if the aggregated signature does not match the given list of operations.\n @param userOps   - Array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"e3563a4f","id":2665,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"463:18:10","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"userOps","nameLocation":"517:7:10","nodeType":"VariableDeclaration","scope":2665,"src":"492:32:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3023_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":2658,"nodeType":"UserDefinedTypeName","pathNode":{"id":2657,"name":"UserOperation","nameLocations":["492:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"492:13:10"},"referencedDeclaration":3023,"src":"492:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"id":2659,"nodeType":"ArrayTypeName","src":"492:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3023_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"signature","nameLocation":"550:9:10","nodeType":"VariableDeclaration","scope":2665,"src":"535:24:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2661,"name":"bytes","nodeType":"ElementaryTypeName","src":"535:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"481:85:10"},"returnParameters":{"id":2664,"nodeType":"ParameterList","parameters":[],"src":"580:0:10"},"scope":2685,"src":"454:127:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"589:616:10","text":" Validate signature of a single userOp.\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"64c530cd","id":2674,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1220:23:10","nodeType":"FunctionDefinition","parameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"userOp","nameLocation":"1277:6:10","nodeType":"VariableDeclaration","scope":2674,"src":"1254:29:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2668,"nodeType":"UserDefinedTypeName","pathNode":{"id":2667,"name":"UserOperation","nameLocations":["1254:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"1254:13:10"},"referencedDeclaration":3023,"src":"1254:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1243:47:10"},"returnParameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1327:12:10","nodeType":"VariableDeclaration","scope":2674,"src":"1314:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2671,"name":"bytes","nodeType":"ElementaryTypeName","src":"1314:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1313:27:10"},"scope":2685,"src":"1211:130:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"1349:393:10","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation.\n @param userOps              - Array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"275e2d79","id":2684,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1757:19:10","nodeType":"FunctionDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"userOps","nameLocation":"1812:7:10","nodeType":"VariableDeclaration","scope":2684,"src":"1787:32:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3023_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":2677,"nodeType":"UserDefinedTypeName","pathNode":{"id":2676,"name":"UserOperation","nameLocations":["1787:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"1787:13:10"},"referencedDeclaration":3023,"src":"1787:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"id":2678,"nodeType":"ArrayTypeName","src":"1787:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3023_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1776:50:10"},"returnParameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1863:19:10","nodeType":"VariableDeclaration","scope":2684,"src":"1850:32:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2681,"name":"bytes","nodeType":"ElementaryTypeName","src":"1850:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1849:34:10"},"scope":2685,"src":"1748:136:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2686,"src":"145:1742:10","usedErrors":[],"usedEvents":[]}],"src":"37:1852:10"},"id":10},"contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[2685],"IEntryPoint":[2839],"INonceManager":[2858],"IStakeManager":[2997],"UserOperation":[3023]},"id":2840,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2687,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"168:24:11"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":2688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2840,"sourceUnit":3024,"src":"322:29:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":2689,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2840,"sourceUnit":2998,"src":"353:29:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":2690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2840,"sourceUnit":2686,"src":"384:27:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":2691,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2840,"sourceUnit":2859,"src":"413:29:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2692,"name":"IStakeManager","nameLocations":["471:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2997,"src":"471:13:11"},"id":2693,"nodeType":"InheritanceSpecifier","src":"471:13:11"},{"baseName":{"id":2694,"name":"INonceManager","nameLocations":["486:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2858,"src":"486:13:11"},"id":2695,"nodeType":"InheritanceSpecifier","src":"486:13:11"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2839,"linearizedBaseContracts":[2839,2858,2997],"name":"IEntryPoint","nameLocation":"456:11:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":2711,"name":"UserOperationEvent","nameLocation":"1277:18:11","nodeType":"EventDefinition","parameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1322:10:11","nodeType":"VariableDeclaration","scope":2711,"src":"1306:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1306:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2699,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1359:6:11","nodeType":"VariableDeclaration","scope":2711,"src":"1343:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2698,"name":"address","nodeType":"ElementaryTypeName","src":"1343:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2701,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1392:9:11","nodeType":"VariableDeclaration","scope":2711,"src":"1376:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2703,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1420:5:11","nodeType":"VariableDeclaration","scope":2711,"src":"1412:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2705,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1441:7:11","nodeType":"VariableDeclaration","scope":2711,"src":"1436:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2704,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2707,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1467:13:11","nodeType":"VariableDeclaration","scope":2711,"src":"1459:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2709,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1499:13:11","nodeType":"VariableDeclaration","scope":2711,"src":"1491:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1295:224:11"},"src":"1271:249:11"},{"anonymous":false,"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"1528:355:11","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":2722,"name":"AccountDeployed","nameLocation":"1895:15:11","nodeType":"EventDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1937:10:11","nodeType":"VariableDeclaration","scope":2722,"src":"1921:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1921:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2716,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1974:6:11","nodeType":"VariableDeclaration","scope":2722,"src":"1958:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2715,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2718,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1999:7:11","nodeType":"VariableDeclaration","scope":2722,"src":"1991:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2717,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2720,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"2025:9:11","nodeType":"VariableDeclaration","scope":2722,"src":"2017:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"2017:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1910:131:11"},"src":"1889:153:11"},{"anonymous":false,"documentation":{"id":2723,"nodeType":"StructuredDocumentation","src":"2050:367:11","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":2733,"name":"UserOperationRevertReason","nameLocation":"2429:25:11","nodeType":"EventDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2481:10:11","nodeType":"VariableDeclaration","scope":2733,"src":"2465:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2465:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2727,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2518:6:11","nodeType":"VariableDeclaration","scope":2733,"src":"2502:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2726,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2729,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2543:5:11","nodeType":"VariableDeclaration","scope":2733,"src":"2535:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2728,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2731,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2565:12:11","nodeType":"VariableDeclaration","scope":2733,"src":"2559:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2730,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2454:130:11"},"src":"2423:162:11"},{"anonymous":false,"documentation":{"id":2734,"nodeType":"StructuredDocumentation","src":"2593:382:11","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":2744,"name":"PostOpRevertReason","nameLocation":"2987:18:11","nodeType":"EventDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3032:10:11","nodeType":"VariableDeclaration","scope":2744,"src":"3016:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3016:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2738,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3069:6:11","nodeType":"VariableDeclaration","scope":2744,"src":"3053:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"3053:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2740,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3094:5:11","nodeType":"VariableDeclaration","scope":2744,"src":"3086:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2742,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3116:12:11","nodeType":"VariableDeclaration","scope":2744,"src":"3110:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2741,"name":"bytes","nodeType":"ElementaryTypeName","src":"3110:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3005:130:11"},"src":"2981:155:11"},{"anonymous":false,"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"3144:161:11","text":" An event emitted by handleOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":2747,"name":"BeforeExecution","nameLocation":"3317:15:11","nodeType":"EventDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[],"src":"3332:2:11"},"src":"3311:24:11"},{"anonymous":false,"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"3343:190:11","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":2752,"name":"SignatureAggregatorChanged","nameLocation":"3545:26:11","nodeType":"EventDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3588:10:11","nodeType":"VariableDeclaration","scope":2752,"src":"3572:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"3572:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3571:28:11"},"src":"3539:61:11"},{"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"3608:785:11","text":" A custom revert error of handleOps, to identify the offending op.\n Should be caught in off-chain handleOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":2759,"name":"FailedOp","nameLocation":"4405:8:11","nodeType":"ErrorDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"opIndex","nameLocation":"4422:7:11","nodeType":"VariableDeclaration","scope":2759,"src":"4414:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"4414:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"reason","nameLocation":"4438:6:11","nodeType":"VariableDeclaration","scope":2759,"src":"4431:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2756,"name":"string","nodeType":"ElementaryTypeName","src":"4431:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4413:32:11"},"src":"4399:47:11"},{"errorSelector":"ad7954bc","id":2763,"name":"PostOpReverted","nameLocation":"4460:14:11","nodeType":"ErrorDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"returnData","nameLocation":"4481:10:11","nodeType":"VariableDeclaration","scope":2763,"src":"4475:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2760,"name":"bytes","nodeType":"ElementaryTypeName","src":"4475:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4474:18:11"},"src":"4454:39:11"},{"documentation":{"id":2764,"nodeType":"StructuredDocumentation","src":"4501:193:11","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":2768,"name":"SignatureValidationFailed","nameLocation":"4706:25:11","nodeType":"ErrorDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"aggregator","nameLocation":"4740:10:11","nodeType":"VariableDeclaration","scope":2768,"src":"4732:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2765,"name":"address","nodeType":"ElementaryTypeName","src":"4732:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4731:20:11"},"src":"4700:52:11"},{"errorSelector":"6ca7b806","id":2772,"name":"SenderAddressResult","nameLocation":"4808:19:11","nodeType":"ErrorDefinition","parameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"sender","nameLocation":"4836:6:11","nodeType":"VariableDeclaration","scope":2772,"src":"4828:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"4828:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4827:16:11"},"src":"4802:42:11"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":2782,"members":[{"constant":false,"id":2776,"mutability":"mutable","name":"userOps","nameLocation":"4948:7:11","nodeType":"VariableDeclaration","scope":2782,"src":"4932:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3023_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":2774,"nodeType":"UserDefinedTypeName","pathNode":{"id":2773,"name":"UserOperation","nameLocations":["4932:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"4932:13:11"},"referencedDeclaration":3023,"src":"4932:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"id":2775,"nodeType":"ArrayTypeName","src":"4932:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3023_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"aggregator","nameLocation":"5009:10:11","nodeType":"VariableDeclaration","scope":2782,"src":"4997:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$2685","typeString":"contract IAggregator"},"typeName":{"id":2778,"nodeType":"UserDefinedTypeName","pathNode":{"id":2777,"name":"IAggregator","nameLocations":["4997:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":2685,"src":"4997:11:11"},"referencedDeclaration":2685,"src":"4997:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$2685","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":2781,"mutability":"mutable","name":"signature","nameLocation":"5069:9:11","nodeType":"VariableDeclaration","scope":2782,"src":"5063:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2780,"name":"bytes","nodeType":"ElementaryTypeName","src":"5063:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"4900:20:11","nodeType":"StructDefinition","scope":2839,"src":"4893:193:11","visibility":"public"},{"documentation":{"id":2783,"nodeType":"StructuredDocumentation","src":"5094:390:11","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"1fad948c","id":2792,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5499:9:11","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"ops","nameLocation":"5544:3:11","nodeType":"VariableDeclaration","scope":2792,"src":"5519:28:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3023_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":2785,"nodeType":"UserDefinedTypeName","pathNode":{"id":2784,"name":"UserOperation","nameLocations":["5519:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"5519:13:11"},"referencedDeclaration":3023,"src":"5519:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"id":2786,"nodeType":"ArrayTypeName","src":"5519:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3023_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"beneficiary","nameLocation":"5574:11:11","nodeType":"VariableDeclaration","scope":2792,"src":"5558:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"5558:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5508:84:11"},"returnParameters":{"id":2791,"nodeType":"ParameterList","parameters":[],"src":"5601:0:11"},"scope":2839,"src":"5490:112:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2793,"nodeType":"StructuredDocumentation","src":"5610:264:11","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"4b1d7cf5","id":2802,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"5889:19:11","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"5951:16:11","nodeType":"VariableDeclaration","scope":2802,"src":"5919:48:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$2782_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":2795,"nodeType":"UserDefinedTypeName","pathNode":{"id":2794,"name":"UserOpsPerAggregator","nameLocations":["5919:20:11"],"nodeType":"IdentifierPath","referencedDeclaration":2782,"src":"5919:20:11"},"referencedDeclaration":2782,"src":"5919:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$2782_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":2796,"nodeType":"ArrayTypeName","src":"5919:22:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$2782_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":2799,"mutability":"mutable","name":"beneficiary","nameLocation":"5994:11:11","nodeType":"VariableDeclaration","scope":2802,"src":"5978:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"5978:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5908:104:11"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[],"src":"6021:0:11"},"scope":2839,"src":"5880:142:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2803,"nodeType":"StructuredDocumentation","src":"6030:275:11","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n @param userOp - The user operation to generate the request ID for."},"functionSelector":"a6193531","id":2811,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6320:13:11","nodeType":"FunctionDefinition","parameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"userOp","nameLocation":"6367:6:11","nodeType":"VariableDeclaration","scope":2811,"src":"6344:29:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2805,"nodeType":"UserDefinedTypeName","pathNode":{"id":2804,"name":"UserOperation","nameLocations":["6344:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"6344:13:11"},"referencedDeclaration":3023,"src":"6344:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6333:47:11"},"returnParameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2811,"src":"6404:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6404:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6403:9:11"},"scope":2839,"src":"6311:102:11","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"6421:641:11","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\n @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\n @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":2825,"members":[{"constant":false,"id":2814,"mutability":"mutable","name":"preOpGas","nameLocation":"7105:8:11","nodeType":"VariableDeclaration","scope":2825,"src":"7097:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"7097:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"prefund","nameLocation":"7132:7:11","nodeType":"VariableDeclaration","scope":2825,"src":"7124:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2818,"mutability":"mutable","name":"sigFailed","nameLocation":"7155:9:11","nodeType":"VariableDeclaration","scope":2825,"src":"7150:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2817,"name":"bool","nodeType":"ElementaryTypeName","src":"7150:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2820,"mutability":"mutable","name":"validAfter","nameLocation":"7182:10:11","nodeType":"VariableDeclaration","scope":2825,"src":"7175:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2819,"name":"uint48","nodeType":"ElementaryTypeName","src":"7175:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"validUntil","nameLocation":"7210:10:11","nodeType":"VariableDeclaration","scope":2825,"src":"7203:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2821,"name":"uint48","nodeType":"ElementaryTypeName","src":"7203:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"paymasterContext","nameLocation":"7237:16:11","nodeType":"VariableDeclaration","scope":2825,"src":"7231:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2823,"name":"bytes","nodeType":"ElementaryTypeName","src":"7231:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7075:10:11","nodeType":"StructDefinition","scope":2839,"src":"7068:193:11","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"7269:127:11","text":" Returned aggregated signature info:\n The aggregator returned by the account, and its current stake."},"id":2832,"members":[{"constant":false,"id":2828,"mutability":"mutable","name":"aggregator","nameLocation":"7448:10:11","nodeType":"VariableDeclaration","scope":2832,"src":"7440:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2827,"name":"address","nodeType":"ElementaryTypeName","src":"7440:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"stakeInfo","nameLocation":"7479:9:11","nodeType":"VariableDeclaration","scope":2832,"src":"7469:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$2949_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":2830,"nodeType":"UserDefinedTypeName","pathNode":{"id":2829,"name":"StakeInfo","nameLocations":["7469:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2949,"src":"7469:9:11"},"referencedDeclaration":2949,"src":"7469:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$2949_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7409:19:11","nodeType":"StructDefinition","scope":2839,"src":"7402:94:11","visibility":"public"},{"documentation":{"id":2833,"nodeType":"StructuredDocumentation","src":"7504:343:11","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":2838,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"7862:16:11","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"initCode","nameLocation":"7892:8:11","nodeType":"VariableDeclaration","scope":2838,"src":"7879:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2834,"name":"bytes","nodeType":"ElementaryTypeName","src":"7879:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7878:23:11"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[],"src":"7910:0:11"},"scope":2839,"src":"7853:58:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2840,"src":"446:7470:11","usedErrors":[2759,2763,2768,2772],"usedEvents":[2711,2722,2733,2744,2747,2752,2902,2910,2918,2924,2932]}],"src":"168:7750:11"},"id":11},"contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[2858]},"id":2859,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2841,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2858,"linearizedBaseContracts":[2858],"name":"INonceManager","nameLocation":"75:13:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"98:424:12","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":2851,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"537:8:12","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"sender","nameLocation":"554:6:12","nodeType":"VariableDeclaration","scope":2851,"src":"546:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"key","nameLocation":"570:3:12","nodeType":"VariableDeclaration","scope":2851,"src":"562:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2845,"name":"uint192","nodeType":"ElementaryTypeName","src":"562:7:12","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"545:29:12"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"nonce","nameLocation":"611:5:12","nodeType":"VariableDeclaration","scope":2851,"src":"603:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2848,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"602:15:12"},"scope":2858,"src":"528:90:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2852,"nodeType":"StructuredDocumentation","src":"626:456:12","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":2857,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1097:14:12","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"key","nameLocation":"1120:3:12","nodeType":"VariableDeclaration","scope":2857,"src":"1112:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2853,"name":"uint192","nodeType":"ElementaryTypeName","src":"1112:7:12","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1111:13:12"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[],"src":"1133:0:12"},"scope":2858,"src":"1088:46:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2859,"src":"65:1072:12","usedErrors":[],"usedEvents":[]}],"src":"37:1102:12"},"id":12},"contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[2893],"UserOperation":[3023]},"id":2894,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2860,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:13"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":2861,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2894,"sourceUnit":3024,"src":"65:29:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"98:219:13","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":2893,"linearizedBaseContracts":[2893],"name":"IPaymaster","nameLocation":"329:10:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":2866,"members":[{"id":2863,"name":"opSucceeded","nameLocation":"405:11:13","nodeType":"EnumValue","src":"405:11:13"},{"id":2864,"name":"opReverted","nameLocation":"483:10:13","nodeType":"EnumValue","src":"483:10:13"},{"id":2865,"name":"postOpReverted","nameLocation":"654:14:13","nodeType":"EnumValue","src":"654:14:13"}],"name":"PostOpMode","nameLocation":"352:10:13","nodeType":"EnumDefinition","src":"347:328:13"},{"documentation":{"id":2867,"nodeType":"StructuredDocumentation","src":"683:1458:13","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                                    otherwise, an address of an \"authorizer\" contract.\n                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"f465c77e","id":2881,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2156:23:13","nodeType":"FunctionDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"userOp","nameLocation":"2213:6:13","nodeType":"VariableDeclaration","scope":2881,"src":"2190:29:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2869,"nodeType":"UserDefinedTypeName","pathNode":{"id":2868,"name":"UserOperation","nameLocations":["2190:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"2190:13:13"},"referencedDeclaration":3023,"src":"2190:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"userOpHash","nameLocation":"2238:10:13","nodeType":"VariableDeclaration","scope":2881,"src":"2230:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2230:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"maxCost","nameLocation":"2267:7:13","nodeType":"VariableDeclaration","scope":2881,"src":"2259:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2259:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2179:102:13"},"returnParameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"context","nameLocation":"2313:7:13","nodeType":"VariableDeclaration","scope":2881,"src":"2300:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2876,"name":"bytes","nodeType":"ElementaryTypeName","src":"2300:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2879,"mutability":"mutable","name":"validationData","nameLocation":"2330:14:13","nodeType":"VariableDeclaration","scope":2881,"src":"2322:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2299:46:13"},"scope":2893,"src":"2147:199:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2882,"nodeType":"StructuredDocumentation","src":"2354:716:13","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call)."},"functionSelector":"a9a23409","id":2892,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3085:6:13","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"mode","nameLocation":"3113:4:13","nodeType":"VariableDeclaration","scope":2892,"src":"3102:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$2866","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":2884,"nodeType":"UserDefinedTypeName","pathNode":{"id":2883,"name":"PostOpMode","nameLocations":["3102:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2866,"src":"3102:10:13"},"referencedDeclaration":2866,"src":"3102:10:13","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$2866","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"context","nameLocation":"3143:7:13","nodeType":"VariableDeclaration","scope":2892,"src":"3128:22:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2886,"name":"bytes","nodeType":"ElementaryTypeName","src":"3128:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"actualGasCost","nameLocation":"3169:13:13","nodeType":"VariableDeclaration","scope":2892,"src":"3161:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"3161:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3091:98:13"},"returnParameters":{"id":2891,"nodeType":"ParameterList","parameters":[],"src":"3198:0:13"},"scope":2893,"src":"3076:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2894,"src":"319:2883:13","usedErrors":[],"usedEvents":[]}],"src":"37:3167:13"},"id":13},"contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[2997]},"id":2998,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":2895,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"42:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":2896,"nodeType":"StructuredDocumentation","src":"70:216:14","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":2997,"linearizedBaseContracts":[2997],"name":"IStakeManager","nameLocation":"298:13:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":2902,"name":"Deposited","nameLocation":"325:9:14","nodeType":"EventDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"351:7:14","nodeType":"VariableDeclaration","scope":2902,"src":"335:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2897,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2900,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"368:12:14","nodeType":"VariableDeclaration","scope":2902,"src":"360:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"334:47:14"},"src":"319:63:14"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":2910,"name":"Withdrawn","nameLocation":"396:9:14","nodeType":"EventDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"432:7:14","nodeType":"VariableDeclaration","scope":2910,"src":"416:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2906,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"458:15:14","nodeType":"VariableDeclaration","scope":2910,"src":"450:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2908,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"492:6:14","nodeType":"VariableDeclaration","scope":2910,"src":"484:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:100:14"},"src":"390:116:14"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":2918,"name":"StakeLocked","nameLocation":"578:11:14","nodeType":"EventDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"616:7:14","nodeType":"VariableDeclaration","scope":2918,"src":"600:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2914,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"642:11:14","nodeType":"VariableDeclaration","scope":2918,"src":"634:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2916,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"672:15:14","nodeType":"VariableDeclaration","scope":2918,"src":"664:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"589:105:14"},"src":"572:123:14"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":2924,"name":"StakeUnlocked","nameLocation":"767:13:14","nodeType":"EventDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"797:7:14","nodeType":"VariableDeclaration","scope":2924,"src":"781:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2919,"name":"address","nodeType":"ElementaryTypeName","src":"781:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2922,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"814:12:14","nodeType":"VariableDeclaration","scope":2924,"src":"806:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"780:47:14"},"src":"761:67:14"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":2932,"name":"StakeWithdrawn","nameLocation":"842:14:14","nodeType":"EventDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"883:7:14","nodeType":"VariableDeclaration","scope":2932,"src":"867:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2925,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2928,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"909:15:14","nodeType":"VariableDeclaration","scope":2932,"src":"901:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2927,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2930,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"943:6:14","nodeType":"VariableDeclaration","scope":2932,"src":"935:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"856:100:14"},"src":"836:121:14"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"965:697:14","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n      and the rest fit into a 2nd cell.\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":2944,"members":[{"constant":false,"id":2935,"mutability":"mutable","name":"deposit","nameLocation":"1706:7:14","nodeType":"VariableDeclaration","scope":2944,"src":"1698:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2934,"name":"uint112","nodeType":"ElementaryTypeName","src":"1698:7:14","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"staked","nameLocation":"1729:6:14","nodeType":"VariableDeclaration","scope":2944,"src":"1724:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2936,"name":"bool","nodeType":"ElementaryTypeName","src":"1724:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"stake","nameLocation":"1754:5:14","nodeType":"VariableDeclaration","scope":2944,"src":"1746:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2938,"name":"uint112","nodeType":"ElementaryTypeName","src":"1746:7:14","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1777:15:14","nodeType":"VariableDeclaration","scope":2944,"src":"1770:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2940,"name":"uint32","nodeType":"ElementaryTypeName","src":"1770:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2943,"mutability":"mutable","name":"withdrawTime","nameLocation":"1810:12:14","nodeType":"VariableDeclaration","scope":2944,"src":"1803:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2942,"name":"uint48","nodeType":"ElementaryTypeName","src":"1803:6:14","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1675:11:14","nodeType":"StructDefinition","scope":2997,"src":"1668:162:14","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":2949,"members":[{"constant":false,"id":2946,"mutability":"mutable","name":"stake","nameLocation":"1938:5:14","nodeType":"VariableDeclaration","scope":2949,"src":"1930:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1962:15:14","nodeType":"VariableDeclaration","scope":2949,"src":"1954:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1954:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1909:9:14","nodeType":"StructDefinition","scope":2997,"src":"1902:83:14","visibility":"public"},{"documentation":{"id":2950,"nodeType":"StructuredDocumentation","src":"1993:153:14","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":2958,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2161:14:14","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"account","nameLocation":"2194:7:14","nodeType":"VariableDeclaration","scope":2958,"src":"2186:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2951,"name":"address","nodeType":"ElementaryTypeName","src":"2186:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2175:33:14"},"returnParameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"info","nameLocation":"2251:4:14","nodeType":"VariableDeclaration","scope":2958,"src":"2232:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$2944_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2955,"nodeType":"UserDefinedTypeName","pathNode":{"id":2954,"name":"DepositInfo","nameLocations":["2232:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2944,"src":"2232:11:14"},"referencedDeclaration":2944,"src":"2232:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$2944_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2231:25:14"},"scope":2997,"src":"2152:105:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2959,"nodeType":"StructuredDocumentation","src":"2265:159:14","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":2966,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2439:9:14","nodeType":"FunctionDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"account","nameLocation":"2457:7:14","nodeType":"VariableDeclaration","scope":2966,"src":"2449:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2960,"name":"address","nodeType":"ElementaryTypeName","src":"2449:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2448:17:14"},"returnParameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2966,"src":"2489:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2488:9:14"},"scope":2997,"src":"2430:68:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2967,"nodeType":"StructuredDocumentation","src":"2506:109:14","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":2972,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2630:9:14","nodeType":"FunctionDefinition","parameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"account","nameLocation":"2648:7:14","nodeType":"VariableDeclaration","scope":2972,"src":"2640:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2968,"name":"address","nodeType":"ElementaryTypeName","src":"2640:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2639:17:14"},"returnParameters":{"id":2971,"nodeType":"ParameterList","parameters":[],"src":"2673:0:14"},"scope":2997,"src":"2621:53:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"2682:207:14","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":2978,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2904:8:14","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2920:16:14","nodeType":"VariableDeclaration","scope":2978,"src":"2913:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2974,"name":"uint32","nodeType":"ElementaryTypeName","src":"2913:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2912:25:14"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[],"src":"2954:0:14"},"scope":2997,"src":"2895:60:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"2963:131:14","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":2982,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3109:11:14","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"3120:2:14"},"returnParameters":{"id":2981,"nodeType":"ParameterList","parameters":[],"src":"3131:0:14"},"scope":2997,"src":"3100:32:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2983,"nodeType":"StructuredDocumentation","src":"3140:201:14","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":2988,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3356:13:14","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3386:15:14","nodeType":"VariableDeclaration","scope":2988,"src":"3370:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2984,"name":"address","nodeType":"ElementaryTypeName","src":"3370:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3369:33:14"},"returnParameters":{"id":2987,"nodeType":"ParameterList","parameters":[],"src":"3411:0:14"},"scope":2997,"src":"3347:65:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"3420:174:14","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":2996,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3609:10:14","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3646:15:14","nodeType":"VariableDeclaration","scope":2996,"src":"3630:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"3630:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3680:14:14","nodeType":"VariableDeclaration","scope":2996,"src":"3672:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"3672:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:82:14"},"returnParameters":{"id":2995,"nodeType":"ParameterList","parameters":[],"src":"3710:0:14"},"scope":2997,"src":"3600:111:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2998,"src":"288:3426:14","usedErrors":[],"usedEvents":[2902,2910,2918,2924,2932]}],"src":"42:3674:14"},"id":14},"contracts/interfaces/UserOperation.sol":{"ast":{"absolutePath":"contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[3023]},"id":3024,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2999,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:15"},{"canonicalName":"UserOperation","documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"65:1193:15","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor/\n @param callData              - The method call to execute on this account.\n @param callGasLimit          - The gas limit passed to the callData method call.\n @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param maxFeePerGas          - Same as EIP-1559 gas parameter.\n @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\n @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":3023,"members":[{"constant":false,"id":3002,"mutability":"mutable","name":"sender","nameLocation":"1296:6:15","nodeType":"VariableDeclaration","scope":3023,"src":"1288:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3001,"name":"address","nodeType":"ElementaryTypeName","src":"1288:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"nonce","nameLocation":"1317:5:15","nodeType":"VariableDeclaration","scope":3023,"src":"1309:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"initCode","nameLocation":"1335:8:15","nodeType":"VariableDeclaration","scope":3023,"src":"1329:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3005,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3008,"mutability":"mutable","name":"callData","nameLocation":"1356:8:15","nodeType":"VariableDeclaration","scope":3023,"src":"1350:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3007,"name":"bytes","nodeType":"ElementaryTypeName","src":"1350:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3010,"mutability":"mutable","name":"callGasLimit","nameLocation":"1379:12:15","nodeType":"VariableDeclaration","scope":3023,"src":"1371:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1406:20:15","nodeType":"VariableDeclaration","scope":3023,"src":"1398:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1441:18:15","nodeType":"VariableDeclaration","scope":3023,"src":"1433:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1474:12:15","nodeType":"VariableDeclaration","scope":3023,"src":"1466:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1466:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1501:20:15","nodeType":"VariableDeclaration","scope":3023,"src":"1493:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1534:16:15","nodeType":"VariableDeclaration","scope":3023,"src":"1528:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3019,"name":"bytes","nodeType":"ElementaryTypeName","src":"1528:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"signature","nameLocation":"1563:9:15","nodeType":"VariableDeclaration","scope":3023,"src":"1557:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3021,"name":"bytes","nodeType":"ElementaryTypeName","src":"1557:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1267:13:15","nodeType":"StructDefinition","scope":3024,"src":"1260:316:15","visibility":"public"}],"src":"37:1541:15"},"id":15},"contracts/utils/VerifyingPaymaster.sol":{"ast":{"absolutePath":"contracts/utils/VerifyingPaymaster.sol","exportedSymbols":{"BasePaymaster":[2230],"Context":[169],"ECDSA":[772],"IAggregator":[2685],"IEntryPoint":[2839],"INonceManager":[2858],"IPaymaster":[2893],"IStakeManager":[2997],"MessageHashUtils":[846],"Ownable":[147],"Strings":[424],"UserOperation":[3023],"UserOperationLib":[2651],"ValidationData":[2240],"VerifyingPaymaster":[3382],"_intersectTimeRange":[2386],"_packValidationData":[2423,2461],"_parseValidationData":[2300],"calldataKeccak":[2471]},"id":3383,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3025,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:16"},{"absolutePath":"contracts/core/BasePaymaster.sol","file":"../core/BasePaymaster.sol","id":3026,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3383,"sourceUnit":2231,"src":"146:35:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/UserOperationLib.sol","file":"../core/UserOperationLib.sol","id":3027,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3383,"sourceUnit":2652,"src":"183:38:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":3028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3383,"sourceUnit":773,"src":"223:62:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":3029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3383,"sourceUnit":847,"src":"287:73:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3031,"name":"BasePaymaster","nameLocations":["947:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":2230,"src":"947:13:16"},"id":3032,"nodeType":"InheritanceSpecifier","src":"947:13:16"}],"canonicalName":"VerifyingPaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"364:547:16","text":" A sample paymaster that uses external service to decide whether to pay for the UserOp.\n The paymaster trusts an external signer to sign the transaction.\n The calling user must pass the UserOp to that external signer first, which performs\n whatever off-chain verification before signing the UserOp.\n Note that this signature is NOT a replacement for the account-specific signature:\n - the paymaster checks a signature to agree to PAY for GAS.\n - the account checks a signature to prove identity and account ownership."},"fullyImplemented":true,"id":3382,"linearizedBaseContracts":[3382,2230,147,169,2893],"name":"VerifyingPaymaster","nameLocation":"925:18:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3035,"libraryName":{"id":3033,"name":"ECDSA","nameLocations":["976:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":772,"src":"976:5:16"},"nodeType":"UsingForDirective","src":"970:24:16","typeName":{"id":3034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"986:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":3039,"libraryName":{"id":3036,"name":"UserOperationLib","nameLocations":["1006:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":2651,"src":"1006:16:16"},"nodeType":"UsingForDirective","src":"1000:41:16","typeName":{"id":3038,"nodeType":"UserDefinedTypeName","pathNode":{"id":3037,"name":"UserOperation","nameLocations":["1027:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"1027:13:16"},"referencedDeclaration":3023,"src":"1027:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}}},{"constant":false,"functionSelector":"ff1b636d","id":3041,"mutability":"mutable","name":"Admin","nameLocation":"1064:5:16","nodeType":"VariableDeclaration","scope":3382,"src":"1049:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3040,"name":"address","nodeType":"ElementaryTypeName","src":"1049:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":3052,"nodeType":"Block","src":"1099:73:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3044,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1118:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1122:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1118:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3046,"name":"Admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"1132:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1118:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c792061646d696e","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1139:12:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d","typeString":"literal_string \"only admin\""},"value":"only admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d","typeString":"literal_string \"only admin\""}],"id":3043,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1110:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1110:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3050,"nodeType":"ExpressionStatement","src":"1110:42:16"},{"id":3051,"nodeType":"PlaceholderStatement","src":"1163:1:16"}]},"id":3053,"name":"onlyAdmin","nameLocation":"1087:9:16","nodeType":"ModifierDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[],"src":"1096:2:16"},"src":"1078:94:16","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"23d9ac9b","id":3055,"mutability":"mutable","name":"verifyingSigner","nameLocation":"1195:15:16","nodeType":"VariableDeclaration","scope":3382,"src":"1180:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3054,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":3058,"mutability":"constant","name":"VALID_TIMESTAMP_OFFSET","nameLocation":"1244:22:16","nodeType":"VariableDeclaration","scope":3382,"src":"1219:52:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":3061,"mutability":"constant","name":"SIGNATURE_OFFSET","nameLocation":"1305:16:16","nodeType":"VariableDeclaration","scope":3382,"src":"1280:46:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3834","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:16","typeDescriptions":{"typeIdentifier":"t_rational_84_by_1","typeString":"int_const 84"},"value":"84"},"visibility":"private"},{"body":{"id":3081,"nodeType":"Block","src":"1425:82:16","statements":[{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3072,"name":"verifyingSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1436:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3073,"name":"_verifyingSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"1454:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1436:34:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3075,"nodeType":"ExpressionStatement","src":"1436:34:16"},{"expression":{"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3076,"name":"Admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"1481:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3077,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1489:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1493:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1489:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1481:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3080,"nodeType":"ExpressionStatement","src":"1481:18:16"}]},"id":3082,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3069,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"1412:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}}],"id":3070,"kind":"baseConstructorSpecifier","modifierName":{"id":3068,"name":"BasePaymaster","nameLocations":["1398:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":2230,"src":"1398:13:16"},"nodeType":"ModifierInvocation","src":"1398:26:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"_entryPoint","nameLocation":"1359:11:16","nodeType":"VariableDeclaration","scope":3082,"src":"1347:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"},"typeName":{"id":3063,"nodeType":"UserDefinedTypeName","pathNode":{"id":3062,"name":"IEntryPoint","nameLocations":["1347:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2839,"src":"1347:11:16"},"referencedDeclaration":2839,"src":"1347:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$2839","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"_verifyingSigner","nameLocation":"1380:16:16","nodeType":"VariableDeclaration","scope":3082,"src":"1372:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"1372:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1346:51:16"},"returnParameters":{"id":3071,"nodeType":"ParameterList","parameters":[],"src":"1425:0:16"},"scope":3382,"src":"1335:172:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3093,"nodeType":"Block","src":"1572:36:16","statements":[{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3089,"name":"Admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"1583:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3090,"name":"_newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"1591:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1583:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3092,"nodeType":"ExpressionStatement","src":"1583:17:16"}]},"functionSelector":"927cc064","id":3094,"implemented":true,"kind":"function","modifiers":[{"id":3087,"kind":"modifierInvocation","modifierName":{"id":3086,"name":"onlyAdmin","nameLocations":["1562:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3053,"src":"1562:9:16"},"nodeType":"ModifierInvocation","src":"1562:9:16"}],"name":"ChangeAdmin","nameLocation":"1524:11:16","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"_newAdmin","nameLocation":"1544:9:16","nodeType":"VariableDeclaration","scope":3094,"src":"1536:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1535:19:16"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[],"src":"1572:0:16"},"scope":3382,"src":"1515:93:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3124,"nodeType":"Block","src":"2154:177:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3111,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"2228:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":3112,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"2236:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3113,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"2248:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3110,"name":"getPartialHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"2213:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3023_calldata_ptr_$_t_uint48_$_t_uint48_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata,uint48,uint48) pure returns (bytes memory)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3115,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2274:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2280:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"2274:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3119,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2310:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_VerifyingPaymaster_$3382","typeString":"contract VerifyingPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VerifyingPaymaster_$3382","typeString":"contract VerifyingPaymaster"}],"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2302:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3117,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:16","typeDescriptions":{}}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2182:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2186:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"2182:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2182:144:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3107,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2172:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:155:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3106,"id":3123,"nodeType":"Return","src":"2165:162:16"}]},"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"1616:409:16","text":" return the hash we're going to sign off-chain (and validate on-chain)\n this method is called by the off-chain service, to sign the request.\n it is called on-chain from the validatePaymasterUserOp, to validate the signature.\n note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\",\n which will carry the signature itself."},"functionSelector":"94e1fc19","id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"getHash","nameLocation":"2042:7:16","nodeType":"FunctionDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"userOp","nameLocation":"2073:6:16","nodeType":"VariableDeclaration","scope":3125,"src":"2050:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3097,"nodeType":"UserDefinedTypeName","pathNode":{"id":3096,"name":"UserOperation","nameLocations":["2050:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"2050:13:16"},"referencedDeclaration":3023,"src":"2050:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"validUntil","nameLocation":"2088:10:16","nodeType":"VariableDeclaration","scope":3125,"src":"2081:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3099,"name":"uint48","nodeType":"ElementaryTypeName","src":"2081:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"validAfter","nameLocation":"2107:10:16","nodeType":"VariableDeclaration","scope":3125,"src":"2100:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3101,"name":"uint48","nodeType":"ElementaryTypeName","src":"2100:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2049:69:16"},"returnParameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3125,"src":"2145:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2145:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2144:9:16"},"scope":3382,"src":"2033:298:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3170,"nodeType":"Block","src":"2470:461:16","statements":[{"assignments":[3138],"declarations":[{"constant":false,"id":3138,"mutability":"mutable","name":"sender","nameLocation":"2489:6:16","nodeType":"VariableDeclaration","scope":3170,"src":"2481:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3137,"name":"address","nodeType":"ElementaryTypeName","src":"2481:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3142,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3139,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"2498:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2505:9:16","memberName":"getSender","nodeType":"MemberAccess","referencedDeclaration":2499,"src":"2498:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3023_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$3023_calldata_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2481:35:16"},{"expression":{"arguments":[{"id":3145,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"2559:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3146,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"2580:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2587:5:16","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"2580:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":3149,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"2617:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2624:8:16","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3006,"src":"2617:15:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3148,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2607:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":3153,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"2658:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2665:8:16","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":3008,"src":"2658:15:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3152,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2648:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2648:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3156,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"2689:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2696:12:16","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":3010,"src":"2689:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3158,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"2723:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:20:16","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"2723:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3160,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"2765:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:18:16","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3014,"src":"2765:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3162,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"2805:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2812:12:16","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3016,"src":"2805:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3164,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"2839:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2846:20:16","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3018,"src":"2839:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3166,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"2881:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3167,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"2906:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":3143,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2534:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2538:6:16","memberName":"encode","nodeType":"MemberAccess","src":"2534:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2534:393:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3136,"id":3169,"nodeType":"Return","src":"2527:400:16"}]},"id":3171,"implemented":true,"kind":"function","modifiers":[],"name":"getPartialHash","nameLocation":"2344:14:16","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"userOp","nameLocation":"2382:6:16","nodeType":"VariableDeclaration","scope":3171,"src":"2359:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3127,"nodeType":"UserDefinedTypeName","pathNode":{"id":3126,"name":"UserOperation","nameLocations":["2359:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"2359:13:16"},"referencedDeclaration":3023,"src":"2359:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"validUntil","nameLocation":"2397:10:16","nodeType":"VariableDeclaration","scope":3171,"src":"2390:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3129,"name":"uint48","nodeType":"ElementaryTypeName","src":"2390:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"validAfter","nameLocation":"2416:10:16","nodeType":"VariableDeclaration","scope":3171,"src":"2409:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3131,"name":"uint48","nodeType":"ElementaryTypeName","src":"2409:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2358:69:16"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3171,"src":"2456:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3134,"name":"bytes","nodeType":"ElementaryTypeName","src":"2456:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2455:14:16"},"scope":3382,"src":"2335:596:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[2075],"body":{"id":3250,"nodeType":"Block","src":"3482:1056:16","statements":[{"expression":{"components":[{"id":3187,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"3494:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3493:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3189,"nodeType":"ExpressionStatement","src":"3493:17:16"},{"assignments":[3191,3193,3195],"declarations":[{"constant":false,"id":3191,"mutability":"mutable","name":"validUntil","nameLocation":"3531:10:16","nodeType":"VariableDeclaration","scope":3250,"src":"3524:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3190,"name":"uint48","nodeType":"ElementaryTypeName","src":"3524:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"validAfter","nameLocation":"3550:10:16","nodeType":"VariableDeclaration","scope":3250,"src":"3543:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3192,"name":"uint48","nodeType":"ElementaryTypeName","src":"3543:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"signature","nameLocation":"3577:9:16","nodeType":"VariableDeclaration","scope":3250,"src":"3562:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3194,"name":"bytes","nodeType":"ElementaryTypeName","src":"3562:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3200,"initialValue":{"arguments":[{"expression":{"id":3197,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"3612:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3619:16:16","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3020,"src":"3612:23:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3196,"name":"parsePaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"3590:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata) pure returns (uint48,uint48,bytes calldata)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3590:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$","typeString":"tuple(uint48,uint48,bytes calldata)"}},"nodeType":"VariableDeclarationStatement","src":"3523:113:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3202,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"3860:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:16","memberName":"length","nodeType":"MemberAccess","src":"3860:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3634","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3880:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"3860:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3206,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"3886:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3896:6:16","memberName":"length","nodeType":"MemberAccess","src":"3886:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3906:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"3886:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3860:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566572696679696e675061796d61737465723a20696e76616c6964207369676e6174757265206c656e67746820696e207061796d6173746572416e6444617461","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3910:66:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7","typeString":"literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""},"value":"VerifyingPaymaster: invalid signature length in paymasterAndData"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7","typeString":"literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""}],"id":3201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3852:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3852:125:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3213,"nodeType":"ExpressionStatement","src":"3852:125:16"},{"assignments":[3215],"declarations":[{"constant":false,"id":3215,"mutability":"mutable","name":"hash","nameLocation":"3996:4:16","nodeType":"VariableDeclaration","scope":3250,"src":"3988:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3988:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3224,"initialValue":{"arguments":[{"arguments":[{"id":3219,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"4051:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":3220,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"4059:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3221,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"4071:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3218,"name":"getHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"4043:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UserOperation_$3023_calldata_ptr_$_t_uint48_$_t_uint48_$returns$_t_bytes32_$","typeString":"function (struct UserOperation calldata,uint48,uint48) view returns (bytes32)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3216,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"4003:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$846_$","typeString":"type(library MessageHashUtils)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4020:22:16","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":787,"src":"4003:39:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4003:80:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3988:95:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3225,"name":"verifyingSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4175:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3228,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"4208:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3229,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"4214:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3226,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"4194:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$772_$","typeString":"type(library ECDSA)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4200:7:16","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":528,"src":"4194:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4175:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3241,"nodeType":"IfStatement","src":"4171:141:16","trueBody":{"id":3240,"nodeType":"Block","src":"4226:86:16","statements":[{"expression":{"components":[{"hexValue":"","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4249:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"arguments":[{"hexValue":"74727565","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4272:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3235,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"4277:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3236,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"4288:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3233,"name":"_packValidationData","nodeType":"Identifier","overloadedDeclarations":[2423,2461],"referencedDeclaration":2461,"src":"4252:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$","typeString":"function (bool,uint48,uint48) pure returns (uint256)"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4252:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4248:52:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$","typeString":"tuple(literal_string \"\",uint256)"}},"functionReturnParameters":3186,"id":3239,"nodeType":"Return","src":"4241:59:16"}]}},{"expression":{"components":[{"hexValue":"","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4478:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"arguments":[{"hexValue":"66616c7365","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4501:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3245,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"4507:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3246,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"4518:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3243,"name":"_packValidationData","nodeType":"Identifier","overloadedDeclarations":[2423,2461],"referencedDeclaration":2461,"src":"4481:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$","typeString":"function (bool,uint48,uint48) pure returns (uint256)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4477:53:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$","typeString":"tuple(literal_string \"\",uint256)"}},"functionReturnParameters":3186,"id":3249,"nodeType":"Return","src":"4470:60:16"}]},"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"2941:335:16","text":" verify our external signer signed this request.\n the \"paymasterAndData\" is expected to be the paymaster and a signature over the entire request params\n paymasterAndData[:20] : address(this)\n paymasterAndData[20:84] : abi.encode(validUntil, validAfter)\n paymasterAndData[84:] : signature"},"id":3251,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"3293:24:16","nodeType":"FunctionDefinition","overrides":{"id":3181,"nodeType":"OverrideSpecifier","overrides":[],"src":"3417:8:16"},"parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"userOp","nameLocation":"3341:6:16","nodeType":"VariableDeclaration","scope":3251,"src":"3318:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3174,"nodeType":"UserDefinedTypeName","pathNode":{"id":3173,"name":"UserOperation","nameLocations":["3318:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"3318:13:16"},"referencedDeclaration":3023,"src":"3318:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3251,"src":"3349:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3349:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"requiredPreFund","nameLocation":"3381:15:16","nodeType":"VariableDeclaration","scope":3251,"src":"3373:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"3373:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:80:16"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"context","nameLocation":"3448:7:16","nodeType":"VariableDeclaration","scope":3251,"src":"3435:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3182,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3185,"mutability":"mutable","name":"vcalidationData","nameLocation":"3465:15:16","nodeType":"VariableDeclaration","scope":3251,"src":"3457:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3457:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3434:47:16"},"scope":3382,"src":"3284:1254:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3322,"nodeType":"Block","src":"4737:985:16","statements":[{"expression":{"components":[{"id":3265,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"4749:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4748:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3267,"nodeType":"ExpressionStatement","src":"4748:17:16"},{"assignments":[3269,3271,3273],"declarations":[{"constant":false,"id":3269,"mutability":"mutable","name":"validUntil","nameLocation":"4786:10:16","nodeType":"VariableDeclaration","scope":3322,"src":"4779:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3268,"name":"uint48","nodeType":"ElementaryTypeName","src":"4779:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"validAfter","nameLocation":"4805:10:16","nodeType":"VariableDeclaration","scope":3322,"src":"4798:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3270,"name":"uint48","nodeType":"ElementaryTypeName","src":"4798:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"signature","nameLocation":"4832:9:16","nodeType":"VariableDeclaration","scope":3322,"src":"4817:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3272,"name":"bytes","nodeType":"ElementaryTypeName","src":"4817:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3278,"initialValue":{"arguments":[{"expression":{"id":3275,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"4867:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:16:16","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3020,"src":"4867:23:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3274,"name":"parsePaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"4845:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata) pure returns (uint48,uint48,bytes calldata)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4845:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$","typeString":"tuple(uint48,uint48,bytes calldata)"}},"nodeType":"VariableDeclarationStatement","src":"4778:113:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3280,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"5115:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5125:6:16","memberName":"length","nodeType":"MemberAccess","src":"5115:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3634","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5135:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5115:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3284,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"5141:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5151:6:16","memberName":"length","nodeType":"MemberAccess","src":"5141:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5161:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"5141:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5115:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566572696679696e675061796d61737465723a20696e76616c6964207369676e6174757265206c656e67746820696e207061796d6173746572416e6444617461","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5165:66:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7","typeString":"literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""},"value":"VerifyingPaymaster: invalid signature length in paymasterAndData"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7","typeString":"literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""}],"id":3279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5107:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5107:125:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3291,"nodeType":"ExpressionStatement","src":"5107:125:16"},{"assignments":[3293],"declarations":[{"constant":false,"id":3293,"mutability":"mutable","name":"hash","nameLocation":"5251:4:16","nodeType":"VariableDeclaration","scope":3322,"src":"5243:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5243:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3302,"initialValue":{"arguments":[{"arguments":[{"id":3297,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"5306:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":3298,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"5314:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3299,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"5326:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3296,"name":"getHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"5298:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UserOperation_$3023_calldata_ptr_$_t_uint48_$_t_uint48_$returns$_t_bytes32_$","typeString":"function (struct UserOperation calldata,uint48,uint48) view returns (bytes32)"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5298:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3294,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5258:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$846_$","typeString":"type(library MessageHashUtils)"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5275:22:16","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":787,"src":"5258:39:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5258:80:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5243:95:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"verifyingSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"5434:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3307,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"5467:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3308,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"5473:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3305,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"5453:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$772_$","typeString":"type(library ECDSA)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5459:7:16","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":528,"src":"5453:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5453:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5434:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"65727220736967","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5485:9:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f","typeString":"literal_string \"err sig\""},"value":"err sig"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f","typeString":"literal_string \"err sig\""}],"id":3303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5426:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5426:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3313,"nodeType":"ExpressionStatement","src":"5426:69:16"},{"expression":{"components":[{"hexValue":"","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5662:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"arguments":[{"hexValue":"66616c7365","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5685:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3317,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"5691:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3318,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"5702:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3315,"name":"_packValidationData","nodeType":"Identifier","overloadedDeclarations":[2423,2461],"referencedDeclaration":2461,"src":"5665:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$","typeString":"function (bool,uint48,uint48) pure returns (uint256)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5665:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5661:53:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$","typeString":"tuple(literal_string \"\",uint256)"}},"functionReturnParameters":3264,"id":3321,"nodeType":"Return","src":"5654:60:16"}]},"functionSelector":"687ca620","id":3323,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOpPub","nameLocation":"4555:26:16","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"userOp","nameLocation":"4605:6:16","nodeType":"VariableDeclaration","scope":3323,"src":"4582:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3253,"nodeType":"UserDefinedTypeName","pathNode":{"id":3252,"name":"UserOperation","nameLocations":["4582:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"4582:13:16"},"referencedDeclaration":3023,"src":"4582:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3023_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3323,"src":"4613:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4613:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"requiredPreFund","nameLocation":"4645:15:16","nodeType":"VariableDeclaration","scope":3323,"src":"4637:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3257,"name":"uint256","nodeType":"ElementaryTypeName","src":"4637:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4581:80:16"},"returnParameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"context","nameLocation":"4703:7:16","nodeType":"VariableDeclaration","scope":3323,"src":"4690:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3260,"name":"bytes","nodeType":"ElementaryTypeName","src":"4690:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"vcalidationData","nameLocation":"4720:15:16","nodeType":"VariableDeclaration","scope":3323,"src":"4712:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"4712:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4689:47:16"},"scope":3382,"src":"4546:1176:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3357,"nodeType":"Block","src":"5878:190:16","statements":[{"expression":{"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3334,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"5890:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3335,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"5902:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":3336,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5889:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint48_$_t_uint48_$","typeString":"tuple(uint48,uint48)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":3339,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"5927:16:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":3341,"name":"SIGNATURE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"5967:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"5927:57:16","startExpression":{"id":3340,"name":"VALID_TIMESTAMP_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"5944:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5986:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3343,"name":"uint48","nodeType":"ElementaryTypeName","src":"5986:6:16","typeDescriptions":{}}},{"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5994:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3345,"name":"uint48","nodeType":"ElementaryTypeName","src":"5994:6:16","typeDescriptions":{}}}],"id":3347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5985:16:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$","typeString":"tuple(type(uint48),type(uint48))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$","typeString":"tuple(type(uint48),type(uint48))"}],"expression":{"id":3337,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5916:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5920:6:16","memberName":"decode","nodeType":"MemberAccess","src":"5916:10:16","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:86:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint48_$_t_uint48_$","typeString":"tuple(uint48,uint48)"}},"src":"5889:113:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3350,"nodeType":"ExpressionStatement","src":"5889:113:16"},{"expression":{"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3351,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"6013:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3352,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"6025:16:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"6025:35:16","startExpression":{"id":3353,"name":"SIGNATURE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"6042:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"src":"6013:47:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3356,"nodeType":"ExpressionStatement","src":"6013:47:16"}]},"functionSelector":"94d4ad60","id":3358,"implemented":true,"kind":"function","modifiers":[],"name":"parsePaymasterAndData","nameLocation":"5739:21:16","nodeType":"FunctionDefinition","parameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"paymasterAndData","nameLocation":"5776:16:16","nodeType":"VariableDeclaration","scope":3358,"src":"5761:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3324,"name":"bytes","nodeType":"ElementaryTypeName","src":"5761:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5760:33:16"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"validUntil","nameLocation":"5821:10:16","nodeType":"VariableDeclaration","scope":3358,"src":"5814:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3327,"name":"uint48","nodeType":"ElementaryTypeName","src":"5814:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3330,"mutability":"mutable","name":"validAfter","nameLocation":"5840:10:16","nodeType":"VariableDeclaration","scope":3358,"src":"5833:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3329,"name":"uint48","nodeType":"ElementaryTypeName","src":"5833:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"signature","nameLocation":"5867:9:16","nodeType":"VariableDeclaration","scope":3358,"src":"5852:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3331,"name":"bytes","nodeType":"ElementaryTypeName","src":"5852:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5813:64:16"},"scope":3382,"src":"5730:338:16","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3376,"nodeType":"Block","src":"6124:70:16","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":3371,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6172:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_VerifyingPaymaster_$3382","typeString":"contract VerifyingPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VerifyingPaymaster_$3382","typeString":"contract VerifyingPaymaster"}],"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6164:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3369,"name":"address","nodeType":"ElementaryTypeName","src":"6164:7:16","typeDescriptions":{}}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6164:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6178:7:16","memberName":"balance","nodeType":"MemberAccess","src":"6164:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":3365,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6143:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6147:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6143:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6135:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3363,"name":"address","nodeType":"ElementaryTypeName","src":"6135:8:16","stateMutability":"payable","typeDescriptions":{}}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6135:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6155:8:16","memberName":"transfer","nodeType":"MemberAccess","src":"6135:28:16","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6135:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3375,"nodeType":"ExpressionStatement","src":"6135:51:16"}]},"functionSelector":"5fd8c710","id":3377,"implemented":true,"kind":"function","modifiers":[{"id":3361,"kind":"modifierInvocation","modifierName":{"id":3360,"name":"onlyAdmin","nameLocations":["6114:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3053,"src":"6114:9:16"},"nodeType":"ModifierInvocation","src":"6114:9:16"}],"name":"withdrawBalance","nameLocation":"6087:15:16","nodeType":"FunctionDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[],"src":"6102:2:16"},"returnParameters":{"id":3362,"nodeType":"ParameterList","parameters":[],"src":"6124:0:16"},"scope":3382,"src":"6078:116:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3380,"nodeType":"Block","src":"6231:2:16","statements":[]},"id":3381,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[],"src":"6211:2:16"},"returnParameters":{"id":3379,"nodeType":"ParameterList","parameters":[],"src":"6231:0:16"},"scope":3382,"src":"6204:29:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3383,"src":"916:5334:16","usedErrors":[13,18,435,440,445],"usedEvents":[24]}],"src":"37:6213:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"contracts/core/BasePaymaster.sol":{"BasePaymaster":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. Validates that the postOp is called only by the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xbd3189ba19234b7983c343fd70058e21de970feb4bc941c57f14820eb35878a8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d738449768414ab9d4d111113f4641bd0fbc833f9baf74d8ccebe43fe8d7bb\",\"dweb:/ipfs/QmSwpXHUerFzwJFyyLqyGGbzsLTwSimdcMKX5FKksNouEm\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/core/UserOperationLib.sol":{"UserOperationLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b294a995484b643593ffac36b72c900c330384c7c21a97859814bdbd7adca29464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP5 0xA9 SWAP6 BASEFEE 0x4B PUSH5 0x3593FFAC36 0xB7 0x2C SWAP1 0xC CALLER SUB DUP5 0xC7 0xC2 BYTE SWAP8 DUP6 SWAP9 EQ 0xBD 0xBD PUSH27 0xDCA29464736F6C6343000814003300000000000000000000000000 ","sourceMap":"282:2822:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b294a995484b643593ffac36b72c900c330384c7c21a97859814bdbd7adca29464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP5 0xA9 SWAP6 BASEFEE 0x4B PUSH5 0x3593FFAC36 0xB7 0x2C SWAP1 0xC CALLER SUB DUP5 0xC7 0xC2 BYTE SWAP8 DUP6 SWAP9 EQ 0xBD 0xBD PUSH27 0xDCA29464736F6C6343000814003300000000000000000000000000 ","sourceMap":"282:2822:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x341c6c70a05b8f2c7a093e909377c7c93874c0a36c70c55b765f386f1b0fcc01\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29ef1bdfa8a451ded8bb5910cfe8b416deb75574c305326670b19408bc5b3508\",\"dweb:/ipfs/QmcL4BCqJ75cKUQVv9iGRxToQamvYq8UqmfyrRAbAAXv22\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- Array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- Array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"Validate aggregated signature. Revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Validate signature of a single userOp. This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps, to identify the offending op. Should be caught in off-chain handleOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]}},\"version\":1}"}},"contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]}},\"version\":1}"}},"contracts/utils/VerifyingPaymaster.sol":{"VerifyingPaymaster":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"},{"internalType":"address","name":"_verifyingSigner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"Admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newAdmin","type":"address"}],"name":"ChangeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"uint48","name":"validAfter","type":"uint48"}],"name":"getHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"paymasterAndData","type":"bytes"}],"name":"parsePaymasterAndData","outputs":[{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"requiredPreFund","type":"uint256"}],"name":"validatePaymasterUserOpPub","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"vcalidationData","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verifyingSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_2034":{"entryPoint":null,"id":2034,"parameterSlots":1,"returnSlots":0},"@_3082":{"entryPoint":null,"id":3082,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":383,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":731,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IEntryPoint_$2839_fromMemory":{"entryPoint":682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IEntryPoint_$2839t_address_fromMemory":{"entryPoint":754,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":825,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":842,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":616,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IEntryPoint_$2839":{"entryPoint":636,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":584,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":579,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":705,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IEntryPoint_$2839":{"entryPoint":656,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2226:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"633:51:17","statements":[{"nodeType":"YulAssignment","src":"643:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"654:17:17"},"nodeType":"YulFunctionCall","src":"654:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"643:7:17"}]}]},"name":"cleanup_t_contract$_IEntryPoint_$2839","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"615:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"625:7:17","type":""}],"src":"568:116:17"},{"body":{"nodeType":"YulBlock","src":"753:99:17","statements":[{"body":{"nodeType":"YulBlock","src":"830:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"839:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"842:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"832:6:17"},"nodeType":"YulFunctionCall","src":"832:12:17"},"nodeType":"YulExpressionStatement","src":"832:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"776:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"821:5:17"}],"functionName":{"name":"cleanup_t_contract$_IEntryPoint_$2839","nodeType":"YulIdentifier","src":"783:37:17"},"nodeType":"YulFunctionCall","src":"783:44:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"773:2:17"},"nodeType":"YulFunctionCall","src":"773:55:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"766:6:17"},"nodeType":"YulFunctionCall","src":"766:63:17"},"nodeType":"YulIf","src":"763:83:17"}]},"name":"validator_revert_t_contract$_IEntryPoint_$2839","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"746:5:17","type":""}],"src":"690:162:17"},{"body":{"nodeType":"YulBlock","src":"941:100:17","statements":[{"nodeType":"YulAssignment","src":"951:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"966:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"960:5:17"},"nodeType":"YulFunctionCall","src":"960:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"951:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:17"}],"functionName":{"name":"validator_revert_t_contract$_IEntryPoint_$2839","nodeType":"YulIdentifier","src":"982:46:17"},"nodeType":"YulFunctionCall","src":"982:53:17"},"nodeType":"YulExpressionStatement","src":"982:53:17"}]},"name":"abi_decode_t_contract$_IEntryPoint_$2839_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"919:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"927:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"935:5:17","type":""}],"src":"858:183:17"},{"body":{"nodeType":"YulBlock","src":"1090:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1147:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1156:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1159:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1149:6:17"},"nodeType":"YulFunctionCall","src":"1149:12:17"},"nodeType":"YulExpressionStatement","src":"1149:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1113:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1138:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1120:17:17"},"nodeType":"YulFunctionCall","src":"1120:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1110:2:17"},"nodeType":"YulFunctionCall","src":"1110:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1103:6:17"},"nodeType":"YulFunctionCall","src":"1103:43:17"},"nodeType":"YulIf","src":"1100:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1083:5:17","type":""}],"src":"1047:122:17"},{"body":{"nodeType":"YulBlock","src":"1238:80:17","statements":[{"nodeType":"YulAssignment","src":"1248:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1263:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1257:5:17"},"nodeType":"YulFunctionCall","src":"1257:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1248:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1306:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1279:26:17"},"nodeType":"YulFunctionCall","src":"1279:33:17"},"nodeType":"YulExpressionStatement","src":"1279:33:17"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1216:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1224:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1232:5:17","type":""}],"src":"1175:143:17"},{"body":{"nodeType":"YulBlock","src":"1438:433:17","statements":[{"body":{"nodeType":"YulBlock","src":"1484:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1486:77:17"},"nodeType":"YulFunctionCall","src":"1486:79:17"},"nodeType":"YulExpressionStatement","src":"1486:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1459:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1468:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1455:3:17"},"nodeType":"YulFunctionCall","src":"1455:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1480:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1451:3:17"},"nodeType":"YulFunctionCall","src":"1451:32:17"},"nodeType":"YulIf","src":"1448:119:17"},{"nodeType":"YulBlock","src":"1577:148:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1592:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1606:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1596:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1621:94:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1687:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1698:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1683:3:17"},"nodeType":"YulFunctionCall","src":"1683:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1707:7:17"}],"functionName":{"name":"abi_decode_t_contract$_IEntryPoint_$2839_fromMemory","nodeType":"YulIdentifier","src":"1631:51:17"},"nodeType":"YulFunctionCall","src":"1631:84:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1621:6:17"}]}]},{"nodeType":"YulBlock","src":"1735:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1750:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1764:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1754:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1780:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1826:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1837:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1822:3:17"},"nodeType":"YulFunctionCall","src":"1822:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1846:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1790:31:17"},"nodeType":"YulFunctionCall","src":"1790:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1780:6:17"}]}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$2839t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1400:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1411:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1423:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1431:6:17","type":""}],"src":"1324:547:17"},{"body":{"nodeType":"YulBlock","src":"1942:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1959:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1982:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1964:17:17"},"nodeType":"YulFunctionCall","src":"1964:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1952:6:17"},"nodeType":"YulFunctionCall","src":"1952:37:17"},"nodeType":"YulExpressionStatement","src":"1952:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1930:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1937:3:17","type":""}],"src":"1877:118:17"},{"body":{"nodeType":"YulBlock","src":"2099:124:17","statements":[{"nodeType":"YulAssignment","src":"2109:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2121:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2132:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2117:3:17"},"nodeType":"YulFunctionCall","src":"2117:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2109:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2189:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2202:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2213:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2198:3:17"},"nodeType":"YulFunctionCall","src":"2198:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2145:43:17"},"nodeType":"YulFunctionCall","src":"2145:71:17"},"nodeType":"YulExpressionStatement","src":"2145:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2071:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2083:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2094:4:17","type":""}],"src":"2001:222:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$2839(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$2839(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$2839(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$2839_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$2839(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$2839t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$2839_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b50604051620025e3380380620025e38339818101604052810190620000379190620002f2565b8132600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ae5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a591906200034a565b60405180910390fd5b620000bf816200017f60201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000367565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002758262000248565b9050919050565b6000620002898262000268565b9050919050565b6200029b816200027c565b8114620002a757600080fd5b50565b600081519050620002bb8162000290565b92915050565b620002cc8162000268565b8114620002d857600080fd5b50565b600081519050620002ec81620002c1565b92915050565b600080604083850312156200030c576200030b62000243565b5b60006200031c85828601620002aa565b92505060206200032f85828601620002db565b9150509250929050565b620003448162000268565b82525050565b600060208201905062000361600083018462000339565b92915050565b60805161222f620003b460003960008181610436015281816104cd015281816109b7015281816109e301528181610a6d01528181610afd01528181610b9c0152610f8f015261222f6000f3fe6080604052600436106101185760003560e01c806394e1fc19116100a0578063c399ec8811610064578063c399ec8814610365578063d0e30db014610390578063f2fde38b1461039a578063f465c77e146103c3578063ff1b636d146104015761011f565b806394e1fc1914610294578063a9a23409146102d1578063b0d691fe146102fa578063bb9fe6bf14610325578063c23a5cea1461033c5761011f565b8063687ca620116100e7578063687ca620146101ab578063715018a6146101e95780638da5cb5b14610200578063927cc0641461022b57806394d4ad60146102545761011f565b80630396cb6014610124578063205c28781461014057806323d9ac9b146101695780635fd8c710146101945761011f565b3661011f57005b600080fd5b61013e600480360381019061013991906114fb565b61042c565b005b34801561014c57600080fd5b50610167600480360381019061016291906115bc565b6104c3565b005b34801561017557600080fd5b5061017e61055c565b60405161018b919061161d565b60405180910390f35b3480156101a057600080fd5b506101a9610582565b005b3480156101b757600080fd5b506101d260048036038101906101cd9190611693565b61065b565b6040516101e09291906117a1565b60405180910390f35b3480156101f557600080fd5b506101fe6107fb565b005b34801561020c57600080fd5b5061021561080f565b604051610222919061161d565b60405180910390f35b34801561023757600080fd5b50610252600480360381019061024d91906117fd565b610838565b005b34801561026057600080fd5b5061027b6004803603810190610276919061188f565b61090c565b60405161028b9493929190611939565b60405180910390f35b3480156102a057600080fd5b506102bb60048036038101906102b691906119a5565b61095b565b6040516102c89190611a23565b60405180910390f35b3480156102dd57600080fd5b506102f860048036038101906102f39190611a63565b61099b565b005b34801561030657600080fd5b5061030f6109b5565b60405161031c9190611b36565b60405180910390f35b34801561033157600080fd5b5061033a6109d9565b005b34801561034857600080fd5b50610363600480360381019061035e9190611b51565b610a63565b005b34801561037157600080fd5b5061037a610af9565b6040516103879190611b7e565b60405180910390f35b610398610b9a565b005b3480156103a657600080fd5b506103c160048036038101906103bc91906117fd565b610c28565b005b3480156103cf57600080fd5b506103ea60048036038101906103e59190611693565b610cae565b6040516103f89291906117a1565b60405180910390f35b34801561040d57600080fd5b50610416610cd1565b604051610423919061161d565b60405180910390f35b610434610cf7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b815260040161048e9190611ba8565b6000604051808303818588803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b505050505050565b6104cb610cf7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610526929190611bd2565b600060405180830381600087803b15801561054057600080fd5b505af1158015610554573d6000803e3d6000fd5b505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060990611c58565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610658573d6000803e3d6000fd5b50565b60606000808036600061067d898061012001906106789190611c87565b61090c565b9350935093509350604082829050148061069a5750604182829050145b6106d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d090611d5c565b60405180910390fd5b60006106ee6106e98b878761095b565b610d7e565b905061073e8184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610db4565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490611dc8565b60405180910390fd5b6107d960008686610de0565b6040518060200160405280600081525090965096505050505050935093915050565b610803610cf7565b61080d6000610e19565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bf90611c58565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080366000858560149060549261092693929190611df2565b8101906109339190611e2d565b80945081955050508585605490809261094e93929190611df2565b9150915092959194509250565b6000610968848484610edd565b463060405160200161097c93929190611f12565b6040516020818303038152906040528051906020012090509392505050565b6109a3610f8d565b6109af8484848461101d565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109e1610cf7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b50505050565b610a6b610cf7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b8152600401610ac49190611f4b565b600060405180830381600087803b158015610ade57600080fd5b505af1158015610af2573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b54919061161d565b602060405180830381865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b959190611f7b565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610bf4919061161d565b6000604051808303818588803b158015610c0d57600080fd5b505af1158015610c21573d6000803e3d6000fd5b5050505050565b610c30610cf7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ca25760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c99919061161d565b60405180910390fd5b610cab81610e19565b50565b60606000610cba610f8d565b610cc5858585611058565b91509150935093915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cff6111e9565b73ffffffffffffffffffffffffffffffffffffffff16610d1d61080f565b73ffffffffffffffffffffffffffffffffffffffff1614610d7c57610d406111e9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d73919061161d565b60405180910390fd5b565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080610dc486866111f1565b925092509250610dd4828261124d565b82935050505092915050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610e08576000610e0b565b60015b60ff16171790509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60606000610eea856113b1565b9050808560200135868060400190610f029190611c87565b604051610f10929190611fcd565b6040518091039020878060600190610f289190611c87565b604051610f36929190611fcd565b604051809103902088608001358960a001358a60c001358b60e001358c61010001358c8c604051602001610f749b9a99989796959493929190611fe6565b6040516020818303038152906040529150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461101b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611012906120dd565b60405180910390fd5b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612149565b60405180910390fd5b60606000808036600061107a898061012001906110759190611c87565b61090c565b935093509350935060408282905014806110975750604182829050145b6110d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cd90611d5c565b60405180910390fd5b60006110eb6110e68b878761095b565b610d7e565b905061113b8184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610db4565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111ba5761119b60018686610de0565b60405180602001604052806000815250909650965050505050506111e1565b6111c660008686610de0565b60405180602001604052806000815250909650965050505050505b935093915050565b600033905090565b600080600060418451036112365760008060006020870151925060408701519150606087015160001a9050611228888285856113c1565b955095509550505050611246565b60006002855160001b9250925092505b9250925092565b6000600381111561126157611260612169565b5b82600381111561127457611273612169565b5b03156113ad576001600381111561128e5761128d612169565b5b8260038111156112a1576112a0612169565b5b036112d8576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156112ec576112eb612169565b5b8260038111156112ff576112fe612169565b5b03611344578060001c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161133b9190611b7e565b60405180910390fd5b60038081111561135757611356612169565b5b82600381111561136a57611369612169565b5b036113ac57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016113a39190611a23565b60405180910390fd5b5b5050565b6000808235905080915050919050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156114015760006003859250925092506114ab565b60006001888888886040516000815260200160405260405161142694939291906121b4565b6020604051602081039080840390855afa158015611448573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361149c57600060016000801b935093509350506114ab565b8060008060001b935093509350505b9450945094915050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6114d8816114bf565b81146114e357600080fd5b50565b6000813590506114f5816114cf565b92915050565b600060208284031215611511576115106114b5565b5b600061151f848285016114e6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061155382611528565b9050919050565b61156381611548565b811461156e57600080fd5b50565b6000813590506115808161155a565b92915050565b6000819050919050565b61159981611586565b81146115a457600080fd5b50565b6000813590506115b681611590565b92915050565b600080604083850312156115d3576115d26114b5565b5b60006115e185828601611571565b92505060206115f2858286016115a7565b9150509250929050565b600061160782611528565b9050919050565b611617816115fc565b82525050565b6000602082019050611632600083018461160e565b92915050565b600080fd5b6000610160828403121561165457611653611638565b5b81905092915050565b6000819050919050565b6116708161165d565b811461167b57600080fd5b50565b60008135905061168d81611667565b92915050565b6000806000606084860312156116ac576116ab6114b5565b5b600084013567ffffffffffffffff8111156116ca576116c96114ba565b5b6116d68682870161163d565b93505060206116e78682870161167e565b92505060406116f8868287016115a7565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561173c578082015181840152602081019050611721565b60008484015250505050565b6000601f19601f8301169050919050565b600061176482611702565b61176e818561170d565b935061177e81856020860161171e565b61178781611748565b840191505092915050565b61179b81611586565b82525050565b600060408201905081810360008301526117bb8185611759565b90506117ca6020830184611792565b9392505050565b6117da816115fc565b81146117e557600080fd5b50565b6000813590506117f7816117d1565b92915050565b600060208284031215611813576118126114b5565b5b6000611821848285016117e8565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261184f5761184e61182a565b5b8235905067ffffffffffffffff81111561186c5761186b61182f565b5b60208301915083600182028301111561188857611887611834565b5b9250929050565b600080602083850312156118a6576118a56114b5565b5b600083013567ffffffffffffffff8111156118c4576118c36114ba565b5b6118d085828601611839565b92509250509250929050565b600065ffffffffffff82169050919050565b6118f7816118dc565b82525050565b82818337600083830152505050565b6000611918838561170d565b93506119258385846118fd565b61192e83611748565b840190509392505050565b600060608201905061194e60008301876118ee565b61195b60208301866118ee565b818103604083015261196e81848661190c565b905095945050505050565b611982816118dc565b811461198d57600080fd5b50565b60008135905061199f81611979565b92915050565b6000806000606084860312156119be576119bd6114b5565b5b600084013567ffffffffffffffff8111156119dc576119db6114ba565b5b6119e88682870161163d565b93505060206119f986828701611990565b9250506040611a0a86828701611990565b9150509250925092565b611a1d8161165d565b82525050565b6000602082019050611a386000830184611a14565b92915050565b60038110611a4b57600080fd5b50565b600081359050611a5d81611a3e565b92915050565b60008060008060608587031215611a7d57611a7c6114b5565b5b6000611a8b87828801611a4e565b945050602085013567ffffffffffffffff811115611aac57611aab6114ba565b5b611ab887828801611839565b93509350506040611acb878288016115a7565b91505092959194509250565b6000819050919050565b6000611afc611af7611af284611528565b611ad7565b611528565b9050919050565b6000611b0e82611ae1565b9050919050565b6000611b2082611b03565b9050919050565b611b3081611b15565b82525050565b6000602082019050611b4b6000830184611b27565b92915050565b600060208284031215611b6757611b666114b5565b5b6000611b7584828501611571565b91505092915050565b6000602082019050611b936000830184611792565b92915050565b611ba2816114bf565b82525050565b6000602082019050611bbd6000830184611b99565b92915050565b611bcc81611548565b82525050565b6000604082019050611be76000830185611bc3565b611bf46020830184611792565b9392505050565b600082825260208201905092915050565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b6000611c42600a83611bfb565b9150611c4d82611c0c565b602082019050919050565b60006020820190508181036000830152611c7181611c35565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611ca457611ca3611c78565b5b80840192508235915067ffffffffffffffff821115611cc657611cc5611c7d565b5b602083019250600182023603831315611ce257611ce1611c82565b5b509250929050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b6000611d46604083611bfb565b9150611d5182611cea565b604082019050919050565b60006020820190508181036000830152611d7581611d39565b9050919050565b7f6572722073696700000000000000000000000000000000000000000000000000600082015250565b6000611db2600783611bfb565b9150611dbd82611d7c565b602082019050919050565b60006020820190508181036000830152611de181611da5565b9050919050565b600080fd5b600080fd5b60008085851115611e0657611e05611de8565b5b83861115611e1757611e16611ded565b5b6001850283019150848603905094509492505050565b60008060408385031215611e4457611e436114b5565b5b6000611e5285828601611990565b9250506020611e6385828601611990565b9150509250929050565b600081905092915050565b6000611e8382611702565b611e8d8185611e6d565b9350611e9d81856020860161171e565b80840191505092915050565b6000819050919050565b611ec4611ebf82611586565b611ea9565b82525050565b60008160601b9050919050565b6000611ee282611eca565b9050919050565b6000611ef482611ed7565b9050919050565b611f0c611f07826115fc565b611ee9565b82525050565b6000611f1e8286611e78565b9150611f2a8285611eb3565b602082019150611f3a8284611efb565b601482019150819050949350505050565b6000602082019050611f606000830184611bc3565b92915050565b600081519050611f7581611590565b92915050565b600060208284031215611f9157611f906114b5565b5b6000611f9f84828501611f66565b91505092915050565b6000611fb48385611e6d565b9350611fc18385846118fd565b82840190509392505050565b6000611fda828486611fa8565b91508190509392505050565b600061016082019050611ffc600083018e61160e565b612009602083018d611792565b612016604083018c611a14565b612023606083018b611a14565b612030608083018a611792565b61203d60a0830189611792565b61204a60c0830188611792565b61205760e0830187611792565b612065610100830186611792565b6120736101208301856118ee565b6120816101408301846118ee565b9c9b505050505050505050505050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b60006120c7601583611bfb565b91506120d282612091565b602082019050919050565b600060208201905081810360008301526120f6816120ba565b9050919050565b7f6d757374206f7665727269646500000000000000000000000000000000000000600082015250565b6000612133600d83611bfb565b915061213e826120fd565b602082019050919050565b6000602082019050818103600083015261216281612126565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060ff82169050919050565b6121ae81612198565b82525050565b60006080820190506121c96000830187611a14565b6121d660208301866121a5565b6121e36040830185611a14565b6121f06060830184611a14565b9594505050505056fea264697066735822122074c5d1c1311c89c84908f26ace19dbef1950e42b9353dfb1618f2cca62dba56a64736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25E3 CODESIZE SUB DUP1 PUSH3 0x25E3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2F2 JUMP JUMPDEST DUP2 ORIGIN PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBF DUP2 PUSH3 0x17F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x367 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x275 DUP3 PUSH3 0x248 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x289 DUP3 PUSH3 0x268 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x29B DUP2 PUSH3 0x27C JUMP JUMPDEST DUP2 EQ PUSH3 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2BB DUP2 PUSH3 0x290 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2CC DUP2 PUSH3 0x268 JUMP JUMPDEST DUP2 EQ PUSH3 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2EC DUP2 PUSH3 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x30C JUMPI PUSH3 0x30B PUSH3 0x243 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x31C DUP6 DUP3 DUP7 ADD PUSH3 0x2AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x32F DUP6 DUP3 DUP7 ADD PUSH3 0x2DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x344 DUP2 PUSH3 0x268 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x361 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x339 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x222F PUSH3 0x3B4 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x436 ADD MSTORE DUP2 DUP2 PUSH2 0x4CD ADD MSTORE DUP2 DUP2 PUSH2 0x9B7 ADD MSTORE DUP2 DUP2 PUSH2 0x9E3 ADD MSTORE DUP2 DUP2 PUSH2 0xA6D ADD MSTORE DUP2 DUP2 PUSH2 0xAFD ADD MSTORE DUP2 DUP2 PUSH2 0xB9C ADD MSTORE PUSH2 0xF8F ADD MSTORE PUSH2 0x222F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94E1FC19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC399EC88 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xFF1B636D EQ PUSH2 0x401 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x94E1FC19 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x33C JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x687CA620 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x687CA620 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x927CC064 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x94D4AD60 EQ PUSH2 0x254 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x23D9AC9B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x5FD8C710 EQ PUSH2 0x194 JUMPI PUSH2 0x11F JUMP JUMPDEST CALLDATASIZE PUSH2 0x11F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A9 PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP3 SWAP2 SWAP1 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x7FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A PUSH2 0x9D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH2 0xB9A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP3 SWAP2 SWAP1 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x416 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x434 PUSH2 0xCF7 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4CB PUSH2 0xCF7 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x526 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x554 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x609 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP1 CALLDATASIZE PUSH1 0x0 PUSH2 0x67D DUP10 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x40 DUP3 DUP3 SWAP1 POP EQ DUP1 PUSH2 0x69A JUMPI POP PUSH1 0x41 DUP3 DUP3 SWAP1 POP EQ JUMPDEST PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D0 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6EE PUSH2 0x6E9 DUP12 DUP8 DUP8 PUSH2 0x95B JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST SWAP1 POP PUSH2 0x73E DUP2 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDB4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D9 PUSH1 0x0 DUP7 DUP7 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x80D PUSH1 0x0 PUSH2 0xE19 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BF SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP6 DUP6 PUSH1 0x14 SWAP1 PUSH1 0x54 SWAP3 PUSH2 0x926 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x933 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP DUP6 DUP6 PUSH1 0x54 SWAP1 DUP1 SWAP3 PUSH2 0x94E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x968 DUP5 DUP5 DUP5 PUSH2 0xEDD JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x97C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9A3 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x9AF DUP5 DUP5 DUP5 DUP5 PUSH2 0x101D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9E1 PUSH2 0xCF7 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA6B PUSH2 0xCF7 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC30 PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC99 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAB DUP2 PUSH2 0xE19 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xCBA PUSH2 0xF8D JUMP JUMPDEST PUSH2 0xCC5 DUP6 DUP6 DUP6 PUSH2 0x1058 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCFF PUSH2 0x11E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD1D PUSH2 0x80F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD7C JUMPI PUSH2 0xD40 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xDC4 DUP7 DUP7 PUSH2 0x11F1 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xDD4 DUP3 DUP3 PUSH2 0x124D JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD0 DUP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL PUSH1 0xA0 DUP5 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL DUP6 PUSH2 0xE08 JUMPI PUSH1 0x0 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND OR OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xEEA DUP6 PUSH2 0x13B1 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH1 0x20 ADD CALLDATALOAD DUP7 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF10 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP8 DUP1 PUSH1 0x60 ADD SWAP1 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF36 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 PUSH1 0x80 ADD CALLDATALOAD DUP10 PUSH1 0xA0 ADD CALLDATALOAD DUP11 PUSH1 0xC0 ADD CALLDATALOAD DUP12 PUSH1 0xE0 ADD CALLDATALOAD DUP13 PUSH2 0x100 ADD CALLDATALOAD DUP13 DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF74 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x101B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1012 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP1 CALLDATASIZE PUSH1 0x0 PUSH2 0x107A DUP10 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x40 DUP3 DUP3 SWAP1 POP EQ DUP1 PUSH2 0x1097 JUMPI POP PUSH1 0x41 DUP3 DUP3 SWAP1 POP EQ JUMPDEST PUSH2 0x10D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CD SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10EB PUSH2 0x10E6 DUP12 DUP8 DUP8 PUSH2 0x95B JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST SWAP1 POP PUSH2 0x113B DUP2 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDB4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11BA JUMPI PUSH2 0x119B PUSH1 0x1 DUP7 DUP7 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP7 POP SWAP7 POP POP POP POP POP POP PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x11C6 PUSH1 0x0 DUP7 DUP7 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP7 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x1236 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x1228 DUP9 DUP3 DUP6 DUP6 PUSH2 0x13C1 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1261 JUMPI PUSH2 0x1260 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1274 JUMPI PUSH2 0x1273 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x13AD JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x128E JUMPI PUSH2 0x128D PUSH2 0x2169 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A0 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12EC JUMPI PUSH2 0x12EB PUSH2 0x2169 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12FF JUMPI PUSH2 0x12FE PUSH2 0x2169 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1344 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133B SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1357 JUMPI PUSH2 0x1356 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x136A JUMPI PUSH2 0x1369 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x13AC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A3 SWAP2 SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 CALLDATALOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1401 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1426 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1448 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x149C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x14AB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D8 DUP2 PUSH2 0x14BF JUMP JUMPDEST DUP2 EQ PUSH2 0x14E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F5 DUP2 PUSH2 0x14CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151F DUP5 DUP3 DUP6 ADD PUSH2 0x14E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1553 DUP3 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1563 DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP2 EQ PUSH2 0x156E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1580 DUP2 PUSH2 0x155A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1599 DUP2 PUSH2 0x1586 JUMP JUMPDEST DUP2 EQ PUSH2 0x15A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B6 DUP2 PUSH2 0x1590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D3 JUMPI PUSH2 0x15D2 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15E1 DUP6 DUP3 DUP7 ADD PUSH2 0x1571 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15F2 DUP6 DUP3 DUP7 ADD PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1607 DUP3 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1617 DUP2 PUSH2 0x15FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1632 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x160E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH2 0x1653 PUSH2 0x1638 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1670 DUP2 PUSH2 0x165D JUMP JUMPDEST DUP2 EQ PUSH2 0x167B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x168D DUP2 PUSH2 0x1667 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16AC JUMPI PUSH2 0x16AB PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16CA JUMPI PUSH2 0x16C9 PUSH2 0x14BA JUMP JUMPDEST JUMPDEST PUSH2 0x16D6 DUP7 DUP3 DUP8 ADD PUSH2 0x163D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16E7 DUP7 DUP3 DUP8 ADD PUSH2 0x167E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16F8 DUP7 DUP3 DUP8 ADD PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x173C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1764 DUP3 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x176E DUP2 DUP6 PUSH2 0x170D JUMP JUMPDEST SWAP4 POP PUSH2 0x177E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x171E JUMP JUMPDEST PUSH2 0x1787 DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x179B DUP2 PUSH2 0x1586 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17BB DUP2 DUP6 PUSH2 0x1759 JUMP JUMPDEST SWAP1 POP PUSH2 0x17CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1792 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17DA DUP2 PUSH2 0x15FC JUMP JUMPDEST DUP2 EQ PUSH2 0x17E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F7 DUP2 PUSH2 0x17D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1813 JUMPI PUSH2 0x1812 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1821 DUP5 DUP3 DUP6 ADD PUSH2 0x17E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x184F JUMPI PUSH2 0x184E PUSH2 0x182A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x186C JUMPI PUSH2 0x186B PUSH2 0x182F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1888 JUMPI PUSH2 0x1887 PUSH2 0x1834 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C4 JUMPI PUSH2 0x18C3 PUSH2 0x14BA JUMP JUMPDEST JUMPDEST PUSH2 0x18D0 DUP6 DUP3 DUP7 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F7 DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1918 DUP4 DUP6 PUSH2 0x170D JUMP JUMPDEST SWAP4 POP PUSH2 0x1925 DUP4 DUP6 DUP5 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x192E DUP4 PUSH2 0x1748 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x194E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18EE JUMP JUMPDEST PUSH2 0x195B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18EE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x196E DUP2 DUP5 DUP7 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1982 DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP2 EQ PUSH2 0x198D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x199F DUP2 PUSH2 0x1979 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19BE JUMPI PUSH2 0x19BD PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19DC JUMPI PUSH2 0x19DB PUSH2 0x14BA JUMP JUMPDEST JUMPDEST PUSH2 0x19E8 DUP7 DUP3 DUP8 ADD PUSH2 0x163D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19F9 DUP7 DUP3 DUP8 ADD PUSH2 0x1990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A0A DUP7 DUP3 DUP8 ADD PUSH2 0x1990 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1A1D DUP2 PUSH2 0x165D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1A4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A5D DUP2 PUSH2 0x1A3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A7D JUMPI PUSH2 0x1A7C PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A8B DUP8 DUP3 DUP9 ADD PUSH2 0x1A4E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AAC JUMPI PUSH2 0x1AAB PUSH2 0x14BA JUMP JUMPDEST JUMPDEST PUSH2 0x1AB8 DUP8 DUP3 DUP9 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x1ACB DUP8 DUP3 DUP9 ADD PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFC PUSH2 0x1AF7 PUSH2 0x1AF2 DUP5 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0E DUP3 PUSH2 0x1AE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B20 DUP3 PUSH2 0x1B03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B30 DUP2 PUSH2 0x1B15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B66 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B75 DUP5 DUP3 DUP6 ADD PUSH2 0x1571 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B93 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1792 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BA2 DUP2 PUSH2 0x14BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BCC DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BE7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1792 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C792061646D696E00000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C42 PUSH1 0xA DUP4 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4D DUP3 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C71 DUP2 PUSH2 0x1C35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1CA4 JUMPI PUSH2 0x1CA3 PUSH2 0x1C78 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CC6 JUMPI PUSH2 0x1CC5 PUSH2 0x1C7D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x1C82 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x566572696679696E675061796D61737465723A20696E76616C6964207369676E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6174757265206C656E67746820696E207061796D6173746572416E6444617461 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D46 PUSH1 0x40 DUP4 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D51 DUP3 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D75 DUP2 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6572722073696700000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB2 PUSH1 0x7 DUP4 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBD DUP3 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE1 DUP2 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x1E06 JUMPI PUSH2 0x1E05 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x1E17 JUMPI PUSH2 0x1E16 PUSH2 0x1DED JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E52 DUP6 DUP3 DUP7 ADD PUSH2 0x1990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E63 DUP6 DUP3 DUP7 ADD PUSH2 0x1990 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E83 DUP3 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x1E8D DUP2 DUP6 PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP PUSH2 0x1E9D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x171E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC4 PUSH2 0x1EBF DUP3 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x1EA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE2 DUP3 PUSH2 0x1ECA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF4 DUP3 PUSH2 0x1ED7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0C PUSH2 0x1F07 DUP3 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x1EE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1E DUP3 DUP7 PUSH2 0x1E78 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2A DUP3 DUP6 PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1F3A DUP3 DUP5 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F75 DUP2 PUSH2 0x1590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F91 JUMPI PUSH2 0x1F90 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F9F DUP5 DUP3 DUP6 ADD PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB4 DUP4 DUP6 PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP PUSH2 0x1FC1 DUP4 DUP6 DUP5 PUSH2 0x18FD JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA DUP3 DUP5 DUP7 PUSH2 0x1FA8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x1FFC PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x160E JUMP JUMPDEST PUSH2 0x2009 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x2016 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x2023 PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x2030 PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x203D PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x204A PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x2057 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x2065 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x2073 PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x18EE JUMP JUMPDEST PUSH2 0x2081 PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x18EE JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C7 PUSH1 0x15 DUP4 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x20D2 DUP3 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F6 DUP2 PUSH2 0x20BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D757374206F7665727269646500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2133 PUSH1 0xD DUP4 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x213E DUP3 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2162 DUP2 PUSH2 0x2126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21AE DUP2 PUSH2 0x2198 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x21C9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x21D6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x21A5 JUMP JUMPDEST PUSH2 0x21E3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x21F0 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1A14 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xC5D1C1311C89C84908F26ACE19DBEF1950E42B9353 0xDF 0xB1 PUSH2 0x8F2C 0xCA PUSH3 0xDBA56A PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"916:5334:16:-:0;;;1335:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1412:11;579:9:7;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;614:11:7::1;601:24;;;;;;;;::::0;::::1;534:99:::0;1454:16:16::1;1436:15;;:34;;;;;;;;;;;;;;;;;;1489:10;1481:5;;:18;;;;;;;;;;;;;;;;;;1335:172:::0;;916:5334;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:17:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:122::-;1120:24;1138:5;1120:24;:::i;:::-;1113:5;1110:35;1100:63;;1159:1;1156;1149:12;1100:63;1047:122;:::o;1175:143::-;1232:5;1263:6;1257:13;1248:22;;1279:33;1306:5;1279:33;:::i;:::-;1175:143;;;;:::o;1324:547::-;1423:6;1431;1480:2;1468:9;1459:7;1455:23;1451:32;1448:119;;;1486:79;;:::i;:::-;1448:119;1606:1;1631:84;1707:7;1698:6;1687:9;1683:22;1631:84;:::i;:::-;1621:94;;1577:148;1764:2;1790:64;1846:7;1837:6;1826:9;1822:22;1790:64;:::i;:::-;1780:74;;1735:129;1324:547;;;;;:::o;1877:118::-;1964:24;1982:5;1964:24;:::i;:::-;1959:3;1952:37;1877:118;;:::o;2001:222::-;2094:4;2132:2;2121:9;2117:18;2109:26;;2145:71;2213:1;2202:9;2198:17;2189:6;2145:71;:::i;:::-;2001:222;;;;:::o;916:5334:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Admin_3041":{"entryPoint":3281,"id":3041,"parameterSlots":0,"returnSlots":0},"@ChangeAdmin_3094":{"entryPoint":2104,"id":3094,"parameterSlots":1,"returnSlots":0},"@_3381":{"entryPoint":null,"id":3381,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3319,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_159":{"entryPoint":4585,"id":159,"parameterSlots":0,"returnSlots":1},"@_packValidationData_2461":{"entryPoint":3552,"id":2461,"parameterSlots":3,"returnSlots":1},"@_postOp_2118":{"entryPoint":4125,"id":2118,"parameterSlots":4,"returnSlots":0},"@_requireFromEntryPoint_2229":{"entryPoint":3981,"id":2229,"parameterSlots":0,"returnSlots":0},"@_throwError_771":{"entryPoint":4685,"id":771,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3609,"id":146,"parameterSlots":1,"returnSlots":0},"@_validatePaymasterUserOp_3251":{"entryPoint":4184,"id":3251,"parameterSlots":3,"returnSlots":2},"@addStake_2171":{"entryPoint":1068,"id":2171,"parameterSlots":1,"returnSlots":0},"@deposit_2135":{"entryPoint":2970,"id":2135,"parameterSlots":0,"returnSlots":0},"@entryPoint_2019":{"entryPoint":2485,"id":2019,"parameterSlots":0,"returnSlots":0},"@getDeposit_2186":{"entryPoint":2809,"id":2186,"parameterSlots":0,"returnSlots":1},"@getHash_3125":{"entryPoint":2395,"id":3125,"parameterSlots":3,"returnSlots":1},"@getPartialHash_3171":{"entryPoint":3805,"id":3171,"parameterSlots":3,"returnSlots":1},"@getSender_2499":{"entryPoint":5041,"id":2499,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":2063,"id":67,"parameterSlots":0,"returnSlots":1},"@parsePaymasterAndData_3358":{"entryPoint":2316,"id":3358,"parameterSlots":2,"returnSlots":4},"@postOp_2097":{"entryPoint":2459,"id":2097,"parameterSlots":4,"returnSlots":0},"@recover_528":{"entryPoint":3508,"id":528,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2043,"id":98,"parameterSlots":0,"returnSlots":0},"@toEthSignedMessageHash_787":{"entryPoint":3454,"id":787,"parameterSlots":1,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3112,"id":126,"parameterSlots":1,"returnSlots":0},"@tryRecover_498":{"entryPoint":4593,"id":498,"parameterSlots":2,"returnSlots":3},"@tryRecover_686":{"entryPoint":5057,"id":686,"parameterSlots":4,"returnSlots":3},"@unlockStake_2198":{"entryPoint":2521,"id":2198,"parameterSlots":0,"returnSlots":0},"@validatePaymasterUserOpPub_3323":{"entryPoint":1627,"id":3323,"parameterSlots":3,"returnSlots":2},"@validatePaymasterUserOp_2060":{"entryPoint":3246,"id":2060,"parameterSlots":3,"returnSlots":2},"@verifyingSigner_3055":{"entryPoint":1372,"id":3055,"parameterSlots":0,"returnSlots":0},"@withdrawBalance_3377":{"entryPoint":1410,"id":3377,"parameterSlots":0,"returnSlots":0},"@withdrawStake_2213":{"entryPoint":2659,"id":2213,"parameterSlots":1,"returnSlots":0},"@withdrawTo_2153":{"entryPoint":1219,"id":2153,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":6120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":5489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5758,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":6201,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_enum$_PostOpMode_$2866":{"entryPoint":6734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_UserOperation_$3023_calldata_ptr":{"entryPoint":5693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5543,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":8038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":5350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint48":{"entryPoint":6544,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":6993,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":5564,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":6287,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_enum$_PostOpMode_$2866t_bytes_calldata_ptrt_uint256":{"entryPoint":6755,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_struct$_UserOperation_$3023_calldata_ptrt_bytes32t_uint256":{"entryPoint":5779,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_UserOperation_$3023_calldata_ptrt_uint48t_uint48":{"entryPoint":6565,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":5371,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint48t_uint48":{"entryPoint":7725,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":7107,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5646,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":7931,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6676,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6412,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8104,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7800,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IEntryPoint_$2839_to_t_address_fromStack":{"entryPoint":6951,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f_to_t_string_memory_ptr_fromStack":{"entryPoint":7589,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack":{"entryPoint":7221,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack":{"entryPoint":8378,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7_to_t_string_memory_ptr_fromStack":{"entryPoint":7481,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d_to_t_string_memory_ptr_fromStack":{"entryPoint":8486,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6034,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":7859,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":7065,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":6382,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8613,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8141,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256_t_address__to_t_bytes_memory_ptr_t_uint256_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":7954,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":8011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":7122,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint48_t_uint48__to_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint48_t_uint48__fromStack_reversed":{"entryPoint":8166,"id":null,"parameterSlots":12,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":8628,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":6049,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$2839__to_t_address__fromStack_reversed":{"entryPoint":6966,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7624,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7256,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8413,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7516,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8521,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":7080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48_t_uint48_t_bytes_calldata_ptr__to_t_uint48_t_uint48_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6457,"id":null,"parameterSlots":5,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":7303,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5890,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5901,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7789,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7163,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":7666,"id":null,"parameterSlots":4,"returnSlots":2},"cleanup_t_address":{"entryPoint":5628,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":5448,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5725,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5416,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5510,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":5311,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":6364,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8600,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IEntryPoint_$2839_to_t_address":{"entryPoint":6933,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6915,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6881,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6397,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5918,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":6871,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":7913,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":7895,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":7849,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":8553,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":6191,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6186,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":7293,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":5688,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":7288,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":7661,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":7656,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":6196,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":7298,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5306,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5301,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5960,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":7882,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f":{"entryPoint":7548,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d":{"entryPoint":7180,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9":{"entryPoint":8337,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7":{"entryPoint":7402,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d":{"entryPoint":8445,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6097,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":5466,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5735,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_PostOpMode_$2866":{"entryPoint":6718,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5520,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":5327,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint48":{"entryPoint":6521,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:27303:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:49:17","statements":[{"nodeType":"YulAssignment","src":"388:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:10:17","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:22:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:93:17"},{"body":{"nodeType":"YulBlock","src":"475:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"531:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"540:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"543:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"533:6:17"},"nodeType":"YulFunctionCall","src":"533:12:17"},"nodeType":"YulExpressionStatement","src":"533:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:17"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"505:16:17"},"nodeType":"YulFunctionCall","src":"505:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"495:2:17"},"nodeType":"YulFunctionCall","src":"495:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"488:6:17"},"nodeType":"YulFunctionCall","src":"488:42:17"},"nodeType":"YulIf","src":"485:62:17"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"468:5:17","type":""}],"src":"433:120:17"},{"body":{"nodeType":"YulBlock","src":"610:86:17","statements":[{"nodeType":"YulAssignment","src":"620:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"642:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"629:12:17"},"nodeType":"YulFunctionCall","src":"629:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"620:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"684:5:17"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"658:25:17"},"nodeType":"YulFunctionCall","src":"658:32:17"},"nodeType":"YulExpressionStatement","src":"658:32:17"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"588:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"596:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"559:137:17"},{"body":{"nodeType":"YulBlock","src":"767:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"813:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"815:77:17"},"nodeType":"YulFunctionCall","src":"815:79:17"},"nodeType":"YulExpressionStatement","src":"815:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"788:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"797:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"784:3:17"},"nodeType":"YulFunctionCall","src":"784:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"809:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"780:3:17"},"nodeType":"YulFunctionCall","src":"780:32:17"},"nodeType":"YulIf","src":"777:119:17"},{"nodeType":"YulBlock","src":"906:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"921:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"935:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"925:6:17","type":""}]},{"nodeType":"YulAssignment","src":"950:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"984:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"995:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"980:3:17"},"nodeType":"YulFunctionCall","src":"980:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1004:7:17"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"960:19:17"},"nodeType":"YulFunctionCall","src":"960:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"950:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"737:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"748:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"760:6:17","type":""}],"src":"702:327:17"},{"body":{"nodeType":"YulBlock","src":"1080:81:17","statements":[{"nodeType":"YulAssignment","src":"1090:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1105:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1112:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1101:3:17"},"nodeType":"YulFunctionCall","src":"1101:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1090:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1062:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1072:7:17","type":""}],"src":"1035:126:17"},{"body":{"nodeType":"YulBlock","src":"1220:51:17","statements":[{"nodeType":"YulAssignment","src":"1230:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1259:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1241:17:17"},"nodeType":"YulFunctionCall","src":"1241:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1230:7:17"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1202:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1212:7:17","type":""}],"src":"1167:104:17"},{"body":{"nodeType":"YulBlock","src":"1328:87:17","statements":[{"body":{"nodeType":"YulBlock","src":"1393:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1402:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1405:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1395:6:17"},"nodeType":"YulFunctionCall","src":"1395:12:17"},"nodeType":"YulExpressionStatement","src":"1395:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1351:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1384:5:17"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"1358:25:17"},"nodeType":"YulFunctionCall","src":"1358:32:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1348:2:17"},"nodeType":"YulFunctionCall","src":"1348:43:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1341:6:17"},"nodeType":"YulFunctionCall","src":"1341:51:17"},"nodeType":"YulIf","src":"1338:71:17"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1321:5:17","type":""}],"src":"1277:138:17"},{"body":{"nodeType":"YulBlock","src":"1481:95:17","statements":[{"nodeType":"YulAssignment","src":"1491:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1513:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1500:12:17"},"nodeType":"YulFunctionCall","src":"1500:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1491:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1564:5:17"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"1529:34:17"},"nodeType":"YulFunctionCall","src":"1529:41:17"},"nodeType":"YulExpressionStatement","src":"1529:41:17"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1459:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1467:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1475:5:17","type":""}],"src":"1421:155:17"},{"body":{"nodeType":"YulBlock","src":"1627:32:17","statements":[{"nodeType":"YulAssignment","src":"1637:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1648:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1637:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1609:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1619:7:17","type":""}],"src":"1582:77:17"},{"body":{"nodeType":"YulBlock","src":"1708:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1765:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1774:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1777:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1767:6:17"},"nodeType":"YulFunctionCall","src":"1767:12:17"},"nodeType":"YulExpressionStatement","src":"1767:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1731:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1756:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1738:17:17"},"nodeType":"YulFunctionCall","src":"1738:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1728:2:17"},"nodeType":"YulFunctionCall","src":"1728:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1721:6:17"},"nodeType":"YulFunctionCall","src":"1721:43:17"},"nodeType":"YulIf","src":"1718:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1701:5:17","type":""}],"src":"1665:122:17"},{"body":{"nodeType":"YulBlock","src":"1845:87:17","statements":[{"nodeType":"YulAssignment","src":"1855:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1877:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1864:12:17"},"nodeType":"YulFunctionCall","src":"1864:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1855:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1920:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1893:26:17"},"nodeType":"YulFunctionCall","src":"1893:33:17"},"nodeType":"YulExpressionStatement","src":"1893:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1823:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1831:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1839:5:17","type":""}],"src":"1793:139:17"},{"body":{"nodeType":"YulBlock","src":"2029:399:17","statements":[{"body":{"nodeType":"YulBlock","src":"2075:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2077:77:17"},"nodeType":"YulFunctionCall","src":"2077:79:17"},"nodeType":"YulExpressionStatement","src":"2077:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2050:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2059:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2046:3:17"},"nodeType":"YulFunctionCall","src":"2046:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2071:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2042:3:17"},"nodeType":"YulFunctionCall","src":"2042:32:17"},"nodeType":"YulIf","src":"2039:119:17"},{"nodeType":"YulBlock","src":"2168:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2183:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2197:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2187:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2212:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2255:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2266:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2251:3:17"},"nodeType":"YulFunctionCall","src":"2251:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2275:7:17"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"2222:28:17"},"nodeType":"YulFunctionCall","src":"2222:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2212:6:17"}]}]},{"nodeType":"YulBlock","src":"2303:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2318:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2332:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2322:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2348:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2383:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2394:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2379:3:17"},"nodeType":"YulFunctionCall","src":"2379:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2403:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2358:20:17"},"nodeType":"YulFunctionCall","src":"2358:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2348:6:17"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1991:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2002:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2014:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2022:6:17","type":""}],"src":"1938:490:17"},{"body":{"nodeType":"YulBlock","src":"2479:51:17","statements":[{"nodeType":"YulAssignment","src":"2489:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2518:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2500:17:17"},"nodeType":"YulFunctionCall","src":"2500:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2489:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2461:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2471:7:17","type":""}],"src":"2434:96:17"},{"body":{"nodeType":"YulBlock","src":"2601:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2618:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2641:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2623:17:17"},"nodeType":"YulFunctionCall","src":"2623:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2611:6:17"},"nodeType":"YulFunctionCall","src":"2611:37:17"},"nodeType":"YulExpressionStatement","src":"2611:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2589:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2596:3:17","type":""}],"src":"2536:118:17"},{"body":{"nodeType":"YulBlock","src":"2758:124:17","statements":[{"nodeType":"YulAssignment","src":"2768:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2780:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2791:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2776:3:17"},"nodeType":"YulFunctionCall","src":"2776:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2768:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2848:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2861:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2872:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2857:3:17"},"nodeType":"YulFunctionCall","src":"2857:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2804:43:17"},"nodeType":"YulFunctionCall","src":"2804:71:17"},"nodeType":"YulExpressionStatement","src":"2804:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2730:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2742:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2753:4:17","type":""}],"src":"2660:222:17"},{"body":{"nodeType":"YulBlock","src":"2977:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2994:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2997:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2987:6:17"},"nodeType":"YulFunctionCall","src":"2987:12:17"},"nodeType":"YulExpressionStatement","src":"2987:12:17"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"2888:117:17"},{"body":{"nodeType":"YulBlock","src":"3124:153:17","statements":[{"body":{"nodeType":"YulBlock","src":"3164:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"3166:77:17"},"nodeType":"YulFunctionCall","src":"3166:79:17"},"nodeType":"YulExpressionStatement","src":"3166:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3145:3:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3150:6:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3141:3:17"},"nodeType":"YulFunctionCall","src":"3141:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"3159:3:17","type":"","value":"352"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3137:3:17"},"nodeType":"YulFunctionCall","src":"3137:26:17"},"nodeType":"YulIf","src":"3134:113:17"},{"nodeType":"YulAssignment","src":"3256:15:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"3265:6:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3256:5:17"}]}]},"name":"abi_decode_t_struct$_UserOperation_$3023_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3102:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3110:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3118:5:17","type":""}],"src":"3039:238:17"},{"body":{"nodeType":"YulBlock","src":"3328:32:17","statements":[{"nodeType":"YulAssignment","src":"3338:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"3349:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3338:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3310:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3320:7:17","type":""}],"src":"3283:77:17"},{"body":{"nodeType":"YulBlock","src":"3409:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"3466:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3475:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3468:6:17"},"nodeType":"YulFunctionCall","src":"3468:12:17"},"nodeType":"YulExpressionStatement","src":"3468:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3432:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3457:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3439:17:17"},"nodeType":"YulFunctionCall","src":"3439:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3429:2:17"},"nodeType":"YulFunctionCall","src":"3429:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3422:6:17"},"nodeType":"YulFunctionCall","src":"3422:43:17"},"nodeType":"YulIf","src":"3419:63:17"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3402:5:17","type":""}],"src":"3366:122:17"},{"body":{"nodeType":"YulBlock","src":"3546:87:17","statements":[{"nodeType":"YulAssignment","src":"3556:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3578:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3565:12:17"},"nodeType":"YulFunctionCall","src":"3565:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3556:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:17"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3594:26:17"},"nodeType":"YulFunctionCall","src":"3594:33:17"},"nodeType":"YulExpressionStatement","src":"3594:33:17"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3524:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3532:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3540:5:17","type":""}],"src":"3494:139:17"},{"body":{"nodeType":"YulBlock","src":"3772:712:17","statements":[{"body":{"nodeType":"YulBlock","src":"3818:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3820:77:17"},"nodeType":"YulFunctionCall","src":"3820:79:17"},"nodeType":"YulExpressionStatement","src":"3820:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3793:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3802:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3789:3:17"},"nodeType":"YulFunctionCall","src":"3789:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3814:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3785:3:17"},"nodeType":"YulFunctionCall","src":"3785:32:17"},"nodeType":"YulIf","src":"3782:119:17"},{"nodeType":"YulBlock","src":"3911:310:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3926:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3957:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3968:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3953:3:17"},"nodeType":"YulFunctionCall","src":"3953:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3940:12:17"},"nodeType":"YulFunctionCall","src":"3940:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3930:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4018:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4020:77:17"},"nodeType":"YulFunctionCall","src":"4020:79:17"},"nodeType":"YulExpressionStatement","src":"4020:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3990:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3998:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3987:2:17"},"nodeType":"YulFunctionCall","src":"3987:30:17"},"nodeType":"YulIf","src":"3984:117:17"},{"nodeType":"YulAssignment","src":"4115:96:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4183:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4194:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4179:3:17"},"nodeType":"YulFunctionCall","src":"4179:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4203:7:17"}],"functionName":{"name":"abi_decode_t_struct$_UserOperation_$3023_calldata_ptr","nodeType":"YulIdentifier","src":"4125:53:17"},"nodeType":"YulFunctionCall","src":"4125:86:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4115:6:17"}]}]},{"nodeType":"YulBlock","src":"4231:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4246:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4260:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4250:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4276:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:17"},"nodeType":"YulFunctionCall","src":"4307:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4286:20:17"},"nodeType":"YulFunctionCall","src":"4286:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4276:6:17"}]}]},{"nodeType":"YulBlock","src":"4359:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4374:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4388:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4378:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4404:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4439:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4450:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4435:3:17"},"nodeType":"YulFunctionCall","src":"4435:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4459:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4414:20:17"},"nodeType":"YulFunctionCall","src":"4414:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4404:6:17"}]}]}]},"name":"abi_decode_tuple_t_struct$_UserOperation_$3023_calldata_ptrt_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3726:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3737:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3749:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3757:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3765:6:17","type":""}],"src":"3639:845:17"},{"body":{"nodeType":"YulBlock","src":"4548:40:17","statements":[{"nodeType":"YulAssignment","src":"4559:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4575:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4569:5:17"},"nodeType":"YulFunctionCall","src":"4569:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4559:6:17"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4531:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4541:6:17","type":""}],"src":"4490:98:17"},{"body":{"nodeType":"YulBlock","src":"4689:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4706:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4711:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4699:6:17"},"nodeType":"YulFunctionCall","src":"4699:19:17"},"nodeType":"YulExpressionStatement","src":"4699:19:17"},{"nodeType":"YulAssignment","src":"4727:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4746:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4751:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4742:3:17"},"nodeType":"YulFunctionCall","src":"4742:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4727:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4661:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4666:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4677:11:17","type":""}],"src":"4594:168:17"},{"body":{"nodeType":"YulBlock","src":"4830:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4840:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4849:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4844:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4909:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4934:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"4939:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4930:3:17"},"nodeType":"YulFunctionCall","src":"4930:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4953:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"4958:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4949:3:17"},"nodeType":"YulFunctionCall","src":"4949:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4943:5:17"},"nodeType":"YulFunctionCall","src":"4943:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4923:6:17"},"nodeType":"YulFunctionCall","src":"4923:39:17"},"nodeType":"YulExpressionStatement","src":"4923:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4870:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"4873:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4867:2:17"},"nodeType":"YulFunctionCall","src":"4867:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4881:19:17","statements":[{"nodeType":"YulAssignment","src":"4883:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4892:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"4895:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4888:3:17"},"nodeType":"YulFunctionCall","src":"4888:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4883:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"4863:3:17","statements":[]},"src":"4859:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4992:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4997:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4988:3:17"},"nodeType":"YulFunctionCall","src":"4988:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"5006:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4981:6:17"},"nodeType":"YulFunctionCall","src":"4981:27:17"},"nodeType":"YulExpressionStatement","src":"4981:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4812:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4817:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4822:6:17","type":""}],"src":"4768:246:17"},{"body":{"nodeType":"YulBlock","src":"5068:54:17","statements":[{"nodeType":"YulAssignment","src":"5078:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5096:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5103:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:17"},"nodeType":"YulFunctionCall","src":"5092:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5112:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5108:3:17"},"nodeType":"YulFunctionCall","src":"5108:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5088:3:17"},"nodeType":"YulFunctionCall","src":"5088:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5078:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5051:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5061:6:17","type":""}],"src":"5020:102:17"},{"body":{"nodeType":"YulBlock","src":"5218:283:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5228:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5274:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5242:31:17"},"nodeType":"YulFunctionCall","src":"5242:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5232:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5289:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5354:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5359:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5296:57:17"},"nodeType":"YulFunctionCall","src":"5296:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5289:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5414:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5421:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5410:3:17"},"nodeType":"YulFunctionCall","src":"5410:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"5428:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5433:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5375:34:17"},"nodeType":"YulFunctionCall","src":"5375:65:17"},"nodeType":"YulExpressionStatement","src":"5375:65:17"},{"nodeType":"YulAssignment","src":"5449:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5460:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5487:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5465:21:17"},"nodeType":"YulFunctionCall","src":"5465:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5456:3:17"},"nodeType":"YulFunctionCall","src":"5456:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5449:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5199:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5206:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5214:3:17","type":""}],"src":"5128:373:17"},{"body":{"nodeType":"YulBlock","src":"5572:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5589:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5612:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5594:17:17"},"nodeType":"YulFunctionCall","src":"5594:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5582:6:17"},"nodeType":"YulFunctionCall","src":"5582:37:17"},"nodeType":"YulExpressionStatement","src":"5582:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5560:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5567:3:17","type":""}],"src":"5507:118:17"},{"body":{"nodeType":"YulBlock","src":"5775:275:17","statements":[{"nodeType":"YulAssignment","src":"5785:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5797:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5808:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5793:3:17"},"nodeType":"YulFunctionCall","src":"5793:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5785:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5832:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5843:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5828:3:17"},"nodeType":"YulFunctionCall","src":"5828:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5851:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5857:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5847:3:17"},"nodeType":"YulFunctionCall","src":"5847:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5821:6:17"},"nodeType":"YulFunctionCall","src":"5821:47:17"},"nodeType":"YulExpressionStatement","src":"5821:47:17"},{"nodeType":"YulAssignment","src":"5877:84:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5947:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"5956:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5885:61:17"},"nodeType":"YulFunctionCall","src":"5885:76:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5877:4:17"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6015:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6028:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6039:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6024:3:17"},"nodeType":"YulFunctionCall","src":"6024:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5971:43:17"},"nodeType":"YulFunctionCall","src":"5971:72:17"},"nodeType":"YulExpressionStatement","src":"5971:72:17"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5739:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5751:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5759:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5770:4:17","type":""}],"src":"5631:419:17"},{"body":{"nodeType":"YulBlock","src":"6099:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"6156:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6165:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6168:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6158:6:17"},"nodeType":"YulFunctionCall","src":"6158:12:17"},"nodeType":"YulExpressionStatement","src":"6158:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6122:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6147:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6129:17:17"},"nodeType":"YulFunctionCall","src":"6129:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6119:2:17"},"nodeType":"YulFunctionCall","src":"6119:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6112:6:17"},"nodeType":"YulFunctionCall","src":"6112:43:17"},"nodeType":"YulIf","src":"6109:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6092:5:17","type":""}],"src":"6056:122:17"},{"body":{"nodeType":"YulBlock","src":"6236:87:17","statements":[{"nodeType":"YulAssignment","src":"6246:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6268:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6255:12:17"},"nodeType":"YulFunctionCall","src":"6255:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6246:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6311:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"6284:26:17"},"nodeType":"YulFunctionCall","src":"6284:33:17"},"nodeType":"YulExpressionStatement","src":"6284:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6214:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6222:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6230:5:17","type":""}],"src":"6184:139:17"},{"body":{"nodeType":"YulBlock","src":"6395:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"6441:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6443:77:17"},"nodeType":"YulFunctionCall","src":"6443:79:17"},"nodeType":"YulExpressionStatement","src":"6443:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6416:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6425:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6412:3:17"},"nodeType":"YulFunctionCall","src":"6412:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6437:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6408:3:17"},"nodeType":"YulFunctionCall","src":"6408:32:17"},"nodeType":"YulIf","src":"6405:119:17"},{"nodeType":"YulBlock","src":"6534:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6549:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6563:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6553:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6578:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6613:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6624:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6609:3:17"},"nodeType":"YulFunctionCall","src":"6609:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6633:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6588:20:17"},"nodeType":"YulFunctionCall","src":"6588:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6578:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6365:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6376:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6388:6:17","type":""}],"src":"6329:329:17"},{"body":{"nodeType":"YulBlock","src":"6753:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6770:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6773:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6763:6:17"},"nodeType":"YulFunctionCall","src":"6763:12:17"},"nodeType":"YulExpressionStatement","src":"6763:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6664:117:17"},{"body":{"nodeType":"YulBlock","src":"6876:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6893:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6896:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6886:6:17"},"nodeType":"YulFunctionCall","src":"6886:12:17"},"nodeType":"YulExpressionStatement","src":"6886:12:17"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"6787:117:17"},{"body":{"nodeType":"YulBlock","src":"6999:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7016:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7019:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7009:6:17"},"nodeType":"YulFunctionCall","src":"7009:12:17"},"nodeType":"YulExpressionStatement","src":"7009:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6910:117:17"},{"body":{"nodeType":"YulBlock","src":"7120:478:17","statements":[{"body":{"nodeType":"YulBlock","src":"7169:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7171:77:17"},"nodeType":"YulFunctionCall","src":"7171:79:17"},"nodeType":"YulExpressionStatement","src":"7171:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7148:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7156:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7144:3:17"},"nodeType":"YulFunctionCall","src":"7144:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"7163:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7140:3:17"},"nodeType":"YulFunctionCall","src":"7140:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7133:6:17"},"nodeType":"YulFunctionCall","src":"7133:35:17"},"nodeType":"YulIf","src":"7130:122:17"},{"nodeType":"YulAssignment","src":"7261:30:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7284:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7271:12:17"},"nodeType":"YulFunctionCall","src":"7271:20:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7261:6:17"}]},{"body":{"nodeType":"YulBlock","src":"7334:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"7336:77:17"},"nodeType":"YulFunctionCall","src":"7336:79:17"},"nodeType":"YulExpressionStatement","src":"7336:79:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7306:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7314:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7303:2:17"},"nodeType":"YulFunctionCall","src":"7303:30:17"},"nodeType":"YulIf","src":"7300:117:17"},{"nodeType":"YulAssignment","src":"7426:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7442:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7450:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7438:3:17"},"nodeType":"YulFunctionCall","src":"7438:17:17"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"7426:8:17"}]},{"body":{"nodeType":"YulBlock","src":"7509:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7511:77:17"},"nodeType":"YulFunctionCall","src":"7511:79:17"},"nodeType":"YulExpressionStatement","src":"7511:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"7474:8:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7488:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7496:4:17","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7484:3:17"},"nodeType":"YulFunctionCall","src":"7484:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7470:3:17"},"nodeType":"YulFunctionCall","src":"7470:32:17"},{"name":"end","nodeType":"YulIdentifier","src":"7504:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7467:2:17"},"nodeType":"YulFunctionCall","src":"7467:41:17"},"nodeType":"YulIf","src":"7464:128:17"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7087:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"7095:3:17","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"7103:8:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"7113:6:17","type":""}],"src":"7046:552:17"},{"body":{"nodeType":"YulBlock","src":"7689:442:17","statements":[{"body":{"nodeType":"YulBlock","src":"7735:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7737:77:17"},"nodeType":"YulFunctionCall","src":"7737:79:17"},"nodeType":"YulExpressionStatement","src":"7737:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7710:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7719:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7706:3:17"},"nodeType":"YulFunctionCall","src":"7706:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7731:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7702:3:17"},"nodeType":"YulFunctionCall","src":"7702:32:17"},"nodeType":"YulIf","src":"7699:119:17"},{"nodeType":"YulBlock","src":"7828:296:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7843:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7874:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7885:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7870:3:17"},"nodeType":"YulFunctionCall","src":"7870:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7857:12:17"},"nodeType":"YulFunctionCall","src":"7857:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7847:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7935:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7937:77:17"},"nodeType":"YulFunctionCall","src":"7937:79:17"},"nodeType":"YulExpressionStatement","src":"7937:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7907:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7915:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7904:2:17"},"nodeType":"YulFunctionCall","src":"7904:30:17"},"nodeType":"YulIf","src":"7901:117:17"},{"nodeType":"YulAssignment","src":"8032:82:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8086:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8097:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8082:3:17"},"nodeType":"YulFunctionCall","src":"8082:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8106:7:17"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"8050:31:17"},"nodeType":"YulFunctionCall","src":"8050:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8032:6:17"},{"name":"value1","nodeType":"YulIdentifier","src":"8040:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7651:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7662:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7674:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7682:6:17","type":""}],"src":"7604:527:17"},{"body":{"nodeType":"YulBlock","src":"8181:53:17","statements":[{"nodeType":"YulAssignment","src":"8191:37:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8206:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8213:14:17","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8202:3:17"},"nodeType":"YulFunctionCall","src":"8202:26:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8191:7:17"}]}]},"name":"cleanup_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8163:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8173:7:17","type":""}],"src":"8137:97:17"},{"body":{"nodeType":"YulBlock","src":"8303:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8320:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8342:5:17"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"8325:16:17"},"nodeType":"YulFunctionCall","src":"8325:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8313:6:17"},"nodeType":"YulFunctionCall","src":"8313:36:17"},"nodeType":"YulExpressionStatement","src":"8313:36:17"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8291:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8298:3:17","type":""}],"src":"8240:115:17"},{"body":{"nodeType":"YulBlock","src":"8425:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8448:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"8453:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8458:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8435:12:17"},"nodeType":"YulFunctionCall","src":"8435:30:17"},"nodeType":"YulExpressionStatement","src":"8435:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8485:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8490:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8481:3:17"},"nodeType":"YulFunctionCall","src":"8481:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"8499:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8474:6:17"},"nodeType":"YulFunctionCall","src":"8474:27:17"},"nodeType":"YulExpressionStatement","src":"8474:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8407:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8412:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8417:6:17","type":""}],"src":"8361:146:17"},{"body":{"nodeType":"YulBlock","src":"8635:214:17","statements":[{"nodeType":"YulAssignment","src":"8645:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8710:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8715:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8652:57:17"},"nodeType":"YulFunctionCall","src":"8652:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8645:3:17"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8769:5:17"},{"name":"pos","nodeType":"YulIdentifier","src":"8776:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8781:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8732:36:17"},"nodeType":"YulFunctionCall","src":"8732:56:17"},"nodeType":"YulExpressionStatement","src":"8732:56:17"},{"nodeType":"YulAssignment","src":"8797:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8808:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8835:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8813:21:17"},"nodeType":"YulFunctionCall","src":"8813:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8804:3:17"},"nodeType":"YulFunctionCall","src":"8804:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8797:3:17"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"8608:5:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8615:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8623:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8631:3:17","type":""}],"src":"8535:314:17"},{"body":{"nodeType":"YulBlock","src":"9033:363:17","statements":[{"nodeType":"YulAssignment","src":"9043:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9055:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9066:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9051:3:17"},"nodeType":"YulFunctionCall","src":"9051:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9043:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9121:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9134:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9145:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9130:3:17"},"nodeType":"YulFunctionCall","src":"9130:17:17"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"9079:41:17"},"nodeType":"YulFunctionCall","src":"9079:69:17"},"nodeType":"YulExpressionStatement","src":"9079:69:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9200:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9213:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9224:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9209:3:17"},"nodeType":"YulFunctionCall","src":"9209:18:17"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"9158:41:17"},"nodeType":"YulFunctionCall","src":"9158:70:17"},"nodeType":"YulExpressionStatement","src":"9158:70:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9249:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9260:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9245:3:17"},"nodeType":"YulFunctionCall","src":"9245:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9269:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9275:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9265:3:17"},"nodeType":"YulFunctionCall","src":"9265:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9238:6:17"},"nodeType":"YulFunctionCall","src":"9238:48:17"},"nodeType":"YulExpressionStatement","src":"9238:48:17"},{"nodeType":"YulAssignment","src":"9295:94:17","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9367:6:17"},{"name":"value3","nodeType":"YulIdentifier","src":"9375:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"9384:4:17"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9303:63:17"},"nodeType":"YulFunctionCall","src":"9303:86:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9295:4:17"}]}]},"name":"abi_encode_tuple_t_uint48_t_uint48_t_bytes_calldata_ptr__to_t_uint48_t_uint48_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8981:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8993:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9001:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9009:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9017:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9028:4:17","type":""}],"src":"8855:541:17"},{"body":{"nodeType":"YulBlock","src":"9444:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"9500:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9509:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9512:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9502:6:17"},"nodeType":"YulFunctionCall","src":"9502:12:17"},"nodeType":"YulExpressionStatement","src":"9502:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9467:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9491:5:17"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"9474:16:17"},"nodeType":"YulFunctionCall","src":"9474:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9464:2:17"},"nodeType":"YulFunctionCall","src":"9464:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9457:6:17"},"nodeType":"YulFunctionCall","src":"9457:42:17"},"nodeType":"YulIf","src":"9454:62:17"}]},"name":"validator_revert_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9437:5:17","type":""}],"src":"9402:120:17"},{"body":{"nodeType":"YulBlock","src":"9579:86:17","statements":[{"nodeType":"YulAssignment","src":"9589:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9611:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9598:12:17"},"nodeType":"YulFunctionCall","src":"9598:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9589:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9653:5:17"}],"functionName":{"name":"validator_revert_t_uint48","nodeType":"YulIdentifier","src":"9627:25:17"},"nodeType":"YulFunctionCall","src":"9627:32:17"},"nodeType":"YulExpressionStatement","src":"9627:32:17"}]},"name":"abi_decode_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9557:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"9565:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9573:5:17","type":""}],"src":"9528:137:17"},{"body":{"nodeType":"YulBlock","src":"9802:710:17","statements":[{"body":{"nodeType":"YulBlock","src":"9848:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9850:77:17"},"nodeType":"YulFunctionCall","src":"9850:79:17"},"nodeType":"YulExpressionStatement","src":"9850:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9823:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9832:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9819:3:17"},"nodeType":"YulFunctionCall","src":"9819:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9844:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9815:3:17"},"nodeType":"YulFunctionCall","src":"9815:32:17"},"nodeType":"YulIf","src":"9812:119:17"},{"nodeType":"YulBlock","src":"9941:310:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9956:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9987:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9998:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9983:3:17"},"nodeType":"YulFunctionCall","src":"9983:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9970:12:17"},"nodeType":"YulFunctionCall","src":"9970:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9960:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10048:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10050:77:17"},"nodeType":"YulFunctionCall","src":"10050:79:17"},"nodeType":"YulExpressionStatement","src":"10050:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10020:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10028:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10017:2:17"},"nodeType":"YulFunctionCall","src":"10017:30:17"},"nodeType":"YulIf","src":"10014:117:17"},{"nodeType":"YulAssignment","src":"10145:96:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10213:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10224:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10209:3:17"},"nodeType":"YulFunctionCall","src":"10209:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10233:7:17"}],"functionName":{"name":"abi_decode_t_struct$_UserOperation_$3023_calldata_ptr","nodeType":"YulIdentifier","src":"10155:53:17"},"nodeType":"YulFunctionCall","src":"10155:86:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10145:6:17"}]}]},{"nodeType":"YulBlock","src":"10261:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10276:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10290:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10280:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10306:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10340:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10351:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10336:3:17"},"nodeType":"YulFunctionCall","src":"10336:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10360:7:17"}],"functionName":{"name":"abi_decode_t_uint48","nodeType":"YulIdentifier","src":"10316:19:17"},"nodeType":"YulFunctionCall","src":"10316:52:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10306:6:17"}]}]},{"nodeType":"YulBlock","src":"10388:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10403:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10417:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10407:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10433:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10467:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10478:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10463:3:17"},"nodeType":"YulFunctionCall","src":"10463:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10487:7:17"}],"functionName":{"name":"abi_decode_t_uint48","nodeType":"YulIdentifier","src":"10443:19:17"},"nodeType":"YulFunctionCall","src":"10443:52:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10433:6:17"}]}]}]},"name":"abi_decode_tuple_t_struct$_UserOperation_$3023_calldata_ptrt_uint48t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9756:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9767:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9779:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9787:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9795:6:17","type":""}],"src":"9671:841:17"},{"body":{"nodeType":"YulBlock","src":"10583:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10600:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10623:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10605:17:17"},"nodeType":"YulFunctionCall","src":"10605:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10593:6:17"},"nodeType":"YulFunctionCall","src":"10593:37:17"},"nodeType":"YulExpressionStatement","src":"10593:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10571:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10578:3:17","type":""}],"src":"10518:118:17"},{"body":{"nodeType":"YulBlock","src":"10740:124:17","statements":[{"nodeType":"YulAssignment","src":"10750:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10762:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10773:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10758:3:17"},"nodeType":"YulFunctionCall","src":"10758:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10750:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10830:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10843:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10854:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10839:3:17"},"nodeType":"YulFunctionCall","src":"10839:17:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10786:43:17"},"nodeType":"YulFunctionCall","src":"10786:71:17"},"nodeType":"YulExpressionStatement","src":"10786:71:17"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10712:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10724:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10735:4:17","type":""}],"src":"10642:222:17"},{"body":{"nodeType":"YulBlock","src":"10928:56:17","statements":[{"body":{"nodeType":"YulBlock","src":"10962:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10971:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10974:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10964:6:17"},"nodeType":"YulFunctionCall","src":"10964:12:17"},"nodeType":"YulExpressionStatement","src":"10964:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10951:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"10958:1:17","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10948:2:17"},"nodeType":"YulFunctionCall","src":"10948:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10941:6:17"},"nodeType":"YulFunctionCall","src":"10941:20:17"},"nodeType":"YulIf","src":"10938:40:17"}]},"name":"validator_revert_t_enum$_PostOpMode_$2866","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10921:5:17","type":""}],"src":"10870:114:17"},{"body":{"nodeType":"YulBlock","src":"11057:102:17","statements":[{"nodeType":"YulAssignment","src":"11067:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11089:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11076:12:17"},"nodeType":"YulFunctionCall","src":"11076:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11067:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11147:5:17"}],"functionName":{"name":"validator_revert_t_enum$_PostOpMode_$2866","nodeType":"YulIdentifier","src":"11105:41:17"},"nodeType":"YulFunctionCall","src":"11105:48:17"},"nodeType":"YulExpressionStatement","src":"11105:48:17"}]},"name":"abi_decode_t_enum$_PostOpMode_$2866","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11035:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"11043:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11051:5:17","type":""}],"src":"10990:169:17"},{"body":{"nodeType":"YulBlock","src":"11299:713:17","statements":[{"body":{"nodeType":"YulBlock","src":"11345:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11347:77:17"},"nodeType":"YulFunctionCall","src":"11347:79:17"},"nodeType":"YulExpressionStatement","src":"11347:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11320:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11329:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11316:3:17"},"nodeType":"YulFunctionCall","src":"11316:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"11341:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11312:3:17"},"nodeType":"YulFunctionCall","src":"11312:32:17"},"nodeType":"YulIf","src":"11309:119:17"},{"nodeType":"YulBlock","src":"11438:132:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11453:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11467:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11457:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11482:78:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11532:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11543:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11528:3:17"},"nodeType":"YulFunctionCall","src":"11528:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11552:7:17"}],"functionName":{"name":"abi_decode_t_enum$_PostOpMode_$2866","nodeType":"YulIdentifier","src":"11492:35:17"},"nodeType":"YulFunctionCall","src":"11492:68:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11482:6:17"}]}]},{"nodeType":"YulBlock","src":"11580:297:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11595:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11626:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11637:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11622:3:17"},"nodeType":"YulFunctionCall","src":"11622:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11609:12:17"},"nodeType":"YulFunctionCall","src":"11609:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11599:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11688:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11690:77:17"},"nodeType":"YulFunctionCall","src":"11690:79:17"},"nodeType":"YulExpressionStatement","src":"11690:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11660:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11668:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11657:2:17"},"nodeType":"YulFunctionCall","src":"11657:30:17"},"nodeType":"YulIf","src":"11654:117:17"},{"nodeType":"YulAssignment","src":"11785:82:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11839:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11850:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11835:3:17"},"nodeType":"YulFunctionCall","src":"11835:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11859:7:17"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"11803:31:17"},"nodeType":"YulFunctionCall","src":"11803:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11785:6:17"},{"name":"value2","nodeType":"YulIdentifier","src":"11793:6:17"}]}]},{"nodeType":"YulBlock","src":"11887:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11902:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11916:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11906:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11932:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11967:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11978:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11963:3:17"},"nodeType":"YulFunctionCall","src":"11963:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11987:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11942:20:17"},"nodeType":"YulFunctionCall","src":"11942:53:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11932:6:17"}]}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$2866t_bytes_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11245:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11256:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11268:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11276:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11284:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11292:6:17","type":""}],"src":"11165:847:17"},{"body":{"nodeType":"YulBlock","src":"12050:28:17","statements":[{"nodeType":"YulAssignment","src":"12060:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"12067:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12060:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12036:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12046:3:17","type":""}],"src":"12018:60:17"},{"body":{"nodeType":"YulBlock","src":"12144:82:17","statements":[{"nodeType":"YulAssignment","src":"12154:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12212:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12194:17:17"},"nodeType":"YulFunctionCall","src":"12194:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12185:8:17"},"nodeType":"YulFunctionCall","src":"12185:34:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12167:17:17"},"nodeType":"YulFunctionCall","src":"12167:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12154:9:17"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12124:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12134:9:17","type":""}],"src":"12084:142:17"},{"body":{"nodeType":"YulBlock","src":"12292:66:17","statements":[{"nodeType":"YulAssignment","src":"12302:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12346:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"12315:30:17"},"nodeType":"YulFunctionCall","src":"12315:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12302:9:17"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12272:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12282:9:17","type":""}],"src":"12232:126:17"},{"body":{"nodeType":"YulBlock","src":"12444:66:17","statements":[{"nodeType":"YulAssignment","src":"12454:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12498:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"12467:30:17"},"nodeType":"YulFunctionCall","src":"12467:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12454:9:17"}]}]},"name":"convert_t_contract$_IEntryPoint_$2839_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12424:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12434:9:17","type":""}],"src":"12364:146:17"},{"body":{"nodeType":"YulBlock","src":"12601:86:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12618:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12674:5:17"}],"functionName":{"name":"convert_t_contract$_IEntryPoint_$2839_to_t_address","nodeType":"YulIdentifier","src":"12623:50:17"},"nodeType":"YulFunctionCall","src":"12623:57:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12611:6:17"},"nodeType":"YulFunctionCall","src":"12611:70:17"},"nodeType":"YulExpressionStatement","src":"12611:70:17"}]},"name":"abi_encode_t_contract$_IEntryPoint_$2839_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12589:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12596:3:17","type":""}],"src":"12516:171:17"},{"body":{"nodeType":"YulBlock","src":"12811:144:17","statements":[{"nodeType":"YulAssignment","src":"12821:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12833:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12844:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12829:3:17"},"nodeType":"YulFunctionCall","src":"12829:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12821:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12921:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12934:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12945:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12930:3:17"},"nodeType":"YulFunctionCall","src":"12930:17:17"}],"functionName":{"name":"abi_encode_t_contract$_IEntryPoint_$2839_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12857:63:17"},"nodeType":"YulFunctionCall","src":"12857:91:17"},"nodeType":"YulExpressionStatement","src":"12857:91:17"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$2839__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12783:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12795:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12806:4:17","type":""}],"src":"12693:262:17"},{"body":{"nodeType":"YulBlock","src":"13035:271:17","statements":[{"body":{"nodeType":"YulBlock","src":"13081:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13083:77:17"},"nodeType":"YulFunctionCall","src":"13083:79:17"},"nodeType":"YulExpressionStatement","src":"13083:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13056:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13065:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13052:3:17"},"nodeType":"YulFunctionCall","src":"13052:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"13077:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13048:3:17"},"nodeType":"YulFunctionCall","src":"13048:32:17"},"nodeType":"YulIf","src":"13045:119:17"},{"nodeType":"YulBlock","src":"13174:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13189:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13203:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13193:6:17","type":""}]},{"nodeType":"YulAssignment","src":"13218:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13261:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"13272:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13257:3:17"},"nodeType":"YulFunctionCall","src":"13257:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13281:7:17"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"13228:28:17"},"nodeType":"YulFunctionCall","src":"13228:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13218:6:17"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13005:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13016:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13028:6:17","type":""}],"src":"12961:345:17"},{"body":{"nodeType":"YulBlock","src":"13410:124:17","statements":[{"nodeType":"YulAssignment","src":"13420:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13432:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13443:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13428:3:17"},"nodeType":"YulFunctionCall","src":"13428:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13420:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13500:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13513:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13524:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13509:3:17"},"nodeType":"YulFunctionCall","src":"13509:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13456:43:17"},"nodeType":"YulFunctionCall","src":"13456:71:17"},"nodeType":"YulExpressionStatement","src":"13456:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13382:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13394:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13405:4:17","type":""}],"src":"13312:222:17"},{"body":{"nodeType":"YulBlock","src":"13603:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13620:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13642:5:17"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"13625:16:17"},"nodeType":"YulFunctionCall","src":"13625:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13613:6:17"},"nodeType":"YulFunctionCall","src":"13613:36:17"},"nodeType":"YulExpressionStatement","src":"13613:36:17"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13591:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13598:3:17","type":""}],"src":"13540:115:17"},{"body":{"nodeType":"YulBlock","src":"13757:122:17","statements":[{"nodeType":"YulAssignment","src":"13767:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13779:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13790:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13775:3:17"},"nodeType":"YulFunctionCall","src":"13775:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13767:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13845:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13858:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13869:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13854:3:17"},"nodeType":"YulFunctionCall","src":"13854:17:17"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"13803:41:17"},"nodeType":"YulFunctionCall","src":"13803:69:17"},"nodeType":"YulExpressionStatement","src":"13803:69:17"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13729:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13741:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13752:4:17","type":""}],"src":"13661:218:17"},{"body":{"nodeType":"YulBlock","src":"13966:61:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13983:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14014:5:17"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"13988:25:17"},"nodeType":"YulFunctionCall","src":"13988:32:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13976:6:17"},"nodeType":"YulFunctionCall","src":"13976:45:17"},"nodeType":"YulExpressionStatement","src":"13976:45:17"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13954:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13961:3:17","type":""}],"src":"13885:142:17"},{"body":{"nodeType":"YulBlock","src":"14175:222:17","statements":[{"nodeType":"YulAssignment","src":"14185:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14197:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14208:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14193:3:17"},"nodeType":"YulFunctionCall","src":"14193:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14185:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14281:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14294:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14305:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14290:3:17"},"nodeType":"YulFunctionCall","src":"14290:17:17"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"14221:59:17"},"nodeType":"YulFunctionCall","src":"14221:87:17"},"nodeType":"YulExpressionStatement","src":"14221:87:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14362:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14375:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14386:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14371:3:17"},"nodeType":"YulFunctionCall","src":"14371:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14318:43:17"},"nodeType":"YulFunctionCall","src":"14318:72:17"},"nodeType":"YulExpressionStatement","src":"14318:72:17"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14139:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14151:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14159:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14170:4:17","type":""}],"src":"14033:364:17"},{"body":{"nodeType":"YulBlock","src":"14499:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14516:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"14521:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14509:6:17"},"nodeType":"YulFunctionCall","src":"14509:19:17"},"nodeType":"YulExpressionStatement","src":"14509:19:17"},{"nodeType":"YulAssignment","src":"14537:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14556:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14561:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14552:3:17"},"nodeType":"YulFunctionCall","src":"14552:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14537:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14471:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"14476:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14487:11:17","type":""}],"src":"14403:169:17"},{"body":{"nodeType":"YulBlock","src":"14684:54:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14706:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14714:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14702:3:17"},"nodeType":"YulFunctionCall","src":"14702:14:17"},{"hexValue":"6f6e6c792061646d696e","kind":"string","nodeType":"YulLiteral","src":"14718:12:17","type":"","value":"only admin"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14695:6:17"},"nodeType":"YulFunctionCall","src":"14695:36:17"},"nodeType":"YulExpressionStatement","src":"14695:36:17"}]},"name":"store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14676:6:17","type":""}],"src":"14578:160:17"},{"body":{"nodeType":"YulBlock","src":"14890:220:17","statements":[{"nodeType":"YulAssignment","src":"14900:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14966:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14971:2:17","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14907:58:17"},"nodeType":"YulFunctionCall","src":"14907:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14900:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15072:3:17"}],"functionName":{"name":"store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d","nodeType":"YulIdentifier","src":"14983:88:17"},"nodeType":"YulFunctionCall","src":"14983:93:17"},"nodeType":"YulExpressionStatement","src":"14983:93:17"},{"nodeType":"YulAssignment","src":"15085:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15096:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15101:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15092:3:17"},"nodeType":"YulFunctionCall","src":"15092:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15085:3:17"}]}]},"name":"abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14878:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14886:3:17","type":""}],"src":"14744:366:17"},{"body":{"nodeType":"YulBlock","src":"15287:248:17","statements":[{"nodeType":"YulAssignment","src":"15297:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15309:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15320:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15305:3:17"},"nodeType":"YulFunctionCall","src":"15305:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15297:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15344:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15355:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15340:3:17"},"nodeType":"YulFunctionCall","src":"15340:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15363:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15369:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15359:3:17"},"nodeType":"YulFunctionCall","src":"15359:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15333:6:17"},"nodeType":"YulFunctionCall","src":"15333:47:17"},"nodeType":"YulExpressionStatement","src":"15333:47:17"},{"nodeType":"YulAssignment","src":"15389:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15523:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15397:124:17"},"nodeType":"YulFunctionCall","src":"15397:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15389:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15267:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15282:4:17","type":""}],"src":"15116:419:17"},{"body":{"nodeType":"YulBlock","src":"15630:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15647:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15650:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15640:6:17"},"nodeType":"YulFunctionCall","src":"15640:12:17"},"nodeType":"YulExpressionStatement","src":"15640:12:17"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"15541:117:17"},{"body":{"nodeType":"YulBlock","src":"15753:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15770:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15773:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15763:6:17"},"nodeType":"YulFunctionCall","src":"15763:12:17"},"nodeType":"YulExpressionStatement","src":"15763:12:17"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"15664:117:17"},{"body":{"nodeType":"YulBlock","src":"15876:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15893:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15896:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15886:6:17"},"nodeType":"YulFunctionCall","src":"15886:12:17"},"nodeType":"YulExpressionStatement","src":"15886:12:17"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"15787:117:17"},{"body":{"nodeType":"YulBlock","src":"16000:634:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16010:51:17","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"16049:11:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16036:12:17"},"nodeType":"YulFunctionCall","src":"16036:25:17"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"16014:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"16155:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"16157:77:17"},"nodeType":"YulFunctionCall","src":"16157:79:17"},"nodeType":"YulExpressionStatement","src":"16157:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"16084:18:17"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"16112:12:17"},"nodeType":"YulFunctionCall","src":"16112:14:17"},{"name":"base_ref","nodeType":"YulIdentifier","src":"16128:8:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16108:3:17"},"nodeType":"YulFunctionCall","src":"16108:29:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16143:4:17","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"16149:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16139:3:17"},"nodeType":"YulFunctionCall","src":"16139:12:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16104:3:17"},"nodeType":"YulFunctionCall","src":"16104:48:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16080:3:17"},"nodeType":"YulFunctionCall","src":"16080:73:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16073:6:17"},"nodeType":"YulFunctionCall","src":"16073:81:17"},"nodeType":"YulIf","src":"16070:168:17"},{"nodeType":"YulAssignment","src":"16247:41:17","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"16259:8:17"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"16269:18:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16255:3:17"},"nodeType":"YulFunctionCall","src":"16255:33:17"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"16247:4:17"}]},{"nodeType":"YulAssignment","src":"16298:28:17","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"16321:4:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16308:12:17"},"nodeType":"YulFunctionCall","src":"16308:18:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16298:6:17"}]},{"body":{"nodeType":"YulBlock","src":"16369:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"16371:77:17"},"nodeType":"YulFunctionCall","src":"16371:79:17"},"nodeType":"YulExpressionStatement","src":"16371:79:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16341:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16349:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16338:2:17"},"nodeType":"YulFunctionCall","src":"16338:30:17"},"nodeType":"YulIf","src":"16335:117:17"},{"nodeType":"YulAssignment","src":"16461:21:17","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"16473:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"16479:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16469:3:17"},"nodeType":"YulFunctionCall","src":"16469:13:17"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"16461:4:17"}]},{"body":{"nodeType":"YulBlock","src":"16544:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"16546:77:17"},"nodeType":"YulFunctionCall","src":"16546:79:17"},"nodeType":"YulExpressionStatement","src":"16546:79:17"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"16498:4:17"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"16508:12:17"},"nodeType":"YulFunctionCall","src":"16508:14:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16528:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16536:4:17","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16524:3:17"},"nodeType":"YulFunctionCall","src":"16524:17:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16504:3:17"},"nodeType":"YulFunctionCall","src":"16504:38:17"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"16494:3:17"},"nodeType":"YulFunctionCall","src":"16494:49:17"},"nodeType":"YulIf","src":"16491:136:17"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"15961:8:17","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"15971:11:17","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"15987:4:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"15993:6:17","type":""}],"src":"15910:724:17"},{"body":{"nodeType":"YulBlock","src":"16746:145:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16768:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16776:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16764:3:17"},"nodeType":"YulFunctionCall","src":"16764:14:17"},{"hexValue":"566572696679696e675061796d61737465723a20696e76616c6964207369676e","kind":"string","nodeType":"YulLiteral","src":"16780:34:17","type":"","value":"VerifyingPaymaster: invalid sign"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16757:6:17"},"nodeType":"YulFunctionCall","src":"16757:58:17"},"nodeType":"YulExpressionStatement","src":"16757:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16836:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16844:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16832:3:17"},"nodeType":"YulFunctionCall","src":"16832:15:17"},{"hexValue":"6174757265206c656e67746820696e207061796d6173746572416e6444617461","kind":"string","nodeType":"YulLiteral","src":"16849:34:17","type":"","value":"ature length in paymasterAndData"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16825:6:17"},"nodeType":"YulFunctionCall","src":"16825:59:17"},"nodeType":"YulExpressionStatement","src":"16825:59:17"}]},"name":"store_literal_in_memory_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16738:6:17","type":""}],"src":"16640:251:17"},{"body":{"nodeType":"YulBlock","src":"17043:220:17","statements":[{"nodeType":"YulAssignment","src":"17053:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17119:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17124:2:17","type":"","value":"64"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17060:58:17"},"nodeType":"YulFunctionCall","src":"17060:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17053:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17225:3:17"}],"functionName":{"name":"store_literal_in_memory_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7","nodeType":"YulIdentifier","src":"17136:88:17"},"nodeType":"YulFunctionCall","src":"17136:93:17"},"nodeType":"YulExpressionStatement","src":"17136:93:17"},{"nodeType":"YulAssignment","src":"17238:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17249:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17254:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17245:3:17"},"nodeType":"YulFunctionCall","src":"17245:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17238:3:17"}]}]},"name":"abi_encode_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17031:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17039:3:17","type":""}],"src":"16897:366:17"},{"body":{"nodeType":"YulBlock","src":"17440:248:17","statements":[{"nodeType":"YulAssignment","src":"17450:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17462:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17473:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17458:3:17"},"nodeType":"YulFunctionCall","src":"17458:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17450:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17497:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17508:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17493:3:17"},"nodeType":"YulFunctionCall","src":"17493:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17516:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17522:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17512:3:17"},"nodeType":"YulFunctionCall","src":"17512:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17486:6:17"},"nodeType":"YulFunctionCall","src":"17486:47:17"},"nodeType":"YulExpressionStatement","src":"17486:47:17"},{"nodeType":"YulAssignment","src":"17542:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17676:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17550:124:17"},"nodeType":"YulFunctionCall","src":"17550:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17542:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17420:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17435:4:17","type":""}],"src":"17269:419:17"},{"body":{"nodeType":"YulBlock","src":"17800:51:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17822:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17830:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17818:3:17"},"nodeType":"YulFunctionCall","src":"17818:14:17"},{"hexValue":"65727220736967","kind":"string","nodeType":"YulLiteral","src":"17834:9:17","type":"","value":"err sig"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17811:6:17"},"nodeType":"YulFunctionCall","src":"17811:33:17"},"nodeType":"YulExpressionStatement","src":"17811:33:17"}]},"name":"store_literal_in_memory_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17792:6:17","type":""}],"src":"17694:157:17"},{"body":{"nodeType":"YulBlock","src":"18003:219:17","statements":[{"nodeType":"YulAssignment","src":"18013:73:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18079:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18084:1:17","type":"","value":"7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18020:58:17"},"nodeType":"YulFunctionCall","src":"18020:66:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18013:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18184:3:17"}],"functionName":{"name":"store_literal_in_memory_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f","nodeType":"YulIdentifier","src":"18095:88:17"},"nodeType":"YulFunctionCall","src":"18095:93:17"},"nodeType":"YulExpressionStatement","src":"18095:93:17"},{"nodeType":"YulAssignment","src":"18197:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18208:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18213:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18204:3:17"},"nodeType":"YulFunctionCall","src":"18204:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18197:3:17"}]}]},"name":"abi_encode_t_stringliteral_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17991:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17999:3:17","type":""}],"src":"17857:365:17"},{"body":{"nodeType":"YulBlock","src":"18399:248:17","statements":[{"nodeType":"YulAssignment","src":"18409:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18421:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18432:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18417:3:17"},"nodeType":"YulFunctionCall","src":"18417:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18409:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18456:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18467:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18452:3:17"},"nodeType":"YulFunctionCall","src":"18452:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18475:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"18481:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18471:3:17"},"nodeType":"YulFunctionCall","src":"18471:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18445:6:17"},"nodeType":"YulFunctionCall","src":"18445:47:17"},"nodeType":"YulExpressionStatement","src":"18445:47:17"},{"nodeType":"YulAssignment","src":"18501:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18635:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18509:124:17"},"nodeType":"YulFunctionCall","src":"18509:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18501:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18379:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18394:4:17","type":""}],"src":"18228:419:17"},{"body":{"nodeType":"YulBlock","src":"18742:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18759:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18762:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18752:6:17"},"nodeType":"YulFunctionCall","src":"18752:12:17"},"nodeType":"YulExpressionStatement","src":"18752:12:17"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulFunctionDefinition","src":"18653:117:17"},{"body":{"nodeType":"YulBlock","src":"18865:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18882:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18885:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18875:6:17"},"nodeType":"YulFunctionCall","src":"18875:12:17"},"nodeType":"YulExpressionStatement","src":"18875:12:17"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulFunctionDefinition","src":"18776:117:17"},{"body":{"nodeType":"YulBlock","src":"19025:343:17","statements":[{"body":{"nodeType":"YulBlock","src":"19063:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulIdentifier","src":"19065:77:17"},"nodeType":"YulFunctionCall","src":"19065:79:17"},"nodeType":"YulExpressionStatement","src":"19065:79:17"}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19041:10:17"},{"name":"endIndex","nodeType":"YulIdentifier","src":"19053:8:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19038:2:17"},"nodeType":"YulFunctionCall","src":"19038:24:17"},"nodeType":"YulIf","src":"19035:111:17"},{"body":{"nodeType":"YulBlock","src":"19179:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulIdentifier","src":"19181:77:17"},"nodeType":"YulFunctionCall","src":"19181:79:17"},"nodeType":"YulExpressionStatement","src":"19181:79:17"}]},"condition":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"19161:8:17"},{"name":"length","nodeType":"YulIdentifier","src":"19171:6:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19158:2:17"},"nodeType":"YulFunctionCall","src":"19158:20:17"},"nodeType":"YulIf","src":"19155:107:17"},{"nodeType":"YulAssignment","src":"19271:44:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19288:6:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19300:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"19312:1:17","type":"","value":"1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19296:3:17"},"nodeType":"YulFunctionCall","src":"19296:18:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19284:3:17"},"nodeType":"YulFunctionCall","src":"19284:31:17"},"variableNames":[{"name":"offsetOut","nodeType":"YulIdentifier","src":"19271:9:17"}]},{"nodeType":"YulAssignment","src":"19324:38:17","value":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"19341:8:17"},{"name":"startIndex","nodeType":"YulIdentifier","src":"19351:10:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19337:3:17"},"nodeType":"YulFunctionCall","src":"19337:25:17"},"variableNames":[{"name":"lengthOut","nodeType":"YulIdentifier","src":"19324:9:17"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18963:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"18971:6:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"18979:10:17","type":""},{"name":"endIndex","nodeType":"YulTypedName","src":"18991:8:17","type":""}],"returnVariables":[{"name":"offsetOut","nodeType":"YulTypedName","src":"19004:9:17","type":""},{"name":"lengthOut","nodeType":"YulTypedName","src":"19015:9:17","type":""}],"src":"18899:469:17"},{"body":{"nodeType":"YulBlock","src":"19455:389:17","statements":[{"body":{"nodeType":"YulBlock","src":"19501:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19503:77:17"},"nodeType":"YulFunctionCall","src":"19503:79:17"},"nodeType":"YulExpressionStatement","src":"19503:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19476:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"19485:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19472:3:17"},"nodeType":"YulFunctionCall","src":"19472:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"19497:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19468:3:17"},"nodeType":"YulFunctionCall","src":"19468:32:17"},"nodeType":"YulIf","src":"19465:119:17"},{"nodeType":"YulBlock","src":"19594:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19609:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"19623:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19613:6:17","type":""}]},{"nodeType":"YulAssignment","src":"19638:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19672:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19683:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19668:3:17"},"nodeType":"YulFunctionCall","src":"19668:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19692:7:17"}],"functionName":{"name":"abi_decode_t_uint48","nodeType":"YulIdentifier","src":"19648:19:17"},"nodeType":"YulFunctionCall","src":"19648:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19638:6:17"}]}]},{"nodeType":"YulBlock","src":"19720:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19735:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"19749:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19739:6:17","type":""}]},{"nodeType":"YulAssignment","src":"19765:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19799:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19810:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19795:3:17"},"nodeType":"YulFunctionCall","src":"19795:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19819:7:17"}],"functionName":{"name":"abi_decode_t_uint48","nodeType":"YulIdentifier","src":"19775:19:17"},"nodeType":"YulFunctionCall","src":"19775:52:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19765:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint48t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19417:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19428:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19440:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19448:6:17","type":""}],"src":"19374:470:17"},{"body":{"nodeType":"YulBlock","src":"19963:34:17","statements":[{"nodeType":"YulAssignment","src":"19973:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"19988:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19973:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19935:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"19940:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19951:11:17","type":""}],"src":"19850:147:17"},{"body":{"nodeType":"YulBlock","src":"20111:278:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20121:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20167:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"20135:31:17"},"nodeType":"YulFunctionCall","src":"20135:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20125:6:17","type":""}]},{"nodeType":"YulAssignment","src":"20182:95:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20265:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"20270:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20189:75:17"},"nodeType":"YulFunctionCall","src":"20189:88:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20182:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20325:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20332:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20321:3:17"},"nodeType":"YulFunctionCall","src":"20321:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"20339:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"20344:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"20286:34:17"},"nodeType":"YulFunctionCall","src":"20286:65:17"},"nodeType":"YulExpressionStatement","src":"20286:65:17"},{"nodeType":"YulAssignment","src":"20360:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20371:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"20376:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20367:3:17"},"nodeType":"YulFunctionCall","src":"20367:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20360:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20092:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20099:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20107:3:17","type":""}],"src":"20003:386:17"},{"body":{"nodeType":"YulBlock","src":"20442:32:17","statements":[{"nodeType":"YulAssignment","src":"20452:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"20463:5:17"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"20452:7:17"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20424:5:17","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"20434:7:17","type":""}],"src":"20395:79:17"},{"body":{"nodeType":"YulBlock","src":"20563:74:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20580:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20623:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20605:17:17"},"nodeType":"YulFunctionCall","src":"20605:24:17"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"20585:19:17"},"nodeType":"YulFunctionCall","src":"20585:45:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20573:6:17"},"nodeType":"YulFunctionCall","src":"20573:58:17"},"nodeType":"YulExpressionStatement","src":"20573:58:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20551:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20558:3:17","type":""}],"src":"20480:157:17"},{"body":{"nodeType":"YulBlock","src":"20685:52:17","statements":[{"nodeType":"YulAssignment","src":"20695:35:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20720:2:17","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"20724:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20716:3:17"},"nodeType":"YulFunctionCall","src":"20716:14:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"20695:8:17"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20666:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"20676:8:17","type":""}],"src":"20643:94:17"},{"body":{"nodeType":"YulBlock","src":"20790:47:17","statements":[{"nodeType":"YulAssignment","src":"20800:31:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20825:5:17"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"20811:13:17"},"nodeType":"YulFunctionCall","src":"20811:20:17"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"20800:7:17"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20772:5:17","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"20782:7:17","type":""}],"src":"20743:94:17"},{"body":{"nodeType":"YulBlock","src":"20890:53:17","statements":[{"nodeType":"YulAssignment","src":"20900:37:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20931:5:17"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"20911:19:17"},"nodeType":"YulFunctionCall","src":"20911:26:17"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"20900:7:17"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20872:5:17","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"20882:7:17","type":""}],"src":"20843:100:17"},{"body":{"nodeType":"YulBlock","src":"21032:74:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21049:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21092:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"21074:17:17"},"nodeType":"YulFunctionCall","src":"21074:24:17"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"21054:19:17"},"nodeType":"YulFunctionCall","src":"21054:45:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21042:6:17"},"nodeType":"YulFunctionCall","src":"21042:58:17"},"nodeType":"YulExpressionStatement","src":"21042:58:17"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21020:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21027:3:17","type":""}],"src":"20949:157:17"},{"body":{"nodeType":"YulBlock","src":"21302:363:17","statements":[{"nodeType":"YulAssignment","src":"21313:100:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21400:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"21409:3:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21320:79:17"},"nodeType":"YulFunctionCall","src":"21320:93:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21313:3:17"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21485:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"21494:3:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21423:61:17"},"nodeType":"YulFunctionCall","src":"21423:75:17"},"nodeType":"YulExpressionStatement","src":"21423:75:17"},{"nodeType":"YulAssignment","src":"21507:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21518:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21523:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21514:3:17"},"nodeType":"YulFunctionCall","src":"21514:12:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21507:3:17"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21598:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"21607:3:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21536:61:17"},"nodeType":"YulFunctionCall","src":"21536:75:17"},"nodeType":"YulExpressionStatement","src":"21536:75:17"},{"nodeType":"YulAssignment","src":"21620:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21631:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21636:2:17","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21627:3:17"},"nodeType":"YulFunctionCall","src":"21627:12:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21620:3:17"}]},{"nodeType":"YulAssignment","src":"21649:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"21656:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21649:3:17"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256_t_address__to_t_bytes_memory_ptr_t_uint256_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21265:3:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21271:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21279:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21287:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21298:3:17","type":""}],"src":"21112:553:17"},{"body":{"nodeType":"YulBlock","src":"21785:140:17","statements":[{"nodeType":"YulAssignment","src":"21795:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21807:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21818:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21803:3:17"},"nodeType":"YulFunctionCall","src":"21803:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21795:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21891:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21904:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21915:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21900:3:17"},"nodeType":"YulFunctionCall","src":"21900:17:17"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"21831:59:17"},"nodeType":"YulFunctionCall","src":"21831:87:17"},"nodeType":"YulExpressionStatement","src":"21831:87:17"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21757:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21769:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21780:4:17","type":""}],"src":"21671:254:17"},{"body":{"nodeType":"YulBlock","src":"21994:80:17","statements":[{"nodeType":"YulAssignment","src":"22004:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22019:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22013:5:17"},"nodeType":"YulFunctionCall","src":"22013:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22004:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22062:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"22035:26:17"},"nodeType":"YulFunctionCall","src":"22035:33:17"},"nodeType":"YulExpressionStatement","src":"22035:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21972:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"21980:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21988:5:17","type":""}],"src":"21931:143:17"},{"body":{"nodeType":"YulBlock","src":"22157:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"22203:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22205:77:17"},"nodeType":"YulFunctionCall","src":"22205:79:17"},"nodeType":"YulExpressionStatement","src":"22205:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22178:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"22187:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22174:3:17"},"nodeType":"YulFunctionCall","src":"22174:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"22199:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22170:3:17"},"nodeType":"YulFunctionCall","src":"22170:32:17"},"nodeType":"YulIf","src":"22167:119:17"},{"nodeType":"YulBlock","src":"22296:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22311:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22325:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22315:6:17","type":""}]},{"nodeType":"YulAssignment","src":"22340:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22386:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"22397:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22382:3:17"},"nodeType":"YulFunctionCall","src":"22382:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22406:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"22350:31:17"},"nodeType":"YulFunctionCall","src":"22350:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22340:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22127:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22138:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22150:6:17","type":""}],"src":"22080:351:17"},{"body":{"nodeType":"YulBlock","src":"22577:209:17","statements":[{"nodeType":"YulAssignment","src":"22587:95:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22670:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"22675:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22594:75:17"},"nodeType":"YulFunctionCall","src":"22594:88:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22587:3:17"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"22729:5:17"},{"name":"pos","nodeType":"YulIdentifier","src":"22736:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"22741:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22692:36:17"},"nodeType":"YulFunctionCall","src":"22692:56:17"},"nodeType":"YulExpressionStatement","src":"22692:56:17"},{"nodeType":"YulAssignment","src":"22757:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22768:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"22773:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22764:3:17"},"nodeType":"YulFunctionCall","src":"22764:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22757:3:17"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"22550:5:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"22557:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22565:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22573:3:17","type":""}],"src":"22459:327:17"},{"body":{"nodeType":"YulBlock","src":"22936:147:17","statements":[{"nodeType":"YulAssignment","src":"22947:110:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23036:6:17"},{"name":"value1","nodeType":"YulIdentifier","src":"23044:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"23053:3:17"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22954:81:17"},"nodeType":"YulFunctionCall","src":"22954:103:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22947:3:17"}]},{"nodeType":"YulAssignment","src":"23067:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"23074:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23067:3:17"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22907:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22913:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22921:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22932:3:17","type":""}],"src":"22792:291:17"},{"body":{"nodeType":"YulBlock","src":"23464:949:17","statements":[{"nodeType":"YulAssignment","src":"23474:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23486:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23497:3:17","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23482:3:17"},"nodeType":"YulFunctionCall","src":"23482:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23474:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23555:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23568:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23579:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23564:3:17"},"nodeType":"YulFunctionCall","src":"23564:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23511:43:17"},"nodeType":"YulFunctionCall","src":"23511:71:17"},"nodeType":"YulExpressionStatement","src":"23511:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23636:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23649:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23660:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23645:3:17"},"nodeType":"YulFunctionCall","src":"23645:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23592:43:17"},"nodeType":"YulFunctionCall","src":"23592:72:17"},"nodeType":"YulExpressionStatement","src":"23592:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23718:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23731:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23742:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23727:3:17"},"nodeType":"YulFunctionCall","src":"23727:18:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23674:43:17"},"nodeType":"YulFunctionCall","src":"23674:72:17"},"nodeType":"YulExpressionStatement","src":"23674:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23800:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23813:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23824:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23809:3:17"},"nodeType":"YulFunctionCall","src":"23809:18:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23756:43:17"},"nodeType":"YulFunctionCall","src":"23756:72:17"},"nodeType":"YulExpressionStatement","src":"23756:72:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23882:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23895:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23906:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23891:3:17"},"nodeType":"YulFunctionCall","src":"23891:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23838:43:17"},"nodeType":"YulFunctionCall","src":"23838:73:17"},"nodeType":"YulExpressionStatement","src":"23838:73:17"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23965:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23978:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23989:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23974:3:17"},"nodeType":"YulFunctionCall","src":"23974:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23921:43:17"},"nodeType":"YulFunctionCall","src":"23921:73:17"},"nodeType":"YulExpressionStatement","src":"23921:73:17"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"24048:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24061:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24072:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24057:3:17"},"nodeType":"YulFunctionCall","src":"24057:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24004:43:17"},"nodeType":"YulFunctionCall","src":"24004:73:17"},"nodeType":"YulExpressionStatement","src":"24004:73:17"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"24131:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24144:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24155:3:17","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24140:3:17"},"nodeType":"YulFunctionCall","src":"24140:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24087:43:17"},"nodeType":"YulFunctionCall","src":"24087:73:17"},"nodeType":"YulExpressionStatement","src":"24087:73:17"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"24214:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24227:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24238:3:17","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24223:3:17"},"nodeType":"YulFunctionCall","src":"24223:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24170:43:17"},"nodeType":"YulFunctionCall","src":"24170:73:17"},"nodeType":"YulExpressionStatement","src":"24170:73:17"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"24295:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24308:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24319:3:17","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24304:3:17"},"nodeType":"YulFunctionCall","src":"24304:19:17"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"24253:41:17"},"nodeType":"YulFunctionCall","src":"24253:71:17"},"nodeType":"YulExpressionStatement","src":"24253:71:17"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"24376:7:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24390:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24401:3:17","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24386:3:17"},"nodeType":"YulFunctionCall","src":"24386:19:17"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"24334:41:17"},"nodeType":"YulFunctionCall","src":"24334:72:17"},"nodeType":"YulExpressionStatement","src":"24334:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint48_t_uint48__to_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint48_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23355:9:17","type":""},{"name":"value10","nodeType":"YulTypedName","src":"23367:7:17","type":""},{"name":"value9","nodeType":"YulTypedName","src":"23376:6:17","type":""},{"name":"value8","nodeType":"YulTypedName","src":"23384:6:17","type":""},{"name":"value7","nodeType":"YulTypedName","src":"23392:6:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"23400:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23408:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23416:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23424:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23432:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23440:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23448:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23459:4:17","type":""}],"src":"23089:1324:17"},{"body":{"nodeType":"YulBlock","src":"24525:65:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24547:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"24555:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24543:3:17"},"nodeType":"YulFunctionCall","src":"24543:14:17"},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","kind":"string","nodeType":"YulLiteral","src":"24559:23:17","type":"","value":"Sender not EntryPoint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24536:6:17"},"nodeType":"YulFunctionCall","src":"24536:47:17"},"nodeType":"YulExpressionStatement","src":"24536:47:17"}]},"name":"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24517:6:17","type":""}],"src":"24419:171:17"},{"body":{"nodeType":"YulBlock","src":"24742:220:17","statements":[{"nodeType":"YulAssignment","src":"24752:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24818:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24823:2:17","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24759:58:17"},"nodeType":"YulFunctionCall","src":"24759:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24752:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24924:3:17"}],"functionName":{"name":"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","nodeType":"YulIdentifier","src":"24835:88:17"},"nodeType":"YulFunctionCall","src":"24835:93:17"},"nodeType":"YulExpressionStatement","src":"24835:93:17"},{"nodeType":"YulAssignment","src":"24937:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24948:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24953:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24944:3:17"},"nodeType":"YulFunctionCall","src":"24944:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24937:3:17"}]}]},"name":"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24730:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24738:3:17","type":""}],"src":"24596:366:17"},{"body":{"nodeType":"YulBlock","src":"25139:248:17","statements":[{"nodeType":"YulAssignment","src":"25149:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25161:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25172:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25157:3:17"},"nodeType":"YulFunctionCall","src":"25157:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25149:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25196:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25207:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25192:3:17"},"nodeType":"YulFunctionCall","src":"25192:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25215:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"25221:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25211:3:17"},"nodeType":"YulFunctionCall","src":"25211:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25185:6:17"},"nodeType":"YulFunctionCall","src":"25185:47:17"},"nodeType":"YulExpressionStatement","src":"25185:47:17"},{"nodeType":"YulAssignment","src":"25241:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25375:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25249:124:17"},"nodeType":"YulFunctionCall","src":"25249:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25241:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25119:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25134:4:17","type":""}],"src":"24968:419:17"},{"body":{"nodeType":"YulBlock","src":"25499:57:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25521:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"25529:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25517:3:17"},"nodeType":"YulFunctionCall","src":"25517:14:17"},{"hexValue":"6d757374206f76657272696465","kind":"string","nodeType":"YulLiteral","src":"25533:15:17","type":"","value":"must override"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25510:6:17"},"nodeType":"YulFunctionCall","src":"25510:39:17"},"nodeType":"YulExpressionStatement","src":"25510:39:17"}]},"name":"store_literal_in_memory_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25491:6:17","type":""}],"src":"25393:163:17"},{"body":{"nodeType":"YulBlock","src":"25708:220:17","statements":[{"nodeType":"YulAssignment","src":"25718:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25784:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25789:2:17","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25725:58:17"},"nodeType":"YulFunctionCall","src":"25725:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25718:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25890:3:17"}],"functionName":{"name":"store_literal_in_memory_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","nodeType":"YulIdentifier","src":"25801:88:17"},"nodeType":"YulFunctionCall","src":"25801:93:17"},"nodeType":"YulExpressionStatement","src":"25801:93:17"},{"nodeType":"YulAssignment","src":"25903:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25914:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25919:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25910:3:17"},"nodeType":"YulFunctionCall","src":"25910:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25903:3:17"}]}]},"name":"abi_encode_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25696:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25704:3:17","type":""}],"src":"25562:366:17"},{"body":{"nodeType":"YulBlock","src":"26105:248:17","statements":[{"nodeType":"YulAssignment","src":"26115:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26127:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26138:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26123:3:17"},"nodeType":"YulFunctionCall","src":"26123:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26115:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26162:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26173:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26158:3:17"},"nodeType":"YulFunctionCall","src":"26158:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26181:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"26187:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26177:3:17"},"nodeType":"YulFunctionCall","src":"26177:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26151:6:17"},"nodeType":"YulFunctionCall","src":"26151:47:17"},"nodeType":"YulExpressionStatement","src":"26151:47:17"},{"nodeType":"YulAssignment","src":"26207:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26341:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26215:124:17"},"nodeType":"YulFunctionCall","src":"26215:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26207:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26085:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26100:4:17","type":""}],"src":"25934:419:17"},{"body":{"nodeType":"YulBlock","src":"26387:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26404:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26407:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26397:6:17"},"nodeType":"YulFunctionCall","src":"26397:88:17"},"nodeType":"YulExpressionStatement","src":"26397:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26501:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26504:4:17","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26494:6:17"},"nodeType":"YulFunctionCall","src":"26494:15:17"},"nodeType":"YulExpressionStatement","src":"26494:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26525:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26528:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26518:6:17"},"nodeType":"YulFunctionCall","src":"26518:15:17"},"nodeType":"YulExpressionStatement","src":"26518:15:17"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"26359:180:17"},{"body":{"nodeType":"YulBlock","src":"26588:43:17","statements":[{"nodeType":"YulAssignment","src":"26598:27:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26613:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"26620:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26609:3:17"},"nodeType":"YulFunctionCall","src":"26609:16:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26598:7:17"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26570:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26580:7:17","type":""}],"src":"26545:86:17"},{"body":{"nodeType":"YulBlock","src":"26698:51:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26715:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26736:5:17"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"26720:15:17"},"nodeType":"YulFunctionCall","src":"26720:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26708:6:17"},"nodeType":"YulFunctionCall","src":"26708:35:17"},"nodeType":"YulExpressionStatement","src":"26708:35:17"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26686:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26693:3:17","type":""}],"src":"26637:112:17"},{"body":{"nodeType":"YulBlock","src":"26933:367:17","statements":[{"nodeType":"YulAssignment","src":"26943:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26955:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26966:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26951:3:17"},"nodeType":"YulFunctionCall","src":"26951:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26943:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27024:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27037:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27048:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27033:3:17"},"nodeType":"YulFunctionCall","src":"27033:17:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"26980:43:17"},"nodeType":"YulFunctionCall","src":"26980:71:17"},"nodeType":"YulExpressionStatement","src":"26980:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27101:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27114:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27125:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27110:3:17"},"nodeType":"YulFunctionCall","src":"27110:18:17"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"27061:39:17"},"nodeType":"YulFunctionCall","src":"27061:68:17"},"nodeType":"YulExpressionStatement","src":"27061:68:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27183:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27196:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27207:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27192:3:17"},"nodeType":"YulFunctionCall","src":"27192:18:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27139:43:17"},"nodeType":"YulFunctionCall","src":"27139:72:17"},"nodeType":"YulExpressionStatement","src":"27139:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27265:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27278:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27289:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27274:3:17"},"nodeType":"YulFunctionCall","src":"27274:18:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27221:43:17"},"nodeType":"YulFunctionCall","src":"27221:72:17"},"nodeType":"YulExpressionStatement","src":"27221:72:17"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26881:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26893:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26901:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26909:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26917:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26928:4:17","type":""}],"src":"26755:545:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct UserOperation\n    function abi_decode_t_struct$_UserOperation_$3023_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 352) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$3023_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$3023_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint48_t_uint48_t_bytes_calldata_ptr__to_t_uint48_t_uint48_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function validator_revert_t_uint48(value) {\n        if iszero(eq(value, cleanup_t_uint48(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint48(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint48(value)\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$3023_calldata_ptrt_uint48t_uint48(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$3023_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_PostOpMode_$2866(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_PostOpMode_$2866(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_PostOpMode_$2866(value)\n    }\n\n    function abi_decode_tuple_t_enum$_PostOpMode_$2866t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_PostOpMode_$2866(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$2839_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$2839_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$2839_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$2839__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$2839_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d(memPtr) {\n\n        mstore(add(memPtr, 0), \"only admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function store_literal_in_memory_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"VerifyingPaymaster: invalid sign\")\n\n        mstore(add(memPtr, 32), \"ature length in paymasterAndData\")\n\n    }\n\n    function abi_encode_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 64)\n        store_literal_in_memory_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f(memPtr) {\n\n        mstore(add(memPtr, 0), \"err sig\")\n\n    }\n\n    function abi_encode_t_stringliteral_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_401080dc217f7341a17ae733400734d758a8897682cdf489b68b0447d522a09f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function abi_decode_tuple_t_uint48t_uint48(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256_t_address__to_t_bytes_memory_ptr_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint48_t_uint48__to_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint48_t_uint48__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender not EntryPoint\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d(memPtr) {\n\n        mstore(add(memPtr, 0), \"must override\")\n\n    }\n\n    function abi_encode_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2019":[{"length":32,"start":1078},{"length":32,"start":1229},{"length":32,"start":2487},{"length":32,"start":2531},{"length":32,"start":2669},{"length":32,"start":2813},{"length":32,"start":2972},{"length":32,"start":3983}]},"linkReferences":{},"object":"6080604052600436106101185760003560e01c806394e1fc19116100a0578063c399ec8811610064578063c399ec8814610365578063d0e30db014610390578063f2fde38b1461039a578063f465c77e146103c3578063ff1b636d146104015761011f565b806394e1fc1914610294578063a9a23409146102d1578063b0d691fe146102fa578063bb9fe6bf14610325578063c23a5cea1461033c5761011f565b8063687ca620116100e7578063687ca620146101ab578063715018a6146101e95780638da5cb5b14610200578063927cc0641461022b57806394d4ad60146102545761011f565b80630396cb6014610124578063205c28781461014057806323d9ac9b146101695780635fd8c710146101945761011f565b3661011f57005b600080fd5b61013e600480360381019061013991906114fb565b61042c565b005b34801561014c57600080fd5b50610167600480360381019061016291906115bc565b6104c3565b005b34801561017557600080fd5b5061017e61055c565b60405161018b919061161d565b60405180910390f35b3480156101a057600080fd5b506101a9610582565b005b3480156101b757600080fd5b506101d260048036038101906101cd9190611693565b61065b565b6040516101e09291906117a1565b60405180910390f35b3480156101f557600080fd5b506101fe6107fb565b005b34801561020c57600080fd5b5061021561080f565b604051610222919061161d565b60405180910390f35b34801561023757600080fd5b50610252600480360381019061024d91906117fd565b610838565b005b34801561026057600080fd5b5061027b6004803603810190610276919061188f565b61090c565b60405161028b9493929190611939565b60405180910390f35b3480156102a057600080fd5b506102bb60048036038101906102b691906119a5565b61095b565b6040516102c89190611a23565b60405180910390f35b3480156102dd57600080fd5b506102f860048036038101906102f39190611a63565b61099b565b005b34801561030657600080fd5b5061030f6109b5565b60405161031c9190611b36565b60405180910390f35b34801561033157600080fd5b5061033a6109d9565b005b34801561034857600080fd5b50610363600480360381019061035e9190611b51565b610a63565b005b34801561037157600080fd5b5061037a610af9565b6040516103879190611b7e565b60405180910390f35b610398610b9a565b005b3480156103a657600080fd5b506103c160048036038101906103bc91906117fd565b610c28565b005b3480156103cf57600080fd5b506103ea60048036038101906103e59190611693565b610cae565b6040516103f89291906117a1565b60405180910390f35b34801561040d57600080fd5b50610416610cd1565b604051610423919061161d565b60405180910390f35b610434610cf7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b815260040161048e9190611ba8565b6000604051808303818588803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b505050505050565b6104cb610cf7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610526929190611bd2565b600060405180830381600087803b15801561054057600080fd5b505af1158015610554573d6000803e3d6000fd5b505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060990611c58565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610658573d6000803e3d6000fd5b50565b60606000808036600061067d898061012001906106789190611c87565b61090c565b9350935093509350604082829050148061069a5750604182829050145b6106d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d090611d5c565b60405180910390fd5b60006106ee6106e98b878761095b565b610d7e565b905061073e8184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610db4565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490611dc8565b60405180910390fd5b6107d960008686610de0565b6040518060200160405280600081525090965096505050505050935093915050565b610803610cf7565b61080d6000610e19565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bf90611c58565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080366000858560149060549261092693929190611df2565b8101906109339190611e2d565b80945081955050508585605490809261094e93929190611df2565b9150915092959194509250565b6000610968848484610edd565b463060405160200161097c93929190611f12565b6040516020818303038152906040528051906020012090509392505050565b6109a3610f8d565b6109af8484848461101d565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109e1610cf7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b50505050565b610a6b610cf7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b8152600401610ac49190611f4b565b600060405180830381600087803b158015610ade57600080fd5b505af1158015610af2573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b54919061161d565b602060405180830381865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b959190611f7b565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610bf4919061161d565b6000604051808303818588803b158015610c0d57600080fd5b505af1158015610c21573d6000803e3d6000fd5b5050505050565b610c30610cf7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ca25760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c99919061161d565b60405180910390fd5b610cab81610e19565b50565b60606000610cba610f8d565b610cc5858585611058565b91509150935093915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cff6111e9565b73ffffffffffffffffffffffffffffffffffffffff16610d1d61080f565b73ffffffffffffffffffffffffffffffffffffffff1614610d7c57610d406111e9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d73919061161d565b60405180910390fd5b565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080610dc486866111f1565b925092509250610dd4828261124d565b82935050505092915050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610e08576000610e0b565b60015b60ff16171790509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60606000610eea856113b1565b9050808560200135868060400190610f029190611c87565b604051610f10929190611fcd565b6040518091039020878060600190610f289190611c87565b604051610f36929190611fcd565b604051809103902088608001358960a001358a60c001358b60e001358c61010001358c8c604051602001610f749b9a99989796959493929190611fe6565b6040516020818303038152906040529150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461101b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611012906120dd565b60405180910390fd5b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612149565b60405180910390fd5b60606000808036600061107a898061012001906110759190611c87565b61090c565b935093509350935060408282905014806110975750604182829050145b6110d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cd90611d5c565b60405180910390fd5b60006110eb6110e68b878761095b565b610d7e565b905061113b8184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610db4565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111ba5761119b60018686610de0565b60405180602001604052806000815250909650965050505050506111e1565b6111c660008686610de0565b60405180602001604052806000815250909650965050505050505b935093915050565b600033905090565b600080600060418451036112365760008060006020870151925060408701519150606087015160001a9050611228888285856113c1565b955095509550505050611246565b60006002855160001b9250925092505b9250925092565b6000600381111561126157611260612169565b5b82600381111561127457611273612169565b5b03156113ad576001600381111561128e5761128d612169565b5b8260038111156112a1576112a0612169565b5b036112d8576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156112ec576112eb612169565b5b8260038111156112ff576112fe612169565b5b03611344578060001c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161133b9190611b7e565b60405180910390fd5b60038081111561135757611356612169565b5b82600381111561136a57611369612169565b5b036113ac57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016113a39190611a23565b60405180910390fd5b5b5050565b6000808235905080915050919050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156114015760006003859250925092506114ab565b60006001888888886040516000815260200160405260405161142694939291906121b4565b6020604051602081039080840390855afa158015611448573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361149c57600060016000801b935093509350506114ab565b8060008060001b935093509350505b9450945094915050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6114d8816114bf565b81146114e357600080fd5b50565b6000813590506114f5816114cf565b92915050565b600060208284031215611511576115106114b5565b5b600061151f848285016114e6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061155382611528565b9050919050565b61156381611548565b811461156e57600080fd5b50565b6000813590506115808161155a565b92915050565b6000819050919050565b61159981611586565b81146115a457600080fd5b50565b6000813590506115b681611590565b92915050565b600080604083850312156115d3576115d26114b5565b5b60006115e185828601611571565b92505060206115f2858286016115a7565b9150509250929050565b600061160782611528565b9050919050565b611617816115fc565b82525050565b6000602082019050611632600083018461160e565b92915050565b600080fd5b6000610160828403121561165457611653611638565b5b81905092915050565b6000819050919050565b6116708161165d565b811461167b57600080fd5b50565b60008135905061168d81611667565b92915050565b6000806000606084860312156116ac576116ab6114b5565b5b600084013567ffffffffffffffff8111156116ca576116c96114ba565b5b6116d68682870161163d565b93505060206116e78682870161167e565b92505060406116f8868287016115a7565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561173c578082015181840152602081019050611721565b60008484015250505050565b6000601f19601f8301169050919050565b600061176482611702565b61176e818561170d565b935061177e81856020860161171e565b61178781611748565b840191505092915050565b61179b81611586565b82525050565b600060408201905081810360008301526117bb8185611759565b90506117ca6020830184611792565b9392505050565b6117da816115fc565b81146117e557600080fd5b50565b6000813590506117f7816117d1565b92915050565b600060208284031215611813576118126114b5565b5b6000611821848285016117e8565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261184f5761184e61182a565b5b8235905067ffffffffffffffff81111561186c5761186b61182f565b5b60208301915083600182028301111561188857611887611834565b5b9250929050565b600080602083850312156118a6576118a56114b5565b5b600083013567ffffffffffffffff8111156118c4576118c36114ba565b5b6118d085828601611839565b92509250509250929050565b600065ffffffffffff82169050919050565b6118f7816118dc565b82525050565b82818337600083830152505050565b6000611918838561170d565b93506119258385846118fd565b61192e83611748565b840190509392505050565b600060608201905061194e60008301876118ee565b61195b60208301866118ee565b818103604083015261196e81848661190c565b905095945050505050565b611982816118dc565b811461198d57600080fd5b50565b60008135905061199f81611979565b92915050565b6000806000606084860312156119be576119bd6114b5565b5b600084013567ffffffffffffffff8111156119dc576119db6114ba565b5b6119e88682870161163d565b93505060206119f986828701611990565b9250506040611a0a86828701611990565b9150509250925092565b611a1d8161165d565b82525050565b6000602082019050611a386000830184611a14565b92915050565b60038110611a4b57600080fd5b50565b600081359050611a5d81611a3e565b92915050565b60008060008060608587031215611a7d57611a7c6114b5565b5b6000611a8b87828801611a4e565b945050602085013567ffffffffffffffff811115611aac57611aab6114ba565b5b611ab887828801611839565b93509350506040611acb878288016115a7565b91505092959194509250565b6000819050919050565b6000611afc611af7611af284611528565b611ad7565b611528565b9050919050565b6000611b0e82611ae1565b9050919050565b6000611b2082611b03565b9050919050565b611b3081611b15565b82525050565b6000602082019050611b4b6000830184611b27565b92915050565b600060208284031215611b6757611b666114b5565b5b6000611b7584828501611571565b91505092915050565b6000602082019050611b936000830184611792565b92915050565b611ba2816114bf565b82525050565b6000602082019050611bbd6000830184611b99565b92915050565b611bcc81611548565b82525050565b6000604082019050611be76000830185611bc3565b611bf46020830184611792565b9392505050565b600082825260208201905092915050565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b6000611c42600a83611bfb565b9150611c4d82611c0c565b602082019050919050565b60006020820190508181036000830152611c7181611c35565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611ca457611ca3611c78565b5b80840192508235915067ffffffffffffffff821115611cc657611cc5611c7d565b5b602083019250600182023603831315611ce257611ce1611c82565b5b509250929050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b6000611d46604083611bfb565b9150611d5182611cea565b604082019050919050565b60006020820190508181036000830152611d7581611d39565b9050919050565b7f6572722073696700000000000000000000000000000000000000000000000000600082015250565b6000611db2600783611bfb565b9150611dbd82611d7c565b602082019050919050565b60006020820190508181036000830152611de181611da5565b9050919050565b600080fd5b600080fd5b60008085851115611e0657611e05611de8565b5b83861115611e1757611e16611ded565b5b6001850283019150848603905094509492505050565b60008060408385031215611e4457611e436114b5565b5b6000611e5285828601611990565b9250506020611e6385828601611990565b9150509250929050565b600081905092915050565b6000611e8382611702565b611e8d8185611e6d565b9350611e9d81856020860161171e565b80840191505092915050565b6000819050919050565b611ec4611ebf82611586565b611ea9565b82525050565b60008160601b9050919050565b6000611ee282611eca565b9050919050565b6000611ef482611ed7565b9050919050565b611f0c611f07826115fc565b611ee9565b82525050565b6000611f1e8286611e78565b9150611f2a8285611eb3565b602082019150611f3a8284611efb565b601482019150819050949350505050565b6000602082019050611f606000830184611bc3565b92915050565b600081519050611f7581611590565b92915050565b600060208284031215611f9157611f906114b5565b5b6000611f9f84828501611f66565b91505092915050565b6000611fb48385611e6d565b9350611fc18385846118fd565b82840190509392505050565b6000611fda828486611fa8565b91508190509392505050565b600061016082019050611ffc600083018e61160e565b612009602083018d611792565b612016604083018c611a14565b612023606083018b611a14565b612030608083018a611792565b61203d60a0830189611792565b61204a60c0830188611792565b61205760e0830187611792565b612065610100830186611792565b6120736101208301856118ee565b6120816101408301846118ee565b9c9b505050505050505050505050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b60006120c7601583611bfb565b91506120d282612091565b602082019050919050565b600060208201905081810360008301526120f6816120ba565b9050919050565b7f6d757374206f7665727269646500000000000000000000000000000000000000600082015250565b6000612133600d83611bfb565b915061213e826120fd565b602082019050919050565b6000602082019050818103600083015261216281612126565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060ff82169050919050565b6121ae81612198565b82525050565b60006080820190506121c96000830187611a14565b6121d660208301866121a5565b6121e36040830185611a14565b6121f06060830184611a14565b9594505050505056fea264697066735822122074c5d1c1311c89c84908f26ace19dbef1950e42b9353dfb1618f2cca62dba56a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94E1FC19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC399EC88 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xFF1B636D EQ PUSH2 0x401 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x94E1FC19 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x33C JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x687CA620 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x687CA620 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x927CC064 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x94D4AD60 EQ PUSH2 0x254 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x23D9AC9B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x5FD8C710 EQ PUSH2 0x194 JUMPI PUSH2 0x11F JUMP JUMPDEST CALLDATASIZE PUSH2 0x11F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A9 PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP3 SWAP2 SWAP1 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x7FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A PUSH2 0x9D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH2 0xB9A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP3 SWAP2 SWAP1 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x416 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x434 PUSH2 0xCF7 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4CB PUSH2 0xCF7 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x526 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x554 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x609 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP1 CALLDATASIZE PUSH1 0x0 PUSH2 0x67D DUP10 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x40 DUP3 DUP3 SWAP1 POP EQ DUP1 PUSH2 0x69A JUMPI POP PUSH1 0x41 DUP3 DUP3 SWAP1 POP EQ JUMPDEST PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D0 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6EE PUSH2 0x6E9 DUP12 DUP8 DUP8 PUSH2 0x95B JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST SWAP1 POP PUSH2 0x73E DUP2 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDB4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D9 PUSH1 0x0 DUP7 DUP7 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x80D PUSH1 0x0 PUSH2 0xE19 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BF SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP6 DUP6 PUSH1 0x14 SWAP1 PUSH1 0x54 SWAP3 PUSH2 0x926 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x933 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP DUP6 DUP6 PUSH1 0x54 SWAP1 DUP1 SWAP3 PUSH2 0x94E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x968 DUP5 DUP5 DUP5 PUSH2 0xEDD JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x97C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9A3 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x9AF DUP5 DUP5 DUP5 DUP5 PUSH2 0x101D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9E1 PUSH2 0xCF7 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA6B PUSH2 0xCF7 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC30 PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC99 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAB DUP2 PUSH2 0xE19 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xCBA PUSH2 0xF8D JUMP JUMPDEST PUSH2 0xCC5 DUP6 DUP6 DUP6 PUSH2 0x1058 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCFF PUSH2 0x11E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD1D PUSH2 0x80F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD7C JUMPI PUSH2 0xD40 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xDC4 DUP7 DUP7 PUSH2 0x11F1 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xDD4 DUP3 DUP3 PUSH2 0x124D JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD0 DUP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL PUSH1 0xA0 DUP5 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL DUP6 PUSH2 0xE08 JUMPI PUSH1 0x0 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND OR OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xEEA DUP6 PUSH2 0x13B1 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH1 0x20 ADD CALLDATALOAD DUP7 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF10 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP8 DUP1 PUSH1 0x60 ADD SWAP1 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF36 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 PUSH1 0x80 ADD CALLDATALOAD DUP10 PUSH1 0xA0 ADD CALLDATALOAD DUP11 PUSH1 0xC0 ADD CALLDATALOAD DUP12 PUSH1 0xE0 ADD CALLDATALOAD DUP13 PUSH2 0x100 ADD CALLDATALOAD DUP13 DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF74 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x101B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1012 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP1 CALLDATASIZE PUSH1 0x0 PUSH2 0x107A DUP10 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x40 DUP3 DUP3 SWAP1 POP EQ DUP1 PUSH2 0x1097 JUMPI POP PUSH1 0x41 DUP3 DUP3 SWAP1 POP EQ JUMPDEST PUSH2 0x10D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CD SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10EB PUSH2 0x10E6 DUP12 DUP8 DUP8 PUSH2 0x95B JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST SWAP1 POP PUSH2 0x113B DUP2 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDB4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11BA JUMPI PUSH2 0x119B PUSH1 0x1 DUP7 DUP7 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP7 POP SWAP7 POP POP POP POP POP POP PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x11C6 PUSH1 0x0 DUP7 DUP7 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP7 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x1236 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x1228 DUP9 DUP3 DUP6 DUP6 PUSH2 0x13C1 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1261 JUMPI PUSH2 0x1260 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1274 JUMPI PUSH2 0x1273 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x13AD JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x128E JUMPI PUSH2 0x128D PUSH2 0x2169 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A0 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12EC JUMPI PUSH2 0x12EB PUSH2 0x2169 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12FF JUMPI PUSH2 0x12FE PUSH2 0x2169 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1344 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133B SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1357 JUMPI PUSH2 0x1356 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x136A JUMPI PUSH2 0x1369 PUSH2 0x2169 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x13AC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A3 SWAP2 SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 CALLDATALOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1401 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1426 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1448 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x149C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x14AB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D8 DUP2 PUSH2 0x14BF JUMP JUMPDEST DUP2 EQ PUSH2 0x14E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F5 DUP2 PUSH2 0x14CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151F DUP5 DUP3 DUP6 ADD PUSH2 0x14E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1553 DUP3 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1563 DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP2 EQ PUSH2 0x156E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1580 DUP2 PUSH2 0x155A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1599 DUP2 PUSH2 0x1586 JUMP JUMPDEST DUP2 EQ PUSH2 0x15A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B6 DUP2 PUSH2 0x1590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D3 JUMPI PUSH2 0x15D2 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15E1 DUP6 DUP3 DUP7 ADD PUSH2 0x1571 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15F2 DUP6 DUP3 DUP7 ADD PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1607 DUP3 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1617 DUP2 PUSH2 0x15FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1632 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x160E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH2 0x1653 PUSH2 0x1638 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1670 DUP2 PUSH2 0x165D JUMP JUMPDEST DUP2 EQ PUSH2 0x167B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x168D DUP2 PUSH2 0x1667 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16AC JUMPI PUSH2 0x16AB PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16CA JUMPI PUSH2 0x16C9 PUSH2 0x14BA JUMP JUMPDEST JUMPDEST PUSH2 0x16D6 DUP7 DUP3 DUP8 ADD PUSH2 0x163D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16E7 DUP7 DUP3 DUP8 ADD PUSH2 0x167E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16F8 DUP7 DUP3 DUP8 ADD PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x173C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1764 DUP3 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x176E DUP2 DUP6 PUSH2 0x170D JUMP JUMPDEST SWAP4 POP PUSH2 0x177E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x171E JUMP JUMPDEST PUSH2 0x1787 DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x179B DUP2 PUSH2 0x1586 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17BB DUP2 DUP6 PUSH2 0x1759 JUMP JUMPDEST SWAP1 POP PUSH2 0x17CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1792 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17DA DUP2 PUSH2 0x15FC JUMP JUMPDEST DUP2 EQ PUSH2 0x17E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F7 DUP2 PUSH2 0x17D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1813 JUMPI PUSH2 0x1812 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1821 DUP5 DUP3 DUP6 ADD PUSH2 0x17E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x184F JUMPI PUSH2 0x184E PUSH2 0x182A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x186C JUMPI PUSH2 0x186B PUSH2 0x182F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1888 JUMPI PUSH2 0x1887 PUSH2 0x1834 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C4 JUMPI PUSH2 0x18C3 PUSH2 0x14BA JUMP JUMPDEST JUMPDEST PUSH2 0x18D0 DUP6 DUP3 DUP7 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F7 DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1918 DUP4 DUP6 PUSH2 0x170D JUMP JUMPDEST SWAP4 POP PUSH2 0x1925 DUP4 DUP6 DUP5 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x192E DUP4 PUSH2 0x1748 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x194E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18EE JUMP JUMPDEST PUSH2 0x195B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18EE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x196E DUP2 DUP5 DUP7 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1982 DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP2 EQ PUSH2 0x198D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x199F DUP2 PUSH2 0x1979 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19BE JUMPI PUSH2 0x19BD PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19DC JUMPI PUSH2 0x19DB PUSH2 0x14BA JUMP JUMPDEST JUMPDEST PUSH2 0x19E8 DUP7 DUP3 DUP8 ADD PUSH2 0x163D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19F9 DUP7 DUP3 DUP8 ADD PUSH2 0x1990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A0A DUP7 DUP3 DUP8 ADD PUSH2 0x1990 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1A1D DUP2 PUSH2 0x165D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1A4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A5D DUP2 PUSH2 0x1A3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A7D JUMPI PUSH2 0x1A7C PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A8B DUP8 DUP3 DUP9 ADD PUSH2 0x1A4E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AAC JUMPI PUSH2 0x1AAB PUSH2 0x14BA JUMP JUMPDEST JUMPDEST PUSH2 0x1AB8 DUP8 DUP3 DUP9 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x1ACB DUP8 DUP3 DUP9 ADD PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFC PUSH2 0x1AF7 PUSH2 0x1AF2 DUP5 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0E DUP3 PUSH2 0x1AE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B20 DUP3 PUSH2 0x1B03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B30 DUP2 PUSH2 0x1B15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B66 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B75 DUP5 DUP3 DUP6 ADD PUSH2 0x1571 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B93 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1792 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BA2 DUP2 PUSH2 0x14BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BCC DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BE7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1792 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C792061646D696E00000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C42 PUSH1 0xA DUP4 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4D DUP3 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C71 DUP2 PUSH2 0x1C35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1CA4 JUMPI PUSH2 0x1CA3 PUSH2 0x1C78 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CC6 JUMPI PUSH2 0x1CC5 PUSH2 0x1C7D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x1C82 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x566572696679696E675061796D61737465723A20696E76616C6964207369676E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6174757265206C656E67746820696E207061796D6173746572416E6444617461 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D46 PUSH1 0x40 DUP4 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D51 DUP3 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D75 DUP2 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6572722073696700000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB2 PUSH1 0x7 DUP4 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBD DUP3 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE1 DUP2 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x1E06 JUMPI PUSH2 0x1E05 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x1E17 JUMPI PUSH2 0x1E16 PUSH2 0x1DED JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E52 DUP6 DUP3 DUP7 ADD PUSH2 0x1990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E63 DUP6 DUP3 DUP7 ADD PUSH2 0x1990 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E83 DUP3 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x1E8D DUP2 DUP6 PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP PUSH2 0x1E9D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x171E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC4 PUSH2 0x1EBF DUP3 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x1EA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE2 DUP3 PUSH2 0x1ECA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF4 DUP3 PUSH2 0x1ED7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0C PUSH2 0x1F07 DUP3 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x1EE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1E DUP3 DUP7 PUSH2 0x1E78 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2A DUP3 DUP6 PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1F3A DUP3 DUP5 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F75 DUP2 PUSH2 0x1590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F91 JUMPI PUSH2 0x1F90 PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F9F DUP5 DUP3 DUP6 ADD PUSH2 0x1F66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB4 DUP4 DUP6 PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP PUSH2 0x1FC1 DUP4 DUP6 DUP5 PUSH2 0x18FD JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA DUP3 DUP5 DUP7 PUSH2 0x1FA8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x1FFC PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x160E JUMP JUMPDEST PUSH2 0x2009 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x2016 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x2023 PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x2030 PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x203D PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x204A PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x2057 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x2065 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x2073 PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x18EE JUMP JUMPDEST PUSH2 0x2081 PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x18EE JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C7 PUSH1 0x15 DUP4 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x20D2 DUP3 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F6 DUP2 PUSH2 0x20BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D757374206F7665727269646500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2133 PUSH1 0xD DUP4 PUSH2 0x1BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x213E DUP3 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2162 DUP2 PUSH2 0x2126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21AE DUP2 PUSH2 0x2198 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x21C9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x21D6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x21A5 JUMP JUMPDEST PUSH2 0x21E3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x21F0 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1A14 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xC5D1C1311C89C84908F26ACE19DBEF1950E42B9353 0xDF 0xB1 PUSH2 0x8F2C 0xCA PUSH3 0xDBA56A PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"916:5334:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3695:142:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3287:176;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1180:30:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6078:116;;;;;;;;;;;;;:::i;:::-;;4546:1176;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1515:93:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5730:338;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2033:298;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1480:223:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;486:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4203:85;;;;;;;;;;;;;:::i;:::-;;4516:135;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3925:113;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3009:106;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;673:322:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1049:20:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3695:142:7;1531:13:0;:11;:13::i;:::-;3775:10:7::1;:19;;;3802:9;3813:15;3775:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3695:142:::0;:::o;3287:176::-;1531:13:0;:11;:13::i;:::-;3409:10:7::1;:21;;;3431:15;3448:6;3409:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3287:176:::0;;:::o;1180:30:16:-;;;;;;;;;;;;;:::o;6078:116::-;1132:5;;;;;;;;;;;1118:19;;:10;:19;;;1110:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;6143:10:::1;6135:28;;:51;6164:21;6135:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6078:116::o:0;4546:1176::-;4690:20;4712:23;4779:17;4798;4817:24;;4845:46;4867:6;:23;;;;;;;;:::i;:::-;4845:21;:46::i;:::-;4778:113;;;;;;;;5135:2;5115:9;;:16;;:22;:48;;;;5161:2;5141:9;;:16;;:22;5115:48;5107:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;5243:12;5258:80;5298:39;5306:6;5314:10;5326;5298:7;:39::i;:::-;5258;:80::i;:::-;5243:95;;5453:30;5467:4;5473:9;;5453:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:30::i;:::-;5434:49;;:15;;;;;;;;;;;:49;;;5426:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5665:48;5685:5;5691:10;5702;5665:19;:48::i;:::-;5654:60;;;;;;;;;;;;;;;;;;;;;;4546:1176;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1515:93:16:-;1132:5;;;;;;;;;;;1118:19;;:10;:19;;;1110:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1591:9:::1;1583:5;;:17;;;;;;;;;;;;;;;;;;1515:93:::0;:::o;5730:338::-;5814:17;5833;5852:24;;5927:16;;1269:2;5927:57;1324:2;5927:57;;;;;;;:::i;:::-;5916:86;;;;;;;:::i;:::-;5889:113;;;;;;;;6025:16;;1324:2;6025:35;;;;;;;;;:::i;:::-;6013:47;;;;5730:338;;;;;;;:::o;2033:298::-;2145:7;2213:46;2228:6;2236:10;2248;2213:14;:46::i;:::-;2274:13;2310:4;2182:144;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2172:155;;;;;;2165:162;;2033:298;;;;;:::o;1480:223:7:-;1623:24;:22;:24::i;:::-;1658:37;1666:4;1672:7;;1681:13;1658:7;:37::i;:::-;1480:223;;;;:::o;486:39::-;;;:::o;4203:85::-;1531:13:0;:11;:13::i;:::-;4256:10:7::1;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4203:85::o:0;4516:135::-;1531:13:0;:11;:13::i;:::-;4602:10:7::1;:24;;;4627:15;4602:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4516:135:::0;:::o;3925:113::-;3968:7;3995:10;:20;;;4024:4;3995:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3988:42;;3925:113;:::o;3009:106::-;3054:10;:20;;;3082:9;3101:4;3054:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3009:106::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;673:322:7:-;835:20;857:22;892:24;:22;:24::i;:::-;934:53;959:6;967:10;979:7;934:24;:53::i;:::-;927:60;;;;673:322;;;;;;:::o;1049:20:16:-;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1222:460:4:-;1298:14;1403:34;1397:4;1390:48;1505:11;1499:4;1492:25;1597:4;1591;1581:21;1571:31;;1222:460;;;:::o;3702:255:3:-;3780:7;3800:17;3819:18;3839:16;3859:27;3870:4;3876:9;3859:10;:27::i;:::-;3799:87;;;;;;3896:28;3908:5;3915:8;3896:11;:28::i;:::-;3941:9;3934:16;;;;;3702:255;;;;:::o;3287:257:8:-;3402:7;3530:8;3514:10;3506:19;;:33;;3489:3;3474:10;3466:19;;:26;;3435:9;:17;;3451:1;3435:17;;;3447:1;3435:17;3434:59;;;:106;3418:122;;3287:257;;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2335:596:16:-;2456:12;2481:14;2498:18;:6;:16;:18::i;:::-;2481:35;;2559:6;2580;:12;;;2617:6;:15;;;;;;;;:::i;:::-;2607:26;;;;;;;:::i;:::-;;;;;;;;2658:6;:15;;;;;;;;:::i;:::-;2648:26;;;;;;;:::i;:::-;;;;;;;;2689:6;:19;;;2723:6;:27;;;2765:6;:25;;;2805:6;:19;;;2839:6;:27;;;2881:10;2906;2534:393;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2527:400;;;2335:596;;;;;:::o;4735:137:7:-;4827:10;4805:33;;:10;:33;;;4797:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4735:137::o;2579:324::-;2872:23;;;;;;;;;;:::i;:::-;;;;;;;;3284:1254:16;3435:20;3457:23;3524:17;3543;3562:24;;3590:46;3612:6;:23;;;;;;;;:::i;:::-;3590:21;:46::i;:::-;3523:113;;;;;;;;3880:2;3860:9;;:16;;:22;:48;;;;3906:2;3886:9;;:16;;:22;3860:48;3852:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;3988:12;4003:80;4043:39;4051:6;4059:10;4071;4043:7;:39::i;:::-;4003;:80::i;:::-;3988:95;;4194:30;4208:4;4214:9;;4194:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:30::i;:::-;4175:49;;:15;;;;;;;;;;;:49;;;4171:141;;4252:47;4272:4;4277:10;4288;4252:19;:47::i;:::-;4241:59;;;;;;;;;;;;;;;;;;;;;;;;4171:141;4481:48;4501:5;4507:10;4518;4481:19;:48::i;:::-;4470:60;;;;;;;;;;;;;;;;;;;;;;3284:1254;;;;;;;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;2129:766:3:-;2210:7;2219:12;2233:7;2276:2;2256:9;:16;:22;2252:637;;2294:9;2317;2340:7;2592:4;2581:9;2577:20;2571:27;2566:32;;2641:4;2630:9;2626:20;2620:27;2615:32;;2698:4;2687:9;2683:20;2677:27;2674:1;2669:36;2664:41;;2739:25;2750:4;2756:1;2759;2762;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;2811:1;2815:35;2860:9;:16;2852:25;;2795:83;;;;;;2129:766;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;426:326:9:-;515:7;535:12;687:6;674:20;666:28;;738:4;715:29;;;426:326;;;:::o;5140:1530:3:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;88:117:17:-;197:1;194;187:12;211:117;320:1;317;310:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:126::-;1072:7;1112:42;1105:5;1101:54;1090:65;;1035:126;;;:::o;1167:104::-;1212:7;1241:24;1259:5;1241:24;:::i;:::-;1230:35;;1167:104;;;:::o;1277:138::-;1358:32;1384:5;1358:32;:::i;:::-;1351:5;1348:43;1338:71;;1405:1;1402;1395:12;1338:71;1277:138;:::o;1421:155::-;1475:5;1513:6;1500:20;1491:29;;1529:41;1564:5;1529:41;:::i;:::-;1421:155;;;;:::o;1582:77::-;1619:7;1648:5;1637:16;;1582:77;;;:::o;1665:122::-;1738:24;1756:5;1738:24;:::i;:::-;1731:5;1728:35;1718:63;;1777:1;1774;1767:12;1718:63;1665:122;:::o;1793:139::-;1839:5;1877:6;1864:20;1855:29;;1893:33;1920:5;1893:33;:::i;:::-;1793:139;;;;:::o;1938:490::-;2014:6;2022;2071:2;2059:9;2050:7;2046:23;2042:32;2039:119;;;2077:79;;:::i;:::-;2039:119;2197:1;2222:61;2275:7;2266:6;2255:9;2251:22;2222:61;:::i;:::-;2212:71;;2168:125;2332:2;2358:53;2403:7;2394:6;2383:9;2379:22;2358:53;:::i;:::-;2348:63;;2303:118;1938:490;;;;;:::o;2434:96::-;2471:7;2500:24;2518:5;2500:24;:::i;:::-;2489:35;;2434:96;;;:::o;2536:118::-;2623:24;2641:5;2623:24;:::i;:::-;2618:3;2611:37;2536:118;;:::o;2660:222::-;2753:4;2791:2;2780:9;2776:18;2768:26;;2804:71;2872:1;2861:9;2857:17;2848:6;2804:71;:::i;:::-;2660:222;;;;:::o;2888:117::-;2997:1;2994;2987:12;3039:238;3118:5;3159:3;3150:6;3145:3;3141:16;3137:26;3134:113;;;3166:79;;:::i;:::-;3134:113;3265:6;3256:15;;3039:238;;;;:::o;3283:77::-;3320:7;3349:5;3338:16;;3283:77;;;:::o;3366:122::-;3439:24;3457:5;3439:24;:::i;:::-;3432:5;3429:35;3419:63;;3478:1;3475;3468:12;3419:63;3366:122;:::o;3494:139::-;3540:5;3578:6;3565:20;3556:29;;3594:33;3621:5;3594:33;:::i;:::-;3494:139;;;;:::o;3639:845::-;3749:6;3757;3765;3814:2;3802:9;3793:7;3789:23;3785:32;3782:119;;;3820:79;;:::i;:::-;3782:119;3968:1;3957:9;3953:17;3940:31;3998:18;3990:6;3987:30;3984:117;;;4020:79;;:::i;:::-;3984:117;4125:86;4203:7;4194:6;4183:9;4179:22;4125:86;:::i;:::-;4115:96;;3911:310;4260:2;4286:53;4331:7;4322:6;4311:9;4307:22;4286:53;:::i;:::-;4276:63;;4231:118;4388:2;4414:53;4459:7;4450:6;4439:9;4435:22;4414:53;:::i;:::-;4404:63;;4359:118;3639:845;;;;;:::o;4490:98::-;4541:6;4575:5;4569:12;4559:22;;4490:98;;;:::o;4594:168::-;4677:11;4711:6;4706:3;4699:19;4751:4;4746:3;4742:14;4727:29;;4594:168;;;;:::o;4768:246::-;4849:1;4859:113;4873:6;4870:1;4867:13;4859:113;;;4958:1;4953:3;4949:11;4943:18;4939:1;4934:3;4930:11;4923:39;4895:2;4892:1;4888:10;4883:15;;4859:113;;;5006:1;4997:6;4992:3;4988:16;4981:27;4830:184;4768:246;;;:::o;5020:102::-;5061:6;5112:2;5108:7;5103:2;5096:5;5092:14;5088:28;5078:38;;5020:102;;;:::o;5128:373::-;5214:3;5242:38;5274:5;5242:38;:::i;:::-;5296:70;5359:6;5354:3;5296:70;:::i;:::-;5289:77;;5375:65;5433:6;5428:3;5421:4;5414:5;5410:16;5375:65;:::i;:::-;5465:29;5487:6;5465:29;:::i;:::-;5460:3;5456:39;5449:46;;5218:283;5128:373;;;;:::o;5507:118::-;5594:24;5612:5;5594:24;:::i;:::-;5589:3;5582:37;5507:118;;:::o;5631:419::-;5770:4;5808:2;5797:9;5793:18;5785:26;;5857:9;5851:4;5847:20;5843:1;5832:9;5828:17;5821:47;5885:76;5956:4;5947:6;5885:76;:::i;:::-;5877:84;;5971:72;6039:2;6028:9;6024:18;6015:6;5971:72;:::i;:::-;5631:419;;;;;:::o;6056:122::-;6129:24;6147:5;6129:24;:::i;:::-;6122:5;6119:35;6109:63;;6168:1;6165;6158:12;6109:63;6056:122;:::o;6184:139::-;6230:5;6268:6;6255:20;6246:29;;6284:33;6311:5;6284:33;:::i;:::-;6184:139;;;;:::o;6329:329::-;6388:6;6437:2;6425:9;6416:7;6412:23;6408:32;6405:119;;;6443:79;;:::i;:::-;6405:119;6563:1;6588:53;6633:7;6624:6;6613:9;6609:22;6588:53;:::i;:::-;6578:63;;6534:117;6329:329;;;;:::o;6664:117::-;6773:1;6770;6763:12;6787:117;6896:1;6893;6886:12;6910:117;7019:1;7016;7009:12;7046:552;7103:8;7113:6;7163:3;7156:4;7148:6;7144:17;7140:27;7130:122;;7171:79;;:::i;:::-;7130:122;7284:6;7271:20;7261:30;;7314:18;7306:6;7303:30;7300:117;;;7336:79;;:::i;:::-;7300:117;7450:4;7442:6;7438:17;7426:29;;7504:3;7496:4;7488:6;7484:17;7474:8;7470:32;7467:41;7464:128;;;7511:79;;:::i;:::-;7464:128;7046:552;;;;;:::o;7604:527::-;7674:6;7682;7731:2;7719:9;7710:7;7706:23;7702:32;7699:119;;;7737:79;;:::i;:::-;7699:119;7885:1;7874:9;7870:17;7857:31;7915:18;7907:6;7904:30;7901:117;;;7937:79;;:::i;:::-;7901:117;8050:64;8106:7;8097:6;8086:9;8082:22;8050:64;:::i;:::-;8032:82;;;;7828:296;7604:527;;;;;:::o;8137:97::-;8173:7;8213:14;8206:5;8202:26;8191:37;;8137:97;;;:::o;8240:115::-;8325:23;8342:5;8325:23;:::i;:::-;8320:3;8313:36;8240:115;;:::o;8361:146::-;8458:6;8453:3;8448;8435:30;8499:1;8490:6;8485:3;8481:16;8474:27;8361:146;;;:::o;8535:314::-;8631:3;8652:70;8715:6;8710:3;8652:70;:::i;:::-;8645:77;;8732:56;8781:6;8776:3;8769:5;8732:56;:::i;:::-;8813:29;8835:6;8813:29;:::i;:::-;8808:3;8804:39;8797:46;;8535:314;;;;;:::o;8855:541::-;9028:4;9066:2;9055:9;9051:18;9043:26;;9079:69;9145:1;9134:9;9130:17;9121:6;9079:69;:::i;:::-;9158:70;9224:2;9213:9;9209:18;9200:6;9158:70;:::i;:::-;9275:9;9269:4;9265:20;9260:2;9249:9;9245:18;9238:48;9303:86;9384:4;9375:6;9367;9303:86;:::i;:::-;9295:94;;8855:541;;;;;;;:::o;9402:120::-;9474:23;9491:5;9474:23;:::i;:::-;9467:5;9464:34;9454:62;;9512:1;9509;9502:12;9454:62;9402:120;:::o;9528:137::-;9573:5;9611:6;9598:20;9589:29;;9627:32;9653:5;9627:32;:::i;:::-;9528:137;;;;:::o;9671:841::-;9779:6;9787;9795;9844:2;9832:9;9823:7;9819:23;9815:32;9812:119;;;9850:79;;:::i;:::-;9812:119;9998:1;9987:9;9983:17;9970:31;10028:18;10020:6;10017:30;10014:117;;;10050:79;;:::i;:::-;10014:117;10155:86;10233:7;10224:6;10213:9;10209:22;10155:86;:::i;:::-;10145:96;;9941:310;10290:2;10316:52;10360:7;10351:6;10340:9;10336:22;10316:52;:::i;:::-;10306:62;;10261:117;10417:2;10443:52;10487:7;10478:6;10467:9;10463:22;10443:52;:::i;:::-;10433:62;;10388:117;9671:841;;;;;:::o;10518:118::-;10605:24;10623:5;10605:24;:::i;:::-;10600:3;10593:37;10518:118;;:::o;10642:222::-;10735:4;10773:2;10762:9;10758:18;10750:26;;10786:71;10854:1;10843:9;10839:17;10830:6;10786:71;:::i;:::-;10642:222;;;;:::o;10870:114::-;10958:1;10951:5;10948:12;10938:40;;10974:1;10971;10964:12;10938:40;10870:114;:::o;10990:169::-;11051:5;11089:6;11076:20;11067:29;;11105:48;11147:5;11105:48;:::i;:::-;10990:169;;;;:::o;11165:847::-;11268:6;11276;11284;11292;11341:2;11329:9;11320:7;11316:23;11312:32;11309:119;;;11347:79;;:::i;:::-;11309:119;11467:1;11492:68;11552:7;11543:6;11532:9;11528:22;11492:68;:::i;:::-;11482:78;;11438:132;11637:2;11626:9;11622:18;11609:32;11668:18;11660:6;11657:30;11654:117;;;11690:79;;:::i;:::-;11654:117;11803:64;11859:7;11850:6;11839:9;11835:22;11803:64;:::i;:::-;11785:82;;;;11580:297;11916:2;11942:53;11987:7;11978:6;11967:9;11963:22;11942:53;:::i;:::-;11932:63;;11887:118;11165:847;;;;;;;:::o;12018:60::-;12046:3;12067:5;12060:12;;12018:60;;;:::o;12084:142::-;12134:9;12167:53;12185:34;12194:24;12212:5;12194:24;:::i;:::-;12185:34;:::i;:::-;12167:53;:::i;:::-;12154:66;;12084:142;;;:::o;12232:126::-;12282:9;12315:37;12346:5;12315:37;:::i;:::-;12302:50;;12232:126;;;:::o;12364:146::-;12434:9;12467:37;12498:5;12467:37;:::i;:::-;12454:50;;12364:146;;;:::o;12516:171::-;12623:57;12674:5;12623:57;:::i;:::-;12618:3;12611:70;12516:171;;:::o;12693:262::-;12806:4;12844:2;12833:9;12829:18;12821:26;;12857:91;12945:1;12934:9;12930:17;12921:6;12857:91;:::i;:::-;12693:262;;;;:::o;12961:345::-;13028:6;13077:2;13065:9;13056:7;13052:23;13048:32;13045:119;;;13083:79;;:::i;:::-;13045:119;13203:1;13228:61;13281:7;13272:6;13261:9;13257:22;13228:61;:::i;:::-;13218:71;;13174:125;12961:345;;;;:::o;13312:222::-;13405:4;13443:2;13432:9;13428:18;13420:26;;13456:71;13524:1;13513:9;13509:17;13500:6;13456:71;:::i;:::-;13312:222;;;;:::o;13540:115::-;13625:23;13642:5;13625:23;:::i;:::-;13620:3;13613:36;13540:115;;:::o;13661:218::-;13752:4;13790:2;13779:9;13775:18;13767:26;;13803:69;13869:1;13858:9;13854:17;13845:6;13803:69;:::i;:::-;13661:218;;;;:::o;13885:142::-;13988:32;14014:5;13988:32;:::i;:::-;13983:3;13976:45;13885:142;;:::o;14033:364::-;14170:4;14208:2;14197:9;14193:18;14185:26;;14221:87;14305:1;14294:9;14290:17;14281:6;14221:87;:::i;:::-;14318:72;14386:2;14375:9;14371:18;14362:6;14318:72;:::i;:::-;14033:364;;;;;:::o;14403:169::-;14487:11;14521:6;14516:3;14509:19;14561:4;14556:3;14552:14;14537:29;;14403:169;;;;:::o;14578:160::-;14718:12;14714:1;14706:6;14702:14;14695:36;14578:160;:::o;14744:366::-;14886:3;14907:67;14971:2;14966:3;14907:67;:::i;:::-;14900:74;;14983:93;15072:3;14983:93;:::i;:::-;15101:2;15096:3;15092:12;15085:19;;14744:366;;;:::o;15116:419::-;15282:4;15320:2;15309:9;15305:18;15297:26;;15369:9;15363:4;15359:20;15355:1;15344:9;15340:17;15333:47;15397:131;15523:4;15397:131;:::i;:::-;15389:139;;15116:419;;;:::o;15541:117::-;15650:1;15647;15640:12;15664:117;15773:1;15770;15763:12;15787:117;15896:1;15893;15886:12;15910:724;15987:4;15993:6;16049:11;16036:25;16149:1;16143:4;16139:12;16128:8;16112:14;16108:29;16104:48;16084:18;16080:73;16070:168;;16157:79;;:::i;:::-;16070:168;16269:18;16259:8;16255:33;16247:41;;16321:4;16308:18;16298:28;;16349:18;16341:6;16338:30;16335:117;;;16371:79;;:::i;:::-;16335:117;16479:2;16473:4;16469:13;16461:21;;16536:4;16528:6;16524:17;16508:14;16504:38;16498:4;16494:49;16491:136;;;16546:79;;:::i;:::-;16491:136;16000:634;15910:724;;;;;:::o;16640:251::-;16780:34;16776:1;16768:6;16764:14;16757:58;16849:34;16844:2;16836:6;16832:15;16825:59;16640:251;:::o;16897:366::-;17039:3;17060:67;17124:2;17119:3;17060:67;:::i;:::-;17053:74;;17136:93;17225:3;17136:93;:::i;:::-;17254:2;17249:3;17245:12;17238:19;;16897:366;;;:::o;17269:419::-;17435:4;17473:2;17462:9;17458:18;17450:26;;17522:9;17516:4;17512:20;17508:1;17497:9;17493:17;17486:47;17550:131;17676:4;17550:131;:::i;:::-;17542:139;;17269:419;;;:::o;17694:157::-;17834:9;17830:1;17822:6;17818:14;17811:33;17694:157;:::o;17857:365::-;17999:3;18020:66;18084:1;18079:3;18020:66;:::i;:::-;18013:73;;18095:93;18184:3;18095:93;:::i;:::-;18213:2;18208:3;18204:12;18197:19;;17857:365;;;:::o;18228:419::-;18394:4;18432:2;18421:9;18417:18;18409:26;;18481:9;18475:4;18471:20;18467:1;18456:9;18452:17;18445:47;18509:131;18635:4;18509:131;:::i;:::-;18501:139;;18228:419;;;:::o;18653:117::-;18762:1;18759;18752:12;18776:117;18885:1;18882;18875:12;18899:469;19004:9;19015;19053:8;19041:10;19038:24;19035:111;;;19065:79;;:::i;:::-;19035:111;19171:6;19161:8;19158:20;19155:107;;;19181:79;;:::i;:::-;19155:107;19312:1;19300:10;19296:18;19288:6;19284:31;19271:44;;19351:10;19341:8;19337:25;19324:38;;18899:469;;;;;;;:::o;19374:470::-;19440:6;19448;19497:2;19485:9;19476:7;19472:23;19468:32;19465:119;;;19503:79;;:::i;:::-;19465:119;19623:1;19648:52;19692:7;19683:6;19672:9;19668:22;19648:52;:::i;:::-;19638:62;;19594:116;19749:2;19775:52;19819:7;19810:6;19799:9;19795:22;19775:52;:::i;:::-;19765:62;;19720:117;19374:470;;;;;:::o;19850:147::-;19951:11;19988:3;19973:18;;19850:147;;;;:::o;20003:386::-;20107:3;20135:38;20167:5;20135:38;:::i;:::-;20189:88;20270:6;20265:3;20189:88;:::i;:::-;20182:95;;20286:65;20344:6;20339:3;20332:4;20325:5;20321:16;20286:65;:::i;:::-;20376:6;20371:3;20367:16;20360:23;;20111:278;20003:386;;;;:::o;20395:79::-;20434:7;20463:5;20452:16;;20395:79;;;:::o;20480:157::-;20585:45;20605:24;20623:5;20605:24;:::i;:::-;20585:45;:::i;:::-;20580:3;20573:58;20480:157;;:::o;20643:94::-;20676:8;20724:5;20720:2;20716:14;20695:35;;20643:94;;;:::o;20743:::-;20782:7;20811:20;20825:5;20811:20;:::i;:::-;20800:31;;20743:94;;;:::o;20843:100::-;20882:7;20911:26;20931:5;20911:26;:::i;:::-;20900:37;;20843:100;;;:::o;20949:157::-;21054:45;21074:24;21092:5;21074:24;:::i;:::-;21054:45;:::i;:::-;21049:3;21042:58;20949:157;;:::o;21112:553::-;21298:3;21320:93;21409:3;21400:6;21320:93;:::i;:::-;21313:100;;21423:75;21494:3;21485:6;21423:75;:::i;:::-;21523:2;21518:3;21514:12;21507:19;;21536:75;21607:3;21598:6;21536:75;:::i;:::-;21636:2;21631:3;21627:12;21620:19;;21656:3;21649:10;;21112:553;;;;;;:::o;21671:254::-;21780:4;21818:2;21807:9;21803:18;21795:26;;21831:87;21915:1;21904:9;21900:17;21891:6;21831:87;:::i;:::-;21671:254;;;;:::o;21931:143::-;21988:5;22019:6;22013:13;22004:22;;22035:33;22062:5;22035:33;:::i;:::-;21931:143;;;;:::o;22080:351::-;22150:6;22199:2;22187:9;22178:7;22174:23;22170:32;22167:119;;;22205:79;;:::i;:::-;22167:119;22325:1;22350:64;22406:7;22397:6;22386:9;22382:22;22350:64;:::i;:::-;22340:74;;22296:128;22080:351;;;;:::o;22459:327::-;22573:3;22594:88;22675:6;22670:3;22594:88;:::i;:::-;22587:95;;22692:56;22741:6;22736:3;22729:5;22692:56;:::i;:::-;22773:6;22768:3;22764:16;22757:23;;22459:327;;;;;:::o;22792:291::-;22932:3;22954:103;23053:3;23044:6;23036;22954:103;:::i;:::-;22947:110;;23074:3;23067:10;;22792:291;;;;;:::o;23089:1324::-;23459:4;23497:3;23486:9;23482:19;23474:27;;23511:71;23579:1;23568:9;23564:17;23555:6;23511:71;:::i;:::-;23592:72;23660:2;23649:9;23645:18;23636:6;23592:72;:::i;:::-;23674;23742:2;23731:9;23727:18;23718:6;23674:72;:::i;:::-;23756;23824:2;23813:9;23809:18;23800:6;23756:72;:::i;:::-;23838:73;23906:3;23895:9;23891:19;23882:6;23838:73;:::i;:::-;23921;23989:3;23978:9;23974:19;23965:6;23921:73;:::i;:::-;24004;24072:3;24061:9;24057:19;24048:6;24004:73;:::i;:::-;24087;24155:3;24144:9;24140:19;24131:6;24087:73;:::i;:::-;24170;24238:3;24227:9;24223:19;24214:6;24170:73;:::i;:::-;24253:71;24319:3;24308:9;24304:19;24295:6;24253:71;:::i;:::-;24334:72;24401:3;24390:9;24386:19;24376:7;24334:72;:::i;:::-;23089:1324;;;;;;;;;;;;;;:::o;24419:171::-;24559:23;24555:1;24547:6;24543:14;24536:47;24419:171;:::o;24596:366::-;24738:3;24759:67;24823:2;24818:3;24759:67;:::i;:::-;24752:74;;24835:93;24924:3;24835:93;:::i;:::-;24953:2;24948:3;24944:12;24937:19;;24596:366;;;:::o;24968:419::-;25134:4;25172:2;25161:9;25157:18;25149:26;;25221:9;25215:4;25211:20;25207:1;25196:9;25192:17;25185:47;25249:131;25375:4;25249:131;:::i;:::-;25241:139;;24968:419;;;:::o;25393:163::-;25533:15;25529:1;25521:6;25517:14;25510:39;25393:163;:::o;25562:366::-;25704:3;25725:67;25789:2;25784:3;25725:67;:::i;:::-;25718:74;;25801:93;25890:3;25801:93;:::i;:::-;25919:2;25914:3;25910:12;25903:19;;25562:366;;;:::o;25934:419::-;26100:4;26138:2;26127:9;26123:18;26115:26;;26187:9;26181:4;26177:20;26173:1;26162:9;26158:17;26151:47;26215:131;26341:4;26215:131;:::i;:::-;26207:139;;25934:419;;;:::o;26359:180::-;26407:77;26404:1;26397:88;26504:4;26501:1;26494:15;26528:4;26525:1;26518:15;26545:86;26580:7;26620:4;26613:5;26609:16;26598:27;;26545:86;;;:::o;26637:112::-;26720:22;26736:5;26720:22;:::i;:::-;26715:3;26708:35;26637:112;;:::o;26755:545::-;26928:4;26966:3;26955:9;26951:19;26943:27;;26980:71;27048:1;27037:9;27033:17;27024:6;26980:71;:::i;:::-;27061:68;27125:2;27114:9;27110:18;27101:6;27061:68;:::i;:::-;27139:72;27207:2;27196:9;27192:18;27183:6;27139:72;:::i;:::-;27221;27289:2;27278:9;27274:18;27265:6;27221:72;:::i;:::-;26755:545;;;;;;;:::o"},"methodIdentifiers":{"Admin()":"ff1b636d","ChangeAdmin(address)":"927cc064","addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)":"94e1fc19","owner()":"8da5cb5b","parsePaymasterAndData(bytes)":"94d4ad60","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","validatePaymasterUserOpPub((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"687ca620","verifyingSigner()":"23d9ac9b","withdrawBalance()":"5fd8c710","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifyingSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"ChangeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"}],\"name\":\"parsePaymasterAndData\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"requiredPreFund\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOpPub\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"vcalidationData\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyingSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)\":{\"notice\":\"return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \\\"paymasterAndData\\\", which will carry the signature itself.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"A sample paymaster that uses external service to decide whether to pay for the UserOp. The paymaster trusts an external signer to sign the transaction. The calling user must pass the UserOp to that external signer first, which performs whatever off-chain verification before signing the UserOp. Note that this signature is NOT a replacement for the account-specific signature: - the paymaster checks a signature to agree to PAY for GAS. - the account checks a signature to prove identity and account ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/VerifyingPaymaster.sol\":\"VerifyingPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xbd3189ba19234b7983c343fd70058e21de970feb4bc941c57f14820eb35878a8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d738449768414ab9d4d111113f4641bd0fbc833f9baf74d8ccebe43fe8d7bb\",\"dweb:/ipfs/QmSwpXHUerFzwJFyyLqyGGbzsLTwSimdcMKX5FKksNouEm\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x341c6c70a05b8f2c7a093e909377c7c93874c0a36c70c55b765f386f1b0fcc01\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29ef1bdfa8a451ded8bb5910cfe8b416deb75574c305326670b19408bc5b3508\",\"dweb:/ipfs/QmcL4BCqJ75cKUQVv9iGRxToQamvYq8UqmfyrRAbAAXv22\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]},\"contracts/utils/VerifyingPaymaster.sol\":{\"keccak256\":\"0x57bdf089f7983eb4a47881541581116df9b14611b59c42139f177685fb25e722\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c9b83f511d4c8ecd801a9b9b0ed78c833dae17f1c5ea3881395ed3ceaec29ff2\",\"dweb:/ipfs/Qmc9GPevswRQjviVkMYZ8nyR7FQzF4L9MANfyN7sbAswdL\"]}},\"version\":1}"}}}}}