{"id":"f4e0b71ad3c1d31347be2d61d48e0340","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/core/BasePaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.20;\r\n\r\n/* solhint-disable reason-string */\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../interfaces/IPaymaster.sol\";\r\nimport \"../interfaces/IEntryPoint.sol\";\r\nimport \"./Helpers.sol\";\r\n\r\n/**\r\n * Helper class for creating a paymaster.\r\n * provides helper methods for staking.\r\n * Validates that the postOp is called only by the entryPoint.\r\n */\r\nabstract contract BasePaymaster is IPaymaster, Ownable {\r\n    IEntryPoint public immutable entryPoint;\r\n\r\n    constructor(IEntryPoint _entryPoint) Ownable(tx.origin) {\r\n        entryPoint = _entryPoint;\r\n    }\r\n\r\n    /// @inheritdoc IPaymaster\r\n    function validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external override returns (bytes memory context, uint256 validationData) {\r\n        _requireFromEntryPoint();\r\n        return _validatePaymasterUserOp(userOp, userOpHash, maxCost);\r\n    }\r\n\r\n    /**\r\n     * Validate a user operation.\r\n     * @param userOp     - The user operation.\r\n     * @param userOpHash - The hash of the user operation.\r\n     * @param maxCost    - The maximum cost of the user operation.\r\n     */\r\n    function _validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) internal virtual returns (bytes memory context, uint256 validationData);\r\n\r\n    /// @inheritdoc IPaymaster\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) external override {\r\n        _requireFromEntryPoint();\r\n        _postOp(mode, context, actualGasCost);\r\n    }\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * (verified to be called only through the entryPoint)\r\n     * @dev If subclass returns a non-empty context from validatePaymasterUserOp,\r\n     *      it must also implement this method.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. still has to pay for gas.\r\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\r\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\r\n     */\r\n    function _postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) internal virtual {\r\n        (mode, context, actualGasCost); // unused params\r\n        // subclass must override this method if validatePaymasterUserOp returns a context\r\n        revert(\"must override\");\r\n    }\r\n\r\n    /**\r\n     * Add a deposit for this paymaster, used for paying for transaction fees.\r\n     */\r\n    function deposit() public payable {\r\n        entryPoint.depositTo{value: msg.value}(address(this));\r\n    }\r\n\r\n    /**\r\n     * Withdraw value from the deposit.\r\n     * @param withdrawAddress - Target to send to.\r\n     * @param amount          - Amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 amount\r\n    ) public onlyOwner {\r\n        entryPoint.withdrawTo(withdrawAddress, amount);\r\n    }\r\n\r\n    /**\r\n     * Add stake for this paymaster.\r\n     * This method can also carry eth value to add to the current stake.\r\n     * @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased.\r\n     */\r\n    function addStake(uint32 unstakeDelaySec) external payable onlyOwner {\r\n        entryPoint.addStake{value: msg.value}(unstakeDelaySec);\r\n    }\r\n\r\n    /**\r\n     * Return current paymaster's deposit on the entryPoint.\r\n     */\r\n    function getDeposit() public view returns (uint256) {\r\n        return entryPoint.balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * Unlock the stake, in order to withdraw it.\r\n     * The paymaster can't serve requests once unlocked, until it calls addStake again\r\n     */\r\n    function unlockStake() external onlyOwner {\r\n        entryPoint.unlockStake();\r\n    }\r\n\r\n    /**\r\n     * Withdraw the entire paymaster's stake.\r\n     * stake must be unlocked first (and then wait for the unstakeDelay to be over)\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external onlyOwner {\r\n        entryPoint.withdrawStake(withdrawAddress);\r\n    }\r\n\r\n    /**\r\n     * Validate the call is made from a valid entrypoint\r\n     */\r\n    function _requireFromEntryPoint() internal virtual {\r\n        require(msg.sender == address(entryPoint), \"Sender not EntryPoint\");\r\n    }\r\n}"},"contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\n/**\r\n * Returned data from validateUserOp.\r\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and\r\n * parsed by `_parseValidationData`.\r\n * @param aggregator  - address(0) - The account validated the signature by itself.\r\n *                      address(1) - The account failed to validate the signature.\r\n *                      otherwise - This is an address of a signature aggregator that must\r\n *                                  be used to validate the signature.\r\n * @param validAfter  - This UserOp is valid only after this timestamp.\r\n * @param validaUntil - This UserOp is valid only up to this timestamp.\r\n */\r\nstruct ValidationData {\r\n    address aggregator;\r\n    uint48 validAfter;\r\n    uint48 validUntil;\r\n}\r\n\r\n/**\r\n * Extract sigFailed, validAfter, validUntil.\r\n * Also convert zero validUntil to type(uint48).max.\r\n * @param validationData - The packed validation data.\r\n */\r\nfunction _parseValidationData(\r\n    uint validationData\r\n) pure returns (ValidationData memory data) {\r\n    address aggregator = address(uint160(validationData));\r\n    uint48 validUntil = uint48(validationData >> 160);\r\n    if (validUntil == 0) {\r\n        validUntil = type(uint48).max;\r\n    }\r\n    uint48 validAfter = uint48(validationData >> (48 + 160));\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Intersect account and paymaster ranges.\r\n * @param validationData          - The packed validation data of the account.\r\n * @param paymasterValidationData - The packed validation data of the paymaster.\r\n */\r\nfunction _intersectTimeRange(\r\n    uint256 validationData,\r\n    uint256 paymasterValidationData\r\n) pure returns (ValidationData memory) {\r\n    ValidationData memory accountValidationData = _parseValidationData(\r\n        validationData\r\n    );\r\n    ValidationData memory pmValidationData = _parseValidationData(\r\n        paymasterValidationData\r\n    );\r\n    address aggregator = accountValidationData.aggregator;\r\n    if (aggregator == address(0)) {\r\n        aggregator = pmValidationData.aggregator;\r\n    }\r\n    uint48 validAfter = accountValidationData.validAfter;\r\n    uint48 validUntil = accountValidationData.validUntil;\r\n    uint48 pmValidAfter = pmValidationData.validAfter;\r\n    uint48 pmValidUntil = pmValidationData.validUntil;\r\n\r\n    if (validAfter < pmValidAfter) validAfter = pmValidAfter;\r\n    if (validUntil > pmValidUntil) validUntil = pmValidUntil;\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp.\r\n * @param data - The ValidationData to pack.\r\n */\r\nfunction _packValidationData(\r\n    ValidationData memory data\r\n) pure returns (uint256) {\r\n    return\r\n        uint160(data.aggregator) |\r\n        (uint256(data.validUntil) << 160) |\r\n        (uint256(data.validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\r\n * @param sigFailed  - True for signature failure, false for success.\r\n * @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\r\n * @param validAfter - First timestamp this UserOperation is valid.\r\n */\r\nfunction _packValidationData(\r\n    bool sigFailed,\r\n    uint48 validUntil,\r\n    uint48 validAfter\r\n) pure returns (uint256) {\r\n    return\r\n        (sigFailed ? 1 : 0) |\r\n        (uint256(validUntil) << 160) |\r\n        (uint256(validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * keccak function over calldata.\r\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\r\n */\r\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\r\n        assembly {\r\n            let mem := mload(0x40)\r\n            let len := data.length\r\n            calldatacopy(mem, data.offset, len)\r\n            ret := keccak256(mem, len)\r\n        }\r\n    }"},"contracts/core/UserOperationLib.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.20;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\nimport {calldataKeccak} from \"./Helpers.sol\";\r\nimport \"../interfaces/UserOperation.sol\";\r\n\r\n/**\r\n * Utility functions helpful when working with UserOperation structs.\r\n */\r\nlibrary UserOperationLib {\r\n    /**\r\n     * Get sender from user operation data.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function getSender(\r\n        UserOperation calldata userOp\r\n    ) internal pure returns (address) {\r\n        address data;\r\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\r\n        assembly {\r\n            data := calldataload(userOp)\r\n        }\r\n        return address(uint160(data));\r\n    }\r\n\r\n    /**\r\n     * Relayer/block builder might submit the TX with higher priorityFee,\r\n     * but the user should not pay above what he signed for.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function gasPrice(\r\n        UserOperation calldata userOp\r\n    ) internal view returns (uint256) {\r\n        unchecked {\r\n            uint256 maxFeePerGas = userOp.maxFeePerGas;\r\n            uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\r\n            if (maxFeePerGas == maxPriorityFeePerGas) {\r\n                //legacy mode (for networks that don't support basefee opcode)\r\n                return maxFeePerGas;\r\n            }\r\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pack the user operation data into bytes for hashing.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function pack(\r\n        UserOperation calldata userOp\r\n    ) internal pure returns (bytes memory ret) {\r\n        address sender = getSender(userOp);\r\n        uint256 nonce = userOp.nonce;\r\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\r\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\r\n        uint256 callGasLimit = userOp.callGasLimit;\r\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\r\n        uint256 preVerificationGas = userOp.preVerificationGas;\r\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\r\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\r\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\r\n\r\n        return abi.encode(\r\n            sender, nonce,\r\n            hashInitCode, hashCallData,\r\n            callGasLimit, verificationGasLimit, preVerificationGas,\r\n            maxFeePerGas, maxPriorityFeePerGas,\r\n            hashPaymasterAndData\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Hash the user operation data.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function hash(\r\n        UserOperation calldata userOp\r\n    ) internal pure returns (bytes32) {\r\n        return keccak256(pack(userOp));\r\n    }\r\n\r\n    /**\r\n     * The minimum of two numbers.\r\n     * @param a - First number.\r\n     * @param b - Second number.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}"},"contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\n/**\r\n * Aggregated Signatures validator.\r\n */\r\ninterface IAggregator {\r\n    /**\r\n     * Validate aggregated signature.\r\n     * Revert if the aggregated signature does not match the given list of operations.\r\n     * @param userOps   - Array of UserOperations to validate the signature for.\r\n     * @param signature - The aggregated signature.\r\n     */\r\n    function validateSignatures(\r\n        UserOperation[] calldata userOps,\r\n        bytes calldata signature\r\n    ) external view;\r\n\r\n    /**\r\n     * Validate signature of a single userOp.\r\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\r\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\r\n     * @param userOp        - The userOperation received from the user.\r\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\r\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\r\n     */\r\n    function validateUserOpSignature(\r\n        UserOperation calldata userOp\r\n    ) external view returns (bytes memory sigForUserOp);\r\n\r\n    /**\r\n     * Aggregate multiple signatures into a single value.\r\n     * This method is called off-chain to calculate the signature to pass with handleOps()\r\n     * bundler MAY use optimized custom code perform this aggregation.\r\n     * @param userOps              - Array of UserOperations to collect the signatures from.\r\n     * @return aggregatedSignature - The aggregated signature.\r\n     */\r\n    function aggregateSignatures(\r\n        UserOperation[] calldata userOps\r\n    ) external view returns (bytes memory aggregatedSignature);\r\n}\r\n"},"contracts/interfaces/IEntryPoint.sol":{"content":"/**\r\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\r\n ** Only one instance required on each chain.\r\n **/\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable reason-string */\r\n\r\nimport \"./UserOperation.sol\";\r\nimport \"./IStakeManager.sol\";\r\nimport \"./IAggregator.sol\";\r\nimport \"./INonceManager.sol\";\r\n\r\ninterface IEntryPoint is IStakeManager, INonceManager {\r\n    /***\r\n     * An event emitted after each successful request.\r\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\r\n     * @param sender        - The account that generates this request.\r\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\r\n     * @param nonce         - The nonce value from the request.\r\n     * @param success       - True if the sender transaction succeeded, false if reverted.\r\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\r\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\r\n     *                        validation and execution).\r\n     */\r\n    event UserOperationEvent(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address indexed paymaster,\r\n        uint256 nonce,\r\n        bool success,\r\n        uint256 actualGasCost,\r\n        uint256 actualGasUsed\r\n    );\r\n\r\n    /**\r\n     * Account \"sender\" was deployed.\r\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\r\n     * @param sender     - The account that is deployed\r\n     * @param factory    - The factory used to deploy this account (in the initCode)\r\n     * @param paymaster  - The paymaster used by this UserOp\r\n     */\r\n    event AccountDeployed(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address factory,\r\n        address paymaster\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event UserOperationRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event PostOpRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted by handleOps(), before starting the execution loop.\r\n     * Any event emitted before this event, is part of the validation.\r\n     */\r\n    event BeforeExecution();\r\n\r\n    /**\r\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\r\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\r\n     */\r\n    event SignatureAggregatorChanged(address indexed aggregator);\r\n\r\n    /**\r\n     * A custom revert error of handleOps, to identify the offending op.\r\n     * Should be caught in off-chain handleOps simulation and not happen on-chain.\r\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\r\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\r\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\r\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\r\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\r\n     *                  so a failure can be attributed to the correct entity.\r\n     */\r\n    error FailedOp(uint256 opIndex, string reason);\r\n\r\n    error PostOpReverted(bytes returnData);\r\n\r\n    /**\r\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\r\n     * @param aggregator The aggregator that failed to verify the signature\r\n     */\r\n    error SignatureValidationFailed(address aggregator);\r\n\r\n    // Return value of getSenderAddress.\r\n    error SenderAddressResult(address sender);\r\n\r\n    // UserOps handled, per aggregator.\r\n    struct UserOpsPerAggregator {\r\n        UserOperation[] userOps;\r\n        // Aggregator address\r\n        IAggregator aggregator;\r\n        // Aggregated signature\r\n        bytes signature;\r\n    }\r\n\r\n    /**\r\n     * Execute a batch of UserOperations.\r\n     * No signature aggregator is used.\r\n     * If any account requires an aggregator (that is, it returned an aggregator when\r\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\r\n     * @param ops         - The operations to execute.\r\n     * @param beneficiary - The address to receive the fees.\r\n     */\r\n    function handleOps(\r\n        UserOperation[] calldata ops,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Execute a batch of UserOperation with Aggregators\r\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\r\n     * @param beneficiary      - The address to receive the fees.\r\n     */\r\n    function handleAggregatedOps(\r\n        UserOpsPerAggregator[] calldata opsPerAggregator,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Generate a request Id - unique identifier for this request.\r\n     * The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\r\n     * @param userOp - The user operation to generate the request ID for.\r\n     */\r\n    function getUserOpHash(\r\n        UserOperation calldata userOp\r\n    ) external view returns (bytes32);\r\n\r\n    /**\r\n     * Gas and return values during simulation.\r\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\r\n     * @param prefund          - The required prefund for this operation\r\n     * @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\r\n     * @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\r\n     */\r\n    struct ReturnInfo {\r\n        uint256 preOpGas;\r\n        uint256 prefund;\r\n        bool sigFailed;\r\n        uint48 validAfter;\r\n        uint48 validUntil;\r\n        bytes paymasterContext;\r\n    }\r\n\r\n    /**\r\n     * Returned aggregated signature info:\r\n     * The aggregator returned by the account, and its current stake.\r\n     */\r\n    struct AggregatorStakeInfo {\r\n        address aggregator;\r\n        StakeInfo stakeInfo;\r\n    }\r\n\r\n    /**\r\n     * Get counterfactual sender address.\r\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\r\n     * This method always revert, and returns the address in SenderAddressResult error\r\n     * @param initCode - The constructor code to be passed into the UserOperation.\r\n     */\r\n    function getSenderAddress(bytes memory initCode) external;\r\n\r\n}\r\n"},"contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\ninterface INonceManager {\r\n\r\n    /**\r\n     * Return the next nonce for this sender.\r\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\r\n     * But UserOp with different keys can come with arbitrary order.\r\n     *\r\n     * @param sender the account address\r\n     * @param key the high 192 bit of the nonce\r\n     * @return nonce a full nonce to pass for next UserOp with this sender.\r\n     */\r\n    function getNonce(address sender, uint192 key)\r\n    external view returns (uint256 nonce);\r\n\r\n    /**\r\n     * Manually increment the nonce of the sender.\r\n     * This method is exposed just for completeness..\r\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\r\n     * as the EntryPoint will update the nonce regardless.\r\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\r\n     * UserOperations will not pay extra for the first transaction with a given key.\r\n     */\r\n    function incrementNonce(uint192 key) external;\r\n}\r\n"},"contracts/interfaces/IOracleAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ninterface IOracleAggregator {\r\n    function getTokenValueOfOneNativeToken(\r\n        address _token\r\n    ) external view returns (uint256 exchangeRate);\r\n}"},"contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\n/**\r\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\r\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\r\n */\r\ninterface IPaymaster {\r\n    enum PostOpMode {\r\n        // User op succeeded.\r\n        opSucceeded,\r\n        // User op reverted. Still has to pay for gas.\r\n        opReverted,\r\n        // User op succeeded, but caused postOp to revert.\r\n        // Only used internally in the EntryPoint - Paymasters will not be called again.\r\n        postOpReverted\r\n    }\r\n\r\n    /**\r\n     * Payment validation: check if paymaster agrees to pay.\r\n     * Must verify sender is the entryPoint.\r\n     * Revert to reject this request.\r\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\r\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\r\n     * @param userOp          - The user operation.\r\n     * @param userOpHash      - Hash of the user's request data.\r\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\r\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\r\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\r\n     *                          value of validateUserOperation.\r\n     *                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\r\n     *                                                    otherwise, an address of an \"authorizer\" contract.\r\n     *                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\r\n     *                          <6-byte> validAfter - first timestamp this operation is valid\r\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external returns (bytes memory context, uint256 validationData);\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * Must verify sender is the entryPoint.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. still has to pay for gas.\r\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\r\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\r\n     */\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * Manage deposits and stakes.\r\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\r\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\r\n */\r\ninterface IStakeManager {\r\n    event Deposited(address indexed account, uint256 totalDeposit);\r\n\r\n    event Withdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    // Emitted when stake or unstake delay are modified.\r\n    event StakeLocked(\r\n        address indexed account,\r\n        uint256 totalStaked,\r\n        uint256 unstakeDelaySec\r\n    );\r\n\r\n    // Emitted once a stake is scheduled for withdrawal.\r\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\r\n\r\n    event StakeWithdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @param deposit         - The entity's deposit.\r\n     * @param staked          - True if this entity is staked.\r\n     * @param stake           - Actual amount of ether staked for this entity.\r\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\r\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\r\n     * @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\r\n     *      and the rest fit into a 2nd cell.\r\n     *      - 112 bit allows for 10^15 eth\r\n     *      - 48 bit for full timestamp\r\n     *      - 32 bit allows 150 years for unstake delay\r\n     */\r\n    struct DepositInfo {\r\n        uint112 deposit;\r\n        bool staked;\r\n        uint112 stake;\r\n        uint32 unstakeDelaySec;\r\n        uint48 withdrawTime;\r\n    }\r\n\r\n    // API struct used by getStakeInfo and simulateValidation.\r\n    struct StakeInfo {\r\n        uint256 stake;\r\n        uint256 unstakeDelaySec;\r\n    }\r\n\r\n    /**\r\n     * Get deposit info.\r\n     * @param account - The account to query.\r\n     * @return info   - Full deposit information of given account.\r\n     */\r\n    function getDepositInfo(\r\n        address account\r\n    ) external view returns (DepositInfo memory info);\r\n\r\n    /**\r\n     * Get account balance.\r\n     * @param account - The account to query.\r\n     * @return        - The deposit (for gas payment) of the account.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * Add to the deposit of the given account.\r\n     * @param account - The account to add to.\r\n     */\r\n    function depositTo(address account) external payable;\r\n\r\n    /**\r\n     * Add to the account's stake - amount and delay\r\n     * any pending unstake is first cancelled.\r\n     * @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\r\n     */\r\n    function addStake(uint32 _unstakeDelaySec) external payable;\r\n\r\n    /**\r\n     * Attempt to unlock the stake.\r\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\r\n     */\r\n    function unlockStake() external;\r\n\r\n    /**\r\n     * Withdraw from the (unlocked) stake.\r\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external;\r\n\r\n    /**\r\n     * Withdraw from the deposit.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     * @param withdrawAmount  - The amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 withdrawAmount\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * User Operation struct\r\n * @param sender                - The sender account of this request.\r\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\r\n * @param initCode              - If set, the account contract will be created by this constructor/\r\n * @param callData              - The method call to execute on this account.\r\n * @param callGasLimit          - The gas limit passed to the callData method call.\r\n * @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\r\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\r\n *                                Covers batch overhead.\r\n * @param maxFeePerGas          - Same as EIP-1559 gas parameter.\r\n * @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\r\n * @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\r\n *                                The paymaster will pay for the transaction instead of the sender.\r\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\r\n */\r\nstruct UserOperation {\r\n    address sender;\r\n    uint256 nonce;\r\n    bytes initCode;\r\n    bytes callData;\r\n    uint256 callGasLimit;\r\n    uint256 verificationGasLimit;\r\n    uint256 preVerificationGas;\r\n    uint256 maxFeePerGas;\r\n    uint256 maxPriorityFeePerGas;\r\n    bytes paymasterAndData;\r\n    bytes signature;\r\n}\r\n"},"contracts/token/OracleAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ncontract OracleAggregator {\r\n\r\n\r\n  address public owner;\r\n  uint public exchangeRate;\r\n\r\n\r\n constructor(){\r\n    owner = msg.sender;\r\n   // Set the exchange rate for 1 CORE = 0.01 MATIC in wei\r\n    exchangeRate = 1e16; // equivalent to 0.01 * 10^18\r\n }\r\n\r\n modifier onlyOwner() {\r\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\r\n    _;\r\n}\r\n\r\n    function changeOwner(address _newOwner) public onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n\r\n    function changeExchangeRate(uint _newExchangeRate) public onlyOwner {\r\n        exchangeRate = _newExchangeRate;\r\n    }\r\n\r\n\r\n function getTokenValueOfOneNativeToken(address) public view returns(uint256){\r\n    return exchangeRate;\r\n }\r\n\r\n\r\n}"},"contracts/utils/BiconomyTokenPaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport {Math} from \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\r\n\r\n\r\nimport {IEntryPoint} from \"../interfaces/IEntryPoint.sol\";\r\nimport {UserOperation} from \"../interfaces/UserOperation.sol\";\r\nimport {UserOperationLib} from \"../core/UserOperationLib.sol\";\r\nimport {IOracleAggregator} from \"../interfaces/IOracleAggregator.sol\";\r\nimport {TokenPaymasterErrors} from \"./TokenPaymasterErrors.sol\";\r\nimport \"../core/Helpers.sol\" as Helpers;\r\nimport \"../core/BasePaymaster.sol\";\r\n\r\n\r\n// Biconomy Token Paymaster\r\n/**\r\n * A token-based paymaster that allows user to pay gas fee in ERC20 tokens. The paymaster owner chooses which tokens to accept.\r\n * The payment manager (usually the owner) first deposits native gas into the EntryPoint. Then, for each transaction, it takes the gas fee from the user's ERC20 token balance.\r\n * The manager must convert these collected tokens back to native gas and deposit it into the EntryPoint to keep the system running.\r\n * It is an extension of VerifyingPaymaster which trusts external signer to authorize the transaction, but also with an ability to withdraw tokens.\r\n *\r\n * The validatePaymasterUserOp function does not interact with external contracts but uses an externally provided exchange rate.\r\n * Based on the exchangeRate and requiredPrefund amount, the validation method checks if the user's account has enough token balance. This is done by only looking at the referenced storage.\r\n * All Withdrawn tokens are sent to a dynamic fee receiver address.\r\n *\r\n * Optionally a safe guard deposit may be used in future versions.\r\n */\r\ncontract BiconomyTokenPaymaster is\r\n    BasePaymaster,\r\n    TokenPaymasterErrors\r\n{\r\n    using ECDSA for bytes32;\r\n    using Address for address;\r\n    using UserOperationLib for UserOperation;\r\n\r\n    struct PaymasterData {\r\n    ExchangeRateSource priceSource;\r\n    uint48 validUntil;\r\n    uint48 validAfter;\r\n    address feeToken;\r\n    address oracleAggregator;\r\n    uint256 exchangeRate;\r\n    uint32 priceMarkup;\r\n    bytes signature;\r\n}\r\n\r\n    /**\r\n     * price source can be off-chain calculation or oracles\r\n     * for oracle based it can be based on chainlink feeds or TWAP oracles\r\n     * for ORACLE_BASED oracle aggregator address has to be passed in paymasterAndData\r\n     */\r\n    enum ExchangeRateSource {\r\n        EXTERNAL_EXCHANGE_RATE,\r\n        ORACLE_BASED\r\n    }\r\n\r\n    // 1. use mode and based on mode treat uint256 fee sent either as priceMarkup or flatFee\r\n    // 2. (no mode required) add extra value in paymasterandData so uint32 markup and uint224 flatFee both can be parsed\r\n    // 3. (no mode required) without extra value treat uint256 as packed uint32uint224 and use values accordingly\r\n    /*enum FeePremiumMode {\r\n        PERCENTAGE,\r\n        FLAT\r\n    }*/\r\n\r\n    /// @notice All 'price' variable coming from outside are expected to be multiple of 1e6, and in actual calculation,\r\n    /// final value is divided by PRICE_DENOMINATOR to avoid rounding up.\r\n    uint32 private constant PRICE_DENOMINATOR = 1e6;\r\n\r\n    // Gas used in EntryPoint._handlePostOp() method (including this#postOp() call)\r\n    uint256 public UNACCOUNTED_COST = 45000; // TBD\r\n\r\n    // Always rely on verifyingSigner..\r\n    address public verifyingSigner;\r\n\r\n    // receiver of withdrawn fee tokens\r\n    address public feeReceiver;\r\n\r\n    // paymasterAndData: concat of [paymasterAddress(address), priceSource(enum 1 byte), abi.encode(validUntil, validAfter, feeToken, oracleAggregator, exchangeRate, priceMarkup): makes up 32*6 bytes, signature]\r\n    // PND offset is used to indicate offsets to decode, used along with Signature offset\r\n    uint256 private constant VALID_PND_OFFSET = 21;\r\n\r\n    uint256 private constant SIGNATURE_OFFSET = 213;\r\n\r\n    address private constant NATIVE_ADDRESS =\r\n        0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n\r\n    /**\r\n     * Designed to enable the community to track change in storage variable UNACCOUNTED_COST which is used\r\n     * to maintain gas execution cost which can't be calculated within contract*/\r\n    event EPGasOverheadChanged(\r\n        uint256 indexed _oldOverheadCost,\r\n        uint256 indexed _newOverheadCost,\r\n        address indexed _actor\r\n    );\r\n\r\n    /**\r\n     * Designed to enable the community to track change in storage variable verifyingSigner which is used\r\n     * to authorize any operation for this paymaster (validation stage) and provides signature*/\r\n    event VerifyingSignerChanged(\r\n        address indexed _oldSigner,\r\n        address indexed _newSigner,\r\n        address indexed _actor\r\n    );\r\n\r\n    /**\r\n     * Designed to enable the community to track change in storage variable feeReceiver which is an address (self or other SCW/EOA)\r\n     * responsible for collecting all the tokens being withdrawn as fees*/\r\n    event FeeReceiverChanged(\r\n        address indexed _oldfeeReceiver,\r\n        address indexed _newfeeReceiver,\r\n        address indexed _actor\r\n    );\r\n\r\n    /**\r\n     * Designed to enable tracking how much fees were charged from the sender and in which ERC20 token\r\n     * More information can be emitted like exchangeRate used, what was the source of exchangeRate etc*/\r\n    // priceMarkup = Multiplier value to calculate markup, 1e6 means 1x multiplier = No markup\r\n    event TokenPaymasterOperation(\r\n        address indexed sender,\r\n        address indexed token,\r\n        uint256 indexed totalCharge,\r\n        address oracleAggregator,\r\n        uint32 priceMarkup,\r\n        bytes32 userOpHash,\r\n        uint256 exchangeRate,\r\n        ExchangeRateSource priceSource\r\n    );\r\n\r\n    /**\r\n     * Notify in case paymaster failed to withdraw tokens from sender\r\n     */\r\n    event TokenPaymentDue(\r\n        address indexed token,\r\n        address indexed account,\r\n        uint256 indexed charge\r\n    );\r\n\r\n    event Received(address indexed sender, uint256 value);\r\n\r\n    constructor(\r\n        address _owner,\r\n        IEntryPoint _entryPoint,\r\n        address _verifyingSigner\r\n    ) payable BasePaymaster(_entryPoint) {\r\n        if (_owner == address(0)) revert OwnerCannotBeZero();\r\n        if (address(_entryPoint) == address(0)) revert EntryPointCannotBeZero();\r\n        if (_verifyingSigner == address(0))\r\n            revert VerifyingSignerCannotBeZero();\r\n        assembly (\"memory-safe\") {\r\n            sstore(verifyingSigner.slot, _verifyingSigner)\r\n            sstore(feeReceiver.slot, address()) // initialize with self (could also be _owner)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Set a new verifying signer address.\r\n     * Can only be called by the owner of the contract.\r\n     * @param _newVerifyingSigner The new address to be set as the verifying signer.\r\n     * @notice If _newVerifyingSigner is set to zero address, it will revert with an error.\r\n     * After setting the new signer address, it will emit an event VerifyingSignerChanged.\r\n     */\r\n    function setVerifyingSigner(\r\n        address _newVerifyingSigner\r\n    ) external payable onlyOwner {\r\n        if (_newVerifyingSigner == address(0))\r\n            revert VerifyingSignerCannotBeZero();\r\n        address oldSigner = verifyingSigner;\r\n        assembly (\"memory-safe\") {\r\n            sstore(verifyingSigner.slot, _newVerifyingSigner)\r\n        }\r\n        emit VerifyingSignerChanged(oldSigner, _newVerifyingSigner, msg.sender);\r\n    }\r\n\r\n    // marked for removal\r\n    /**\r\n     * @dev Set a new fee receiver.\r\n     * Can only be called by the owner of the contract.\r\n     * @param _newFeeReceiver The new address to be set as the address of new fee receiver.\r\n     * @notice If _newFeeReceiver is set to zero address, it will revert with an error.\r\n     * After setting the new address, it will emit an event FeeReceiverChanged.\r\n     */\r\n    function setFeeReceiver(\r\n        address _newFeeReceiver\r\n    ) external payable onlyOwner {\r\n        if (_newFeeReceiver == address(0)) revert FeeReceiverCannotBeZero();\r\n        address oldFeeReceiver = feeReceiver;\r\n        assembly (\"memory-safe\") {\r\n            sstore(feeReceiver.slot, _newFeeReceiver)\r\n        }\r\n        emit FeeReceiverChanged(oldFeeReceiver, _newFeeReceiver, msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @dev Set a new overhead for unaccounted cost\r\n     * Can only be called by the owner of the contract.\r\n     * @param _newOverheadCost The new value to be set as the gas cost overhead.\r\n     * @notice If _newOverheadCost is set to very high value, it will revert with an error.\r\n     * After setting the new value, it will emit an event EPGasOverheadChanged.\r\n     */\r\n    function setUnaccountedEPGasOverhead(\r\n        uint256 _newOverheadCost\r\n    ) external payable onlyOwner {\r\n        // review if this could be high value in case of arbitrum\r\n        if (_newOverheadCost > 200000) revert CannotBeUnrealisticValue();\r\n        uint256 oldValue = UNACCOUNTED_COST;\r\n        assembly (\"memory-safe\") {\r\n            sstore(UNACCOUNTED_COST.slot, _newOverheadCost)\r\n        }\r\n        emit EPGasOverheadChanged(oldValue, _newOverheadCost, msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraws the specified amount of gas tokens from the paymaster's balance and transfers them to the specified address.\r\n     * @param withdrawAddress The address to which the gas tokens should be transferred.\r\n     * @param amount The amount of gas tokens to withdraw.\r\n     */\r\n    function withdrawToCheck(\r\n        address payable withdrawAddress,\r\n        uint256 amount\r\n    ) public onlyOwner {\r\n        if (withdrawAddress == address(0)) revert CanNotWithdrawToZeroAddress();\r\n        entryPoint.withdrawTo(withdrawAddress, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the exchange price of the token in wei.\r\n     * @param _token ERC20 token address\r\n     * @param _oracleAggregator oracle aggregator address\r\n     */\r\n    function exchangePrice(\r\n        address _token,\r\n        address _oracleAggregator\r\n    ) internal view virtual returns (uint256) {\r\n        try\r\n            IOracleAggregator(_oracleAggregator).getTokenValueOfOneNativeToken(\r\n                _token\r\n            )\r\n        returns (uint256 exchangeRate) {\r\n            return exchangeRate;\r\n        } catch {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev pull tokens out of paymaster in case they were sent to the paymaster at any point.\r\n     * @param token the token deposit to withdraw\r\n     * @param target address to send to\r\n     * @param amount amount to withdraw\r\n     */\r\n    function withdrawERC20(\r\n        IERC20 token,\r\n        address target,\r\n        uint256 amount\r\n    ) public payable onlyOwner {\r\n        _withdrawERC20(token, target, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev pull tokens out of paymaster in case they were sent to the paymaster at any point.\r\n     * @param token the token deposit to withdraw\r\n     * @param target address to send to\r\n     */\r\n    function withdrawERC20Full(\r\n        IERC20 token,\r\n        address target\r\n    ) public payable onlyOwner {\r\n        uint256 amount = token.balanceOf(address(this));\r\n        _withdrawERC20(token, target, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev pull multiple tokens out of paymaster in case they were sent to the paymaster at any point.\r\n     * @param token the tokens deposit to withdraw\r\n     * @param target address to send to\r\n     * @param amount amounts to withdraw\r\n     */\r\n    function withdrawMultipleERC20(\r\n        IERC20[] calldata token,\r\n        address target,\r\n        uint256[] calldata amount\r\n    ) public payable onlyOwner {\r\n        if (token.length != amount.length)\r\n            revert TokensAndAmountsLengthMismatch();\r\n        unchecked {\r\n            for (uint256 i; i < token.length; ) {\r\n                _withdrawERC20(token[i], target, amount[i]);\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev pull multiple tokens out of paymaster in case they were sent to the paymaster at any point.\r\n     * @param token the tokens deposit to withdraw\r\n     * @param target address to send to\r\n     */\r\n    function withdrawMultipleERC20Full(\r\n        IERC20[] calldata token,\r\n        address target\r\n    ) public payable onlyOwner {\r\n        unchecked {\r\n            for (uint256 i; i < token.length; ) {\r\n                uint256 amount = token[i].balanceOf(address(this));\r\n                _withdrawERC20(token[i], target, amount);\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev pull native tokens out of paymaster in case they were sent to the paymaster at any point\r\n     * @param dest address to send to\r\n     */\r\n    function withdrawAllNative(\r\n        address dest\r\n    ) public payable onlyOwner  {\r\n        uint256 _balance = address(this).balance;\r\n        if (_balance == 0) revert NativeTokenBalanceZero();\r\n        if (dest == address(0)) revert CanNotWithdrawToZeroAddress();\r\n        bool success;\r\n        assembly (\"memory-safe\") {\r\n            success := call(gas(), dest, _balance, 0, 0, 0, 0)\r\n        }\r\n        if (!success) revert NativeTokensWithdrawalFailed();\r\n    }\r\n\r\n    /**\r\n     * @dev This method is called by the off-chain service, to sign the request.\r\n     * It is called on-chain from the validatePaymasterUserOp, to validate the signature.\r\n     * @notice That this signature covers all fields of the UserOperation, except the \"paymasterAndData\",\r\n     * which will carry the signature itself.\r\n     * @return hash we're going to sign off-chain (and validate on-chain)\r\n     */\r\n    function getHash(\r\n        UserOperation calldata userOp,\r\n        ExchangeRateSource priceSource,\r\n        uint48 validUntil,\r\n        uint48 validAfter,\r\n        address feeToken,\r\n        address oracleAggregator,\r\n        uint256 exchangeRate,\r\n        uint32 priceMarkup\r\n    ) public view returns (bytes32) {\r\n        //can't use userOp.hash(), since it contains also the paymasterAndData itself.\r\n        return\r\n            keccak256(\r\n                abi.encode(\r\n                    getPartialHash(userOp),\r\n                    block.chainid,\r\n                    address(this),\r\n                    priceSource,\r\n                    validUntil,\r\n                    validAfter,\r\n                    feeToken,\r\n                    oracleAggregator,\r\n                    exchangeRate,\r\n                    priceMarkup\r\n                )\r\n            );\r\n    }\r\n\r\n\r\nfunction getPartialHash(UserOperation calldata userOp)\r\n    internal pure returns (bytes memory) {\r\n        address sender = userOp.getSender();\r\n        return abi.encode(\r\n            sender,\r\n            userOp.nonce,\r\n            keccak256(userOp.initCode),\r\n            keccak256(userOp.callData),\r\n            userOp.callGasLimit,\r\n            userOp.verificationGasLimit,\r\n            userOp.preVerificationGas,\r\n            userOp.maxFeePerGas,\r\n            userOp.maxPriorityFeePerGas\r\n        );\r\n}\r\n\r\n\r\n    function parsePaymasterAndData(\r\n        bytes calldata paymasterAndData\r\n    )\r\n        public\r\n        pure\r\n        returns (PaymasterData memory)\r\n    {\r\n        // paymasterAndData.length should be at least SIGNATURE_OFFSET + 65 (checked separate)\r\n        require(\r\n            paymasterAndData.length >= SIGNATURE_OFFSET,\r\n            \"BTPM: Invalid length for paymasterAndData\"\r\n        );\r\n\r\n        ExchangeRateSource priceSource = ExchangeRateSource(\r\n            uint8(\r\n                bytes1(paymasterAndData[VALID_PND_OFFSET - 1:VALID_PND_OFFSET])\r\n            )\r\n        );\r\n\r\n        (\r\n            uint48 validUntil,\r\n            uint48 validAfter,\r\n            address feeToken,\r\n            address oracleAggregator,\r\n            uint256 exchangeRate,\r\n            uint32 priceMarkup\r\n        ) = abi.decode(\r\n            paymasterAndData[VALID_PND_OFFSET:SIGNATURE_OFFSET],\r\n            (uint48, uint48, address, address, uint256, uint32)\r\n        );\r\n\r\n        bytes memory signature = paymasterAndData[SIGNATURE_OFFSET:];\r\n\r\n        return PaymasterData({\r\n        priceSource: priceSource,\r\n        validUntil: validUntil,\r\n        validAfter: validAfter,\r\n        feeToken: feeToken,\r\n        oracleAggregator: oracleAggregator,\r\n        exchangeRate: exchangeRate,\r\n        priceMarkup: priceMarkup,\r\n        signature: signature\r\n    });\r\n    }\r\n\r\n    function _getRequiredPrefund(\r\n        UserOperation calldata userOp\r\n    ) internal view returns (uint256 requiredPrefund) {\r\n        unchecked {\r\n            uint256 requiredGas = userOp.callGasLimit +\r\n                userOp.verificationGasLimit +\r\n                userOp.preVerificationGas +\r\n                UNACCOUNTED_COST;\r\n\r\n            requiredPrefund = requiredGas * userOp.maxFeePerGas;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Verify that an external signer signed the paymaster data of a user operation.\r\n     * The paymaster data is expected to be the paymaster address, request data and a signature over the entire request parameters.\r\n     * paymasterAndData: hexConcat([paymasterAddress, priceSource, abi.encode(validUntil, validAfter, feeToken, oracleAggregator, exchangeRate, priceMarkup), signature])\r\n     * @param userOp The UserOperation struct that represents the current user operation.\r\n     * userOpHash The hash of the UserOperation struct.\r\n     * @param requiredPreFund The required amount of pre-funding for the paymaster.\r\n     * @return context A context string returned by the entry point after successful validation.\r\n     * @return validationData An integer returned by the entry point after successful validation.\r\n     */\r\n    function _validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 requiredPreFund\r\n    )\r\n        internal\r\n        view\r\n        override\r\n        returns (bytes memory context, uint256 validationData)\r\n    {\r\n        (requiredPreFund);\r\n        // verificationGasLimit is dual-purposed, as gas limit for postOp. make sure it is high enough\r\n        // make sure that verificationGasLimit is high enough to handle postOp\r\n        require(\r\n            userOp.verificationGasLimit > UNACCOUNTED_COST,\r\n            \"BTPM: gas too low for postOp\"\r\n        );\r\n\r\n        // review: in this method try to resolve stack too deep (though via-ir is good enough)\r\n          PaymasterData memory data = parsePaymasterAndData(userOp.paymasterAndData);\r\n\r\n\r\n        // we only \"require\" it here so that the revert reason on invalid signature will be of \"VerifyingPaymaster\", and not \"ECDSA\"\r\n        require(\r\n            data.signature.length == 65,\r\n            \"BTPM: invalid signature length in paymasterAndData\"\r\n        );\r\n\r\n\r\n        bytes32 tempHash = getHash(\r\n            userOp,\r\n            data.priceSource,\r\n            data.validUntil,\r\n            data.validAfter,\r\n            data.feeToken,\r\n            data.oracleAggregator,\r\n            data.exchangeRate,\r\n            data.priceMarkup\r\n        );\r\n\r\n        // bytes32 _hash = MessageHashUtils.toEthSignedMessageHash(tempHash);\r\n\r\n        context = \"\";\r\n\r\n        //don't revert on signature failure: return SIG_VALIDATION_FAILED\r\n        if (verifyingSigner != MessageHashUtils.toEthSignedMessageHash(tempHash).recover(data.signature)) {\r\n            // empty context and sigFailed true\r\n            return (\r\n                context,\r\n                Helpers._packValidationData(true, data.validUntil, data.validAfter)\r\n            );\r\n        }\r\n\r\n        // address account = userOp.getSender();\r\n\r\n        // This model assumes irrespective of priceSource exchangeRate is always sent from outside\r\n        // for below checks you would either need maxCost or some exchangeRate\r\n\r\n        // uint256 btpmRequiredPrefund = _getRequiredPrefund(userOp);\r\n\r\n        uint256 tokenRequiredPreFund = (_getRequiredPrefund(userOp) * data.exchangeRate) /\r\n            10 ** 18;\r\n        require(\r\n            tokenRequiredPreFund != 0,\r\n            \"BTPM: calculated token charge invalid\"\r\n        );\r\n        require(data.priceMarkup <= 2e6, \"BTPM: price markup percentage too high\");\r\n        require(data.priceMarkup >= 1e6, \"BTPM: price markup percentage too low\");\r\n        require(\r\n            IERC20(data.feeToken).balanceOf(userOp.getSender()) >=\r\n                ((tokenRequiredPreFund * data.priceMarkup) / PRICE_DENOMINATOR),\r\n            \"BTPM: account does not have enough token balance\"\r\n        );\r\n\r\n        context = abi.encode(\r\n            userOp.getSender(),\r\n            data.feeToken,\r\n            data.oracleAggregator,\r\n            data.priceSource,\r\n            data.exchangeRate,\r\n            data.priceMarkup,\r\n            userOpHash\r\n        );\r\n\r\n        return (\r\n            context,\r\n            Helpers._packValidationData(false, data.validUntil, data.validAfter)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Executes the paymaster's payment conditions\r\n     * @param mode tells whether the op succeeded, reverted, or if the op succeeded but cause the postOp to revert\r\n     * @param context payment conditions signed by the paymaster in `validatePaymasterUserOp`\r\n     * @param actualGasCost amount to be paid to the entry point in wei\r\n     */\r\n    function _postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) internal virtual override {\r\n        (\r\n            address account,\r\n            IERC20 feeToken,\r\n            address oracleAggregator,\r\n            ExchangeRateSource priceSource,\r\n            uint256 exchangeRate,\r\n            uint32 priceMarkup,\r\n            bytes32 userOpHash\r\n        ) = abi.decode(\r\n                context,\r\n                (\r\n                    address,\r\n                    IERC20,\r\n                    address,\r\n                    ExchangeRateSource,\r\n                    uint256,\r\n                    uint32,\r\n                    bytes32\r\n                )\r\n            );\r\n\r\n        uint256 effectiveExchangeRate = exchangeRate;\r\n\r\n        if (\r\n            priceSource == ExchangeRateSource.ORACLE_BASED &&\r\n            oracleAggregator != address(NATIVE_ADDRESS) &&\r\n            oracleAggregator != address(0)\r\n        ) {\r\n            uint256 result = exchangePrice(address(feeToken), oracleAggregator);\r\n            if (result != 0) effectiveExchangeRate = result;\r\n        }\r\n\r\n        // We could either touch the state for BASEFEE and calculate based on maxPriorityFee passed (to be added in context along with maxFeePerGas) or just use tx.gasprice\r\n        uint256 charge; // Final amount to be charged from user account\r\n        {\r\n            uint256 actualTokenCost = ((actualGasCost +\r\n                (UNACCOUNTED_COST * tx.gasprice)) * effectiveExchangeRate) /\r\n                1e18;\r\n            charge = ((actualTokenCost * priceMarkup) / PRICE_DENOMINATOR);\r\n        }\r\n\r\n        if (mode != PostOpMode.postOpReverted) {   \r\n            IERC20(feeToken).transferFrom(\r\n                account,\r\n                feeReceiver,\r\n                charge\r\n            );\r\n            emit TokenPaymasterOperation(\r\n                account,\r\n                address(feeToken),\r\n                charge,\r\n                oracleAggregator,\r\n                priceMarkup,\r\n                userOpHash,\r\n                effectiveExchangeRate,\r\n                priceSource\r\n            );\r\n        } else {\r\n            // In case transferFrom failed in first handlePostOp call, attempt to charge the tokens again\r\n            bytes memory _data = abi.encodeWithSelector(\r\n                feeToken.transferFrom.selector,\r\n                account,\r\n                feeReceiver,\r\n                charge\r\n            );\r\n            (bool success,) = address(feeToken).call(\r\n                _data\r\n            );\r\n            if (!success) {\r\n                // In case above transferFrom failed, pay with deposit / notify at least\r\n                // Sender could be banned indefinitely or for certain period\r\n                emit TokenPaymentDue(address(feeToken), account, charge);\r\n                // Do nothing else here to not revert the whole bundle and harm reputation\r\n            }\r\n        }\r\n    }\r\n\r\n    function _withdrawERC20(\r\n        IERC20 token,\r\n        address target,\r\n        uint256 amount\r\n    ) private {\r\n        if (target == address(0)) revert CanNotWithdrawToZeroAddress();\r\n        IERC20(token).transfer(target, amount);\r\n    }\r\n\r\n    receive() external payable {\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n}"},"contracts/utils/TokenPaymasterErrors.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ncontract TokenPaymasterErrors {\r\n    /**\r\n     * @notice Throws when the Entrypoint address provided is address(0)\r\n     */\r\n    error EntryPointCannotBeZero();\r\n\r\n    /**\r\n     * @notice Throws when the owner address provided is address(0)\r\n     */\r\n    error OwnerCannotBeZero();\r\n\r\n    /**\r\n     * @notice Throws when the verifiying signer address provided is address(0)\r\n     */\r\n    error VerifyingSignerCannotBeZero();\r\n\r\n    /**\r\n     * @notice Throws when the 0 has been provided as deposit\r\n     */\r\n    error DepositCanNotBeZero();\r\n\r\n    /**\r\n     * @notice Throws when trying to withdraw to address(0)\r\n     */\r\n    error CanNotWithdrawToZeroAddress();\r\n\r\n    /**\r\n     * @notice Throws when trying to withdraw more than balance available\r\n     * @param amountRequired required balance\r\n     * @param currentBalance available balance\r\n     */\r\n    /*error InsufficientTokenBalance(\r\n        uint256 amountRequired,\r\n        uint256 currentBalance\r\n    );*/\r\n\r\n    /**\r\n     * @notice Throws when signature provided has invalid length\r\n     * @param sigLength length oif the signature provided\r\n     */\r\n    // error InvalidPaymasterSignatureLength(uint256 sigLength);\r\n\r\n    /**\r\n     * @notice Throws when the fee receiver address provided is address(0)\r\n     */\r\n    error FeeReceiverCannotBeZero();\r\n\r\n    error TokensAndAmountsLengthMismatch();\r\n\r\n    error NativeTokenBalanceZero();\r\n\r\n    error NativeTokensWithdrawalFailed();\r\n\r\n    error CannotBeUnrealisticValue();\r\n\r\n    error DEXRouterCannotBeZero();\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[500],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":501,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":500,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,500],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[225]},"id":226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"132:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":225,"linearizedBaseContracts":[225],"name":"IERC20","nameLocation":"213:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"226:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":159,"name":"Transfer","nameLocation":"395:8:1","nodeType":"EventDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:1","nodeType":"VariableDeclaration","scope":159,"src":"404:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:1","nodeType":"VariableDeclaration","scope":159,"src":"426:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:1","nodeType":"VariableDeclaration","scope":159,"src":"446:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:1"},"src":"389:72:1"},{"anonymous":false,"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"467:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":168,"name":"Approval","nameLocation":"626:8:1","nodeType":"EventDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:1","nodeType":"VariableDeclaration","scope":168,"src":"635:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:1","nodeType":"VariableDeclaration","scope":168,"src":"658:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:1","nodeType":"VariableDeclaration","scope":168,"src":"683:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:1"},"src":"620:78:1"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"704:65:1","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":174,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":174,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":225,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"835:71:1","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":182,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"account","nameLocation":"938:7:1","nodeType":"VariableDeclaration","scope":182,"src":"930:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"970:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:1"},"scope":225,"src":"911:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"985:213:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"1229:2:1","nodeType":"VariableDeclaration","scope":192,"src":"1221:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"1241:5:1","nodeType":"VariableDeclaration","scope":192,"src":"1233:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"1266:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:1"},"scope":225,"src":"1203:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1278:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:1","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"owner","nameLocation":"1574:5:1","nodeType":"VariableDeclaration","scope":202,"src":"1566:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1589:7:1","nodeType":"VariableDeclaration","scope":202,"src":"1581:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:1"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"1621:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:1"},"scope":225,"src":"1547:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"1636:667:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":212,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"spender","nameLocation":"2333:7:1","nodeType":"VariableDeclaration","scope":212,"src":"2325:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"value","nameLocation":"2350:5:1","nodeType":"VariableDeclaration","scope":212,"src":"2342:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"2375:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":209,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:1"},"scope":225,"src":"2308:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"2387:297:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"from","nameLocation":"2719:4:1","nodeType":"VariableDeclaration","scope":224,"src":"2711:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"to","nameLocation":"2733:2:1","nodeType":"VariableDeclaration","scope":224,"src":"2725:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"value","nameLocation":"2745:5:1","nodeType":"VariableDeclaration","scope":224,"src":"2737:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2770:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":221,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:1"},"scope":225,"src":"2689:87:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":226,"src":"203:2575:1","usedErrors":[],"usedEvents":[159,168]}],"src":"106:2673:1"},"id":1},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[478]},"id":479,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":227,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"127:67:2","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":478,"linearizedBaseContracts":[478],"name":"Address","nameLocation":"203:7:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"217:94:2","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":233,"name":"AddressInsufficientBalance","nameLocation":"322:26:2","nodeType":"ErrorDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"account","nameLocation":"357:7:2","nodeType":"VariableDeclaration","scope":233,"src":"349:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:2"},"src":"316:50:2"},{"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"372:75:2","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":238,"name":"AddressEmptyCode","nameLocation":"458:16:2","nodeType":"ErrorDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"target","nameLocation":"483:6:2","nodeType":"VariableDeclaration","scope":238,"src":"475:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:2"},"src":"452:39:2"},{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"497:89:2","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":241,"name":"FailedInnerCall","nameLocation":"597:15:2","nodeType":"ErrorDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"612:2:2"},"src":"591:24:2"},{"body":{"id":281,"nodeType":"Block","src":"1602:260:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":251,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$478","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$478","typeString":"library Address"}],"id":250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:2","typeDescriptions":{}}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:2","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":254,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1640:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":264,"nodeType":"IfStatement","src":"1612:109:2","trueBody":{"id":263,"nodeType":"Block","src":"1648:73:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":259,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$478","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$478","typeString":"library Address"}],"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:2","typeDescriptions":{}}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":256,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1669:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":262,"nodeType":"RevertStatement","src":"1662:48:2"}]}},{"assignments":[266,null],"declarations":[{"constant":false,"id":266,"mutability":"mutable","name":"success","nameLocation":"1737:7:2","nodeType":"VariableDeclaration","scope":281,"src":"1732:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":265,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":273,"initialValue":{"arguments":[{"hexValue":"","id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":267,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"1750:9:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:2","memberName":"call","nodeType":"MemberAccess","src":"1750:14:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":269,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1772:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:2"},{"condition":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:2","subExpression":{"id":274,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1798:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":280,"nodeType":"IfStatement","src":"1793:63:2","trueBody":{"id":279,"nodeType":"Block","src":"1807:49:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"1828:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"RevertStatement","src":"1821:24:2"}]}}]},"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"621:905:2","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":282,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:2","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:2","nodeType":"VariableDeclaration","scope":282,"src":"1550:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"amount","nameLocation":"1585:6:2","nodeType":"VariableDeclaration","scope":282,"src":"1577:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:2"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"1602:0:2"},"scope":478,"src":"1531:331:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"2794:62:2","statements":[{"expression":{"arguments":[{"id":293,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"2833:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":294,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"2841:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":292,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2811:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":291,"id":297,"nodeType":"Return","src":"2804:45:2"}]},"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"1868:832:2","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":299,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:2","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"target","nameLocation":"2735:6:2","nodeType":"VariableDeclaration","scope":299,"src":"2727:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"data","nameLocation":"2756:4:2","nodeType":"VariableDeclaration","scope":299,"src":"2743:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":286,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:2"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"2780:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":289,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:2"},"scope":478,"src":"2705:151:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":344,"nodeType":"Block","src":"3293:279:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":313,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$478","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$478","typeString":"library Address"}],"id":312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:2","typeDescriptions":{}}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:2","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3331:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":326,"nodeType":"IfStatement","src":"3303:108:2","trueBody":{"id":325,"nodeType":"Block","src":"3338:73:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":321,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$478","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$478","typeString":"library Address"}],"id":320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:2","typeDescriptions":{}}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":318,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"3359:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"RevertStatement","src":"3352:48:2"}]}},{"assignments":[328,330],"declarations":[{"constant":false,"id":328,"mutability":"mutable","name":"success","nameLocation":"3426:7:2","nodeType":"VariableDeclaration","scope":344,"src":"3421:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":327,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:2","nodeType":"VariableDeclaration","scope":344,"src":"3435:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":329,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":337,"initialValue":{"arguments":[{"id":335,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3488:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":331,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3462:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:2","memberName":"call","nodeType":"MemberAccess","src":"3462:11:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3481:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:2"},{"expression":{"arguments":[{"id":339,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3537:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":340,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3545:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":341,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3554:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":338,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3510:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":310,"id":343,"nodeType":"Return","src":"3503:62:2"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"2862:313:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":345,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:2","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"target","nameLocation":"3219:6:2","nodeType":"VariableDeclaration","scope":345,"src":"3211:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"data","nameLocation":"3240:4:2","nodeType":"VariableDeclaration","scope":345,"src":"3227:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":303,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"value","nameLocation":"3254:5:2","nodeType":"VariableDeclaration","scope":345,"src":"3246:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:2"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"3279:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":308,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:2"},"scope":478,"src":"3180:392:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":370,"nodeType":"Block","src":"3811:154:2","statements":[{"assignments":[356,358],"declarations":[{"constant":false,"id":356,"mutability":"mutable","name":"success","nameLocation":"3827:7:2","nodeType":"VariableDeclaration","scope":370,"src":"3822:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":355,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:2","nodeType":"VariableDeclaration","scope":370,"src":"3836:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":363,"initialValue":{"arguments":[{"id":361,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"3881:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":359,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"3863:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:2","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:2","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:2"},{"expression":{"arguments":[{"id":365,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"3930:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":366,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"3938:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":367,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"3947:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":364,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3903:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":354,"id":369,"nodeType":"Return","src":"3896:62:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"3578:128:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":371,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:2","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"target","nameLocation":"3747:6:2","nodeType":"VariableDeclaration","scope":371,"src":"3739:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"data","nameLocation":"3768:4:2","nodeType":"VariableDeclaration","scope":371,"src":"3755:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":349,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:2"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":371,"src":"3797:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":352,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:2"},"scope":478,"src":"3711:254:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":396,"nodeType":"Block","src":"4203:156:2","statements":[{"assignments":[382,384],"declarations":[{"constant":false,"id":382,"mutability":"mutable","name":"success","nameLocation":"4219:7:2","nodeType":"VariableDeclaration","scope":396,"src":"4214:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":381,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:2","nodeType":"VariableDeclaration","scope":396,"src":"4228:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":383,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":389,"initialValue":{"arguments":[{"id":387,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4275:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":385,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4255:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:2","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:2","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:2"},{"expression":{"arguments":[{"id":391,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4324:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":392,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"4332:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":393,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"4341:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":390,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4297:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":380,"id":395,"nodeType":"Return","src":"4290:62:2"}]},"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"3971:130:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":397,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:2","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"target","nameLocation":"4144:6:2","nodeType":"VariableDeclaration","scope":397,"src":"4136:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"data","nameLocation":"4165:4:2","nodeType":"VariableDeclaration","scope":397,"src":"4152:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":375,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:2"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"4189:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":378,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:2"},"scope":478,"src":"4106:253:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"4783:424:2","statements":[{"condition":{"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:2","subExpression":{"id":409,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"4798:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":434,"nodeType":"Block","src":"4857:344:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":416,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"5045:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:2","memberName":"length","nodeType":"MemberAccess","src":"5045:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":420,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5071:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:2","memberName":"code","nodeType":"MemberAccess","src":"5071:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:2","memberName":"length","nodeType":"MemberAccess","src":"5071:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":431,"nodeType":"IfStatement","src":"5041:119:2","trueBody":{"id":430,"nodeType":"Block","src":"5096:64:2","statements":[{"errorCall":{"arguments":[{"id":427,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5138:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":426,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"5121:16:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"RevertStatement","src":"5114:31:2"}]}},{"expression":{"id":432,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"5180:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":408,"id":433,"nodeType":"Return","src":"5173:17:2"}]},"id":435,"nodeType":"IfStatement","src":"4793:408:2","trueBody":{"id":415,"nodeType":"Block","src":"4807:44:2","statements":[{"expression":{"arguments":[{"id":412,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"4829:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":411,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4821:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"4821:19:2"}]}}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"4365:255:2","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":437,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:2","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"target","nameLocation":"4678:6:2","nodeType":"VariableDeclaration","scope":437,"src":"4670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"success","nameLocation":"4699:7:2","nodeType":"VariableDeclaration","scope":437,"src":"4694:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":401,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:2","nodeType":"VariableDeclaration","scope":437,"src":"4716:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":403,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"4769:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":406,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:2"},"scope":478,"src":"4625:582:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":458,"nodeType":"Block","src":"5509:122:2","statements":[{"condition":{"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:2","subExpression":{"id":447,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"5524:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":456,"nodeType":"Block","src":"5583:42:2","statements":[{"expression":{"id":454,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"5604:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":446,"id":455,"nodeType":"Return","src":"5597:17:2"}]},"id":457,"nodeType":"IfStatement","src":"5519:106:2","trueBody":{"id":453,"nodeType":"Block","src":"5533:44:2","statements":[{"expression":{"arguments":[{"id":450,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"5555:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":449,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"5547:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":452,"nodeType":"ExpressionStatement","src":"5547:19:2"}]}}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"5213:189:2","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":459,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:2","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"success","nameLocation":"5438:7:2","nodeType":"VariableDeclaration","scope":459,"src":"5433:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":439,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:2","nodeType":"VariableDeclaration","scope":459,"src":"5447:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":441,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:2"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":459,"src":"5495:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":444,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:2"},"scope":478,"src":"5407:224:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"5798:461:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":465,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5874:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:2","memberName":"length","nodeType":"MemberAccess","src":"5874:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":474,"nodeType":"Block","src":"6204:49:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":471,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"6225:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"RevertStatement","src":"6218:24:2"}]},"id":475,"nodeType":"IfStatement","src":"5870:383:2","trueBody":{"id":470,"nodeType":"Block","src":"5897:301:2","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:2","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:2","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:2"},"nodeType":"YulFunctionCall","src":"6096:17:2"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:2","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:2","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:2"},"nodeType":"YulFunctionCall","src":"6137:19:2"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:2"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:2"},"nodeType":"YulFunctionCall","src":"6130:44:2"},"nodeType":"YulExpressionStatement","src":"6130:44:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":462,"isOffset":false,"isSlot":false,"src":"6102:10:2","valueSize":1},{"declaration":462,"isOffset":false,"isSlot":false,"src":"6145:10:2","valueSize":1}],"id":469,"nodeType":"InlineAssembly","src":"6046:142:2"}]}}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"5637:101:2","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":477,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:2","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:2","nodeType":"VariableDeclaration","scope":477,"src":"5760:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:2"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"5798:0:2"},"scope":478,"src":"5743:516:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":479,"src":"195:6066:2","usedErrors":[233,238,241],"usedEvents":[]}],"src":"101:6161:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[500]},"id":501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":480,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"127:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":500,"linearizedBaseContracts":[500],"name":"Context","nameLocation":"642:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":489,"nodeType":"Block","src":"718:34:3","statements":[{"expression":{"expression":{"id":486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:3","memberName":"sender","nodeType":"MemberAccess","src":"735:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":485,"id":488,"nodeType":"Return","src":"728:17:3"}]},"id":490,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:3","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"675:2:3"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":490,"src":"709:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:3"},"scope":500,"src":"656:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":498,"nodeType":"Block","src":"825:32:3","statements":[{"expression":{"expression":{"id":495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:3","memberName":"data","nodeType":"MemberAccess","src":"842:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":494,"id":497,"nodeType":"Return","src":"835:15:3"}]},"id":499,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:3","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"775:2:3"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":499,"src":"809:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":492,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:3"},"scope":500,"src":"758:99:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":501,"src":"624:235:3","usedErrors":[],"usedEvents":[]}],"src":"101:759:3"},"id":3},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2231],"SignedMath":[2336],"Strings":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":502,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":2232,"src":"127:37:4","symbolAliases":[{"foreign":{"id":503,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"135:4:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":506,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":2337,"src":"165:49:4","symbolAliases":[{"foreign":{"id":505,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"173:10:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"216:34:4","text":" @dev String operations."},"fullyImplemented":true,"id":755,"linearizedBaseContracts":[755],"name":"Strings","nameLocation":"259:7:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":510,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:4","nodeType":"VariableDeclaration","scope":755,"src":"273:56:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":508,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":513,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:4","nodeType":"VariableDeclaration","scope":755,"src":"335:42:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":511,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"384:81:4","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":520,"name":"StringsInsufficientHexLength","nameLocation":"476:28:4","nodeType":"ErrorDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"513:5:4","nodeType":"VariableDeclaration","scope":520,"src":"505:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"length","nameLocation":"528:6:4","nodeType":"VariableDeclaration","scope":520,"src":"520:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:4"},"src":"470:66:4"},{"body":{"id":567,"nodeType":"Block","src":"708:627:4","statements":[{"id":566,"nodeType":"UncheckedBlock","src":"718:611:4","statements":[{"assignments":[529],"declarations":[{"constant":false,"id":529,"mutability":"mutable","name":"length","nameLocation":"750:6:4","nodeType":"VariableDeclaration","scope":566,"src":"742:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"770:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":530,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"759:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2231_$","typeString":"type(library Math)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:4","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2051,"src":"759:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:4"},{"assignments":[538],"declarations":[{"constant":false,"id":538,"mutability":"mutable","name":"buffer","nameLocation":"808:6:4","nodeType":"VariableDeclaration","scope":566,"src":"794:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":537,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":543,"initialValue":{"arguments":[{"id":541,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"828:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":539,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:4"},{"assignments":[545],"declarations":[{"constant":false,"id":545,"mutability":"mutable","name":"ptr","nameLocation":"857:3:4","nodeType":"VariableDeclaration","scope":566,"src":"849:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":546,"nodeType":"VariableDeclarationStatement","src":"849:11:4"},{"AST":{"nodeType":"YulBlock","src":"930:67:4","statements":[{"nodeType":"YulAssignment","src":"948:35:4","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:4","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:4"},"nodeType":"YulFunctionCall","src":"967:15:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:4"},"nodeType":"YulFunctionCall","src":"955:28:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":538,"isOffset":false,"isSlot":false,"src":"959:6:4","valueSize":1},{"declaration":529,"isOffset":false,"isSlot":false,"src":"975:6:4","valueSize":1},{"declaration":545,"isOffset":false,"isSlot":false,"src":"948:3:4","valueSize":1}],"id":547,"nodeType":"InlineAssembly","src":"921:76:4"},{"body":{"id":562,"nodeType":"Block","src":"1023:269:4","statements":[{"expression":{"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:4","subExpression":{"id":549,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"1041:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":551,"nodeType":"ExpressionStatement","src":"1041:5:4"},{"AST":{"nodeType":"YulBlock","src":"1124:86:4","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:4","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:4"},"nodeType":"YulFunctionCall","src":"1164:14:4"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:4"},"nodeType":"YulFunctionCall","src":"1159:32:4"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:4"},"nodeType":"YulFunctionCall","src":"1146:46:4"},"nodeType":"YulExpressionStatement","src":"1146:46:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":510,"isOffset":false,"isSlot":false,"src":"1180:10:4","valueSize":1},{"declaration":545,"isOffset":false,"isSlot":false,"src":"1154:3:4","valueSize":1},{"declaration":523,"isOffset":false,"isSlot":false,"src":"1168:5:4","valueSize":1}],"id":552,"nodeType":"InlineAssembly","src":"1115:95:4"},{"expression":{"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"1227:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":556,"nodeType":"ExpressionStatement","src":"1227:11:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"1260:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"1256:21:4","trueBody":{"id":560,"nodeType":"Break","src":"1272:5:4"}}]},"condition":{"hexValue":"74727565","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":563,"nodeType":"WhileStatement","src":"1010:282:4"},{"expression":{"id":564,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"1312:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":527,"id":565,"nodeType":"Return","src":"1305:13:4"}]}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"542:90:4","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":568,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:4","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"value","nameLocation":"663:5:4","nodeType":"VariableDeclaration","scope":568,"src":"655:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:4"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":568,"src":"693:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":525,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:4"},"scope":755,"src":"637:698:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"1511:92:4","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"1542:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:4","trueExpression":{"hexValue":"2d","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"1588:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":586,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"1573:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2336_$","typeString":"type(library SignedMath)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:4","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"1573:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":585,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"1564:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":576,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:4","typeDescriptions":{}}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:4","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:4","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":575,"id":592,"nodeType":"Return","src":"1521:75:4"}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"1341:89:4","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:4","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"value","nameLocation":"1466:5:4","nodeType":"VariableDeclaration","scope":594,"src":"1459:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":570,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:4"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"1496:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":573,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:4"},"scope":755,"src":"1435:168:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":613,"nodeType":"Block","src":"1782:100:4","statements":[{"id":612,"nodeType":"UncheckedBlock","src":"1792:84:4","statements":[{"expression":{"arguments":[{"id":603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"1835:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"1854:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":604,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"1842:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2231_$","typeString":"type(library Math)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:4","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"1842:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":602,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[614,697,717],"referencedDeclaration":697,"src":"1823:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":601,"id":611,"nodeType":"Return","src":"1816:49:4"}]}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"1609:94:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":614,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:4","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"value","nameLocation":"1737:5:4","nodeType":"VariableDeclaration","scope":614,"src":"1729:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:4"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":614,"src":"1767:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":599,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:4"},"scope":755,"src":"1708:174:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"2095:435:4","statements":[{"assignments":[625],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:4","nodeType":"VariableDeclaration","scope":696,"src":"2105:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":627,"initialValue":{"id":626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"2126:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:4"},{"assignments":[629],"declarations":[{"constant":false,"id":629,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:4","nodeType":"VariableDeclaration","scope":696,"src":"2141:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":628,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":638,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":633,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"2177:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":630,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:4"},{"expression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":639,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2198:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":641,"indexExpression":{"hexValue":"30","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":644,"nodeType":"ExpressionStatement","src":"2198:15:4"},{"expression":{"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":645,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2223:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":647,"indexExpression":{"hexValue":"31","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":650,"nodeType":"ExpressionStatement","src":"2223:15:4"},{"body":{"id":679,"nodeType":"Block","src":"2293:95:4","statements":[{"expression":{"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":665,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2307:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":667,"indexExpression":{"id":666,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"2314:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":668,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"2319:10:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":672,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2330:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":674,"nodeType":"ExpressionStatement","src":"2307:40:4"},{"expression":{"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":675,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2361:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":678,"nodeType":"ExpressionStatement","src":"2361:16:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"2281:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"initializationExpression":{"assignments":[652],"declarations":[{"constant":false,"id":652,"mutability":"mutable","name":"i","nameLocation":"2261:1:4","nodeType":"VariableDeclaration","scope":680,"src":"2253:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":658,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":654,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"2269:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:4"},"loopExpression":{"expression":{"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:4","subExpression":{"id":662,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"2290:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":664,"nodeType":"ExpressionStatement","src":"2288:3:4"},"nodeType":"ForStatement","src":"2248:140:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":681,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2401:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":690,"nodeType":"IfStatement","src":"2397:96:4","trueBody":{"id":689,"nodeType":"Block","src":"2418:75:4","statements":[{"errorCall":{"arguments":[{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"2468:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":686,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"2475:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":684,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2439:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"RevertStatement","src":"2432:50:4"}]}},{"expression":{"arguments":[{"id":693,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2516:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":691,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:4","typeDescriptions":{}}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":623,"id":695,"nodeType":"Return","src":"2502:21:4"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"1888:112:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:4","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"value","nameLocation":"2034:5:4","nodeType":"VariableDeclaration","scope":697,"src":"2026:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"length","nameLocation":"2049:6:4","nodeType":"VariableDeclaration","scope":697,"src":"2041:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:4"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":697,"src":"2080:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":621,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:4"},"scope":755,"src":"2005:525:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":716,"nodeType":"Block","src":"2762:75:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":710,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"2807:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":708,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:4","typeDescriptions":{}}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:4","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":713,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2815:14:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":705,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[614,697,717],"referencedDeclaration":697,"src":"2779:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":704,"id":715,"nodeType":"Return","src":"2772:58:4"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"2536:148:4","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":717,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:4","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"addr","nameLocation":"2718:4:4","nodeType":"VariableDeclaration","scope":717,"src":"2710:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:4"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":717,"src":"2747:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":702,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:4"},"scope":755,"src":"2689:148:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"2992:104:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":729,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"3015:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":727,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:4","typeDescriptions":{}}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:4","memberName":"length","nodeType":"MemberAccess","src":"3009:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":734,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"3034:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":732,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:4","typeDescriptions":{}}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:4","memberName":"length","nodeType":"MemberAccess","src":"3028:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":741,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"3063:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:4","typeDescriptions":{}}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":738,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":747,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"3086:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":745,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:4","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":744,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":726,"id":752,"nodeType":"Return","src":"3002:87:4"}]},"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"2843:66:4","text":" @dev Returns true if the two strings are equal."},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:4","nodeType":"FunctionDefinition","parameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"a","nameLocation":"2943:1:4","nodeType":"VariableDeclaration","scope":754,"src":"2929:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":719,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"b","nameLocation":"2960:1:4","nodeType":"VariableDeclaration","scope":754,"src":"2946:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":721,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:4"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"2986:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":724,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:4"},"scope":755,"src":"2914:182:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":756,"src":"251:2847:4","usedErrors":[520],"usedEvents":[]}],"src":"101:2998:4"},"id":4},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1103]},"id":1104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"138:205:5","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1103,"linearizedBaseContracts":[1103],"name":"ECDSA","nameLocation":"352:5:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":763,"members":[{"id":759,"name":"NoError","nameLocation":"392:7:5","nodeType":"EnumValue","src":"392:7:5"},{"id":760,"name":"InvalidSignature","nameLocation":"409:16:5","nodeType":"EnumValue","src":"409:16:5"},{"id":761,"name":"InvalidSignatureLength","nameLocation":"435:22:5","nodeType":"EnumValue","src":"435:22:5"},{"id":762,"name":"InvalidSignatureS","nameLocation":"467:17:5","nodeType":"EnumValue","src":"467:17:5"}],"name":"RecoverError","nameLocation":"369:12:5","nodeType":"EnumDefinition","src":"364:126:5"},{"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"496:63:5","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":766,"name":"ECDSAInvalidSignature","nameLocation":"570:21:5","nodeType":"ErrorDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"591:2:5"},"src":"564:30:5"},{"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"600:60:5","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":771,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:5","nodeType":"ErrorDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"length","nameLocation":"707:6:5","nodeType":"VariableDeclaration","scope":771,"src":"699:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:5"},"src":"665:50:5"},{"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"721:85:5","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":776,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:5","nodeType":"ErrorDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"s","nameLocation":"848:1:5","nodeType":"VariableDeclaration","scope":776,"src":"840:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:5"},"src":"811:40:5"},{"body":{"id":828,"nodeType":"Block","src":"2242:653:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":791,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"2256:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:5","memberName":"length","nodeType":"MemberAccess","src":"2256:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:5","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":826,"nodeType":"Block","src":"2781:108:5","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:5","typeDescriptions":{}}},"id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":817,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"2815:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$763_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:5","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":761,"src":"2815:35:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":821,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"2860:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:5","memberName":"length","nodeType":"MemberAccess","src":"2860:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:5","typeDescriptions":{}}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":790,"id":825,"nodeType":"Return","src":"2795:83:5"}]},"id":827,"nodeType":"IfStatement","src":"2252:637:5","trueBody":{"id":812,"nodeType":"Block","src":"2280:495:5","statements":[{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"r","nameLocation":"2302:1:5","nodeType":"VariableDeclaration","scope":812,"src":"2294:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":797,"nodeType":"VariableDeclarationStatement","src":"2294:9:5"},{"assignments":[799],"declarations":[{"constant":false,"id":799,"mutability":"mutable","name":"s","nameLocation":"2325:1:5","nodeType":"VariableDeclaration","scope":812,"src":"2317:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":800,"nodeType":"VariableDeclarationStatement","src":"2317:9:5"},{"assignments":[802],"declarations":[{"constant":false,"id":802,"mutability":"mutable","name":"v","nameLocation":"2346:1:5","nodeType":"VariableDeclaration","scope":812,"src":"2340:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":801,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":803,"nodeType":"VariableDeclarationStatement","src":"2340:7:5"},{"AST":{"nodeType":"YulBlock","src":"2548:171:5","statements":[{"nodeType":"YulAssignment","src":"2566:32:5","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:5"},"nodeType":"YulFunctionCall","src":"2577:20:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:5"},"nodeType":"YulFunctionCall","src":"2571:27:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:5"}]},{"nodeType":"YulAssignment","src":"2615:32:5","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:5"},"nodeType":"YulFunctionCall","src":"2626:20:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:5"},"nodeType":"YulFunctionCall","src":"2620:27:5"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:5"}]},{"nodeType":"YulAssignment","src":"2664:41:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:5","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:5"},"nodeType":"YulFunctionCall","src":"2683:20:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:5"},"nodeType":"YulFunctionCall","src":"2677:27:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:5"},"nodeType":"YulFunctionCall","src":"2669:36:5"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":796,"isOffset":false,"isSlot":false,"src":"2566:1:5","valueSize":1},{"declaration":799,"isOffset":false,"isSlot":false,"src":"2615:1:5","valueSize":1},{"declaration":781,"isOffset":false,"isSlot":false,"src":"2581:9:5","valueSize":1},{"declaration":781,"isOffset":false,"isSlot":false,"src":"2630:9:5","valueSize":1},{"declaration":781,"isOffset":false,"isSlot":false,"src":"2687:9:5","valueSize":1},{"declaration":802,"isOffset":false,"isSlot":false,"src":"2664:1:5","valueSize":1}],"id":804,"nodeType":"InlineAssembly","src":"2539:180:5"},{"expression":{"arguments":[{"id":806,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2750:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":807,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"2756:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":808,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"2759:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":809,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"2762:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":805,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[829,909,1017],"referencedDeclaration":1017,"src":"2739:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":790,"id":811,"nodeType":"Return","src":"2732:32:5"}]}}]},"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"857:1267:5","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":829,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:5","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"hash","nameLocation":"2157:4:5","nodeType":"VariableDeclaration","scope":829,"src":"2149:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"signature","nameLocation":"2176:9:5","nodeType":"VariableDeclaration","scope":829,"src":"2163:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":780,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:5"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"2210:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"2219:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":786,"nodeType":"UserDefinedTypeName","pathNode":{"id":785,"name":"RecoverError","nameLocations":["2219:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":763,"src":"2219:12:5"},"referencedDeclaration":763,"src":"2219:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"2233:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:5"},"scope":1103,"src":"2129:766:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":858,"nodeType":"Block","src":"3789:168:5","statements":[{"assignments":[840,843,845],"declarations":[{"constant":false,"id":840,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:5","nodeType":"VariableDeclaration","scope":858,"src":"3800:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"error","nameLocation":"3832:5:5","nodeType":"VariableDeclaration","scope":858,"src":"3819:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":842,"nodeType":"UserDefinedTypeName","pathNode":{"id":841,"name":"RecoverError","nameLocations":["3819:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":763,"src":"3819:12:5"},"referencedDeclaration":763,"src":"3819:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:5","nodeType":"VariableDeclaration","scope":858,"src":"3839:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":850,"initialValue":{"arguments":[{"id":847,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3870:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":848,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"3876:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":846,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[829,909,1017],"referencedDeclaration":829,"src":"3859:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:5"},{"expression":{"arguments":[{"id":852,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"3908:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},{"id":853,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"3915:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":851,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3896:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$763_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"ExpressionStatement","src":"3896:28:5"},{"expression":{"id":856,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"3941:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":838,"id":857,"nodeType":"Return","src":"3934:16:5"}]},"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"2901:796:5","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":859,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:5","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"hash","nameLocation":"3727:4:5","nodeType":"VariableDeclaration","scope":859,"src":"3719:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"signature","nameLocation":"3746:9:5","nodeType":"VariableDeclaration","scope":859,"src":"3733:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:5"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"3780:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:5"},"scope":1103,"src":"3702:255:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":908,"nodeType":"Block","src":"4285:342:5","statements":[{"id":907,"nodeType":"UncheckedBlock","src":"4295:326:5","statements":[{"assignments":[877],"declarations":[{"constant":false,"id":877,"mutability":"mutable","name":"s","nameLocation":"4327:1:5","nodeType":"VariableDeclaration","scope":907,"src":"4319:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":884,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4331:2:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:5","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:5","typeDescriptions":{}}},"id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:5"},{"assignments":[886],"declarations":[{"constant":false,"id":886,"mutability":"mutable","name":"v","nameLocation":"4528:1:5","nodeType":"VariableDeclaration","scope":907,"src":"4522:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":885,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":899,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":891,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4547:2:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:5","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:5","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":887,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:5","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:5"},{"expression":{"arguments":[{"id":901,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4596:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":902,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"4602:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":903,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"4605:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":904,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"4608:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":900,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[829,909,1017],"referencedDeclaration":1017,"src":"4585:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":875,"id":906,"nodeType":"Return","src":"4578:32:5"}]}]},"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"3963:205:5","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":909,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:5","nodeType":"FunctionDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"hash","nameLocation":"4201:4:5","nodeType":"VariableDeclaration","scope":909,"src":"4193:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"r","nameLocation":"4215:1:5","nodeType":"VariableDeclaration","scope":909,"src":"4207:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"vs","nameLocation":"4226:2:5","nodeType":"VariableDeclaration","scope":909,"src":"4218:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:5"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"4253:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"4262:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":871,"nodeType":"UserDefinedTypeName","pathNode":{"id":870,"name":"RecoverError","nameLocations":["4262:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":763,"src":"4262:12:5"},"referencedDeclaration":763,"src":"4262:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"4276:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:5"},"scope":1103,"src":"4173:454:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":941,"nodeType":"Block","src":"4840:164:5","statements":[{"assignments":[922,925,927],"declarations":[{"constant":false,"id":922,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:5","nodeType":"VariableDeclaration","scope":941,"src":"4851:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"error","nameLocation":"4883:5:5","nodeType":"VariableDeclaration","scope":941,"src":"4870:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":924,"nodeType":"UserDefinedTypeName","pathNode":{"id":923,"name":"RecoverError","nameLocations":["4870:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":763,"src":"4870:12:5"},"referencedDeclaration":763,"src":"4870:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:5","nodeType":"VariableDeclaration","scope":941,"src":"4890:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":933,"initialValue":{"arguments":[{"id":929,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"4921:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":930,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"4927:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":931,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"4930:2:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":928,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[829,909,1017],"referencedDeclaration":909,"src":"4910:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:5"},{"expression":{"arguments":[{"id":935,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"4955:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},{"id":936,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"4962:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":934,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"4943:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$763_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"ExpressionStatement","src":"4943:28:5"},{"expression":{"id":939,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"4988:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":920,"id":940,"nodeType":"Return","src":"4981:16:5"}]},"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"4633:116:5","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":942,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:5","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"hash","nameLocation":"4779:4:5","nodeType":"VariableDeclaration","scope":942,"src":"4771:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"r","nameLocation":"4793:1:5","nodeType":"VariableDeclaration","scope":942,"src":"4785:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"vs","nameLocation":"4804:2:5","nodeType":"VariableDeclaration","scope":942,"src":"4796:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:5"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":942,"src":"4831:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:5"},"scope":1103,"src":"4754:250:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1016,"nodeType":"Block","src":"5298:1372:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":963,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6194:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:5","typeDescriptions":{}}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:5","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":977,"nodeType":"IfStatement","src":"6182:164:5","trueBody":{"id":976,"nodeType":"Block","src":"6267:79:5","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:5","typeDescriptions":{}}},"id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":971,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6301:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$763_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:5","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":762,"src":"6301:30:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},{"id":973,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6333:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":960,"id":975,"nodeType":"Return","src":"6281:54:5"}]}},{"assignments":[979],"declarations":[{"constant":false,"id":979,"mutability":"mutable","name":"signer","nameLocation":"6448:6:5","nodeType":"VariableDeclaration","scope":1016,"src":"6440:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":986,"initialValue":{"arguments":[{"id":981,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"6467:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":982,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"6473:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":983,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"6476:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":984,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6479:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":980,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:5","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":987,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"6495:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:5","typeDescriptions":{}}},"id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1006,"nodeType":"IfStatement","src":"6491:113:5","trueBody":{"id":1005,"nodeType":"Block","src":"6517:87:5","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:5","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":997,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6551:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$763_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:5","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":760,"src":"6551:29:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:5","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":960,"id":1004,"nodeType":"Return","src":"6531:62:5"}]}},{"expression":{"components":[{"id":1007,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"6622:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1008,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6630:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$763_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:5","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":759,"src":"6630:20:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:5","typeDescriptions":{}}},"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":960,"id":1015,"nodeType":"Return","src":"6614:49:5"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"5010:125:5","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1017,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:5","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"hash","nameLocation":"5177:4:5","nodeType":"VariableDeclaration","scope":1017,"src":"5169:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"v","nameLocation":"5197:1:5","nodeType":"VariableDeclaration","scope":1017,"src":"5191:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":946,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"r","nameLocation":"5216:1:5","nodeType":"VariableDeclaration","scope":1017,"src":"5208:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"s","nameLocation":"5235:1:5","nodeType":"VariableDeclaration","scope":1017,"src":"5227:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:5"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1017,"src":"5266:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1017,"src":"5275:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":956,"nodeType":"UserDefinedTypeName","pathNode":{"id":955,"name":"RecoverError","nameLocations":["5275:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":763,"src":"5275:12:5"},"referencedDeclaration":763,"src":"5275:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1017,"src":"5289:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:5"},"scope":1103,"src":"5140:1530:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1052,"nodeType":"Block","src":"6897:166:5","statements":[{"assignments":[1032,1035,1037],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:5","nodeType":"VariableDeclaration","scope":1052,"src":"6908:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"error","nameLocation":"6940:5:5","nodeType":"VariableDeclaration","scope":1052,"src":"6927:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1034,"nodeType":"UserDefinedTypeName","pathNode":{"id":1033,"name":"RecoverError","nameLocations":["6927:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":763,"src":"6927:12:5"},"referencedDeclaration":763,"src":"6927:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:5","nodeType":"VariableDeclaration","scope":1052,"src":"6947:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1044,"initialValue":{"arguments":[{"id":1039,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6978:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1040,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6984:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1041,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"6987:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1042,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"6990:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1038,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[829,909,1017],"referencedDeclaration":1017,"src":"6967:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$763_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:5"},{"expression":{"arguments":[{"id":1046,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"7014:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},{"id":1047,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"7021:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1045,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"7002:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$763_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1049,"nodeType":"ExpressionStatement","src":"7002:28:5"},{"expression":{"id":1050,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"7047:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1030,"id":1051,"nodeType":"Return","src":"7040:16:5"}]},"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"6676:122:5","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:5","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"hash","nameLocation":"6828:4:5","nodeType":"VariableDeclaration","scope":1053,"src":"6820:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"v","nameLocation":"6840:1:5","nodeType":"VariableDeclaration","scope":1053,"src":"6834:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1021,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"r","nameLocation":"6851:1:5","nodeType":"VariableDeclaration","scope":1053,"src":"6843:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"s","nameLocation":"6862:1:5","nodeType":"VariableDeclaration","scope":1053,"src":"6854:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:5"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1053,"src":"6888:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:5"},"scope":1103,"src":"6803:260:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"7268:460:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1062,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7282:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1063,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7291:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$763_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:5","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":759,"src":"7291:20:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7378:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1069,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7387:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$763_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:5","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":760,"src":"7387:29:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1076,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7483:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1077,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7492:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$763_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:5","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":761,"src":"7492:35:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1088,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7617:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1089,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7626:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$763_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:5","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":762,"src":"7626:30:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1097,"nodeType":"IfStatement","src":"7613:109:5","trueBody":{"id":1096,"nodeType":"Block","src":"7658:64:5","statements":[{"errorCall":{"arguments":[{"id":1093,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"7702:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1092,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7679:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"RevertStatement","src":"7672:39:5"}]}},"id":1098,"nodeType":"IfStatement","src":"7479:243:5","trueBody":{"id":1087,"nodeType":"Block","src":"7529:78:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1083,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"7586:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:5","typeDescriptions":{}}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1080,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7550:27:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1086,"nodeType":"RevertStatement","src":"7543:53:5"}]}},"id":1099,"nodeType":"IfStatement","src":"7374:348:5","trueBody":{"id":1075,"nodeType":"Block","src":"7418:55:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1072,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"7439:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1074,"nodeType":"RevertStatement","src":"7432:30:5"}]}},"id":1100,"nodeType":"IfStatement","src":"7278:444:5","trueBody":{"id":1067,"nodeType":"Block","src":"7313:55:5","statements":[{"functionReturnParameters":1061,"id":1066,"nodeType":"Return","src":"7327:7:5"}]}}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"7069:122:5","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:5","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"error","nameLocation":"7230:5:5","nodeType":"VariableDeclaration","scope":1102,"src":"7217:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1056,"nodeType":"UserDefinedTypeName","pathNode":{"id":1055,"name":"RecoverError","nameLocations":["7217:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":763,"src":"7217:12:5"},"referencedDeclaration":763,"src":"7217:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$763","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:5","nodeType":"VariableDeclaration","scope":1102,"src":"7237:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:5"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"7268:0:5"},"scope":1103,"src":"7196:532:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1104,"src":"344:7386:5","usedErrors":[766,771,776],"usedEvents":[]}],"src":"112:7619:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[1177],"Strings":[755]},"id":1178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1105,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1178,"sourceUnit":756,"src":"149:39:6","symbolAliases":[{"foreign":{"id":1106,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"157:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"190:330:6","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":1177,"linearizedBaseContracts":[1177],"name":"MessageHashUtils","nameLocation":"529:16:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1117,"nodeType":"Block","src":"1314:368:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:6","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:6","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:6"},"nodeType":"YulFunctionCall","src":"1390:48:6"},"nodeType":"YulExpressionStatement","src":"1390:48:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:6","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:6"},"nodeType":"YulFunctionCall","src":"1492:25:6"},"nodeType":"YulExpressionStatement","src":"1492:25:6"},{"nodeType":"YulAssignment","src":"1571:31:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:6","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:6","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:6"},"nodeType":"YulFunctionCall","src":"1581:21:6"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1114,"isOffset":false,"isSlot":false,"src":"1571:6:6","valueSize":1},{"declaration":1111,"isOffset":false,"isSlot":false,"src":"1505:11:6","valueSize":1}],"id":1116,"nodeType":"InlineAssembly","src":"1367:309:6"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"552:665:6","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:6","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:6","nodeType":"VariableDeclaration","scope":1118,"src":"1254:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:6"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"digest","nameLocation":"1306:6:6","nodeType":"VariableDeclaration","scope":1118,"src":"1298:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:6"},"scope":1177,"src":"1222:460:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"2234:143:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":1135,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2343:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:6","memberName":"length","nodeType":"MemberAccess","src":"2343:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1133,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"2326:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$755_$","typeString":"type(library Strings)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:6","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":568,"src":"2326:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1131,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:6","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1139,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2361:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1127,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:6","typeDescriptions":{}}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:6","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:6","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1126,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1125,"id":1142,"nodeType":"Return","src":"2244:126:6"}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"1688:455:6","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:6","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"message","nameLocation":"2193:7:6","nodeType":"VariableDeclaration","scope":1144,"src":"2180:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1120,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:6"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1144,"src":"2225:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:6"},"scope":1177,"src":"2148:229:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1163,"nodeType":"Block","src":"2831:80:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":1158,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2887:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2898:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1155,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1154,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1153,"id":1162,"nodeType":"Return","src":"2841:63:6"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"2383:332:6","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":1164,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:6","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"validator","nameLocation":"2769:9:6","nodeType":"VariableDeclaration","scope":1164,"src":"2761:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"data","nameLocation":"2793:4:6","nodeType":"VariableDeclaration","scope":1164,"src":"2780:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1148,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:6"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1164,"src":"2822:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:6"},"scope":1177,"src":"2720:191:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"3462:292:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:6","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:6"},"nodeType":"YulFunctionCall","src":"3549:11:6"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:6","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:6"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:6","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:6"},"nodeType":"YulFunctionCall","src":"3573:23:6"},"nodeType":"YulExpressionStatement","src":"3573:23:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:6","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:6"},"nodeType":"YulFunctionCall","src":"3616:14:6"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:6"},"nodeType":"YulFunctionCall","src":"3609:39:6"},"nodeType":"YulExpressionStatement","src":"3609:39:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:6","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:6"},"nodeType":"YulFunctionCall","src":"3668:14:6"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:6"},"nodeType":"YulFunctionCall","src":"3661:34:6"},"nodeType":"YulExpressionStatement","src":"3661:34:6"},{"nodeType":"YulAssignment","src":"3708:30:6","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:6","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:6"},"nodeType":"YulFunctionCall","src":"3718:20:6"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1172,"isOffset":false,"isSlot":false,"src":"3708:6:6","valueSize":1},{"declaration":1167,"isOffset":false,"isSlot":false,"src":"3632:15:6","valueSize":1},{"declaration":1169,"isOffset":false,"isSlot":false,"src":"3684:10:6","valueSize":1}],"id":1174,"nodeType":"InlineAssembly","src":"3515:233:6"}]},"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"2917:431:6","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:6","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:6","nodeType":"VariableDeclaration","scope":1176,"src":"3378:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:6","nodeType":"VariableDeclaration","scope":1176,"src":"3403:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:6"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"digest","nameLocation":"3454:6:6","nodeType":"VariableDeclaration","scope":1176,"src":"3446:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:6"},"scope":1177,"src":"3353:401:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1178,"src":"521:3235:6","usedErrors":[],"usedEvents":[]}],"src":"123:3634:6"},"id":6},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2231]},"id":2232,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1180,"nodeType":"StructuredDocumentation","src":"129:73:7","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2231,"linearizedBaseContracts":[2231],"name":"Math","nameLocation":"211:4:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"222:50:7","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":1183,"name":"MathOverflowedMulDiv","nameLocation":"283:20:7","nodeType":"ErrorDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[],"src":"303:2:7"},"src":"277:29:7"},{"canonicalName":"Math.Rounding","id":1188,"members":[{"id":1184,"name":"Floor","nameLocation":"336:5:7","nodeType":"EnumValue","src":"336:5:7"},{"id":1185,"name":"Ceil","nameLocation":"379:4:7","nodeType":"EnumValue","src":"379:4:7"},{"id":1186,"name":"Trunc","nameLocation":"421:5:7","nodeType":"EnumValue","src":"421:5:7"},{"id":1187,"name":"Expand","nameLocation":"451:6:7","nodeType":"EnumValue","src":"451:6:7"}],"name":"Rounding","nameLocation":"317:8:7","nodeType":"EnumDefinition","src":"312:169:7"},{"body":{"id":1219,"nodeType":"Block","src":"661:140:7","statements":[{"id":1218,"nodeType":"UncheckedBlock","src":"671:124:7","statements":[{"assignments":[1201],"declarations":[{"constant":false,"id":1201,"mutability":"mutable","name":"c","nameLocation":"703:1:7","nodeType":"VariableDeclaration","scope":1218,"src":"695:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1205,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"707:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1203,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"711:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1206,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"730:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1207,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"734:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1213,"nodeType":"IfStatement","src":"726:28:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1199,"id":1212,"nodeType":"Return","src":"737:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1215,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"782:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1199,"id":1217,"nodeType":"Return","src":"768:16:7"}]}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"487:93:7","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":1220,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:7","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"a","nameLocation":"609:1:7","nodeType":"VariableDeclaration","scope":1220,"src":"601:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"b","nameLocation":"620:1:7","nodeType":"VariableDeclaration","scope":1220,"src":"612:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:7"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1220,"src":"646:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1195,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1220,"src":"652:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:7"},"scope":2231,"src":"585:216:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1247,"nodeType":"Block","src":"984:113:7","statements":[{"id":1246,"nodeType":"UncheckedBlock","src":"994:97:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1022:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1233,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"1026:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"nodeType":"IfStatement","src":"1018:28:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1231,"id":1238,"nodeType":"Return","src":"1029:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"1074:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1242,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1078:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1231,"id":1245,"nodeType":"Return","src":"1060:20:7"}]}]},"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"807:96:7","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:7","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"a","nameLocation":"932:1:7","nodeType":"VariableDeclaration","scope":1248,"src":"924:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"b","nameLocation":"943:1:7","nodeType":"VariableDeclaration","scope":1248,"src":"935:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:7"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1248,"src":"969:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1227,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1248,"src":"975:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:7"},"scope":2231,"src":"908:189:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1289,"nodeType":"Block","src":"1283:417:7","statements":[{"id":1288,"nodeType":"UncheckedBlock","src":"1293:401:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"1551:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1267,"nodeType":"IfStatement","src":"1547:28:7","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1259,"id":1266,"nodeType":"Return","src":"1559:16:7"}},{"assignments":[1269],"declarations":[{"constant":false,"id":1269,"mutability":"mutable","name":"c","nameLocation":"1597:1:7","nodeType":"VariableDeclaration","scope":1288,"src":"1589:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1273,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1270,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"1601:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1271,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1605:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"1624:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1275,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"1628:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1633:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1283,"nodeType":"IfStatement","src":"1620:33:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1259,"id":1282,"nodeType":"Return","src":"1636:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1285,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"1681:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1259,"id":1287,"nodeType":"Return","src":"1667:16:7"}]}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"1103:99:7","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:7","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"a","nameLocation":"1231:1:7","nodeType":"VariableDeclaration","scope":1290,"src":"1223:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"b","nameLocation":"1242:1:7","nodeType":"VariableDeclaration","scope":1290,"src":"1234:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:7"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1290,"src":"1268:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1255,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1290,"src":"1274:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:7"},"scope":2231,"src":"1207:493:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1317,"nodeType":"Block","src":"1887:114:7","statements":[{"id":1316,"nodeType":"UncheckedBlock","src":"1897:98:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1925:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1309,"nodeType":"IfStatement","src":"1921:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1301,"id":1308,"nodeType":"Return","src":"1933:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"1978:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1982:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1301,"id":1315,"nodeType":"Return","src":"1964:20:7"}]}]},"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"1706:100:7","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:7","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"a","nameLocation":"1835:1:7","nodeType":"VariableDeclaration","scope":1318,"src":"1827:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"b","nameLocation":"1846:1:7","nodeType":"VariableDeclaration","scope":1318,"src":"1838:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:7"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"1872:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1297,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"1878:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:7"},"scope":2231,"src":"1811:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1345,"nodeType":"Block","src":"2198:114:7","statements":[{"id":1344,"nodeType":"UncheckedBlock","src":"2208:98:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2236:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1337,"nodeType":"IfStatement","src":"2232:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1329,"id":1336,"nodeType":"Return","src":"2244:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2289:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1340,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2293:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1329,"id":1343,"nodeType":"Return","src":"2275:20:7"}]}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"2007:110:7","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":1346,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:7","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"a","nameLocation":"2146:1:7","nodeType":"VariableDeclaration","scope":1346,"src":"2138:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"b","nameLocation":"2157:1:7","nodeType":"VariableDeclaration","scope":1346,"src":"2149:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:7"},"returnParameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1346,"src":"2183:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1325,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1346,"src":"2189:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:7"},"scope":2231,"src":"2122:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1363,"nodeType":"Block","src":"2449:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1356,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"2466:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1357,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2470:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1360,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2478:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:7","trueExpression":{"id":1359,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"2474:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1355,"id":1362,"nodeType":"Return","src":"2459:20:7"}]},"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"2318:59:7","text":" @dev Returns the largest of two numbers."},"id":1364,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:7","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"a","nameLocation":"2403:1:7","nodeType":"VariableDeclaration","scope":1364,"src":"2395:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"b","nameLocation":"2414:1:7","nodeType":"VariableDeclaration","scope":1364,"src":"2406:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:7"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1364,"src":"2440:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:7"},"scope":2231,"src":"2382:104:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1381,"nodeType":"Block","src":"2624:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"2641:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1375,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"2645:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1378,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"2653:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:7","trueExpression":{"id":1377,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"2649:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1373,"id":1380,"nodeType":"Return","src":"2634:20:7"}]},"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"2492:60:7","text":" @dev Returns the smallest of two numbers."},"id":1382,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:7","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"a","nameLocation":"2578:1:7","nodeType":"VariableDeclaration","scope":1382,"src":"2570:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"b","nameLocation":"2589:1:7","nodeType":"VariableDeclaration","scope":1382,"src":"2581:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:7"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1382,"src":"2615:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:7"},"scope":2231,"src":"2557:104:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1404,"nodeType":"Block","src":"2845:82:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"2900:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1393,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"2904:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"2910:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1397,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"2914:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1391,"id":1403,"nodeType":"Return","src":"2892:28:7"}]},"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"2667:102:7","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1405,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:7","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"a","nameLocation":"2799:1:7","nodeType":"VariableDeclaration","scope":1405,"src":"2791:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"b","nameLocation":"2810:1:7","nodeType":"VariableDeclaration","scope":1405,"src":"2802:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:7"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1405,"src":"2836:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:7"},"scope":2231,"src":"2774:153:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1438,"nodeType":"Block","src":"3219:260:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1415,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"3233:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1423,"nodeType":"IfStatement","src":"3229:127:7","trueBody":{"id":1422,"nodeType":"Block","src":"3241:115:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"3340:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"3344:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1414,"id":1421,"nodeType":"Return","src":"3333:12:7"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"3444:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"3458:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"3467:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:7","trueExpression":{"hexValue":"30","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1414,"id":1437,"nodeType":"Return","src":"3437:35:7"}]},"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"2933:210:7","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:7","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"a","nameLocation":"3173:1:7","nodeType":"VariableDeclaration","scope":1439,"src":"3165:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"b","nameLocation":"3184:1:7","nodeType":"VariableDeclaration","scope":1439,"src":"3176:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:7"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1439,"src":"3210:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:7"},"scope":2231,"src":"3148:331:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1564,"nodeType":"Block","src":"3901:4018:7","statements":[{"id":1563,"nodeType":"UncheckedBlock","src":"3911:4002:7","statements":[{"assignments":[1452],"declarations":[{"constant":false,"id":1452,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:7","nodeType":"VariableDeclaration","scope":1563,"src":"4232:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1451,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1456,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"4248:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1454,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4252:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:7"},{"assignments":[1458],"declarations":[{"constant":false,"id":1458,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:7","nodeType":"VariableDeclaration","scope":1563,"src":"4312:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1459,"nodeType":"VariableDeclarationStatement","src":"4312:13:7"},{"AST":{"nodeType":"YulBlock","src":"4392:122:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:7"},"nodeType":"YulFunctionCall","src":"4433:6:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:7"},"nodeType":"YulFunctionCall","src":"4420:20:7"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:7","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:7","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:7"},"nodeType":"YulFunctionCall","src":"4470:14:7"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:7"},"nodeType":"YulFunctionCall","src":"4486:13:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:7"},"nodeType":"YulFunctionCall","src":"4466:34:7"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1452,"isOffset":false,"isSlot":false,"src":"4478:5:7","valueSize":1},{"declaration":1452,"isOffset":false,"isSlot":false,"src":"4493:5:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"4457:5:7","valueSize":1},{"declaration":1442,"isOffset":false,"isSlot":false,"src":"4427:1:7","valueSize":1},{"declaration":1444,"isOffset":false,"isSlot":false,"src":"4430:1:7","valueSize":1}],"id":1460,"nodeType":"InlineAssembly","src":"4383:131:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4595:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1469,"nodeType":"IfStatement","src":"4591:368:7","trueBody":{"id":1468,"nodeType":"Block","src":"4607:352:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1464,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"4925:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1465,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"4933:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1450,"id":1467,"nodeType":"Return","src":"4918:26:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1470,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"5065:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1471,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5080:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1477,"nodeType":"IfStatement","src":"5061:88:7","trueBody":{"id":1476,"nodeType":"Block","src":"5087:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1473,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"5112:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1475,"nodeType":"RevertStatement","src":"5105:29:7"}]}},{"assignments":[1479],"declarations":[{"constant":false,"id":1479,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:7","nodeType":"VariableDeclaration","scope":1563,"src":"5404:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1480,"nodeType":"VariableDeclarationStatement","src":"5404:17:7"},{"AST":{"nodeType":"YulBlock","src":"5444:291:7","statements":[{"nodeType":"YulAssignment","src":"5513:38:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:7"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:7"},"nodeType":"YulFunctionCall","src":"5526:25:7"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:7"}]},{"nodeType":"YulAssignment","src":"5633:41:7","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:7"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:7"},"nodeType":"YulFunctionCall","src":"5653:20:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:7"},"nodeType":"YulFunctionCall","src":"5642:32:7"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:7"}]},{"nodeType":"YulAssignment","src":"5691:30:7","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:7"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:7"},"nodeType":"YulFunctionCall","src":"5700:21:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1446,"isOffset":false,"isSlot":false,"src":"5539:11:7","valueSize":1},{"declaration":1452,"isOffset":false,"isSlot":false,"src":"5667:5:7","valueSize":1},{"declaration":1452,"isOffset":false,"isSlot":false,"src":"5691:5:7","valueSize":1},{"declaration":1452,"isOffset":false,"isSlot":false,"src":"5704:5:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"5633:5:7","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"5646:5:7","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"5513:9:7","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"5656:9:7","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"5711:9:7","valueSize":1},{"declaration":1442,"isOffset":false,"isSlot":false,"src":"5533:1:7","valueSize":1},{"declaration":1444,"isOffset":false,"isSlot":false,"src":"5536:1:7","valueSize":1}],"id":1481,"nodeType":"InlineAssembly","src":"5435:300:7"},{"assignments":[1483],"declarations":[{"constant":false,"id":1483,"mutability":"mutable","name":"twos","nameLocation":"5947:4:7","nodeType":"VariableDeclaration","scope":1563,"src":"5939:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1490,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1484,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"5954:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1486,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"5973:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:7"},{"AST":{"nodeType":"YulBlock","src":"6008:362:7","statements":[{"nodeType":"YulAssignment","src":"6073:37:7","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:7"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:7"},"nodeType":"YulFunctionCall","src":"6088:22:7"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:7"}]},{"nodeType":"YulAssignment","src":"6177:25:7","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:7"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:7"},"nodeType":"YulFunctionCall","src":"6186:16:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:7"}]},{"nodeType":"YulAssignment","src":"6317:39:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:7","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:7"},"nodeType":"YulFunctionCall","src":"6333:12:7"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:7"},"nodeType":"YulFunctionCall","src":"6329:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:7"},"nodeType":"YulFunctionCall","src":"6325:31:7"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1446,"isOffset":false,"isSlot":false,"src":"6073:11:7","valueSize":1},{"declaration":1446,"isOffset":false,"isSlot":false,"src":"6092:11:7","valueSize":1},{"declaration":1452,"isOffset":false,"isSlot":false,"src":"6177:5:7","valueSize":1},{"declaration":1452,"isOffset":false,"isSlot":false,"src":"6190:5:7","valueSize":1},{"declaration":1483,"isOffset":false,"isSlot":false,"src":"6105:4:7","valueSize":1},{"declaration":1483,"isOffset":false,"isSlot":false,"src":"6197:4:7","valueSize":1},{"declaration":1483,"isOffset":false,"isSlot":false,"src":"6317:4:7","valueSize":1},{"declaration":1483,"isOffset":false,"isSlot":false,"src":"6340:4:7","valueSize":1},{"declaration":1483,"isOffset":false,"isSlot":false,"src":"6347:4:7","valueSize":1}],"id":1491,"nodeType":"InlineAssembly","src":"5999:371:7"},{"expression":{"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1492,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"6436:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"6445:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1494,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"6453:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1497,"nodeType":"ExpressionStatement","src":"6436:21:7"},{"assignments":[1499],"declarations":[{"constant":false,"id":1499,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:7","nodeType":"VariableDeclaration","scope":1563,"src":"6775:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1506,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1501,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"6798:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:7"},{"expression":{"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1507,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7031:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7046:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1510,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7060:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1514,"nodeType":"ExpressionStatement","src":"7031:36:7"},{"expression":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1515,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7100:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7115:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1518,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7129:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"nodeType":"ExpressionStatement","src":"7100:36:7"},{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1523,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7170:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1525,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7185:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1526,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7199:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"nodeType":"ExpressionStatement","src":"7170:36:7"},{"expression":{"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1531,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7240:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7255:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1534,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7269:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1538,"nodeType":"ExpressionStatement","src":"7240:36:7"},{"expression":{"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1539,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7310:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7325:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1542,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7339:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1546,"nodeType":"ExpressionStatement","src":"7310:36:7"},{"expression":{"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1547,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7381:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7396:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1550,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7410:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1554,"nodeType":"ExpressionStatement","src":"7381:36:7"},{"expression":{"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"7851:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"7860:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1557,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"nodeType":"ExpressionStatement","src":"7851:24:7"},{"expression":{"id":1561,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"7896:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1450,"id":1562,"nodeType":"Return","src":"7889:13:7"}]}]},"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"3485:313:7","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:7","nodeType":"FunctionDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"x","nameLocation":"3827:1:7","nodeType":"VariableDeclaration","scope":1565,"src":"3819:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"y","nameLocation":"3838:1:7","nodeType":"VariableDeclaration","scope":1565,"src":"3830:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:7","nodeType":"VariableDeclaration","scope":1565,"src":"3841:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:7"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"result","nameLocation":"3893:6:7","nodeType":"VariableDeclaration","scope":1565,"src":"3885:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:7"},"scope":2231,"src":"3803:4116:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1607,"nodeType":"Block","src":"8161:192:7","statements":[{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"result","nameLocation":"8179:6:7","nodeType":"VariableDeclaration","scope":1607,"src":"8171:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1587,"initialValue":{"arguments":[{"id":1583,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"8195:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1584,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"8198:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1585,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"8201:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1582,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1565,1608],"referencedDeclaration":1565,"src":"8188:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1589,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"8244:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}],"id":1588,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"8227:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1188_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1592,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"8264:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1593,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"8267:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1594,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"8270:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1591,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:7","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1604,"nodeType":"IfStatement","src":"8223:101:7","trueBody":{"id":1603,"nodeType":"Block","src":"8288:36:7","statements":[{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"8302:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1602,"nodeType":"ExpressionStatement","src":"8302:11:7"}]}},{"expression":{"id":1605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"8340:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1579,"id":1606,"nodeType":"Return","src":"8333:13:7"}]},"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"7925:121:7","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:7","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"x","nameLocation":"8075:1:7","nodeType":"VariableDeclaration","scope":1608,"src":"8067:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"y","nameLocation":"8086:1:7","nodeType":"VariableDeclaration","scope":1608,"src":"8078:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:7","nodeType":"VariableDeclaration","scope":1608,"src":"8089:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:7","nodeType":"VariableDeclaration","scope":1608,"src":"8110:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"},"typeName":{"id":1574,"nodeType":"UserDefinedTypeName","pathNode":{"id":1573,"name":"Rounding","nameLocations":["8110:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1188,"src":"8110:8:7"},"referencedDeclaration":1188,"src":"8110:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:7"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1608,"src":"8152:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:7"},"scope":2231,"src":"8051:302:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1719,"nodeType":"Block","src":"8644:1585:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"8658:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1622,"nodeType":"IfStatement","src":"8654:45:7","trueBody":{"id":1621,"nodeType":"Block","src":"8666:33:7","statements":[{"expression":{"hexValue":"30","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1615,"id":1620,"nodeType":"Return","src":"8680:8:7"}]}},{"assignments":[1624],"declarations":[{"constant":false,"id":1624,"mutability":"mutable","name":"result","nameLocation":"9386:6:7","nodeType":"VariableDeclaration","scope":1719,"src":"9378:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1633,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1627,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"9406:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1626,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1887,1922],"referencedDeclaration":1887,"src":"9401:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:7"},{"id":1718,"nodeType":"UncheckedBlock","src":"9815:408:7","statements":[{"expression":{"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9839:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9849:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"9858:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1637,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9862:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1644,"nodeType":"ExpressionStatement","src":"9839:35:7"},{"expression":{"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9888:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9898:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"9907:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9911:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1655,"nodeType":"ExpressionStatement","src":"9888:35:7"},{"expression":{"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9937:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1657,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9947:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"9956:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9960:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1666,"nodeType":"ExpressionStatement","src":"9937:35:7"},{"expression":{"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1667,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9986:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9996:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10005:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10009:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1677,"nodeType":"ExpressionStatement","src":"9986:35:7"},{"expression":{"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10035:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10045:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1680,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10054:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1681,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10058:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1688,"nodeType":"ExpressionStatement","src":"10035:35:7"},{"expression":{"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1689,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10084:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10094:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10103:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10107:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1699,"nodeType":"ExpressionStatement","src":"10084:35:7"},{"expression":{"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10133:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10143:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10152:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10156:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1710,"nodeType":"ExpressionStatement","src":"10133:35:7"},{"expression":{"arguments":[{"id":1712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10193:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1713,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10201:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"10205:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1711,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"10189:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1615,"id":1717,"nodeType":"Return","src":"10182:30:7"}]}]},"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"8359:223:7","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1720,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:7","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"a","nameLocation":"8609:1:7","nodeType":"VariableDeclaration","scope":1720,"src":"8601:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:7"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1720,"src":"8635:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:7"},"scope":2231,"src":"8587:1642:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1754,"nodeType":"Block","src":"10405:164:7","statements":[{"id":1753,"nodeType":"UncheckedBlock","src":"10415:148:7","statements":[{"assignments":[1732],"declarations":[{"constant":false,"id":1732,"mutability":"mutable","name":"result","nameLocation":"10447:6:7","nodeType":"VariableDeclaration","scope":1753,"src":"10439:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1736,"initialValue":{"arguments":[{"id":1734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"10461:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1733,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1720,1755],"referencedDeclaration":1720,"src":"10456:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"10484:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1739,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"10511:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}],"id":1738,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"10494:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1188_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"10524:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"10533:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"10542:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:7","trueExpression":{"hexValue":"31","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1730,"id":1752,"nodeType":"Return","src":"10477:75:7"}]}]},"documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"10235:89:7","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1755,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:7","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"a","nameLocation":"10351:1:7","nodeType":"VariableDeclaration","scope":1755,"src":"10343:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:7","nodeType":"VariableDeclaration","scope":1755,"src":"10354:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"},"typeName":{"id":1725,"nodeType":"UserDefinedTypeName","pathNode":{"id":1724,"name":"Rounding","nameLocations":["10354:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1188,"src":"10354:8:7"},"referencedDeclaration":1188,"src":"10354:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:7"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1755,"src":"10396:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:7"},"scope":2231,"src":"10329:240:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1886,"nodeType":"Block","src":"10760:922:7","statements":[{"assignments":[1764],"declarations":[{"constant":false,"id":1764,"mutability":"mutable","name":"result","nameLocation":"10778:6:7","nodeType":"VariableDeclaration","scope":1886,"src":"10770:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1766,"initialValue":{"hexValue":"30","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:7"},{"id":1883,"nodeType":"UncheckedBlock","src":"10798:855:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"10826:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1781,"nodeType":"IfStatement","src":"10822:99:7","trueBody":{"id":1780,"nodeType":"Block","src":"10844:77:7","statements":[{"expression":{"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"10862:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1775,"nodeType":"ExpressionStatement","src":"10862:13:7"},{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"10893:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1779,"nodeType":"ExpressionStatement","src":"10893:13:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"10938:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1796,"nodeType":"IfStatement","src":"10934:96:7","trueBody":{"id":1795,"nodeType":"Block","src":"10955:75:7","statements":[{"expression":{"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"10973:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1790,"nodeType":"ExpressionStatement","src":"10973:12:7"},{"expression":{"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"11003:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1794,"nodeType":"ExpressionStatement","src":"11003:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11047:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1811,"nodeType":"IfStatement","src":"11043:96:7","trueBody":{"id":1810,"nodeType":"Block","src":"11064:75:7","statements":[{"expression":{"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11082:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1805,"nodeType":"ExpressionStatement","src":"11082:12:7"},{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"11112:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"nodeType":"ExpressionStatement","src":"11112:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11156:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1826,"nodeType":"IfStatement","src":"11152:96:7","trueBody":{"id":1825,"nodeType":"Block","src":"11173:75:7","statements":[{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11191:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"nodeType":"ExpressionStatement","src":"11191:12:7"},{"expression":{"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"11221:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1824,"nodeType":"ExpressionStatement","src":"11221:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11265:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1841,"nodeType":"IfStatement","src":"11261:93:7","trueBody":{"id":1840,"nodeType":"Block","src":"11281:73:7","statements":[{"expression":{"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11299:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1835,"nodeType":"ExpressionStatement","src":"11299:11:7"},{"expression":{"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"11328:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1839,"nodeType":"ExpressionStatement","src":"11328:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11371:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"11367:93:7","trueBody":{"id":1855,"nodeType":"Block","src":"11387:73:7","statements":[{"expression":{"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11405:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1850,"nodeType":"ExpressionStatement","src":"11405:11:7"},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"11434:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1854,"nodeType":"ExpressionStatement","src":"11434:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11477:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1871,"nodeType":"IfStatement","src":"11473:93:7","trueBody":{"id":1870,"nodeType":"Block","src":"11493:73:7","statements":[{"expression":{"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11511:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1865,"nodeType":"ExpressionStatement","src":"11511:11:7"},{"expression":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"11540:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ExpressionStatement","src":"11540:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"11583:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1882,"nodeType":"IfStatement","src":"11579:64:7","trueBody":{"id":1881,"nodeType":"Block","src":"11599:44:7","statements":[{"expression":{"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"11617:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1880,"nodeType":"ExpressionStatement","src":"11617:11:7"}]}}]},{"expression":{"id":1884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"11669:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1762,"id":1885,"nodeType":"Return","src":"11662:13:7"}]},"documentation":{"id":1756,"nodeType":"StructuredDocumentation","src":"10575:119:7","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":1887,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:7","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"value","nameLocation":"10721:5:7","nodeType":"VariableDeclaration","scope":1887,"src":"10713:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:7"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1887,"src":"10751:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:7"},"scope":2231,"src":"10699:983:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1921,"nodeType":"Block","src":"11915:168:7","statements":[{"id":1920,"nodeType":"UncheckedBlock","src":"11925:152:7","statements":[{"assignments":[1899],"declarations":[{"constant":false,"id":1899,"mutability":"mutable","name":"result","nameLocation":"11957:6:7","nodeType":"VariableDeclaration","scope":1920,"src":"11949:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1903,"initialValue":{"arguments":[{"id":1901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"11971:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1900,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1887,1922],"referencedDeclaration":1887,"src":"11966:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"11998:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1906,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"12025:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}],"id":1905,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12008:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1188_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"12043:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12052:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:7","trueExpression":{"hexValue":"31","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1897,"id":1919,"nodeType":"Return","src":"11991:75:7"}]}]},"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"11688:142:7","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:7","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"value","nameLocation":"11857:5:7","nodeType":"VariableDeclaration","scope":1922,"src":"11849:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:7","nodeType":"VariableDeclaration","scope":1922,"src":"11864:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"},"typeName":{"id":1892,"nodeType":"UserDefinedTypeName","pathNode":{"id":1891,"name":"Rounding","nameLocations":["11864:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1188,"src":"11864:8:7"},"referencedDeclaration":1188,"src":"11864:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:7"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1922,"src":"11906:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:7"},"scope":2231,"src":"11835:248:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"12276:854:7","statements":[{"assignments":[1931],"declarations":[{"constant":false,"id":1931,"mutability":"mutable","name":"result","nameLocation":"12294:6:7","nodeType":"VariableDeclaration","scope":2050,"src":"12286:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1933,"initialValue":{"hexValue":"30","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:7"},{"id":2047,"nodeType":"UncheckedBlock","src":"12314:787:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12342:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1950,"nodeType":"IfStatement","src":"12338:103:7","trueBody":{"id":1949,"nodeType":"Block","src":"12361:80:7","statements":[{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12379:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1944,"nodeType":"ExpressionStatement","src":"12379:17:7"},{"expression":{"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"12414:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1948,"nodeType":"ExpressionStatement","src":"12414:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12458:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1967,"nodeType":"IfStatement","src":"12454:103:7","trueBody":{"id":1966,"nodeType":"Block","src":"12477:80:7","statements":[{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12495:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1961,"nodeType":"ExpressionStatement","src":"12495:17:7"},{"expression":{"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"12530:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1965,"nodeType":"ExpressionStatement","src":"12530:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12574:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1984,"nodeType":"IfStatement","src":"12570:103:7","trueBody":{"id":1983,"nodeType":"Block","src":"12593:80:7","statements":[{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12611:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1978,"nodeType":"ExpressionStatement","src":"12611:17:7"},{"expression":{"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"12646:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1982,"nodeType":"ExpressionStatement","src":"12646:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12690:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2001,"nodeType":"IfStatement","src":"12686:100:7","trueBody":{"id":2000,"nodeType":"Block","src":"12708:78:7","statements":[{"expression":{"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12726:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1995,"nodeType":"ExpressionStatement","src":"12726:16:7"},{"expression":{"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"12760:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1999,"nodeType":"ExpressionStatement","src":"12760:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12803:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2018,"nodeType":"IfStatement","src":"12799:100:7","trueBody":{"id":2017,"nodeType":"Block","src":"12821:78:7","statements":[{"expression":{"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12839:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2012,"nodeType":"ExpressionStatement","src":"12839:16:7"},{"expression":{"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"12873:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2016,"nodeType":"ExpressionStatement","src":"12873:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12916:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2035,"nodeType":"IfStatement","src":"12912:100:7","trueBody":{"id":2034,"nodeType":"Block","src":"12934:78:7","statements":[{"expression":{"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12952:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2029,"nodeType":"ExpressionStatement","src":"12952:16:7"},{"expression":{"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2030,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"12986:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2033,"nodeType":"ExpressionStatement","src":"12986:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"13029:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"IfStatement","src":"13025:66:7","trueBody":{"id":2045,"nodeType":"Block","src":"13047:44:7","statements":[{"expression":{"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"13065:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2044,"nodeType":"ExpressionStatement","src":"13065:11:7"}]}}]},{"expression":{"id":2048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"13117:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1929,"id":2049,"nodeType":"Return","src":"13110:13:7"}]},"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"12089:120:7","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:7","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"value","nameLocation":"12237:5:7","nodeType":"VariableDeclaration","scope":2051,"src":"12229:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:7"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"12267:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:7"},"scope":2231,"src":"12214:916:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2085,"nodeType":"Block","src":"13365:170:7","statements":[{"id":2084,"nodeType":"UncheckedBlock","src":"13375:154:7","statements":[{"assignments":[2063],"declarations":[{"constant":false,"id":2063,"mutability":"mutable","name":"result","nameLocation":"13407:6:7","nodeType":"VariableDeclaration","scope":2084,"src":"13399:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2067,"initialValue":{"arguments":[{"id":2065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"13422:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2064,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2051,2086],"referencedDeclaration":2051,"src":"13416:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"13449:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2070,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"13476:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}],"id":2069,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"13459:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1188_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"13495:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"13504:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:7","trueExpression":{"hexValue":"31","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2061,"id":2083,"nodeType":"Return","src":"13442:76:7"}]}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"13136:143:7","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2086,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:7","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"value","nameLocation":"13307:5:7","nodeType":"VariableDeclaration","scope":2086,"src":"13299:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:7","nodeType":"VariableDeclaration","scope":2086,"src":"13314:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"},"typeName":{"id":2056,"nodeType":"UserDefinedTypeName","pathNode":{"id":2055,"name":"Rounding","nameLocations":["13314:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1188,"src":"13314:8:7"},"referencedDeclaration":1188,"src":"13314:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:7"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2086,"src":"13356:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:7"},"scope":2231,"src":"13284:251:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2172,"nodeType":"Block","src":"13855:600:7","statements":[{"assignments":[2095],"declarations":[{"constant":false,"id":2095,"mutability":"mutable","name":"result","nameLocation":"13873:6:7","nodeType":"VariableDeclaration","scope":2172,"src":"13865:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2097,"initialValue":{"hexValue":"30","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:7"},{"id":2169,"nodeType":"UncheckedBlock","src":"13893:533:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"13921:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2112,"nodeType":"IfStatement","src":"13917:98:7","trueBody":{"id":2111,"nodeType":"Block","src":"13939:76:7","statements":[{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"13957:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2106,"nodeType":"ExpressionStatement","src":"13957:13:7"},{"expression":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"13988:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2110,"nodeType":"ExpressionStatement","src":"13988:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"14032:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2127,"nodeType":"IfStatement","src":"14028:95:7","trueBody":{"id":2126,"nodeType":"Block","src":"14049:74:7","statements":[{"expression":{"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"14067:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2121,"nodeType":"ExpressionStatement","src":"14067:12:7"},{"expression":{"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"14097:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2125,"nodeType":"ExpressionStatement","src":"14097:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"14140:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2142,"nodeType":"IfStatement","src":"14136:95:7","trueBody":{"id":2141,"nodeType":"Block","src":"14157:74:7","statements":[{"expression":{"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"14175:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2136,"nodeType":"ExpressionStatement","src":"14175:12:7"},{"expression":{"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2137,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"14205:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2140,"nodeType":"ExpressionStatement","src":"14205:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"14248:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2157,"nodeType":"IfStatement","src":"14244:95:7","trueBody":{"id":2156,"nodeType":"Block","src":"14265:74:7","statements":[{"expression":{"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"14283:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2151,"nodeType":"ExpressionStatement","src":"14283:12:7"},{"expression":{"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"14313:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2155,"nodeType":"ExpressionStatement","src":"14313:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"14356:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2168,"nodeType":"IfStatement","src":"14352:64:7","trueBody":{"id":2167,"nodeType":"Block","src":"14372:44:7","statements":[{"expression":{"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"14390:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2166,"nodeType":"ExpressionStatement","src":"14390:11:7"}]}}]},{"expression":{"id":2170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"14442:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2093,"id":2171,"nodeType":"Return","src":"14435:13:7"}]},"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"13541:246:7","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2173,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:7","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"value","nameLocation":"13816:5:7","nodeType":"VariableDeclaration","scope":2173,"src":"13808:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:7"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2173,"src":"13846:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:7"},"scope":2231,"src":"13792:663:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2210,"nodeType":"Block","src":"14692:177:7","statements":[{"id":2209,"nodeType":"UncheckedBlock","src":"14702:161:7","statements":[{"assignments":[2185],"declarations":[{"constant":false,"id":2185,"mutability":"mutable","name":"result","nameLocation":"14734:6:7","nodeType":"VariableDeclaration","scope":2209,"src":"14726:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2189,"initialValue":{"arguments":[{"id":2187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"14750:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2186,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2173,2211],"referencedDeclaration":2173,"src":"14743:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"14777:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2192,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"14804:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}],"id":2191,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"14787:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1188_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"14823:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"14838:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:7","trueExpression":{"hexValue":"31","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2183,"id":2208,"nodeType":"Return","src":"14770:82:7"}]}]},"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"14461:144:7","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2211,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:7","nodeType":"FunctionDefinition","parameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"value","nameLocation":"14634:5:7","nodeType":"VariableDeclaration","scope":2211,"src":"14626:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2179,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:7","nodeType":"VariableDeclaration","scope":2211,"src":"14641:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"},"typeName":{"id":2178,"nodeType":"UserDefinedTypeName","pathNode":{"id":2177,"name":"Rounding","nameLocations":["14641:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1188,"src":"14641:8:7"},"referencedDeclaration":1188,"src":"14641:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:7"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2211,"src":"14683:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:7"},"scope":2231,"src":"14610:259:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2229,"nodeType":"Block","src":"15067:48:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2222,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"15090:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}],"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2220,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:7","typeDescriptions":{}}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2219,"id":2228,"nodeType":"Return","src":"15077:31:7"}]},"documentation":{"id":2212,"nodeType":"StructuredDocumentation","src":"14875:113:7","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:7","nodeType":"FunctionDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:7","nodeType":"VariableDeclaration","scope":2230,"src":"15019:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"},"typeName":{"id":2214,"nodeType":"UserDefinedTypeName","pathNode":{"id":2213,"name":"Rounding","nameLocations":["15019:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1188,"src":"15019:8:7"},"referencedDeclaration":1188,"src":"15019:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1188","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:7"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2230,"src":"15061:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2217,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:7"},"scope":2231,"src":"14993:122:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2232,"src":"203:14914:7","usedErrors":[1183],"usedEvents":[]}],"src":"103:15015:7"},"id":7},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2336]},"id":2337,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2233,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"135:80:8","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2336,"linearizedBaseContracts":[2336],"name":"SignedMath","nameLocation":"224:10:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":2251,"nodeType":"Block","src":"376:37:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"393:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2245,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"397:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2248,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"405:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:8","trueExpression":{"id":2247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"401:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2243,"id":2250,"nodeType":"Return","src":"386:20:8"}]},"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"241:66:8","text":" @dev Returns the largest of two signed numbers."},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:8","nodeType":"FunctionDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"a","nameLocation":"332:1:8","nodeType":"VariableDeclaration","scope":2252,"src":"325:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2236,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"b","nameLocation":"342:1:8","nodeType":"VariableDeclaration","scope":2252,"src":"335:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2238,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:8"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2252,"src":"368:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2241,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:8"},"scope":2336,"src":"312:101:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2269,"nodeType":"Block","src":"555:37:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"572:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"576:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2266,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"584:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:8","trueExpression":{"id":2265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"580:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2261,"id":2268,"nodeType":"Return","src":"565:20:8"}]},"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"419:67:8","text":" @dev Returns the smallest of two signed numbers."},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:8","nodeType":"FunctionDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"a","nameLocation":"511:1:8","nodeType":"VariableDeclaration","scope":2270,"src":"504:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2254,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"b","nameLocation":"521:1:8","nodeType":"VariableDeclaration","scope":2270,"src":"514:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2256,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:8"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2270,"src":"547:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2259,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:8"},"scope":2336,"src":"491:101:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2313,"nodeType":"Block","src":"797:162:8","statements":[{"assignments":[2281],"declarations":[{"constant":false,"id":2281,"mutability":"mutable","name":"x","nameLocation":"866:1:8","nodeType":"VariableDeclaration","scope":2313,"src":"859:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2280,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2294,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2282,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"871:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2283,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"875:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"882:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2287,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"886:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:8"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2295,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"911:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2300,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"931:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2298,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:8","typeDescriptions":{}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2296,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:8","typeDescriptions":{}}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"945:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2306,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"949:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2279,"id":2312,"nodeType":"Return","src":"904:48:8"}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"598:126:8","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2314,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:8","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"a","nameLocation":"753:1:8","nodeType":"VariableDeclaration","scope":2314,"src":"746:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2272,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"b","nameLocation":"763:1:8","nodeType":"VariableDeclaration","scope":2314,"src":"756:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2274,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:8"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2314,"src":"789:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2277,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:8"},"scope":2336,"src":"729:230:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"1103:158:8","statements":[{"id":2333,"nodeType":"UncheckedBlock","src":"1113:142:8","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"1228:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:8","subExpression":{"id":2328,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"1242:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:8","trueExpression":{"id":2327,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"1237:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:8","typeDescriptions":{}}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2321,"id":2332,"nodeType":"Return","src":"1213:31:8"}]}]},"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"965:78:8","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:8","nodeType":"FunctionDefinition","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"n","nameLocation":"1068:1:8","nodeType":"VariableDeclaration","scope":2335,"src":"1061:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2316,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:8"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2335,"src":"1094:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:8"},"scope":2336,"src":"1048:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2337,"src":"216:1047:8","usedErrors":[],"usedEvents":[]}],"src":"109:1155:8"},"id":8},"contracts/core/BasePaymaster.sol":{"ast":{"absolutePath":"contracts/core/BasePaymaster.sol","exportedSymbols":{"BasePaymaster":[2561],"Context":[500],"IAggregator":[3016],"IEntryPoint":[3170],"INonceManager":[3189],"IPaymaster":[3234],"IStakeManager":[3338],"Ownable":[147],"UserOperation":[3364],"ValidationData":[2571],"_intersectTimeRange":[2717],"_packValidationData":[2754,2792],"_parseValidationData":[2631],"calldataKeccak":[2802]},"id":2562,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2338,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:9"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2562,"sourceUnit":148,"src":"104:52:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","id":2340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2562,"sourceUnit":3235,"src":"158:38:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":2341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2562,"sourceUnit":3171,"src":"198:39:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":2342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2562,"sourceUnit":2803,"src":"239:23:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2344,"name":"IPaymaster","nameLocations":["459:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3234,"src":"459:10:9"},"id":2345,"nodeType":"InheritanceSpecifier","src":"459:10:9"},{"baseName":{"id":2346,"name":"Ownable","nameLocations":["471:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"471:7:9"},"id":2347,"nodeType":"InheritanceSpecifier","src":"471:7:9"}],"canonicalName":"BasePaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":2343,"nodeType":"StructuredDocumentation","src":"266:156:9","text":" Helper class for creating a paymaster.\n provides helper methods for staking.\n Validates that the postOp is called only by the entryPoint."},"fullyImplemented":false,"id":2561,"linearizedBaseContracts":[2561,147,500,3234],"name":"BasePaymaster","nameLocation":"442:13:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b0d691fe","id":2350,"mutability":"immutable","name":"entryPoint","nameLocation":"515:10:9","nodeType":"VariableDeclaration","scope":2561,"src":"486:39:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"},"typeName":{"id":2349,"nodeType":"UserDefinedTypeName","pathNode":{"id":2348,"name":"IEntryPoint","nameLocations":["486:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3170,"src":"486:11:9"},"referencedDeclaration":3170,"src":"486:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"visibility":"public"},{"body":{"id":2364,"nodeType":"Block","src":"590:43:9","statements":[{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2360,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"601:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2361,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"614:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"src":"601:24:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"id":2363,"nodeType":"ExpressionStatement","src":"601:24:9"}]},"id":2365,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2356,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"579:2:9","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"582:6:9","memberName":"origin","nodeType":"MemberAccess","src":"579:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2358,"kind":"baseConstructorSpecifier","modifierName":{"id":2355,"name":"Ownable","nameLocations":["571:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"571:7:9"},"nodeType":"ModifierInvocation","src":"571:18:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"_entryPoint","nameLocation":"558:11:9","nodeType":"VariableDeclaration","scope":2365,"src":"546:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"},"typeName":{"id":2352,"nodeType":"UserDefinedTypeName","pathNode":{"id":2351,"name":"IEntryPoint","nameLocations":["546:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3170,"src":"546:11:9"},"referencedDeclaration":3170,"src":"546:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"545:25:9"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[],"src":"590:0:9"},"scope":2561,"src":"534:99:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3222],"body":{"id":2390,"nodeType":"Block","src":"881:114:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2381,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"892:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"892:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2383,"nodeType":"ExpressionStatement","src":"892:24:9"},{"expression":{"arguments":[{"id":2385,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"959:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":2386,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"967:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2387,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"979:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2384,"name":"_validatePaymasterUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"934:24:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$3364_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":2380,"id":2389,"nodeType":"Return","src":"927:60:9"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"641:26:9","text":"@inheritdoc IPaymaster"},"functionSelector":"f465c77e","id":2391,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"682:23:9","nodeType":"FunctionDefinition","overrides":{"id":2375,"nodeType":"OverrideSpecifier","overrides":[],"src":"817:8:9"},"parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"userOp","nameLocation":"739:6:9","nodeType":"VariableDeclaration","scope":2391,"src":"716:29:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2368,"nodeType":"UserDefinedTypeName","pathNode":{"id":2367,"name":"UserOperation","nameLocations":["716:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"716:13:9"},"referencedDeclaration":3364,"src":"716:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"userOpHash","nameLocation":"764:10:9","nodeType":"VariableDeclaration","scope":2391,"src":"756:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"756:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"maxCost","nameLocation":"793:7:9","nodeType":"VariableDeclaration","scope":2391,"src":"785:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"785:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"705:102:9"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"context","nameLocation":"848:7:9","nodeType":"VariableDeclaration","scope":2391,"src":"835:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2376,"name":"bytes","nodeType":"ElementaryTypeName","src":"835:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"validationData","nameLocation":"865:14:9","nodeType":"VariableDeclaration","scope":2391,"src":"857:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"834:46:9"},"scope":2561,"src":"673:322:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"1003:223:9","text":" Validate a user operation.\n @param userOp     - The user operation.\n @param userOpHash - The hash of the user operation.\n @param maxCost    - The maximum cost of the user operation."},"id":2406,"implemented":false,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"1241:24:9","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"userOp","nameLocation":"1299:6:9","nodeType":"VariableDeclaration","scope":2406,"src":"1276:29:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2394,"nodeType":"UserDefinedTypeName","pathNode":{"id":2393,"name":"UserOperation","nameLocations":["1276:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"1276:13:9"},"referencedDeclaration":3364,"src":"1276:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"userOpHash","nameLocation":"1324:10:9","nodeType":"VariableDeclaration","scope":2406,"src":"1316:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1316:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"maxCost","nameLocation":"1353:7:9","nodeType":"VariableDeclaration","scope":2406,"src":"1345:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1265:102:9"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"context","nameLocation":"1407:7:9","nodeType":"VariableDeclaration","scope":2406,"src":"1394:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2401,"name":"bytes","nodeType":"ElementaryTypeName","src":"1394:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"validationData","nameLocation":"1424:14:9","nodeType":"VariableDeclaration","scope":2406,"src":"1416:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1416:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1393:46:9"},"scope":2561,"src":"1232:208:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[3233],"body":{"id":2427,"nodeType":"Block","src":"1612:91:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2418,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"1623:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2420,"nodeType":"ExpressionStatement","src":"1623:24:9"},{"expression":{"arguments":[{"id":2422,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"1666:4:9","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"}},{"id":2423,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1672:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2424,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"1681:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2421,"name":"_postOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"1658:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_PostOpMode_$3207_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2426,"nodeType":"ExpressionStatement","src":"1658:37:9"}]},"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"1448:26:9","text":"@inheritdoc IPaymaster"},"functionSelector":"a9a23409","id":2428,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"1489:6:9","nodeType":"FunctionDefinition","overrides":{"id":2416,"nodeType":"OverrideSpecifier","overrides":[],"src":"1603:8:9"},"parameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"mode","nameLocation":"1517:4:9","nodeType":"VariableDeclaration","scope":2428,"src":"1506:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":2409,"nodeType":"UserDefinedTypeName","pathNode":{"id":2408,"name":"PostOpMode","nameLocations":["1506:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3207,"src":"1506:10:9"},"referencedDeclaration":3207,"src":"1506:10:9","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"context","nameLocation":"1547:7:9","nodeType":"VariableDeclaration","scope":2428,"src":"1532:22:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2411,"name":"bytes","nodeType":"ElementaryTypeName","src":"1532:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2414,"mutability":"mutable","name":"actualGasCost","nameLocation":"1573:13:9","nodeType":"VariableDeclaration","scope":2428,"src":"1565:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1565:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:98:9"},"returnParameters":{"id":2417,"nodeType":"ParameterList","parameters":[],"src":"1612:0:9"},"scope":2561,"src":"1480:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2448,"nodeType":"Block","src":"2711:192:9","statements":[{"expression":{"components":[{"id":2439,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"2723:4:9","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"}},{"id":2440,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"2729:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2441,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"2738:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2722:30:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_PostOpMode_$3207_$_t_bytes_calldata_ptr_$_t_uint256_$","typeString":"tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":2443,"nodeType":"ExpressionStatement","src":"2722:30:9"},{"expression":{"arguments":[{"hexValue":"6d757374206f76657272696465","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2879:15:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""},"value":"must override"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""}],"id":2444,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2872:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2872:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2447,"nodeType":"ExpressionStatement","src":"2872:23:9"}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"1711:862:9","text":" Post-operation handler.\n (verified to be called only through the entryPoint)\n @dev If subclass returns a non-empty context from validatePaymasterUserOp,\n      it must also implement this method.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call)."},"id":2449,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"2588:7:9","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"mode","nameLocation":"2617:4:9","nodeType":"VariableDeclaration","scope":2449,"src":"2606:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":2431,"nodeType":"UserDefinedTypeName","pathNode":{"id":2430,"name":"PostOpMode","nameLocations":["2606:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3207,"src":"2606:10:9"},"referencedDeclaration":3207,"src":"2606:10:9","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"context","nameLocation":"2647:7:9","nodeType":"VariableDeclaration","scope":2449,"src":"2632:22:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2433,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"actualGasCost","nameLocation":"2673:13:9","nodeType":"VariableDeclaration","scope":2449,"src":"2665:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2595:98:9"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[],"src":"2711:0:9"},"scope":2561,"src":"2579:324:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2465,"nodeType":"Block","src":"3043:72:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2461,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3101:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$2561","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$2561","typeString":"contract BasePaymaster"}],"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3093:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2459,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:9","typeDescriptions":{}}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2453,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"3054:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3065:9:9","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":3313,"src":"3054:20:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2456,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3082:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3086:5:9","memberName":"value","nodeType":"MemberAccess","src":"3082:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3054:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2464,"nodeType":"ExpressionStatement","src":"3054:53:9"}]},"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"2911:92:9","text":" Add a deposit for this paymaster, used for paying for transaction fees."},"functionSelector":"d0e30db0","id":2466,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3018:7:9","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[],"src":"3025:2:9"},"returnParameters":{"id":2452,"nodeType":"ParameterList","parameters":[],"src":"3043:0:9"},"scope":2561,"src":"3009:106:9","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2483,"nodeType":"Block","src":"3398:65:9","statements":[{"expression":{"arguments":[{"id":2479,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3431:15:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2480,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"3448:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2476,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"3409:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3420:10:9","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":3337,"src":"3409:21:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3409:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2482,"nodeType":"ExpressionStatement","src":"3409:46:9"}]},"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"3123:158:9","text":" Withdraw value from the deposit.\n @param withdrawAddress - Target to send to.\n @param amount          - Amount to withdraw."},"functionSelector":"205c2878","id":2484,"implemented":true,"kind":"function","modifiers":[{"id":2474,"kind":"modifierInvocation","modifierName":{"id":2473,"name":"onlyOwner","nameLocations":["3388:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3388:9:9"},"nodeType":"ModifierInvocation","src":"3388:9:9"}],"name":"withdrawTo","nameLocation":"3296:10:9","nodeType":"FunctionDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3333:15:9","nodeType":"VariableDeclaration","scope":2484,"src":"3317:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"3317:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"amount","nameLocation":"3367:6:9","nodeType":"VariableDeclaration","scope":2484,"src":"3359:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3359:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3306:74:9"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[],"src":"3398:0:9"},"scope":2561,"src":"3287:176:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2501,"nodeType":"Block","src":"3764:73:9","statements":[{"expression":{"arguments":[{"id":2498,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"3813:15:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":2492,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"3775:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3786:8:9","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":3319,"src":"3775:19:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3802:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3806:5:9","memberName":"value","nodeType":"MemberAccess","src":"3802:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3775:37:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3775:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2500,"nodeType":"ExpressionStatement","src":"3775:54:9"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"3471:218:9","text":" Add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased."},"functionSelector":"0396cb60","id":2502,"implemented":true,"kind":"function","modifiers":[{"id":2490,"kind":"modifierInvocation","modifierName":{"id":2489,"name":"onlyOwner","nameLocations":["3754:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3754:9:9"},"nodeType":"ModifierInvocation","src":"3754:9:9"}],"name":"addStake","nameLocation":"3704:8:9","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"3720:15:9","nodeType":"VariableDeclaration","scope":2502,"src":"3713:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2486,"name":"uint32","nodeType":"ElementaryTypeName","src":"3713:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3712:24:9"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[],"src":"3764:0:9"},"scope":2561,"src":"3695:142:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2516,"nodeType":"Block","src":"3977:61:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2512,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4024:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$2561","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$2561","typeString":"contract BasePaymaster"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4016:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"4016:7:9","typeDescriptions":{}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2508,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"3995:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4006:9:9","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"3995:20:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3995:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2507,"id":2515,"nodeType":"Return","src":"3988:42:9"}]},"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"3845:74:9","text":" Return current paymaster's deposit on the entryPoint."},"functionSelector":"c399ec88","id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"3934:10:9","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[],"src":"3944:2:9"},"returnParameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2517,"src":"3968:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3967:9:9"},"scope":2561,"src":"3925:113:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2528,"nodeType":"Block","src":"4245:43:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2523,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"4256:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4267:11:9","memberName":"unlockStake","nodeType":"MemberAccess","referencedDeclaration":3323,"src":"4256:22:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4256:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2527,"nodeType":"ExpressionStatement","src":"4256:24:9"}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"4046:151:9","text":" Unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"},"functionSelector":"bb9fe6bf","id":2529,"implemented":true,"kind":"function","modifiers":[{"id":2521,"kind":"modifierInvocation","modifierName":{"id":2520,"name":"onlyOwner","nameLocations":["4235:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4235:9:9"},"nodeType":"ModifierInvocation","src":"4235:9:9"}],"name":"unlockStake","nameLocation":"4212:11:9","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[],"src":"4223:2:9"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[],"src":"4245:0:9"},"scope":2561,"src":"4203:85:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2543,"nodeType":"Block","src":"4591:60:9","statements":[{"expression":{"arguments":[{"id":2540,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"4627:15:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":2537,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"4602:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4613:13:9","memberName":"withdrawStake","nodeType":"MemberAccess","referencedDeclaration":3329,"src":"4602:24:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable) external"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2542,"nodeType":"ExpressionStatement","src":"4602:41:9"}]},"documentation":{"id":2530,"nodeType":"StructuredDocumentation","src":"4296:214:9","text":" Withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":2544,"implemented":true,"kind":"function","modifiers":[{"id":2535,"kind":"modifierInvocation","modifierName":{"id":2534,"name":"onlyOwner","nameLocations":["4581:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4581:9:9"},"nodeType":"ModifierInvocation","src":"4581:9:9"}],"name":"withdrawStake","nameLocation":"4525:13:9","nodeType":"FunctionDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4555:15:9","nodeType":"VariableDeclaration","scope":2544,"src":"4539:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2531,"name":"address","nodeType":"ElementaryTypeName","src":"4539:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"4538:33:9"},"returnParameters":{"id":2536,"nodeType":"ParameterList","parameters":[],"src":"4591:0:9"},"scope":2561,"src":"4516:135:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2559,"nodeType":"Block","src":"4786:86:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2549,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4805:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4809:6:9","memberName":"sender","nodeType":"MemberAccess","src":"4805:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2553,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"4827:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}],"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4819:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2551,"name":"address","nodeType":"ElementaryTypeName","src":"4819:7:9","typeDescriptions":{}}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4819:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4805:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4840:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""},"value":"Sender not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""}],"id":2548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4797:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4797:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"ExpressionStatement","src":"4797:67:9"}]},"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"4659:70:9","text":" Validate the call is made from a valid entrypoint"},"id":2560,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"4744:22:9","nodeType":"FunctionDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[],"src":"4766:2:9"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[],"src":"4786:0:9"},"scope":2561,"src":"4735:137:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2562,"src":"424:4451:9","usedErrors":[13,18],"usedEvents":[24]}],"src":"37:4838:9"},"id":9},"contracts/core/Helpers.sol":{"ast":{"absolutePath":"contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[2571],"_intersectTimeRange":[2717],"_packValidationData":[2754,2792],"_parseValidationData":[2631],"calldataKeccak":[2802]},"id":2803,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2563,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:10"},{"canonicalName":"ValidationData","documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"109:649:10","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, with is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validaUntil - This UserOp is valid only up to this timestamp."},"id":2571,"members":[{"constant":false,"id":2566,"mutability":"mutable","name":"aggregator","nameLocation":"797:10:10","nodeType":"VariableDeclaration","scope":2571,"src":"789:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2565,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"validAfter","nameLocation":"821:10:10","nodeType":"VariableDeclaration","scope":2571,"src":"814:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2567,"name":"uint48","nodeType":"ElementaryTypeName","src":"814:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"validUntil","nameLocation":"845:10:10","nodeType":"VariableDeclaration","scope":2571,"src":"838:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2569,"name":"uint48","nodeType":"ElementaryTypeName","src":"838:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"767:14:10","nodeType":"StructDefinition","scope":2803,"src":"760:99:10","visibility":"public"},{"body":{"id":2630,"nodeType":"Block","src":"1131:322:10","statements":[{"assignments":[2581],"declarations":[{"constant":false,"id":2581,"mutability":"mutable","name":"aggregator","nameLocation":"1146:10:10","nodeType":"VariableDeclaration","scope":2630,"src":"1138:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2580,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2589,"initialValue":{"arguments":[{"arguments":[{"id":2586,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"1175:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1167:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2584,"name":"uint160","nodeType":"ElementaryTypeName","src":"1167:7:10","typeDescriptions":{}}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1159:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2582,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:10","typeDescriptions":{}}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1138:53:10"},{"assignments":[2591],"declarations":[{"constant":false,"id":2591,"mutability":"mutable","name":"validUntil","nameLocation":"1205:10:10","nodeType":"VariableDeclaration","scope":2630,"src":"1198:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2590,"name":"uint48","nodeType":"ElementaryTypeName","src":"1198:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2598,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"1225:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1225:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1218:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2592,"name":"uint48","nodeType":"ElementaryTypeName","src":"1218:6:10","typeDescriptions":{}}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1218:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1198:49:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2599,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"1258:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1272:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1258:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2611,"nodeType":"IfStatement","src":"1254:69:10","trueBody":{"id":2610,"nodeType":"Block","src":"1275:48:10","statements":[{"expression":{"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2602,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"1286:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1304:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2604,"name":"uint48","nodeType":"ElementaryTypeName","src":"1304:6:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2603,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1299:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1299:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1312:3:10","memberName":"max","nodeType":"MemberAccess","src":"1299:16:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1286:29:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2609,"nodeType":"ExpressionStatement","src":"1286:29:10"}]}},{"assignments":[2613],"declarations":[{"constant":false,"id":2613,"mutability":"mutable","name":"validAfter","nameLocation":"1336:10:10","nodeType":"VariableDeclaration","scope":2630,"src":"1329:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2612,"name":"uint48","nodeType":"ElementaryTypeName","src":"1329:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2623,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"1356:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1375:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1380:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1375:8:10","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1374:10:10","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1356:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1349:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2614,"name":"uint48","nodeType":"ElementaryTypeName","src":"1349:6:10","typeDescriptions":{}}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1329:56:10"},{"expression":{"arguments":[{"id":2625,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"1414:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2626,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"1426:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2627,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"1438:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2624,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"1399:14:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$2571_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":2579,"id":2629,"nodeType":"Return","src":"1392:57:10"}]},"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"863:165:10","text":" Extract sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data."},"id":2631,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1039:20:10","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"validationData","nameLocation":"1071:14:10","nodeType":"VariableDeclaration","scope":2631,"src":"1066:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint","nodeType":"ElementaryTypeName","src":"1066:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1059:29:10"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"data","nameLocation":"1125:4:10","nodeType":"VariableDeclaration","scope":2631,"src":"1103:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2577,"nodeType":"UserDefinedTypeName","pathNode":{"id":2576,"name":"ValidationData","nameLocations":["1103:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2571,"src":"1103:14:10"},"referencedDeclaration":2571,"src":"1103:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1102:28:10"},"scope":2803,"src":"1030:423:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2716,"nodeType":"Block","src":"1809:795:10","statements":[{"assignments":[2644],"declarations":[{"constant":false,"id":2644,"mutability":"mutable","name":"accountValidationData","nameLocation":"1838:21:10","nodeType":"VariableDeclaration","scope":2716,"src":"1816:43:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2643,"nodeType":"UserDefinedTypeName","pathNode":{"id":2642,"name":"ValidationData","nameLocations":["1816:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2571,"src":"1816:14:10"},"referencedDeclaration":2571,"src":"1816:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":2648,"initialValue":{"arguments":[{"id":2646,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"1893:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2645,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"1862:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2571_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1816:98:10"},{"assignments":[2651],"declarations":[{"constant":false,"id":2651,"mutability":"mutable","name":"pmValidationData","nameLocation":"1943:16:10","nodeType":"VariableDeclaration","scope":2716,"src":"1921:38:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2650,"nodeType":"UserDefinedTypeName","pathNode":{"id":2649,"name":"ValidationData","nameLocations":["1921:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2571,"src":"1921:14:10"},"referencedDeclaration":2571,"src":"1921:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":2655,"initialValue":{"arguments":[{"id":2653,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"1993:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2652,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"1962:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2571_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1921:102:10"},{"assignments":[2657],"declarations":[{"constant":false,"id":2657,"mutability":"mutable","name":"aggregator","nameLocation":"2038:10:10","nodeType":"VariableDeclaration","scope":2716,"src":"2030:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2660,"initialValue":{"expression":{"id":2658,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"2051:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"id":2659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2073:10:10","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2566,"src":"2051:32:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2030:53:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2094:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2116:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2108:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2662,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:10","typeDescriptions":{}}},"id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2108:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2094:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2673,"nodeType":"IfStatement","src":"2090:89:10","trueBody":{"id":2672,"nodeType":"Block","src":"2120:59:10","statements":[{"expression":{"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2667,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2131:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2668,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"2144:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"id":2669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2161:10:10","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2566,"src":"2144:27:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2131:40:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2671,"nodeType":"ExpressionStatement","src":"2131:40:10"}]}},{"assignments":[2675],"declarations":[{"constant":false,"id":2675,"mutability":"mutable","name":"validAfter","nameLocation":"2192:10:10","nodeType":"VariableDeclaration","scope":2716,"src":"2185:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2674,"name":"uint48","nodeType":"ElementaryTypeName","src":"2185:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2678,"initialValue":{"expression":{"id":2676,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"2205:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"id":2677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2227:10:10","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"2205:32:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2185:52:10"},{"assignments":[2680],"declarations":[{"constant":false,"id":2680,"mutability":"mutable","name":"validUntil","nameLocation":"2251:10:10","nodeType":"VariableDeclaration","scope":2716,"src":"2244:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2679,"name":"uint48","nodeType":"ElementaryTypeName","src":"2244:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2683,"initialValue":{"expression":{"id":2681,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"2264:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"id":2682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2286:10:10","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2570,"src":"2264:32:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2244:52:10"},{"assignments":[2685],"declarations":[{"constant":false,"id":2685,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2310:12:10","nodeType":"VariableDeclaration","scope":2716,"src":"2303:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2684,"name":"uint48","nodeType":"ElementaryTypeName","src":"2303:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2688,"initialValue":{"expression":{"id":2686,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"2325:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"id":2687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2342:10:10","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"2325:27:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2303:49:10"},{"assignments":[2690],"declarations":[{"constant":false,"id":2690,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2366:12:10","nodeType":"VariableDeclaration","scope":2716,"src":"2359:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2689,"name":"uint48","nodeType":"ElementaryTypeName","src":"2359:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2693,"initialValue":{"expression":{"id":2691,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"2381:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"id":2692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:10:10","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2570,"src":"2381:27:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2359:49:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2421:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2695,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"2434:12:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2421:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2701,"nodeType":"IfStatement","src":"2417:56:10","trueBody":{"expression":{"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2697,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2448:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2698,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"2461:12:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2448:25:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2700,"nodeType":"ExpressionStatement","src":"2448:25:10"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2702,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"2484:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2703,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"2497:12:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2484:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2709,"nodeType":"IfStatement","src":"2480:56:10","trueBody":{"expression":{"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2705,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"2511:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2706,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"2524:12:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2511:25:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2708,"nodeType":"ExpressionStatement","src":"2511:25:10"}},{"expression":{"arguments":[{"id":2711,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2565:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2712,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2577:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2713,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"2589:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2710,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"2550:14:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$2571_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":2641,"id":2715,"nodeType":"Return","src":"2543:57:10"}]},"documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"1457:214:10","text":" Intersect account and paymaster ranges.\n @param validationData          - The packed validation data of the account.\n @param paymasterValidationData - The packed validation data of the paymaster."},"id":2717,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1682:19:10","nodeType":"FunctionDefinition","parameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"validationData","nameLocation":"1716:14:10","nodeType":"VariableDeclaration","scope":2717,"src":"1708:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2636,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1745:23:10","nodeType":"VariableDeclaration","scope":2717,"src":"1737:31:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1701:70:10"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2717,"src":"1786:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2639,"nodeType":"UserDefinedTypeName","pathNode":{"id":2638,"name":"ValidationData","nameLocations":["1786:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2571,"src":"1786:14:10"},"referencedDeclaration":2571,"src":"1786:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1785:23:10"},"scope":2803,"src":"1673:931:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2753,"nodeType":"Block","src":"2808:148:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2728,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2839:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"id":2729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2844:10:10","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2566,"src":"2839:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2831:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2726,"name":"uint160","nodeType":"ElementaryTypeName","src":"2831:7:10","typeDescriptions":{}}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2733,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2876:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"id":2734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2881:10:10","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2570,"src":"2876:15:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2868:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:10","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2868:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2896:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2868:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2867:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:69:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2742,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"2921:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData memory"}},"id":2743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2926:10:10","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"2921:15:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2913:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"2913:7:10","typeDescriptions":{}}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2942:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2942:8:10","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2941:10:10","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2913:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2912:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:121:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2725,"id":2752,"nodeType":"Return","src":"2815:137:10"}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"2608:110:10","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack."},"id":2754,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2729:19:10","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"data","nameLocation":"2777:4:10","nodeType":"VariableDeclaration","scope":2754,"src":"2755:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2720,"nodeType":"UserDefinedTypeName","pathNode":{"id":2719,"name":"ValidationData","nameLocations":["2755:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2571,"src":"2755:14:10"},"referencedDeclaration":2571,"src":"2755:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2571_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2748:36:10"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2754,"src":"2799:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2799:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2798:9:10"},"scope":2803,"src":"2720:236:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2791,"nodeType":"Block","src":"3411:133:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":2766,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"3435:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3451:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3435:17:10","trueExpression":{"hexValue":"31","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3447:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3434:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2773,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"3474:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3466:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:10","typeDescriptions":{}}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3466:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3489:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3466:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3465:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:59:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2781,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"3514:10:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3506:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3506:7:10","typeDescriptions":{}}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3506:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3530:3:10","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3536:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3530:8:10","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3529:10:10","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3506:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3505:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:106:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2765,"id":2790,"nodeType":"Return","src":"3418:122:10"}]},"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"2960:325:10","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n @param validAfter - First timestamp this UserOperation is valid."},"id":2792,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"3296:19:10","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"sigFailed","nameLocation":"3327:9:10","nodeType":"VariableDeclaration","scope":2792,"src":"3322:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2756,"name":"bool","nodeType":"ElementaryTypeName","src":"3322:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"validUntil","nameLocation":"3350:10:10","nodeType":"VariableDeclaration","scope":2792,"src":"3343:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2758,"name":"uint48","nodeType":"ElementaryTypeName","src":"3343:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"validAfter","nameLocation":"3374:10:10","nodeType":"VariableDeclaration","scope":2792,"src":"3367:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2760,"name":"uint48","nodeType":"ElementaryTypeName","src":"3367:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3315:72:10"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2792,"src":"3402:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3401:9:10"},"scope":2803,"src":"3287:257:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2801,"nodeType":"Block","src":"3805:200:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3825:173:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3840:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3857:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3851:5:10"},"nodeType":"YulFunctionCall","src":"3851:11:10"},"variables":[{"name":"mem","nodeType":"YulTypedName","src":"3844:3:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3876:22:10","value":{"name":"data.length","nodeType":"YulIdentifier","src":"3887:11:10"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3880:3:10","type":""}]},{"expression":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3925:3:10"},{"name":"data.offset","nodeType":"YulIdentifier","src":"3930:11:10"},{"name":"len","nodeType":"YulIdentifier","src":"3943:3:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3912:12:10"},"nodeType":"YulFunctionCall","src":"3912:35:10"},"nodeType":"YulExpressionStatement","src":"3912:35:10"},{"nodeType":"YulAssignment","src":"3961:26:10","value":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3978:3:10"},{"name":"len","nodeType":"YulIdentifier","src":"3983:3:10"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3968:9:10"},"nodeType":"YulFunctionCall","src":"3968:19:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3961:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2795,"isOffset":false,"isSlot":false,"src":"3887:11:10","suffix":"length","valueSize":1},{"declaration":2795,"isOffset":true,"isSlot":false,"src":"3930:11:10","suffix":"offset","valueSize":1},{"declaration":2798,"isOffset":false,"isSlot":false,"src":"3961:3:10","valueSize":1}],"id":2800,"nodeType":"InlineAssembly","src":"3816:182:10"}]},"documentation":{"id":2793,"nodeType":"StructuredDocumentation","src":"3548:179:10","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":2802,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3742:14:10","nodeType":"FunctionDefinition","parameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"data","nameLocation":"3772:4:10","nodeType":"VariableDeclaration","scope":2802,"src":"3757:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2794,"name":"bytes","nodeType":"ElementaryTypeName","src":"3757:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3756:21:10"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"ret","nameLocation":"3800:3:10","nodeType":"VariableDeclaration","scope":2802,"src":"3792:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3792:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3791:13:10"},"scope":2803,"src":"3733:272:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"37:3968:10"},"id":10},"contracts/core/UserOperationLib.sol":{"ast":{"absolutePath":"contracts/core/UserOperationLib.sol","exportedSymbols":{"UserOperation":[3364],"UserOperationLib":[2982],"calldataKeccak":[2802]},"id":2983,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2804,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:11"},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":2806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2983,"sourceUnit":2803,"src":"109:45:11","symbolAliases":[{"foreign":{"id":2805,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"117:14:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"../interfaces/UserOperation.sol","id":2807,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2983,"sourceUnit":3365,"src":"156:41:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":2808,"nodeType":"StructuredDocumentation","src":"201:79:11","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":2982,"linearizedBaseContracts":[2982],"name":"UserOperationLib","nameLocation":"290:16:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2829,"nodeType":"Block","src":"524:228:11","statements":[{"assignments":[2818],"declarations":[{"constant":false,"id":2818,"mutability":"mutable","name":"data","nameLocation":"543:4:11","nodeType":"VariableDeclaration","scope":2829,"src":"535:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"535:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2819,"nodeType":"VariableDeclarationStatement","src":"535:12:11"},{"AST":{"nodeType":"YulBlock","src":"651:54:11","statements":[{"nodeType":"YulAssignment","src":"666:28:11","value":{"arguments":[{"name":"userOp","nodeType":"YulIdentifier","src":"687:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"674:12:11"},"nodeType":"YulFunctionCall","src":"674:20:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"666:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2818,"isOffset":false,"isSlot":false,"src":"666:4:11","valueSize":1},{"declaration":2812,"isOffset":false,"isSlot":false,"src":"687:6:11","valueSize":1}],"id":2820,"nodeType":"InlineAssembly","src":"642:63:11"},{"expression":{"arguments":[{"arguments":[{"id":2825,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"738:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"730:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2823,"name":"uint160","nodeType":"ElementaryTypeName","src":"730:7:11","typeDescriptions":{}}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"730:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"722:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:11","typeDescriptions":{}}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"722:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2816,"id":2828,"nodeType":"Return","src":"715:29:11"}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"314:106:11","text":" Get sender from user operation data.\n @param userOp - The user operation data."},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"435:9:11","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"userOp","nameLocation":"478:6:11","nodeType":"VariableDeclaration","scope":2830,"src":"455:29:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2811,"nodeType":"UserDefinedTypeName","pathNode":{"id":2810,"name":"UserOperation","nameLocations":["455:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"455:13:11"},"referencedDeclaration":3364,"src":"455:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"444:47:11"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"515:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2814,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"514:9:11"},"scope":2982,"src":"426:326:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2865,"nodeType":"Block","src":"1061:437:11","statements":[{"id":2864,"nodeType":"UncheckedBlock","src":"1072:419:11","statements":[{"assignments":[2840],"declarations":[{"constant":false,"id":2840,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1105:12:11","nodeType":"VariableDeclaration","scope":2864,"src":"1097:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2843,"initialValue":{"expression":{"id":2841,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"1120:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1127:12:11","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3357,"src":"1120:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1097:42:11"},{"assignments":[2845],"declarations":[{"constant":false,"id":2845,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1162:20:11","nodeType":"VariableDeclaration","scope":2864,"src":"1154:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2848,"initialValue":{"expression":{"id":2846,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"1185:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1192:20:11","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3359,"src":"1185:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1154:58:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2849,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"1231:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2850,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"1247:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1231:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2855,"nodeType":"IfStatement","src":"1227:176:11","trueBody":{"id":2854,"nodeType":"Block","src":"1269:134:11","statements":[{"expression":{"id":2852,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"1375:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2838,"id":2853,"nodeType":"Return","src":"1368:19:11"}]}},{"expression":{"arguments":[{"id":2857,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"1428:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"1442:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2859,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1465:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1471:7:11","memberName":"basefee","nodeType":"MemberAccess","src":"1465:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1442:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2856,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"1424:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1424:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2838,"id":2863,"nodeType":"Return","src":"1417:62:11"}]}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"760:198:11","text":" Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."},"id":2866,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"973:8:11","nodeType":"FunctionDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"userOp","nameLocation":"1015:6:11","nodeType":"VariableDeclaration","scope":2866,"src":"992:29:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2833,"nodeType":"UserDefinedTypeName","pathNode":{"id":2832,"name":"UserOperation","nameLocations":["992:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"992:13:11"},"referencedDeclaration":3364,"src":"992:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"981:47:11"},"returnParameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2866,"src":"1052:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1051:9:11"},"scope":2982,"src":"964:534:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2946,"nodeType":"Block","src":"1736:875:11","statements":[{"assignments":[2876],"declarations":[{"constant":false,"id":2876,"mutability":"mutable","name":"sender","nameLocation":"1755:6:11","nodeType":"VariableDeclaration","scope":2946,"src":"1747:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2880,"initialValue":{"arguments":[{"id":2878,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1774:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":2877,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1764:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3364_calldata_ptr_$returns$_t_address_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1747:34:11"},{"assignments":[2882],"declarations":[{"constant":false,"id":2882,"mutability":"mutable","name":"nonce","nameLocation":"1800:5:11","nodeType":"VariableDeclaration","scope":2946,"src":"1792:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2885,"initialValue":{"expression":{"id":2883,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1808:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1815:5:11","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3345,"src":"1808:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1792:28:11"},{"assignments":[2887],"declarations":[{"constant":false,"id":2887,"mutability":"mutable","name":"hashInitCode","nameLocation":"1839:12:11","nodeType":"VariableDeclaration","scope":2946,"src":"1831:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1831:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2892,"initialValue":{"arguments":[{"expression":{"id":2889,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1869:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1876:8:11","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3347,"src":"1869:15:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2888,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"1854:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1854:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1831:54:11"},{"assignments":[2894],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"hashCallData","nameLocation":"1904:12:11","nodeType":"VariableDeclaration","scope":2946,"src":"1896:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1896:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2899,"initialValue":{"arguments":[{"expression":{"id":2896,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1934:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1941:8:11","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":3349,"src":"1934:15:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2895,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"1919:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1919:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1896:54:11"},{"assignments":[2901],"declarations":[{"constant":false,"id":2901,"mutability":"mutable","name":"callGasLimit","nameLocation":"1969:12:11","nodeType":"VariableDeclaration","scope":2946,"src":"1961:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2904,"initialValue":{"expression":{"id":2902,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1984:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1991:12:11","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":3351,"src":"1984:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1961:42:11"},{"assignments":[2906],"declarations":[{"constant":false,"id":2906,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"2022:20:11","nodeType":"VariableDeclaration","scope":2946,"src":"2014:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2909,"initialValue":{"expression":{"id":2907,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"2045:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2052:20:11","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3353,"src":"2045:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2014:58:11"},{"assignments":[2911],"declarations":[{"constant":false,"id":2911,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2091:18:11","nodeType":"VariableDeclaration","scope":2946,"src":"2083:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2914,"initialValue":{"expression":{"id":2912,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"2112:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2119:18:11","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"2112:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2083:54:11"},{"assignments":[2916],"declarations":[{"constant":false,"id":2916,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2156:12:11","nodeType":"VariableDeclaration","scope":2946,"src":"2148:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2148:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2919,"initialValue":{"expression":{"id":2917,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"2171:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2178:12:11","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3357,"src":"2171:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2148:42:11"},{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2209:20:11","nodeType":"VariableDeclaration","scope":2946,"src":"2201:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2924,"initialValue":{"expression":{"id":2922,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"2232:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:20:11","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3359,"src":"2232:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2201:58:11"},{"assignments":[2926],"declarations":[{"constant":false,"id":2926,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"2278:20:11","nodeType":"VariableDeclaration","scope":2946,"src":"2270:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2270:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2931,"initialValue":{"arguments":[{"expression":{"id":2928,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"2316:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2323:16:11","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3361,"src":"2316:23:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2927,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"2301:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2301:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2270:70:11"},{"expression":{"arguments":[{"id":2934,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"2385:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2935,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"2393:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2936,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"2413:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2937,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"2427:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2938,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2454:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2939,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"2468:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2940,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2490:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2941,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"2523:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2942,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2537:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2943,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"2572:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2932,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2360:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2364:6:11","memberName":"encode","nodeType":"MemberAccess","src":"2360:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2360:243:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2874,"id":2945,"nodeType":"Return","src":"2353:250:11"}]},"documentation":{"id":2867,"nodeType":"StructuredDocumentation","src":"1506:122:11","text":" Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data."},"id":2947,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"1643:4:11","nodeType":"FunctionDefinition","parameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"userOp","nameLocation":"1681:6:11","nodeType":"VariableDeclaration","scope":2947,"src":"1658:29:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2869,"nodeType":"UserDefinedTypeName","pathNode":{"id":2868,"name":"UserOperation","nameLocations":["1658:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"1658:13:11"},"referencedDeclaration":3364,"src":"1658:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1647:47:11"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"ret","nameLocation":"1731:3:11","nodeType":"VariableDeclaration","scope":2947,"src":"1718:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2872,"name":"bytes","nodeType":"ElementaryTypeName","src":"1718:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1717:18:11"},"scope":2982,"src":"1634:977:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2962,"nodeType":"Block","src":"2817:49:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2958,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"2850:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":2957,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"2845:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3364_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2845:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2956,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2835:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2835:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2955,"id":2961,"nodeType":"Return","src":"2828:30:11"}]},"documentation":{"id":2948,"nodeType":"StructuredDocumentation","src":"2619:99:11","text":" Hash the user operation data.\n @param userOp - The user operation data."},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"2733:4:11","nodeType":"FunctionDefinition","parameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"userOp","nameLocation":"2771:6:11","nodeType":"VariableDeclaration","scope":2963,"src":"2748:29:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2950,"nodeType":"UserDefinedTypeName","pathNode":{"id":2949,"name":"UserOperation","nameLocations":["2748:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"2748:13:11"},"referencedDeclaration":3364,"src":"2748:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2737:47:11"},"returnParameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2963,"src":"2808:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2808:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2807:9:11"},"scope":2982,"src":"2724:142:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2980,"nodeType":"Block","src":"3062:39:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2973,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"3080:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2974,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"3084:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3080:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2977,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"3092:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3080:13:11","trueExpression":{"id":2976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"3088:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2972,"id":2979,"nodeType":"Return","src":"3073:20:11"}]},"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"2874:115:11","text":" The minimum of two numbers.\n @param a - First number.\n @param b - Second number."},"id":2981,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3004:3:11","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"a","nameLocation":"3016:1:11","nodeType":"VariableDeclaration","scope":2981,"src":"3008:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"3008:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"b","nameLocation":"3027:1:11","nodeType":"VariableDeclaration","scope":2981,"src":"3019:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3007:22:11"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2981,"src":"3053:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:9:11"},"scope":2982,"src":"2995:106:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2983,"src":"282:2822:11","usedErrors":[],"usedEvents":[]}],"src":"37:3067:11"},"id":11},"contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[3016],"UserOperation":[3364]},"id":3017,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2984,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:12"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":2985,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3017,"sourceUnit":3365,"src":"65:29:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":2986,"nodeType":"StructuredDocumentation","src":"98:45:12","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":3016,"linearizedBaseContracts":[3016],"name":"IAggregator","nameLocation":"155:11:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"174:274:12","text":" Validate aggregated signature.\n Revert if the aggregated signature does not match the given list of operations.\n @param userOps   - Array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"e3563a4f","id":2996,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"463:18:12","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"userOps","nameLocation":"517:7:12","nodeType":"VariableDeclaration","scope":2996,"src":"492:32:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3364_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":2989,"nodeType":"UserDefinedTypeName","pathNode":{"id":2988,"name":"UserOperation","nameLocations":["492:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"492:13:12"},"referencedDeclaration":3364,"src":"492:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"id":2990,"nodeType":"ArrayTypeName","src":"492:15:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3364_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"signature","nameLocation":"550:9:12","nodeType":"VariableDeclaration","scope":2996,"src":"535:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2992,"name":"bytes","nodeType":"ElementaryTypeName","src":"535:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"481:85:12"},"returnParameters":{"id":2995,"nodeType":"ParameterList","parameters":[],"src":"580:0:12"},"scope":3016,"src":"454:127:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"589:616:12","text":" Validate signature of a single userOp.\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"64c530cd","id":3005,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1220:23:12","nodeType":"FunctionDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"userOp","nameLocation":"1277:6:12","nodeType":"VariableDeclaration","scope":3005,"src":"1254:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":2999,"nodeType":"UserDefinedTypeName","pathNode":{"id":2998,"name":"UserOperation","nameLocations":["1254:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"1254:13:12"},"referencedDeclaration":3364,"src":"1254:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1243:47:12"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1327:12:12","nodeType":"VariableDeclaration","scope":3005,"src":"1314:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3002,"name":"bytes","nodeType":"ElementaryTypeName","src":"1314:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1313:27:12"},"scope":3016,"src":"1211:130:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3006,"nodeType":"StructuredDocumentation","src":"1349:393:12","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation.\n @param userOps              - Array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"275e2d79","id":3015,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1757:19:12","nodeType":"FunctionDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"userOps","nameLocation":"1812:7:12","nodeType":"VariableDeclaration","scope":3015,"src":"1787:32:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3364_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3008,"nodeType":"UserDefinedTypeName","pathNode":{"id":3007,"name":"UserOperation","nameLocations":["1787:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"1787:13:12"},"referencedDeclaration":3364,"src":"1787:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"id":3009,"nodeType":"ArrayTypeName","src":"1787:15:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3364_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1776:50:12"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1863:19:12","nodeType":"VariableDeclaration","scope":3015,"src":"1850:32:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3012,"name":"bytes","nodeType":"ElementaryTypeName","src":"1850:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1849:34:12"},"scope":3016,"src":"1748:136:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3017,"src":"145:1742:12","usedErrors":[],"usedEvents":[]}],"src":"37:1852:12"},"id":12},"contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[3016],"IEntryPoint":[3170],"INonceManager":[3189],"IStakeManager":[3338],"UserOperation":[3364]},"id":3171,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3018,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"168:24:13"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3019,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3171,"sourceUnit":3365,"src":"322:29:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":3020,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3171,"sourceUnit":3339,"src":"353:29:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":3021,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3171,"sourceUnit":3017,"src":"384:27:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":3022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3171,"sourceUnit":3190,"src":"413:29:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3023,"name":"IStakeManager","nameLocations":["471:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":3338,"src":"471:13:13"},"id":3024,"nodeType":"InheritanceSpecifier","src":"471:13:13"},{"baseName":{"id":3025,"name":"INonceManager","nameLocations":["486:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":3189,"src":"486:13:13"},"id":3026,"nodeType":"InheritanceSpecifier","src":"486:13:13"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3170,"linearizedBaseContracts":[3170,3189,3338],"name":"IEntryPoint","nameLocation":"456:11:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":3042,"name":"UserOperationEvent","nameLocation":"1277:18:13","nodeType":"EventDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1322:10:13","nodeType":"VariableDeclaration","scope":3042,"src":"1306:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1306:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3030,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1359:6:13","nodeType":"VariableDeclaration","scope":3042,"src":"1343:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"1343:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3032,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1392:9:13","nodeType":"VariableDeclaration","scope":3042,"src":"1376:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3034,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1420:5:13","nodeType":"VariableDeclaration","scope":3042,"src":"1412:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3036,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1441:7:13","nodeType":"VariableDeclaration","scope":3042,"src":"1436:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3035,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3038,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1467:13:13","nodeType":"VariableDeclaration","scope":3042,"src":"1459:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3040,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1499:13:13","nodeType":"VariableDeclaration","scope":3042,"src":"1491:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1295:224:13"},"src":"1271:249:13"},{"anonymous":false,"documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"1528:355:13","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":3053,"name":"AccountDeployed","nameLocation":"1895:15:13","nodeType":"EventDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1937:10:13","nodeType":"VariableDeclaration","scope":3053,"src":"1921:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1921:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3047,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1974:6:13","nodeType":"VariableDeclaration","scope":3053,"src":"1958:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3046,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3049,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1999:7:13","nodeType":"VariableDeclaration","scope":3053,"src":"1991:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3048,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3051,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"2025:9:13","nodeType":"VariableDeclaration","scope":3053,"src":"2017:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"2017:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1910:131:13"},"src":"1889:153:13"},{"anonymous":false,"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"2050:367:13","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":3064,"name":"UserOperationRevertReason","nameLocation":"2429:25:13","nodeType":"EventDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2481:10:13","nodeType":"VariableDeclaration","scope":3064,"src":"2465:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2465:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3058,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2518:6:13","nodeType":"VariableDeclaration","scope":3064,"src":"2502:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3057,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3060,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2543:5:13","nodeType":"VariableDeclaration","scope":3064,"src":"2535:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3062,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2565:12:13","nodeType":"VariableDeclaration","scope":3064,"src":"2559:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3061,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2454:130:13"},"src":"2423:162:13"},{"anonymous":false,"documentation":{"id":3065,"nodeType":"StructuredDocumentation","src":"2593:382:13","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":3075,"name":"PostOpRevertReason","nameLocation":"2987:18:13","nodeType":"EventDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3032:10:13","nodeType":"VariableDeclaration","scope":3075,"src":"3016:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3016:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3069,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3069:6:13","nodeType":"VariableDeclaration","scope":3075,"src":"3053:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3068,"name":"address","nodeType":"ElementaryTypeName","src":"3053:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3071,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3094:5:13","nodeType":"VariableDeclaration","scope":3075,"src":"3086:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3070,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3073,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3116:12:13","nodeType":"VariableDeclaration","scope":3075,"src":"3110:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3072,"name":"bytes","nodeType":"ElementaryTypeName","src":"3110:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3005:130:13"},"src":"2981:155:13"},{"anonymous":false,"documentation":{"id":3076,"nodeType":"StructuredDocumentation","src":"3144:161:13","text":" An event emitted by handleOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":3078,"name":"BeforeExecution","nameLocation":"3317:15:13","nodeType":"EventDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[],"src":"3332:2:13"},"src":"3311:24:13"},{"anonymous":false,"documentation":{"id":3079,"nodeType":"StructuredDocumentation","src":"3343:190:13","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":3083,"name":"SignatureAggregatorChanged","nameLocation":"3545:26:13","nodeType":"EventDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3588:10:13","nodeType":"VariableDeclaration","scope":3083,"src":"3572:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3080,"name":"address","nodeType":"ElementaryTypeName","src":"3572:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3571:28:13"},"src":"3539:61:13"},{"documentation":{"id":3084,"nodeType":"StructuredDocumentation","src":"3608:785:13","text":" A custom revert error of handleOps, to identify the offending op.\n Should be caught in off-chain handleOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":3090,"name":"FailedOp","nameLocation":"4405:8:13","nodeType":"ErrorDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"opIndex","nameLocation":"4422:7:13","nodeType":"VariableDeclaration","scope":3090,"src":"4414:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"4414:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"reason","nameLocation":"4438:6:13","nodeType":"VariableDeclaration","scope":3090,"src":"4431:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3087,"name":"string","nodeType":"ElementaryTypeName","src":"4431:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4413:32:13"},"src":"4399:47:13"},{"errorSelector":"ad7954bc","id":3094,"name":"PostOpReverted","nameLocation":"4460:14:13","nodeType":"ErrorDefinition","parameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"returnData","nameLocation":"4481:10:13","nodeType":"VariableDeclaration","scope":3094,"src":"4475:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3091,"name":"bytes","nodeType":"ElementaryTypeName","src":"4475:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4474:18:13"},"src":"4454:39:13"},{"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"4501:193:13","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":3099,"name":"SignatureValidationFailed","nameLocation":"4706:25:13","nodeType":"ErrorDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"aggregator","nameLocation":"4740:10:13","nodeType":"VariableDeclaration","scope":3099,"src":"4732:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3096,"name":"address","nodeType":"ElementaryTypeName","src":"4732:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4731:20:13"},"src":"4700:52:13"},{"errorSelector":"6ca7b806","id":3103,"name":"SenderAddressResult","nameLocation":"4808:19:13","nodeType":"ErrorDefinition","parameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"sender","nameLocation":"4836:6:13","nodeType":"VariableDeclaration","scope":3103,"src":"4828:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3100,"name":"address","nodeType":"ElementaryTypeName","src":"4828:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4827:16:13"},"src":"4802:42:13"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":3113,"members":[{"constant":false,"id":3107,"mutability":"mutable","name":"userOps","nameLocation":"4948:7:13","nodeType":"VariableDeclaration","scope":3113,"src":"4932:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3364_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3105,"nodeType":"UserDefinedTypeName","pathNode":{"id":3104,"name":"UserOperation","nameLocations":["4932:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"4932:13:13"},"referencedDeclaration":3364,"src":"4932:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"id":3106,"nodeType":"ArrayTypeName","src":"4932:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3364_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"aggregator","nameLocation":"5009:10:13","nodeType":"VariableDeclaration","scope":3113,"src":"4997:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3016","typeString":"contract IAggregator"},"typeName":{"id":3109,"nodeType":"UserDefinedTypeName","pathNode":{"id":3108,"name":"IAggregator","nameLocations":["4997:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":3016,"src":"4997:11:13"},"referencedDeclaration":3016,"src":"4997:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3016","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"signature","nameLocation":"5069:9:13","nodeType":"VariableDeclaration","scope":3113,"src":"5063:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3111,"name":"bytes","nodeType":"ElementaryTypeName","src":"5063:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"4900:20:13","nodeType":"StructDefinition","scope":3170,"src":"4893:193:13","visibility":"public"},{"documentation":{"id":3114,"nodeType":"StructuredDocumentation","src":"5094:390:13","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"1fad948c","id":3123,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5499:9:13","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"ops","nameLocation":"5544:3:13","nodeType":"VariableDeclaration","scope":3123,"src":"5519:28:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3364_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":3116,"nodeType":"UserDefinedTypeName","pathNode":{"id":3115,"name":"UserOperation","nameLocations":["5519:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"5519:13:13"},"referencedDeclaration":3364,"src":"5519:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"id":3117,"nodeType":"ArrayTypeName","src":"5519:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$3364_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"beneficiary","nameLocation":"5574:11:13","nodeType":"VariableDeclaration","scope":3123,"src":"5558:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"5558:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5508:84:13"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[],"src":"5601:0:13"},"scope":3170,"src":"5490:112:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3124,"nodeType":"StructuredDocumentation","src":"5610:264:13","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"4b1d7cf5","id":3133,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"5889:19:13","nodeType":"FunctionDefinition","parameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"5951:16:13","nodeType":"VariableDeclaration","scope":3133,"src":"5919:48:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3113_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":3126,"nodeType":"UserDefinedTypeName","pathNode":{"id":3125,"name":"UserOpsPerAggregator","nameLocations":["5919:20:13"],"nodeType":"IdentifierPath","referencedDeclaration":3113,"src":"5919:20:13"},"referencedDeclaration":3113,"src":"5919:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3113_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":3127,"nodeType":"ArrayTypeName","src":"5919:22:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3113_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"beneficiary","nameLocation":"5994:11:13","nodeType":"VariableDeclaration","scope":3133,"src":"5978:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3129,"name":"address","nodeType":"ElementaryTypeName","src":"5978:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5908:104:13"},"returnParameters":{"id":3132,"nodeType":"ParameterList","parameters":[],"src":"6021:0:13"},"scope":3170,"src":"5880:142:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"6030:275:13","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n @param userOp - The user operation to generate the request ID for."},"functionSelector":"a6193531","id":3142,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6320:13:13","nodeType":"FunctionDefinition","parameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"userOp","nameLocation":"6367:6:13","nodeType":"VariableDeclaration","scope":3142,"src":"6344:29:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3136,"nodeType":"UserDefinedTypeName","pathNode":{"id":3135,"name":"UserOperation","nameLocations":["6344:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"6344:13:13"},"referencedDeclaration":3364,"src":"6344:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6333:47:13"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3142,"src":"6404:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6404:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6403:9:13"},"scope":3170,"src":"6311:102:13","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":3143,"nodeType":"StructuredDocumentation","src":"6421:641:13","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\n @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\n @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":3156,"members":[{"constant":false,"id":3145,"mutability":"mutable","name":"preOpGas","nameLocation":"7105:8:13","nodeType":"VariableDeclaration","scope":3156,"src":"7097:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"7097:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3147,"mutability":"mutable","name":"prefund","nameLocation":"7132:7:13","nodeType":"VariableDeclaration","scope":3156,"src":"7124:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3149,"mutability":"mutable","name":"sigFailed","nameLocation":"7155:9:13","nodeType":"VariableDeclaration","scope":3156,"src":"7150:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3148,"name":"bool","nodeType":"ElementaryTypeName","src":"7150:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"validAfter","nameLocation":"7182:10:13","nodeType":"VariableDeclaration","scope":3156,"src":"7175:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3150,"name":"uint48","nodeType":"ElementaryTypeName","src":"7175:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"validUntil","nameLocation":"7210:10:13","nodeType":"VariableDeclaration","scope":3156,"src":"7203:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3152,"name":"uint48","nodeType":"ElementaryTypeName","src":"7203:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"paymasterContext","nameLocation":"7237:16:13","nodeType":"VariableDeclaration","scope":3156,"src":"7231:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3154,"name":"bytes","nodeType":"ElementaryTypeName","src":"7231:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7075:10:13","nodeType":"StructDefinition","scope":3170,"src":"7068:193:13","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"7269:127:13","text":" Returned aggregated signature info:\n The aggregator returned by the account, and its current stake."},"id":3163,"members":[{"constant":false,"id":3159,"mutability":"mutable","name":"aggregator","nameLocation":"7448:10:13","nodeType":"VariableDeclaration","scope":3163,"src":"7440:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3158,"name":"address","nodeType":"ElementaryTypeName","src":"7440:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"stakeInfo","nameLocation":"7479:9:13","nodeType":"VariableDeclaration","scope":3163,"src":"7469:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3290_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3161,"nodeType":"UserDefinedTypeName","pathNode":{"id":3160,"name":"StakeInfo","nameLocations":["7469:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3290,"src":"7469:9:13"},"referencedDeclaration":3290,"src":"7469:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3290_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7409:19:13","nodeType":"StructDefinition","scope":3170,"src":"7402:94:13","visibility":"public"},{"documentation":{"id":3164,"nodeType":"StructuredDocumentation","src":"7504:343:13","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":3169,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"7862:16:13","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"initCode","nameLocation":"7892:8:13","nodeType":"VariableDeclaration","scope":3169,"src":"7879:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3165,"name":"bytes","nodeType":"ElementaryTypeName","src":"7879:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7878:23:13"},"returnParameters":{"id":3168,"nodeType":"ParameterList","parameters":[],"src":"7910:0:13"},"scope":3170,"src":"7853:58:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3171,"src":"446:7470:13","usedErrors":[3090,3094,3099,3103],"usedEvents":[3042,3053,3064,3075,3078,3083,3243,3251,3259,3265,3273]}],"src":"168:7750:13"},"id":13},"contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[3189]},"id":3190,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3172,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3189,"linearizedBaseContracts":[3189],"name":"INonceManager","nameLocation":"75:13:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"98:424:14","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":3182,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"537:8:14","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"sender","nameLocation":"554:6:14","nodeType":"VariableDeclaration","scope":3182,"src":"546:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"key","nameLocation":"570:3:14","nodeType":"VariableDeclaration","scope":3182,"src":"562:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3176,"name":"uint192","nodeType":"ElementaryTypeName","src":"562:7:14","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"545:29:14"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"nonce","nameLocation":"611:5:14","nodeType":"VariableDeclaration","scope":3182,"src":"603:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"602:15:14"},"scope":3189,"src":"528:90:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"626:456:14","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":3188,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1097:14:14","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"key","nameLocation":"1120:3:14","nodeType":"VariableDeclaration","scope":3188,"src":"1112:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3184,"name":"uint192","nodeType":"ElementaryTypeName","src":"1112:7:14","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1111:13:14"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[],"src":"1133:0:14"},"scope":3189,"src":"1088:46:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3190,"src":"65:1072:14","usedErrors":[],"usedEvents":[]}],"src":"37:1102:14"},"id":14},"contracts/interfaces/IOracleAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IOracleAggregator.sol","exportedSymbols":{"IOracleAggregator":[3199]},"id":3200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3191,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"33:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IOracleAggregator","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3199,"linearizedBaseContracts":[3199],"name":"IOracleAggregator","nameLocation":"71:17:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"7f02a712","id":3198,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenValueOfOneNativeToken","nameLocation":"105:29:15","nodeType":"FunctionDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"_token","nameLocation":"153:6:15","nodeType":"VariableDeclaration","scope":3198,"src":"145:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3192,"name":"address","nodeType":"ElementaryTypeName","src":"145:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"134:32:15"},"returnParameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"exchangeRate","nameLocation":"198:12:15","nodeType":"VariableDeclaration","scope":3198,"src":"190:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"190:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"189:22:15"},"scope":3199,"src":"96:116:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3200,"src":"61:154:15","usedErrors":[],"usedEvents":[]}],"src":"33:182:15"},"id":15},"contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[3234],"UserOperation":[3364]},"id":3235,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3201,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:16"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":3202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3235,"sourceUnit":3365,"src":"65:29:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":3203,"nodeType":"StructuredDocumentation","src":"98:219:16","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":3234,"linearizedBaseContracts":[3234],"name":"IPaymaster","nameLocation":"329:10:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":3207,"members":[{"id":3204,"name":"opSucceeded","nameLocation":"405:11:16","nodeType":"EnumValue","src":"405:11:16"},{"id":3205,"name":"opReverted","nameLocation":"483:10:16","nodeType":"EnumValue","src":"483:10:16"},{"id":3206,"name":"postOpReverted","nameLocation":"654:14:16","nodeType":"EnumValue","src":"654:14:16"}],"name":"PostOpMode","nameLocation":"352:10:16","nodeType":"EnumDefinition","src":"347:328:16"},{"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"683:1458:16","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                                    otherwise, an address of an \"authorizer\" contract.\n                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"f465c77e","id":3222,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2156:23:16","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"userOp","nameLocation":"2213:6:16","nodeType":"VariableDeclaration","scope":3222,"src":"2190:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3210,"nodeType":"UserDefinedTypeName","pathNode":{"id":3209,"name":"UserOperation","nameLocations":["2190:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"2190:13:16"},"referencedDeclaration":3364,"src":"2190:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3213,"mutability":"mutable","name":"userOpHash","nameLocation":"2238:10:16","nodeType":"VariableDeclaration","scope":3222,"src":"2230:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2230:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"maxCost","nameLocation":"2267:7:16","nodeType":"VariableDeclaration","scope":3222,"src":"2259:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2259:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2179:102:16"},"returnParameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"context","nameLocation":"2313:7:16","nodeType":"VariableDeclaration","scope":3222,"src":"2300:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3217,"name":"bytes","nodeType":"ElementaryTypeName","src":"2300:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"validationData","nameLocation":"2330:14:16","nodeType":"VariableDeclaration","scope":3222,"src":"2322:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2299:46:16"},"scope":3234,"src":"2147:199:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"2354:716:16","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call)."},"functionSelector":"a9a23409","id":3233,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3085:6:16","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"mode","nameLocation":"3113:4:16","nodeType":"VariableDeclaration","scope":3233,"src":"3102:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":3225,"nodeType":"UserDefinedTypeName","pathNode":{"id":3224,"name":"PostOpMode","nameLocations":["3102:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3207,"src":"3102:10:16"},"referencedDeclaration":3207,"src":"3102:10:16","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"context","nameLocation":"3143:7:16","nodeType":"VariableDeclaration","scope":3233,"src":"3128:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3227,"name":"bytes","nodeType":"ElementaryTypeName","src":"3128:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"actualGasCost","nameLocation":"3169:13:16","nodeType":"VariableDeclaration","scope":3233,"src":"3161:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3161:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3091:98:16"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[],"src":"3198:0:16"},"scope":3234,"src":"3076:123:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3235,"src":"319:2883:16","usedErrors":[],"usedEvents":[]}],"src":"37:3167:16"},"id":16},"contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[3338]},"id":3339,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3236,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"42:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":3237,"nodeType":"StructuredDocumentation","src":"70:216:17","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":3338,"linearizedBaseContracts":[3338],"name":"IStakeManager","nameLocation":"298:13:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":3243,"name":"Deposited","nameLocation":"325:9:17","nodeType":"EventDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"351:7:17","nodeType":"VariableDeclaration","scope":3243,"src":"335:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3238,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3241,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"368:12:17","nodeType":"VariableDeclaration","scope":3243,"src":"360:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"334:47:17"},"src":"319:63:17"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":3251,"name":"Withdrawn","nameLocation":"396:9:17","nodeType":"EventDefinition","parameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"432:7:17","nodeType":"VariableDeclaration","scope":3251,"src":"416:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3247,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"458:15:17","nodeType":"VariableDeclaration","scope":3251,"src":"450:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3246,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3249,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"492:6:17","nodeType":"VariableDeclaration","scope":3251,"src":"484:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:100:17"},"src":"390:116:17"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":3259,"name":"StakeLocked","nameLocation":"578:11:17","nodeType":"EventDefinition","parameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"616:7:17","nodeType":"VariableDeclaration","scope":3259,"src":"600:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3252,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3255,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"642:11:17","nodeType":"VariableDeclaration","scope":3259,"src":"634:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3257,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"672:15:17","nodeType":"VariableDeclaration","scope":3259,"src":"664:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"589:105:17"},"src":"572:123:17"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":3265,"name":"StakeUnlocked","nameLocation":"767:13:17","nodeType":"EventDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"797:7:17","nodeType":"VariableDeclaration","scope":3265,"src":"781:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3260,"name":"address","nodeType":"ElementaryTypeName","src":"781:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3263,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"814:12:17","nodeType":"VariableDeclaration","scope":3265,"src":"806:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"780:47:17"},"src":"761:67:17"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":3273,"name":"StakeWithdrawn","nameLocation":"842:14:17","nodeType":"EventDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"883:7:17","nodeType":"VariableDeclaration","scope":3273,"src":"867:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3266,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3269,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"909:15:17","nodeType":"VariableDeclaration","scope":3273,"src":"901:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3268,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3271,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"943:6:17","nodeType":"VariableDeclaration","scope":3273,"src":"935:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"856:100:17"},"src":"836:121:17"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"965:697:17","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n      and the rest fit into a 2nd cell.\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":3285,"members":[{"constant":false,"id":3276,"mutability":"mutable","name":"deposit","nameLocation":"1706:7:17","nodeType":"VariableDeclaration","scope":3285,"src":"1698:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3275,"name":"uint112","nodeType":"ElementaryTypeName","src":"1698:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"staked","nameLocation":"1729:6:17","nodeType":"VariableDeclaration","scope":3285,"src":"1724:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3277,"name":"bool","nodeType":"ElementaryTypeName","src":"1724:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"stake","nameLocation":"1754:5:17","nodeType":"VariableDeclaration","scope":3285,"src":"1746:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3279,"name":"uint112","nodeType":"ElementaryTypeName","src":"1746:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1777:15:17","nodeType":"VariableDeclaration","scope":3285,"src":"1770:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3281,"name":"uint32","nodeType":"ElementaryTypeName","src":"1770:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"withdrawTime","nameLocation":"1810:12:17","nodeType":"VariableDeclaration","scope":3285,"src":"1803:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3283,"name":"uint48","nodeType":"ElementaryTypeName","src":"1803:6:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1675:11:17","nodeType":"StructDefinition","scope":3338,"src":"1668:162:17","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":3290,"members":[{"constant":false,"id":3287,"mutability":"mutable","name":"stake","nameLocation":"1938:5:17","nodeType":"VariableDeclaration","scope":3290,"src":"1930:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1962:15:17","nodeType":"VariableDeclaration","scope":3290,"src":"1954:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1954:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1909:9:17","nodeType":"StructDefinition","scope":3338,"src":"1902:83:17","visibility":"public"},{"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"1993:153:17","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":3299,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2161:14:17","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"account","nameLocation":"2194:7:17","nodeType":"VariableDeclaration","scope":3299,"src":"2186:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"2186:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2175:33:17"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"info","nameLocation":"2251:4:17","nodeType":"VariableDeclaration","scope":3299,"src":"2232:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3285_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3296,"nodeType":"UserDefinedTypeName","pathNode":{"id":3295,"name":"DepositInfo","nameLocations":["2232:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3285,"src":"2232:11:17"},"referencedDeclaration":3285,"src":"2232:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3285_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2231:25:17"},"scope":3338,"src":"2152:105:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3300,"nodeType":"StructuredDocumentation","src":"2265:159:17","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":3307,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2439:9:17","nodeType":"FunctionDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"account","nameLocation":"2457:7:17","nodeType":"VariableDeclaration","scope":3307,"src":"2449:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3301,"name":"address","nodeType":"ElementaryTypeName","src":"2449:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2448:17:17"},"returnParameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3307,"src":"2489:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2488:9:17"},"scope":3338,"src":"2430:68:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"2506:109:17","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":3313,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2630:9:17","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"account","nameLocation":"2648:7:17","nodeType":"VariableDeclaration","scope":3313,"src":"2640:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3309,"name":"address","nodeType":"ElementaryTypeName","src":"2640:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2639:17:17"},"returnParameters":{"id":3312,"nodeType":"ParameterList","parameters":[],"src":"2673:0:17"},"scope":3338,"src":"2621:53:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3314,"nodeType":"StructuredDocumentation","src":"2682:207:17","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":3319,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2904:8:17","nodeType":"FunctionDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2920:16:17","nodeType":"VariableDeclaration","scope":3319,"src":"2913:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3315,"name":"uint32","nodeType":"ElementaryTypeName","src":"2913:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2912:25:17"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[],"src":"2954:0:17"},"scope":3338,"src":"2895:60:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"2963:131:17","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":3323,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3109:11:17","nodeType":"FunctionDefinition","parameters":{"id":3321,"nodeType":"ParameterList","parameters":[],"src":"3120:2:17"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[],"src":"3131:0:17"},"scope":3338,"src":"3100:32:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3324,"nodeType":"StructuredDocumentation","src":"3140:201:17","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":3329,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3356:13:17","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3386:15:17","nodeType":"VariableDeclaration","scope":3329,"src":"3370:31:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3325,"name":"address","nodeType":"ElementaryTypeName","src":"3370:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3369:33:17"},"returnParameters":{"id":3328,"nodeType":"ParameterList","parameters":[],"src":"3411:0:17"},"scope":3338,"src":"3347:65:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"3420:174:17","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":3337,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3609:10:17","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3646:15:17","nodeType":"VariableDeclaration","scope":3337,"src":"3630:31:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3331,"name":"address","nodeType":"ElementaryTypeName","src":"3630:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3680:14:17","nodeType":"VariableDeclaration","scope":3337,"src":"3672:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3672:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:82:17"},"returnParameters":{"id":3336,"nodeType":"ParameterList","parameters":[],"src":"3710:0:17"},"scope":3338,"src":"3600:111:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3339,"src":"288:3426:17","usedErrors":[],"usedEvents":[3243,3251,3259,3265,3273]}],"src":"42:3674:17"},"id":17},"contracts/interfaces/UserOperation.sol":{"ast":{"absolutePath":"contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[3364]},"id":3365,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3340,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:18"},{"canonicalName":"UserOperation","documentation":{"id":3341,"nodeType":"StructuredDocumentation","src":"65:1193:18","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor/\n @param callData              - The method call to execute on this account.\n @param callGasLimit          - The gas limit passed to the callData method call.\n @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param maxFeePerGas          - Same as EIP-1559 gas parameter.\n @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\n @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":3364,"members":[{"constant":false,"id":3343,"mutability":"mutable","name":"sender","nameLocation":"1296:6:18","nodeType":"VariableDeclaration","scope":3364,"src":"1288:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3342,"name":"address","nodeType":"ElementaryTypeName","src":"1288:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"nonce","nameLocation":"1317:5:18","nodeType":"VariableDeclaration","scope":3364,"src":"1309:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3347,"mutability":"mutable","name":"initCode","nameLocation":"1335:8:18","nodeType":"VariableDeclaration","scope":3364,"src":"1329:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3346,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3349,"mutability":"mutable","name":"callData","nameLocation":"1356:8:18","nodeType":"VariableDeclaration","scope":3364,"src":"1350:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3348,"name":"bytes","nodeType":"ElementaryTypeName","src":"1350:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3351,"mutability":"mutable","name":"callGasLimit","nameLocation":"1379:12:18","nodeType":"VariableDeclaration","scope":3364,"src":"1371:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1406:20:18","nodeType":"VariableDeclaration","scope":3364,"src":"1398:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1398:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1441:18:18","nodeType":"VariableDeclaration","scope":3364,"src":"1433:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1474:12:18","nodeType":"VariableDeclaration","scope":3364,"src":"1466:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1466:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3359,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1501:20:18","nodeType":"VariableDeclaration","scope":3364,"src":"1493:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3361,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1534:16:18","nodeType":"VariableDeclaration","scope":3364,"src":"1528:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3360,"name":"bytes","nodeType":"ElementaryTypeName","src":"1528:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3363,"mutability":"mutable","name":"signature","nameLocation":"1563:9:18","nodeType":"VariableDeclaration","scope":3364,"src":"1557:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3362,"name":"bytes","nodeType":"ElementaryTypeName","src":"1557:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1267:13:18","nodeType":"StructDefinition","scope":3365,"src":"1260:316:18","visibility":"public"}],"src":"37:1541:18"},"id":18},"contracts/token/OracleAggregator.sol":{"ast":{"absolutePath":"contracts/token/OracleAggregator.sol","exportedSymbols":{"OracleAggregator":[3430]},"id":3431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3366,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"33:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"OracleAggregator","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3430,"linearizedBaseContracts":[3430],"name":"OracleAggregator","nameLocation":"70:16:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":3368,"mutability":"mutable","name":"owner","nameLocation":"111:5:19","nodeType":"VariableDeclaration","scope":3430,"src":"96:20:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3367,"name":"address","nodeType":"ElementaryTypeName","src":"96:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"3ba0b9a9","id":3370,"mutability":"mutable","name":"exchangeRate","nameLocation":"133:12:19","nodeType":"VariableDeclaration","scope":3430,"src":"121:24:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint","nodeType":"ElementaryTypeName","src":"121:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":3382,"nodeType":"Block","src":"166:146:19","statements":[{"expression":{"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"173:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3374,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"181:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"185:6:19","memberName":"sender","nodeType":"MemberAccess","src":"181:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"173:18:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3377,"nodeType":"ExpressionStatement","src":"173:18:19"},{"expression":{"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3378,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"258:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653136","id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"273:4:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"1e16"},"src":"258:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3381,"nodeType":"ExpressionStatement","src":"258:19:19"}]},"id":3383,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[],"src":"164:2:19"},"returnParameters":{"id":3372,"nodeType":"ParameterList","parameters":[],"src":"166:0:19"},"scope":3430,"src":"153:159:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3394,"nodeType":"Block","src":"338:83:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"353:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"357:6:19","memberName":"sender","nodeType":"MemberAccess","src":"353:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3388,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"367:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"353:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"374:34:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":3385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"345:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"345:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3392,"nodeType":"ExpressionStatement","src":"345:64:19"},{"id":3393,"nodeType":"PlaceholderStatement","src":"416:1:19"}]},"id":3395,"name":"onlyOwner","nameLocation":"326:9:19","nodeType":"ModifierDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[],"src":"335:2:19"},"src":"317:104:19","virtual":false,"visibility":"internal"},{"body":{"id":3406,"nodeType":"Block","src":"486:36:19","statements":[{"expression":{"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3402,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"497:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3403,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"505:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"497:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3405,"nodeType":"ExpressionStatement","src":"497:17:19"}]},"functionSelector":"a6f9dae1","id":3407,"implemented":true,"kind":"function","modifiers":[{"id":3400,"kind":"modifierInvocation","modifierName":{"id":3399,"name":"onlyOwner","nameLocations":["476:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3395,"src":"476:9:19"},"nodeType":"ModifierInvocation","src":"476:9:19"}],"name":"changeOwner","nameLocation":"438:11:19","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"_newOwner","nameLocation":"458:9:19","nodeType":"VariableDeclaration","scope":3407,"src":"450:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3396,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"449:19:19"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[],"src":"486:0:19"},"scope":3430,"src":"429:93:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3418,"nodeType":"Block","src":"598:50:19","statements":[{"expression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3414,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"609:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3415,"name":"_newExchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"624:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"609:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3417,"nodeType":"ExpressionStatement","src":"609:31:19"}]},"functionSelector":"215fce93","id":3419,"implemented":true,"kind":"function","modifiers":[{"id":3412,"kind":"modifierInvocation","modifierName":{"id":3411,"name":"onlyOwner","nameLocations":["588:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3395,"src":"588:9:19"},"nodeType":"ModifierInvocation","src":"588:9:19"}],"name":"changeExchangeRate","nameLocation":"539:18:19","nodeType":"FunctionDefinition","parameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3409,"mutability":"mutable","name":"_newExchangeRate","nameLocation":"563:16:19","nodeType":"VariableDeclaration","scope":3419,"src":"558:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint","nodeType":"ElementaryTypeName","src":"558:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"557:23:19"},"returnParameters":{"id":3413,"nodeType":"ParameterList","parameters":[],"src":"598:0:19"},"scope":3430,"src":"530:118:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3428,"nodeType":"Block","src":"731:31:19","statements":[{"expression":{"id":3426,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"745:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3425,"id":3427,"nodeType":"Return","src":"738:19:19"}]},"functionSelector":"7f02a712","id":3429,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenValueOfOneNativeToken","nameLocation":"664:29:19","nodeType":"FunctionDefinition","parameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3429,"src":"694:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3420,"name":"address","nodeType":"ElementaryTypeName","src":"694:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"693:9:19"},"returnParameters":{"id":3425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3429,"src":"723:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3423,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"722:9:19"},"scope":3430,"src":"655:107:19","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3431,"src":"61:708:19","usedErrors":[],"usedEvents":[]}],"src":"33:736:19"},"id":19},"contracts/utils/BiconomyTokenPaymaster.sol":{"ast":{"absolutePath":"contracts/utils/BiconomyTokenPaymaster.sol","exportedSymbols":{"Address":[478],"BasePaymaster":[2561],"BiconomyTokenPaymaster":[4561],"Context":[500],"ECDSA":[1103],"Helpers":[3451],"IAggregator":[3016],"IERC20":[225],"IEntryPoint":[3170],"INonceManager":[3189],"IOracleAggregator":[3199],"IPaymaster":[3234],"IStakeManager":[3338],"Math":[2231],"MessageHashUtils":[1177],"Ownable":[147],"Strings":[755],"TokenPaymasterErrors":[4592],"UserOperation":[3364],"UserOperationLib":[2982],"ValidationData":[2571],"_intersectTimeRange":[2717],"_packValidationData":[2754,2792],"_parseValidationData":[2631],"calldataKeccak":[2802]},"id":4562,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3432,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"33:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":3434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":1104,"src":"61:75:20","symbolAliases":[{"foreign":{"id":3433,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"69:5:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":3435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":1104,"src":"138:62:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":226,"src":"202:56:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":3437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":479,"src":"260:51:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":3439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":2232,"src":"313:65:20","symbolAliases":[{"foreign":{"id":3438,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"321:4:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":3440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":1178,"src":"380:73:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":3442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":3171,"src":"459:58:20","symbolAliases":[{"foreign":{"id":3441,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"467:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"../interfaces/UserOperation.sol","id":3444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":3365,"src":"519:62:20","symbolAliases":[{"foreign":{"id":3443,"name":"UserOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"527:13:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/core/UserOperationLib.sol","file":"../core/UserOperationLib.sol","id":3446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":2983,"src":"583:62:20","symbolAliases":[{"foreign":{"id":3445,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"591:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IOracleAggregator.sol","file":"../interfaces/IOracleAggregator.sol","id":3448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":3200,"src":"647:70:20","symbolAliases":[{"foreign":{"id":3447,"name":"IOracleAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"655:17:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/utils/TokenPaymasterErrors.sol","file":"./TokenPaymasterErrors.sol","id":3450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":4593,"src":"719:64:20","symbolAliases":[{"foreign":{"id":3449,"name":"TokenPaymasterErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"727:20:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"../core/Helpers.sol","id":3451,"nameLocation":"817:7:20","nodeType":"ImportDirective","scope":4562,"sourceUnit":2803,"src":"785:40:20","symbolAliases":[],"unitAlias":"Helpers"},{"absolutePath":"contracts/core/BasePaymaster.sol","file":"../core/BasePaymaster.sol","id":3452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4562,"sourceUnit":2562,"src":"827:35:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3454,"name":"BasePaymaster","nameLocations":["2002:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":2561,"src":"2002:13:20"},"id":3455,"nodeType":"InheritanceSpecifier","src":"2002:13:20"},{"baseName":{"id":3456,"name":"TokenPaymasterErrors","nameLocations":["2022:20:20"],"nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"2022:20:20"},"id":3457,"nodeType":"InheritanceSpecifier","src":"2022:20:20"}],"canonicalName":"BiconomyTokenPaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":3453,"nodeType":"StructuredDocumentation","src":"897:1063:20","text":" A token-based paymaster that allows user to pay gas fee in ERC20 tokens. The paymaster owner chooses which tokens to accept.\n The payment manager (usually the owner) first deposits native gas into the EntryPoint. Then, for each transaction, it takes the gas fee from the user's ERC20 token balance.\n The manager must convert these collected tokens back to native gas and deposit it into the EntryPoint to keep the system running.\n It is an extension of VerifyingPaymaster which trusts external signer to authorize the transaction, but also with an ability to withdraw tokens.\n The validatePaymasterUserOp function does not interact with external contracts but uses an externally provided exchange rate.\n Based on the exchangeRate and requiredPrefund amount, the validation method checks if the user's account has enough token balance. This is done by only looking at the referenced storage.\n All Withdrawn tokens are sent to a dynamic fee receiver address.\n Optionally a safe guard deposit may be used in future versions."},"fullyImplemented":true,"id":4561,"linearizedBaseContracts":[4561,4592,2561,147,500,3234],"name":"BiconomyTokenPaymaster","nameLocation":"1971:22:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3460,"libraryName":{"id":3458,"name":"ECDSA","nameLocations":["2057:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":1103,"src":"2057:5:20"},"nodeType":"UsingForDirective","src":"2051:24:20","typeName":{"id":3459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2067:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":3463,"libraryName":{"id":3461,"name":"Address","nameLocations":["2087:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"2087:7:20"},"nodeType":"UsingForDirective","src":"2081:26:20","typeName":{"id":3462,"name":"address","nodeType":"ElementaryTypeName","src":"2099:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":3467,"libraryName":{"id":3464,"name":"UserOperationLib","nameLocations":["2119:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":2982,"src":"2119:16:20"},"nodeType":"UsingForDirective","src":"2113:41:20","typeName":{"id":3466,"nodeType":"UserDefinedTypeName","pathNode":{"id":3465,"name":"UserOperation","nameLocations":["2140:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"2140:13:20"},"referencedDeclaration":3364,"src":"2140:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}}},{"canonicalName":"BiconomyTokenPaymaster.PaymasterData","id":3485,"members":[{"constant":false,"id":3470,"mutability":"mutable","name":"priceSource","nameLocation":"2209:11:20","nodeType":"VariableDeclaration","scope":3485,"src":"2190:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"},"typeName":{"id":3469,"nodeType":"UserDefinedTypeName","pathNode":{"id":3468,"name":"ExchangeRateSource","nameLocations":["2190:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":3489,"src":"2190:18:20"},"referencedDeclaration":3489,"src":"2190:18:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"validUntil","nameLocation":"2234:10:20","nodeType":"VariableDeclaration","scope":3485,"src":"2227:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3471,"name":"uint48","nodeType":"ElementaryTypeName","src":"2227:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"validAfter","nameLocation":"2258:10:20","nodeType":"VariableDeclaration","scope":3485,"src":"2251:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3473,"name":"uint48","nodeType":"ElementaryTypeName","src":"2251:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"feeToken","nameLocation":"2283:8:20","nodeType":"VariableDeclaration","scope":3485,"src":"2275:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3475,"name":"address","nodeType":"ElementaryTypeName","src":"2275:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"oracleAggregator","nameLocation":"2306:16:20","nodeType":"VariableDeclaration","scope":3485,"src":"2298:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3477,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"exchangeRate","nameLocation":"2337:12:20","nodeType":"VariableDeclaration","scope":3485,"src":"2329:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2329:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3482,"mutability":"mutable","name":"priceMarkup","nameLocation":"2363:11:20","nodeType":"VariableDeclaration","scope":3485,"src":"2356:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3481,"name":"uint32","nodeType":"ElementaryTypeName","src":"2356:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3484,"mutability":"mutable","name":"signature","nameLocation":"2387:9:20","nodeType":"VariableDeclaration","scope":3485,"src":"2381:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3483,"name":"bytes","nodeType":"ElementaryTypeName","src":"2381:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PaymasterData","nameLocation":"2169:13:20","nodeType":"StructDefinition","scope":4561,"src":"2162:238:20","visibility":"public"},{"canonicalName":"BiconomyTokenPaymaster.ExchangeRateSource","documentation":{"id":3486,"nodeType":"StructuredDocumentation","src":"2408:237:20","text":" price source can be off-chain calculation or oracles\n for oracle based it can be based on chainlink feeds or TWAP oracles\n for ORACLE_BASED oracle aggregator address has to be passed in paymasterAndData"},"id":3489,"members":[{"id":3487,"name":"EXTERNAL_EXCHANGE_RATE","nameLocation":"2686:22:20","nodeType":"EnumValue","src":"2686:22:20"},{"id":3488,"name":"ORACLE_BASED","nameLocation":"2719:12:20","nodeType":"EnumValue","src":"2719:12:20"}],"name":"ExchangeRateSource","nameLocation":"2656:18:20","nodeType":"EnumDefinition","src":"2651:87:20"},{"constant":true,"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"3152:190:20","text":"@notice All 'price' variable coming from outside are expected to be multiple of 1e6, and in actual calculation,\n final value is divided by PRICE_DENOMINATOR to avoid rounding up."},"id":3493,"mutability":"constant","name":"PRICE_DENOMINATOR","nameLocation":"3372:17:20","nodeType":"VariableDeclaration","scope":4561,"src":"3348:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3491,"name":"uint32","nodeType":"ElementaryTypeName","src":"3348:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"316536","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3392:3:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"visibility":"private"},{"constant":false,"functionSelector":"c6e7a957","id":3496,"mutability":"mutable","name":"UNACCOUNTED_COST","nameLocation":"3504:16:20","nodeType":"VariableDeclaration","scope":4561,"src":"3489:39:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3435303030","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3523:5:20","typeDescriptions":{"typeIdentifier":"t_rational_45000_by_1","typeString":"int_const 45000"},"value":"45000"},"visibility":"public"},{"constant":false,"functionSelector":"23d9ac9b","id":3498,"mutability":"mutable","name":"verifyingSigner","nameLocation":"3600:15:20","nodeType":"VariableDeclaration","scope":4561,"src":"3585:30:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3497,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b3f00674","id":3500,"mutability":"mutable","name":"feeReceiver","nameLocation":"3680:11:20","nodeType":"VariableDeclaration","scope":4561,"src":"3665:26:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3499,"name":"address","nodeType":"ElementaryTypeName","src":"3665:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":3503,"mutability":"constant","name":"VALID_PND_OFFSET","nameLocation":"4029:16:20","nodeType":"VariableDeclaration","scope":4561,"src":"4004:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3231","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4048:2:20","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"visibility":"private"},{"constant":true,"id":3506,"mutability":"constant","name":"SIGNATURE_OFFSET","nameLocation":"4084:16:20","nodeType":"VariableDeclaration","scope":4561,"src":"4059:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"4059:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323133","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4103:3:20","typeDescriptions":{"typeIdentifier":"t_rational_213_by_1","typeString":"int_const 213"},"value":"213"},"visibility":"private"},{"constant":true,"id":3509,"mutability":"constant","name":"NATIVE_ADDRESS","nameLocation":"4140:14:20","nodeType":"VariableDeclaration","scope":4561,"src":"4115:93:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3507,"name":"address","nodeType":"ElementaryTypeName","src":"4115:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4166:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},"visibility":"private"},{"anonymous":false,"documentation":{"id":3510,"nodeType":"StructuredDocumentation","src":"4217:194:20","text":" Designed to enable the community to track change in storage variable UNACCOUNTED_COST which is used\n to maintain gas execution cost which can't be calculated within contract"},"eventSelector":"303a4cca6d7dba1a29764b1c0aabac67516608dd37f88e064abc64c24b9c2743","id":3518,"name":"EPGasOverheadChanged","nameLocation":"4423:20:20","nodeType":"EventDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"indexed":true,"mutability":"mutable","name":"_oldOverheadCost","nameLocation":"4470:16:20","nodeType":"VariableDeclaration","scope":3518,"src":"4454:32:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"4454:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3514,"indexed":true,"mutability":"mutable","name":"_newOverheadCost","nameLocation":"4513:16:20","nodeType":"VariableDeclaration","scope":3518,"src":"4497:32:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4497:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3516,"indexed":true,"mutability":"mutable","name":"_actor","nameLocation":"4556:6:20","nodeType":"VariableDeclaration","scope":3518,"src":"4540:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3515,"name":"address","nodeType":"ElementaryTypeName","src":"4540:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4443:126:20"},"src":"4417:153:20"},{"anonymous":false,"documentation":{"id":3519,"nodeType":"StructuredDocumentation","src":"4578:208:20","text":" Designed to enable the community to track change in storage variable verifyingSigner which is used\n to authorize any operation for this paymaster (validation stage) and provides signature"},"eventSelector":"e1f62c0e6d7bb6d470828565415bf2e87dbfea50e52d2d753788b529bd0c6d62","id":3527,"name":"VerifyingSignerChanged","nameLocation":"4798:22:20","nodeType":"EventDefinition","parameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"indexed":true,"mutability":"mutable","name":"_oldSigner","nameLocation":"4847:10:20","nodeType":"VariableDeclaration","scope":3527,"src":"4831:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3523,"indexed":true,"mutability":"mutable","name":"_newSigner","nameLocation":"4884:10:20","nodeType":"VariableDeclaration","scope":3527,"src":"4868:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3522,"name":"address","nodeType":"ElementaryTypeName","src":"4868:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3525,"indexed":true,"mutability":"mutable","name":"_actor","nameLocation":"4921:6:20","nodeType":"VariableDeclaration","scope":3527,"src":"4905:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3524,"name":"address","nodeType":"ElementaryTypeName","src":"4905:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4820:114:20"},"src":"4792:143:20"},{"anonymous":false,"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"4943:212:20","text":" Designed to enable the community to track change in storage variable feeReceiver which is an address (self or other SCW/EOA)\n responsible for collecting all the tokens being withdrawn as fees"},"eventSelector":"ff179728e4df4b0421c7de2106b1968d0604e1670493f8da3f907f2d020bb6d5","id":3536,"name":"FeeReceiverChanged","nameLocation":"5167:18:20","nodeType":"EventDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"indexed":true,"mutability":"mutable","name":"_oldfeeReceiver","nameLocation":"5212:15:20","nodeType":"VariableDeclaration","scope":3536,"src":"5196:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3529,"name":"address","nodeType":"ElementaryTypeName","src":"5196:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3532,"indexed":true,"mutability":"mutable","name":"_newfeeReceiver","nameLocation":"5254:15:20","nodeType":"VariableDeclaration","scope":3536,"src":"5238:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3531,"name":"address","nodeType":"ElementaryTypeName","src":"5238:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3534,"indexed":true,"mutability":"mutable","name":"_actor","nameLocation":"5296:6:20","nodeType":"VariableDeclaration","scope":3536,"src":"5280:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3533,"name":"address","nodeType":"ElementaryTypeName","src":"5280:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5185:124:20"},"src":"5161:149:20"},{"anonymous":false,"documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"5318:213:20","text":" Designed to enable tracking how much fees were charged from the sender and in which ERC20 token\n More information can be emitted like exchangeRate used, what was the source of exchangeRate etc"},"eventSelector":"7c405b9cef9e824a5cf31a09e7b8810d01d9db34ee384388f33b438608807e1a","id":3556,"name":"TokenPaymasterOperation","nameLocation":"5639:23:20","nodeType":"EventDefinition","parameters":{"id":3555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5689:6:20","nodeType":"VariableDeclaration","scope":3556,"src":"5673:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3538,"name":"address","nodeType":"ElementaryTypeName","src":"5673:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3541,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"5722:5:20","nodeType":"VariableDeclaration","scope":3556,"src":"5706:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3540,"name":"address","nodeType":"ElementaryTypeName","src":"5706:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3543,"indexed":true,"mutability":"mutable","name":"totalCharge","nameLocation":"5754:11:20","nodeType":"VariableDeclaration","scope":3556,"src":"5738:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"5738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3545,"indexed":false,"mutability":"mutable","name":"oracleAggregator","nameLocation":"5784:16:20","nodeType":"VariableDeclaration","scope":3556,"src":"5776:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3544,"name":"address","nodeType":"ElementaryTypeName","src":"5776:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3547,"indexed":false,"mutability":"mutable","name":"priceMarkup","nameLocation":"5818:11:20","nodeType":"VariableDeclaration","scope":3556,"src":"5811:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3546,"name":"uint32","nodeType":"ElementaryTypeName","src":"5811:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3549,"indexed":false,"mutability":"mutable","name":"userOpHash","nameLocation":"5848:10:20","nodeType":"VariableDeclaration","scope":3556,"src":"5840:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5840:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3551,"indexed":false,"mutability":"mutable","name":"exchangeRate","nameLocation":"5877:12:20","nodeType":"VariableDeclaration","scope":3556,"src":"5869:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3554,"indexed":false,"mutability":"mutable","name":"priceSource","nameLocation":"5919:11:20","nodeType":"VariableDeclaration","scope":3556,"src":"5900:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"},"typeName":{"id":3553,"nodeType":"UserDefinedTypeName","pathNode":{"id":3552,"name":"ExchangeRateSource","nameLocations":["5900:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":3489,"src":"5900:18:20"},"referencedDeclaration":3489,"src":"5900:18:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},"visibility":"internal"}],"src":"5662:275:20"},"src":"5633:305:20"},{"anonymous":false,"documentation":{"id":3557,"nodeType":"StructuredDocumentation","src":"5946:83:20","text":" Notify in case paymaster failed to withdraw tokens from sender"},"eventSelector":"41614445ea2ab6d87c504bdfc83cb5cb840e7219aa772383baff1ab0dd2a3113","id":3565,"name":"TokenPaymentDue","nameLocation":"6041:15:20","nodeType":"EventDefinition","parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"6083:5:20","nodeType":"VariableDeclaration","scope":3565,"src":"6067:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3558,"name":"address","nodeType":"ElementaryTypeName","src":"6067:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3561,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"6115:7:20","nodeType":"VariableDeclaration","scope":3565,"src":"6099:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3560,"name":"address","nodeType":"ElementaryTypeName","src":"6099:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3563,"indexed":true,"mutability":"mutable","name":"charge","nameLocation":"6149:6:20","nodeType":"VariableDeclaration","scope":3565,"src":"6133:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"6133:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6056:106:20"},"src":"6035:128:20"},{"anonymous":false,"eventSelector":"88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874","id":3571,"name":"Received","nameLocation":"6177:8:20","nodeType":"EventDefinition","parameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3567,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"6202:6:20","nodeType":"VariableDeclaration","scope":3571,"src":"6186:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3566,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3569,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"6218:5:20","nodeType":"VariableDeclaration","scope":3571,"src":"6210:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"6210:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6185:39:20"},"src":"6171:54:20"},{"body":{"id":3618,"nodeType":"Block","src":"6381:452:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3584,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"6396:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6414:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6406:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3585,"name":"address","nodeType":"ElementaryTypeName","src":"6406:7:20","typeDescriptions":{}}},"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6406:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6396:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"nodeType":"IfStatement","src":"6392:52:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3590,"name":"OwnerCannotBeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"6425:17:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6425:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3592,"nodeType":"RevertStatement","src":"6418:26:20"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3596,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"6467:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}],"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6459:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3594,"name":"address","nodeType":"ElementaryTypeName","src":"6459:7:20","typeDescriptions":{}}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6459:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6491:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6483:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3598,"name":"address","nodeType":"ElementaryTypeName","src":"6483:7:20","typeDescriptions":{}}},"id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6483:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6459:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3606,"nodeType":"IfStatement","src":"6455:71:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3603,"name":"EntryPointCannotBeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"6502:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6502:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3605,"nodeType":"RevertStatement","src":"6495:31:20"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"_verifyingSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"6541:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6569:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6561:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3608,"name":"address","nodeType":"ElementaryTypeName","src":"6561:7:20","typeDescriptions":{}}},"id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6561:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6541:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3616,"nodeType":"IfStatement","src":"6537:85:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3613,"name":"VerifyingSignerCannotBeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"6593:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6593:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3615,"nodeType":"RevertStatement","src":"6586:36:20"}},{"AST":{"nodeType":"YulBlock","src":"6658:168:20","statements":[{"expression":{"arguments":[{"name":"verifyingSigner.slot","nodeType":"YulIdentifier","src":"6680:20:20"},{"name":"_verifyingSigner","nodeType":"YulIdentifier","src":"6702:16:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6673:6:20"},"nodeType":"YulFunctionCall","src":"6673:46:20"},"nodeType":"YulExpressionStatement","src":"6673:46:20"},{"expression":{"arguments":[{"name":"feeReceiver.slot","nodeType":"YulIdentifier","src":"6740:16:20"},{"arguments":[],"functionName":{"name":"address","nodeType":"YulIdentifier","src":"6758:7:20"},"nodeType":"YulFunctionCall","src":"6758:9:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6733:6:20"},"nodeType":"YulFunctionCall","src":"6733:35:20"},"nodeType":"YulExpressionStatement","src":"6733:35:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3578,"isOffset":false,"isSlot":false,"src":"6702:16:20","valueSize":1},{"declaration":3500,"isOffset":false,"isSlot":true,"src":"6740:16:20","suffix":"slot","valueSize":1},{"declaration":3498,"isOffset":false,"isSlot":true,"src":"6680:20:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3617,"nodeType":"InlineAssembly","src":"6633:193:20"}]},"id":3619,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3581,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"6368:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}}],"id":3582,"kind":"baseConstructorSpecifier","modifierName":{"id":3580,"name":"BasePaymaster","nameLocations":["6354:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":2561,"src":"6354:13:20"},"nodeType":"ModifierInvocation","src":"6354:26:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"_owner","nameLocation":"6263:6:20","nodeType":"VariableDeclaration","scope":3619,"src":"6255:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3572,"name":"address","nodeType":"ElementaryTypeName","src":"6255:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3576,"mutability":"mutable","name":"_entryPoint","nameLocation":"6292:11:20","nodeType":"VariableDeclaration","scope":3619,"src":"6280:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"},"typeName":{"id":3575,"nodeType":"UserDefinedTypeName","pathNode":{"id":3574,"name":"IEntryPoint","nameLocations":["6280:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":3170,"src":"6280:11:20"},"referencedDeclaration":3170,"src":"6280:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"_verifyingSigner","nameLocation":"6322:16:20","nodeType":"VariableDeclaration","scope":3619,"src":"6314:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3577,"name":"address","nodeType":"ElementaryTypeName","src":"6314:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6244:101:20"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[],"src":"6381:0:20"},"scope":4561,"src":"6233:600:20","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3649,"nodeType":"Block","src":"7336:345:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3627,"name":"_newVerifyingSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"7351:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7374:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3628,"name":"address","nodeType":"ElementaryTypeName","src":"7374:7:20","typeDescriptions":{}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7374:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7351:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3636,"nodeType":"IfStatement","src":"7347:88:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3633,"name":"VerifyingSignerCannotBeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"7406:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7406:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3635,"nodeType":"RevertStatement","src":"7399:36:20"}},{"assignments":[3638],"declarations":[{"constant":false,"id":3638,"mutability":"mutable","name":"oldSigner","nameLocation":"7454:9:20","nodeType":"VariableDeclaration","scope":3649,"src":"7446:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3637,"name":"address","nodeType":"ElementaryTypeName","src":"7446:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3640,"initialValue":{"id":3639,"name":"verifyingSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"7466:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7446:35:20"},{"AST":{"nodeType":"YulBlock","src":"7517:75:20","statements":[{"expression":{"arguments":[{"name":"verifyingSigner.slot","nodeType":"YulIdentifier","src":"7539:20:20"},{"name":"_newVerifyingSigner","nodeType":"YulIdentifier","src":"7561:19:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7532:6:20"},"nodeType":"YulFunctionCall","src":"7532:49:20"},"nodeType":"YulExpressionStatement","src":"7532:49:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3622,"isOffset":false,"isSlot":false,"src":"7561:19:20","valueSize":1},{"declaration":3498,"isOffset":false,"isSlot":true,"src":"7539:20:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3641,"nodeType":"InlineAssembly","src":"7492:100:20"},{"eventCall":{"arguments":[{"id":3643,"name":"oldSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"7630:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3644,"name":"_newVerifyingSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"7641:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3645,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7662:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7666:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7662:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3642,"name":"VerifyingSignerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"7607:22:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3648,"nodeType":"EmitStatement","src":"7602:71:20"}]},"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"6841:389:20","text":" @dev Set a new verifying signer address.\n Can only be called by the owner of the contract.\n @param _newVerifyingSigner The new address to be set as the verifying signer.\n @notice If _newVerifyingSigner is set to zero address, it will revert with an error.\n After setting the new signer address, it will emit an event VerifyingSignerChanged."},"functionSelector":"f5cba98c","id":3650,"implemented":true,"kind":"function","modifiers":[{"id":3625,"kind":"modifierInvocation","modifierName":{"id":3624,"name":"onlyOwner","nameLocations":["7326:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7326:9:20"},"nodeType":"ModifierInvocation","src":"7326:9:20"}],"name":"setVerifyingSigner","nameLocation":"7245:18:20","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"_newVerifyingSigner","nameLocation":"7282:19:20","nodeType":"VariableDeclaration","scope":3650,"src":"7274:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"7274:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7263:45:20"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[],"src":"7336:0:20"},"scope":4561,"src":"7236:445:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3680,"nodeType":"Block","src":"8183:314:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"_newFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"8198:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8225:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3659,"name":"address","nodeType":"ElementaryTypeName","src":"8217:7:20","typeDescriptions":{}}},"id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8198:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3667,"nodeType":"IfStatement","src":"8194:67:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3664,"name":"FeeReceiverCannotBeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"8236:23:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3666,"nodeType":"RevertStatement","src":"8229:32:20"}},{"assignments":[3669],"declarations":[{"constant":false,"id":3669,"mutability":"mutable","name":"oldFeeReceiver","nameLocation":"8280:14:20","nodeType":"VariableDeclaration","scope":3680,"src":"8272:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3668,"name":"address","nodeType":"ElementaryTypeName","src":"8272:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3671,"initialValue":{"id":3670,"name":"feeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"8297:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8272:36:20"},{"AST":{"nodeType":"YulBlock","src":"8344:67:20","statements":[{"expression":{"arguments":[{"name":"feeReceiver.slot","nodeType":"YulIdentifier","src":"8366:16:20"},{"name":"_newFeeReceiver","nodeType":"YulIdentifier","src":"8384:15:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8359:6:20"},"nodeType":"YulFunctionCall","src":"8359:41:20"},"nodeType":"YulExpressionStatement","src":"8359:41:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3653,"isOffset":false,"isSlot":false,"src":"8384:15:20","valueSize":1},{"declaration":3500,"isOffset":false,"isSlot":true,"src":"8366:16:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3672,"nodeType":"InlineAssembly","src":"8319:92:20"},{"eventCall":{"arguments":[{"id":3674,"name":"oldFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"8445:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3675,"name":"_newFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"8461:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3676,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8478:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8482:6:20","memberName":"sender","nodeType":"MemberAccess","src":"8478:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3673,"name":"FeeReceiverChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"8426:18:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:63:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3679,"nodeType":"EmitStatement","src":"8421:68:20"}]},"documentation":{"id":3651,"nodeType":"StructuredDocumentation","src":"7716:369:20","text":" @dev Set a new fee receiver.\n Can only be called by the owner of the contract.\n @param _newFeeReceiver The new address to be set as the address of new fee receiver.\n @notice If _newFeeReceiver is set to zero address, it will revert with an error.\n After setting the new address, it will emit an event FeeReceiverChanged."},"functionSelector":"efdcd974","id":3681,"implemented":true,"kind":"function","modifiers":[{"id":3656,"kind":"modifierInvocation","modifierName":{"id":3655,"name":"onlyOwner","nameLocations":["8173:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8173:9:20"},"nodeType":"ModifierInvocation","src":"8173:9:20"}],"name":"setFeeReceiver","nameLocation":"8100:14:20","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"_newFeeReceiver","nameLocation":"8133:15:20","nodeType":"VariableDeclaration","scope":3681,"src":"8125:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3652,"name":"address","nodeType":"ElementaryTypeName","src":"8125:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8114:41:20"},"returnParameters":{"id":3657,"nodeType":"ParameterList","parameters":[],"src":"8183:0:20"},"scope":4561,"src":"8091:406:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3708,"nodeType":"Block","src":"8995:380:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"_newOverheadCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"9077:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"323030303030","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9096:6:20","typeDescriptions":{"typeIdentifier":"t_rational_200000_by_1","typeString":"int_const 200000"},"value":"200000"},"src":"9077:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3695,"nodeType":"IfStatement","src":"9073:64:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3692,"name":"CannotBeUnrealisticValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"9111:24:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9111:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3694,"nodeType":"RevertStatement","src":"9104:33:20"}},{"assignments":[3697],"declarations":[{"constant":false,"id":3697,"mutability":"mutable","name":"oldValue","nameLocation":"9156:8:20","nodeType":"VariableDeclaration","scope":3708,"src":"9148:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9148:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3699,"initialValue":{"id":3698,"name":"UNACCOUNTED_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"9167:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9148:35:20"},{"AST":{"nodeType":"YulBlock","src":"9219:73:20","statements":[{"expression":{"arguments":[{"name":"UNACCOUNTED_COST.slot","nodeType":"YulIdentifier","src":"9241:21:20"},{"name":"_newOverheadCost","nodeType":"YulIdentifier","src":"9264:16:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9234:6:20"},"nodeType":"YulFunctionCall","src":"9234:47:20"},"nodeType":"YulExpressionStatement","src":"9234:47:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3496,"isOffset":false,"isSlot":true,"src":"9241:21:20","suffix":"slot","valueSize":1},{"declaration":3684,"isOffset":false,"isSlot":false,"src":"9264:16:20","valueSize":1}],"flags":["memory-safe"],"id":3700,"nodeType":"InlineAssembly","src":"9194:98:20"},{"eventCall":{"arguments":[{"id":3702,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"9328:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3703,"name":"_newOverheadCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"9338:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3704,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9356:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9360:6:20","memberName":"sender","nodeType":"MemberAccess","src":"9356:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3701,"name":"EPGasOverheadChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"9307:20:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9307:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3707,"nodeType":"EmitStatement","src":"9302:65:20"}]},"documentation":{"id":3682,"nodeType":"StructuredDocumentation","src":"8505:378:20","text":" @dev Set a new overhead for unaccounted cost\n Can only be called by the owner of the contract.\n @param _newOverheadCost The new value to be set as the gas cost overhead.\n @notice If _newOverheadCost is set to very high value, it will revert with an error.\n After setting the new value, it will emit an event EPGasOverheadChanged."},"functionSelector":"deeb3874","id":3709,"implemented":true,"kind":"function","modifiers":[{"id":3687,"kind":"modifierInvocation","modifierName":{"id":3686,"name":"onlyOwner","nameLocations":["8985:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8985:9:20"},"nodeType":"ModifierInvocation","src":"8985:9:20"}],"name":"setUnaccountedEPGasOverhead","nameLocation":"8898:27:20","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"_newOverheadCost","nameLocation":"8944:16:20","nodeType":"VariableDeclaration","scope":3709,"src":"8936:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"8936:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8925:42:20"},"returnParameters":{"id":3688,"nodeType":"ParameterList","parameters":[],"src":"8995:0:20"},"scope":4561,"src":"8889:486:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3736,"nodeType":"Block","src":"9799:147:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3719,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"9814:15:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9841:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9833:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3720,"name":"address","nodeType":"ElementaryTypeName","src":"9833:7:20","typeDescriptions":{}}},"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9833:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9814:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3728,"nodeType":"IfStatement","src":"9810:71:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3725,"name":"CanNotWithdrawToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"9852:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3727,"nodeType":"RevertStatement","src":"9845:36:20"}},{"expression":{"arguments":[{"id":3732,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"9914:15:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3733,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"9931:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3729,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"9892:10:20","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$3170","typeString":"contract IEntryPoint"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9903:10:20","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":3337,"src":"9892:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9892:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3735,"nodeType":"ExpressionStatement","src":"9892:46:20"}]},"documentation":{"id":3710,"nodeType":"StructuredDocumentation","src":"9383:294:20","text":" @dev Withdraws the specified amount of gas tokens from the paymaster's balance and transfers them to the specified address.\n @param withdrawAddress The address to which the gas tokens should be transferred.\n @param amount The amount of gas tokens to withdraw."},"functionSelector":"45499d46","id":3737,"implemented":true,"kind":"function","modifiers":[{"id":3717,"kind":"modifierInvocation","modifierName":{"id":3716,"name":"onlyOwner","nameLocations":["9789:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9789:9:20"},"nodeType":"ModifierInvocation","src":"9789:9:20"}],"name":"withdrawToCheck","nameLocation":"9692:15:20","nodeType":"FunctionDefinition","parameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"withdrawAddress","nameLocation":"9734:15:20","nodeType":"VariableDeclaration","scope":3737,"src":"9718:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3711,"name":"address","nodeType":"ElementaryTypeName","src":"9718:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"amount","nameLocation":"9768:6:20","nodeType":"VariableDeclaration","scope":3737,"src":"9760:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"9760:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9707:74:20"},"returnParameters":{"id":3718,"nodeType":"ParameterList","parameters":[],"src":"9799:0:20"},"scope":4561,"src":"9683:263:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3765,"nodeType":"Block","src":"10265:270:20","statements":[{"clauses":[{"block":{"id":3758,"nodeType":"Block","src":"10440:46:20","statements":[{"expression":{"id":3756,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"10462:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3746,"id":3757,"nodeType":"Return","src":"10455:19:20"}]},"errorName":"","id":3759,"nodeType":"TryCatchClause","parameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"exchangeRate","nameLocation":"10426:12:20","nodeType":"VariableDeclaration","scope":3759,"src":"10418:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10417:22:20"},"src":"10409:77:20"},{"block":{"id":3762,"nodeType":"Block","src":"10493:35:20","statements":[{"expression":{"hexValue":"30","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10515:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3746,"id":3761,"nodeType":"Return","src":"10508:8:20"}]},"errorName":"","id":3763,"nodeType":"TryCatchClause","src":"10487:41:20"}],"externalCall":{"arguments":[{"id":3751,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"10378:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3748,"name":"_oracleAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"10311:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3747,"name":"IOracleAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"10293:17:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOracleAggregator_$3199_$","typeString":"type(contract IOracleAggregator)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10293:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOracleAggregator_$3199","typeString":"contract IOracleAggregator"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10330:29:20","memberName":"getTokenValueOfOneNativeToken","nodeType":"MemberAccess","referencedDeclaration":3198,"src":"10293:66:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10293:106:20","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3764,"nodeType":"TryStatement","src":"10276:252:20"}]},"documentation":{"id":3738,"nodeType":"StructuredDocumentation","src":"9954:174:20","text":" @dev Returns the exchange price of the token in wei.\n @param _token ERC20 token address\n @param _oracleAggregator oracle aggregator address"},"id":3766,"implemented":true,"kind":"function","modifiers":[],"name":"exchangePrice","nameLocation":"10143:13:20","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"_token","nameLocation":"10175:6:20","nodeType":"VariableDeclaration","scope":3766,"src":"10167:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3739,"name":"address","nodeType":"ElementaryTypeName","src":"10167:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"_oracleAggregator","nameLocation":"10200:17:20","nodeType":"VariableDeclaration","scope":3766,"src":"10192:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3741,"name":"address","nodeType":"ElementaryTypeName","src":"10192:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10156:68:20"},"returnParameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3766,"src":"10256:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"10256:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10255:9:20"},"scope":4561,"src":"10134:401:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3785,"nodeType":"Block","src":"10918:56:20","statements":[{"expression":{"arguments":[{"id":3780,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"10944:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"id":3781,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"10951:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3782,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"10959:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3779,"name":"_withdrawERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"10929:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10929:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3784,"nodeType":"ExpressionStatement","src":"10929:37:20"}]},"documentation":{"id":3767,"nodeType":"StructuredDocumentation","src":"10543:241:20","text":" @dev pull tokens out of paymaster in case they were sent to the paymaster at any point.\n @param token the token deposit to withdraw\n @param target address to send to\n @param amount amount to withdraw"},"functionSelector":"44004cc1","id":3786,"implemented":true,"kind":"function","modifiers":[{"id":3777,"kind":"modifierInvocation","modifierName":{"id":3776,"name":"onlyOwner","nameLocations":["10908:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10908:9:20"},"nodeType":"ModifierInvocation","src":"10908:9:20"}],"name":"withdrawERC20","nameLocation":"10799:13:20","nodeType":"FunctionDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"token","nameLocation":"10830:5:20","nodeType":"VariableDeclaration","scope":3786,"src":"10823:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":3769,"nodeType":"UserDefinedTypeName","pathNode":{"id":3768,"name":"IERC20","nameLocations":["10823:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"10823:6:20"},"referencedDeclaration":225,"src":"10823:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3772,"mutability":"mutable","name":"target","nameLocation":"10854:6:20","nodeType":"VariableDeclaration","scope":3786,"src":"10846:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"10846:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"amount","nameLocation":"10879:6:20","nodeType":"VariableDeclaration","scope":3786,"src":"10871:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"10871:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10812:80:20"},"returnParameters":{"id":3778,"nodeType":"ParameterList","parameters":[],"src":"10918:0:20"},"scope":4561,"src":"10790:184:20","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3813,"nodeType":"Block","src":"11295:114:20","statements":[{"assignments":[3798],"declarations":[{"constant":false,"id":3798,"mutability":"mutable","name":"amount","nameLocation":"11314:6:20","nodeType":"VariableDeclaration","scope":3813,"src":"11306:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"11306:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3806,"initialValue":{"arguments":[{"arguments":[{"id":3803,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11347:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BiconomyTokenPaymaster_$4561","typeString":"contract BiconomyTokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BiconomyTokenPaymaster_$4561","typeString":"contract BiconomyTokenPaymaster"}],"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11339:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3801,"name":"address","nodeType":"ElementaryTypeName","src":"11339:7:20","typeDescriptions":{}}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11339:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3799,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"11323:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11329:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":182,"src":"11323:15:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11323:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11306:47:20"},{"expression":{"arguments":[{"id":3808,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"11379:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"id":3809,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"11386:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3810,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"11394:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3807,"name":"_withdrawERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"11364:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11364:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3812,"nodeType":"ExpressionStatement","src":"11364:37:20"}]},"documentation":{"id":3787,"nodeType":"StructuredDocumentation","src":"10982:200:20","text":" @dev pull tokens out of paymaster in case they were sent to the paymaster at any point.\n @param token the token deposit to withdraw\n @param target address to send to"},"functionSelector":"5deef2aa","id":3814,"implemented":true,"kind":"function","modifiers":[{"id":3795,"kind":"modifierInvocation","modifierName":{"id":3794,"name":"onlyOwner","nameLocations":["11285:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11285:9:20"},"nodeType":"ModifierInvocation","src":"11285:9:20"}],"name":"withdrawERC20Full","nameLocation":"11197:17:20","nodeType":"FunctionDefinition","parameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"token","nameLocation":"11232:5:20","nodeType":"VariableDeclaration","scope":3814,"src":"11225:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":3789,"nodeType":"UserDefinedTypeName","pathNode":{"id":3788,"name":"IERC20","nameLocations":["11225:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"11225:6:20"},"referencedDeclaration":225,"src":"11225:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"target","nameLocation":"11256:6:20","nodeType":"VariableDeclaration","scope":3814,"src":"11248:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"11248:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11214:55:20"},"returnParameters":{"id":3796,"nodeType":"ParameterList","parameters":[],"src":"11295:0:20"},"scope":4561,"src":"11188:221:20","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3861,"nodeType":"Block","src":"11833:288:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3829,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"11848:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11854:6:20","memberName":"length","nodeType":"MemberAccess","src":"11848:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3831,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"11864:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11871:6:20","memberName":"length","nodeType":"MemberAccess","src":"11864:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11848:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3837,"nodeType":"IfStatement","src":"11844:87:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3834,"name":"TokensAndAmountsLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"11899:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11899:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3836,"nodeType":"RevertStatement","src":"11892:39:20"}},{"id":3860,"nodeType":"UncheckedBlock","src":"11942:172:20","statements":[{"body":{"id":3858,"nodeType":"Block","src":"12003:100:20","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3846,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"12037:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":3848,"indexExpression":{"id":3847,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"12043:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12037:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"id":3849,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"12047:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3850,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"12055:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3852,"indexExpression":{"id":3851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"12062:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12055:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3845,"name":"_withdrawERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"12022:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12022:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3854,"nodeType":"ExpressionStatement","src":"12022:43:20"},{"expression":{"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12084:3:20","subExpression":{"id":3855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"12086:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3857,"nodeType":"ExpressionStatement","src":"12084:3:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"11983:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3842,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"11987:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11993:6:20","memberName":"length","nodeType":"MemberAccess","src":"11987:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11983:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3859,"initializationExpression":{"assignments":[3839],"declarations":[{"constant":false,"id":3839,"mutability":"mutable","name":"i","nameLocation":"11980:1:20","nodeType":"VariableDeclaration","scope":3859,"src":"11972:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"11972:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3840,"nodeType":"VariableDeclarationStatement","src":"11972:9:20"},"nodeType":"ForStatement","src":"11967:136:20"}]}]},"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"11417:252:20","text":" @dev pull multiple tokens out of paymaster in case they were sent to the paymaster at any point.\n @param token the tokens deposit to withdraw\n @param target address to send to\n @param amount amounts to withdraw"},"functionSelector":"617d057a","id":3862,"implemented":true,"kind":"function","modifiers":[{"id":3827,"kind":"modifierInvocation","modifierName":{"id":3826,"name":"onlyOwner","nameLocations":["11823:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11823:9:20"},"nodeType":"ModifierInvocation","src":"11823:9:20"}],"name":"withdrawMultipleERC20","nameLocation":"11684:21:20","nodeType":"FunctionDefinition","parameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"token","nameLocation":"11734:5:20","nodeType":"VariableDeclaration","scope":3862,"src":"11716:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":3817,"nodeType":"UserDefinedTypeName","pathNode":{"id":3816,"name":"IERC20","nameLocations":["11716:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"11716:6:20"},"referencedDeclaration":225,"src":"11716:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":3818,"nodeType":"ArrayTypeName","src":"11716:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$225_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"target","nameLocation":"11758:6:20","nodeType":"VariableDeclaration","scope":3862,"src":"11750:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3820,"name":"address","nodeType":"ElementaryTypeName","src":"11750:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"amount","nameLocation":"11794:6:20","nodeType":"VariableDeclaration","scope":3862,"src":"11775:25:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"11775:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3823,"nodeType":"ArrayTypeName","src":"11775:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11705:102:20"},"returnParameters":{"id":3828,"nodeType":"ParameterList","parameters":[],"src":"11833:0:20"},"scope":4561,"src":"11675:446:20","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3907,"nodeType":"Block","src":"12471:256:20","statements":[{"id":3906,"nodeType":"UncheckedBlock","src":"12482:238:20","statements":[{"body":{"id":3904,"nodeType":"Block","src":"12543:166:20","statements":[{"assignments":[3882],"declarations":[{"constant":false,"id":3882,"mutability":"mutable","name":"amount","nameLocation":"12570:6:20","nodeType":"VariableDeclaration","scope":3904,"src":"12562:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"12562:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3892,"initialValue":{"arguments":[{"arguments":[{"id":3889,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12606:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BiconomyTokenPaymaster_$4561","typeString":"contract BiconomyTokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BiconomyTokenPaymaster_$4561","typeString":"contract BiconomyTokenPaymaster"}],"id":3888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12598:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3887,"name":"address","nodeType":"ElementaryTypeName","src":"12598:7:20","typeDescriptions":{}}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12598:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":3883,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"12579:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":3885,"indexExpression":{"id":3884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"12585:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12579:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12588:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":182,"src":"12579:18:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12579:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12562:50:20"},{"expression":{"arguments":[{"baseExpression":{"id":3894,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"12646:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":3896,"indexExpression":{"id":3895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"12652:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12646:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"id":3897,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"12656:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3898,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"12664:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3893,"name":"_withdrawERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"12631:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12631:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3900,"nodeType":"ExpressionStatement","src":"12631:40:20"},{"expression":{"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12690:3:20","subExpression":{"id":3901,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"12692:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3903,"nodeType":"ExpressionStatement","src":"12690:3:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3877,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"12523:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3878,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"12527:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12533:6:20","memberName":"length","nodeType":"MemberAccess","src":"12527:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12523:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3905,"initializationExpression":{"assignments":[3875],"declarations":[{"constant":false,"id":3875,"mutability":"mutable","name":"i","nameLocation":"12520:1:20","nodeType":"VariableDeclaration","scope":3905,"src":"12512:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"12512:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3876,"nodeType":"VariableDeclarationStatement","src":"12512:9:20"},"nodeType":"ForStatement","src":"12507:202:20"}]}]},"documentation":{"id":3863,"nodeType":"StructuredDocumentation","src":"12129:210:20","text":" @dev pull multiple tokens out of paymaster in case they were sent to the paymaster at any point.\n @param token the tokens deposit to withdraw\n @param target address to send to"},"functionSelector":"78b1da23","id":3908,"implemented":true,"kind":"function","modifiers":[{"id":3872,"kind":"modifierInvocation","modifierName":{"id":3871,"name":"onlyOwner","nameLocations":["12461:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"12461:9:20"},"nodeType":"ModifierInvocation","src":"12461:9:20"}],"name":"withdrawMultipleERC20Full","nameLocation":"12354:25:20","nodeType":"FunctionDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"token","nameLocation":"12408:5:20","nodeType":"VariableDeclaration","scope":3908,"src":"12390:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":3865,"nodeType":"UserDefinedTypeName","pathNode":{"id":3864,"name":"IERC20","nameLocations":["12390:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"12390:6:20"},"referencedDeclaration":225,"src":"12390:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":3866,"nodeType":"ArrayTypeName","src":"12390:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$225_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"target","nameLocation":"12432:6:20","nodeType":"VariableDeclaration","scope":3908,"src":"12424:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3868,"name":"address","nodeType":"ElementaryTypeName","src":"12424:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12379:66:20"},"returnParameters":{"id":3873,"nodeType":"ParameterList","parameters":[],"src":"12471:0:20"},"scope":4561,"src":"12345:382:20","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3951,"nodeType":"Block","src":"12977:387:20","statements":[{"assignments":[3917],"declarations":[{"constant":false,"id":3917,"mutability":"mutable","name":"_balance","nameLocation":"12996:8:20","nodeType":"VariableDeclaration","scope":3951,"src":"12988:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"12988:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3923,"initialValue":{"expression":{"arguments":[{"id":3920,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13015:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BiconomyTokenPaymaster_$4561","typeString":"contract BiconomyTokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BiconomyTokenPaymaster_$4561","typeString":"contract BiconomyTokenPaymaster"}],"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13007:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3918,"name":"address","nodeType":"ElementaryTypeName","src":"13007:7:20","typeDescriptions":{}}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13007:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13021:7:20","memberName":"balance","nodeType":"MemberAccess","src":"13007:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12988:40:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3924,"name":"_balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"13043:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13055:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13043:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3930,"nodeType":"IfStatement","src":"13039:50:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3927,"name":"NativeTokenBalanceZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"13065:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13065:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3929,"nodeType":"RevertStatement","src":"13058:31:20"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"13104:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13120:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13112:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3932,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:20","typeDescriptions":{}}},"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13112:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13104:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3940,"nodeType":"IfStatement","src":"13100:60:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3937,"name":"CanNotWithdrawToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"13131:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13131:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3939,"nodeType":"RevertStatement","src":"13124:36:20"}},{"assignments":[3942],"declarations":[{"constant":false,"id":3942,"mutability":"mutable","name":"success","nameLocation":"13176:7:20","nodeType":"VariableDeclaration","scope":3951,"src":"13171:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3941,"name":"bool","nodeType":"ElementaryTypeName","src":"13171:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3943,"nodeType":"VariableDeclarationStatement","src":"13171:12:20"},{"AST":{"nodeType":"YulBlock","src":"13219:76:20","statements":[{"nodeType":"YulAssignment","src":"13234:50:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"13250:3:20"},"nodeType":"YulFunctionCall","src":"13250:5:20"},{"name":"dest","nodeType":"YulIdentifier","src":"13257:4:20"},{"name":"_balance","nodeType":"YulIdentifier","src":"13263:8:20"},{"kind":"number","nodeType":"YulLiteral","src":"13273:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13276:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13279:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13282:1:20","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"13245:4:20"},"nodeType":"YulFunctionCall","src":"13245:39:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"13234:7:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3917,"isOffset":false,"isSlot":false,"src":"13263:8:20","valueSize":1},{"declaration":3911,"isOffset":false,"isSlot":false,"src":"13257:4:20","valueSize":1},{"declaration":3942,"isOffset":false,"isSlot":false,"src":"13234:7:20","valueSize":1}],"flags":["memory-safe"],"id":3944,"nodeType":"InlineAssembly","src":"13194:101:20"},{"condition":{"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13309:8:20","subExpression":{"id":3945,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"13310:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3950,"nodeType":"IfStatement","src":"13305:51:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3947,"name":"NativeTokensWithdrawalFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"13326:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13326:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3949,"nodeType":"RevertStatement","src":"13319:37:20"}}]},"documentation":{"id":3909,"nodeType":"StructuredDocumentation","src":"12735:153:20","text":" @dev pull native tokens out of paymaster in case they were sent to the paymaster at any point\n @param dest address to send to"},"functionSelector":"d9f66db1","id":3952,"implemented":true,"kind":"function","modifiers":[{"id":3914,"kind":"modifierInvocation","modifierName":{"id":3913,"name":"onlyOwner","nameLocations":["12966:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"12966:9:20"},"nodeType":"ModifierInvocation","src":"12966:9:20"}],"name":"withdrawAllNative","nameLocation":"12903:17:20","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"dest","nameLocation":"12939:4:20","nodeType":"VariableDeclaration","scope":3952,"src":"12931:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3910,"name":"address","nodeType":"ElementaryTypeName","src":"12931:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12920:30:20"},"returnParameters":{"id":3915,"nodeType":"ParameterList","parameters":[],"src":"12977:0:20"},"scope":4561,"src":"12894:470:20","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3998,"nodeType":"Block","src":"14105:555:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3980,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"14300:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":3979,"name":"getPartialHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"14285:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3364_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14285:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3982,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14330:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14336:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"14330:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3986,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14374:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BiconomyTokenPaymaster_$4561","typeString":"contract BiconomyTokenPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BiconomyTokenPaymaster_$4561","typeString":"contract BiconomyTokenPaymaster"}],"id":3985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14366:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3984,"name":"address","nodeType":"ElementaryTypeName","src":"14366:7:20","typeDescriptions":{}}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14366:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3988,"name":"priceSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"14402:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},{"id":3989,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"14436:10:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3990,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"14469:10:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3991,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"14502:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3992,"name":"oracleAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"14533:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3993,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"14572:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3994,"name":"priceMarkup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"14607:11:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3977,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14252:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14256:6:20","memberName":"encode","nodeType":"MemberAccess","src":"14252:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14252:385:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3976,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14224:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14224:428:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3975,"id":3997,"nodeType":"Return","src":"14204:448:20"}]},"documentation":{"id":3953,"nodeType":"StructuredDocumentation","src":"13372:414:20","text":" @dev This method is called by the off-chain service, to sign the request.\n It is called on-chain from the validatePaymasterUserOp, to validate the signature.\n @notice That this signature covers all fields of the UserOperation, except the \"paymasterAndData\",\n which will carry the signature itself.\n @return hash we're going to sign off-chain (and validate on-chain)"},"functionSelector":"d0db6f75","id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"getHash","nameLocation":"13801:7:20","nodeType":"FunctionDefinition","parameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"userOp","nameLocation":"13842:6:20","nodeType":"VariableDeclaration","scope":3999,"src":"13819:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3955,"nodeType":"UserDefinedTypeName","pathNode":{"id":3954,"name":"UserOperation","nameLocations":["13819:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"13819:13:20"},"referencedDeclaration":3364,"src":"13819:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"priceSource","nameLocation":"13878:11:20","nodeType":"VariableDeclaration","scope":3999,"src":"13859:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"},"typeName":{"id":3958,"nodeType":"UserDefinedTypeName","pathNode":{"id":3957,"name":"ExchangeRateSource","nameLocations":["13859:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":3489,"src":"13859:18:20"},"referencedDeclaration":3489,"src":"13859:18:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},"visibility":"internal"},{"constant":false,"id":3961,"mutability":"mutable","name":"validUntil","nameLocation":"13907:10:20","nodeType":"VariableDeclaration","scope":3999,"src":"13900:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3960,"name":"uint48","nodeType":"ElementaryTypeName","src":"13900:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3963,"mutability":"mutable","name":"validAfter","nameLocation":"13935:10:20","nodeType":"VariableDeclaration","scope":3999,"src":"13928:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3962,"name":"uint48","nodeType":"ElementaryTypeName","src":"13928:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"feeToken","nameLocation":"13964:8:20","nodeType":"VariableDeclaration","scope":3999,"src":"13956:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"13956:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3967,"mutability":"mutable","name":"oracleAggregator","nameLocation":"13991:16:20","nodeType":"VariableDeclaration","scope":3999,"src":"13983:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3966,"name":"address","nodeType":"ElementaryTypeName","src":"13983:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3969,"mutability":"mutable","name":"exchangeRate","nameLocation":"14026:12:20","nodeType":"VariableDeclaration","scope":3999,"src":"14018:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"14018:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3971,"mutability":"mutable","name":"priceMarkup","nameLocation":"14056:11:20","nodeType":"VariableDeclaration","scope":3999,"src":"14049:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3970,"name":"uint32","nodeType":"ElementaryTypeName","src":"14049:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13808:266:20"},"returnParameters":{"id":3975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"14096:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14096:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14095:9:20"},"scope":4561,"src":"13792:868:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4038,"nodeType":"Block","src":"14763:411:20","statements":[{"assignments":[4008],"declarations":[{"constant":false,"id":4008,"mutability":"mutable","name":"sender","nameLocation":"14782:6:20","nodeType":"VariableDeclaration","scope":4038,"src":"14774:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4007,"name":"address","nodeType":"ElementaryTypeName","src":"14774:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4012,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4009,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14791:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14798:9:20","memberName":"getSender","nodeType":"MemberAccess","referencedDeclaration":2830,"src":"14791:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3364_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$3364_calldata_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14791:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14774:35:20"},{"expression":{"arguments":[{"id":4015,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"14852:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4016,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14873:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14880:5:20","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3345,"src":"14873:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":4019,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14910:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14917:8:20","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3347,"src":"14910:15:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4018,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14900:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14900:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":4023,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14951:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14958:8:20","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":3349,"src":"14951:15:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4022,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14941:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14941:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4026,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14982:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14989:12:20","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":3351,"src":"14982:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4028,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"15016:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15023:20:20","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3353,"src":"15016:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4030,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"15058:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15065:18:20","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"15058:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4032,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"15098:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15105:12:20","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3357,"src":"15098:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4034,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"15132:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15139:20:20","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3359,"src":"15132:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4013,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14827:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14831:6:20","memberName":"encode","nodeType":"MemberAccess","src":"14827:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14827:343:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4006,"id":4037,"nodeType":"Return","src":"14820:350:20"}]},"id":4039,"implemented":true,"kind":"function","modifiers":[],"name":"getPartialHash","nameLocation":"14675:14:20","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"userOp","nameLocation":"14713:6:20","nodeType":"VariableDeclaration","scope":4039,"src":"14690:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4001,"nodeType":"UserDefinedTypeName","pathNode":{"id":4000,"name":"UserOperation","nameLocations":["14690:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"14690:13:20"},"referencedDeclaration":3364,"src":"14690:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"14689:31:20"},"returnParameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4039,"src":"14749:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4004,"name":"bytes","nodeType":"ElementaryTypeName","src":"14749:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14748:14:20"},"scope":4561,"src":"14666:508:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4123,"nodeType":"Block","src":"15339:1216:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4048,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"15468:16:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15485:6:20","memberName":"length","nodeType":"MemberAccess","src":"15468:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4050,"name":"SIGNATURE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"15495:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15468:43:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4254504d3a20496e76616c6964206c656e67746820666f72207061796d6173746572416e6444617461","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15526:43:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3","typeString":"literal_string \"BTPM: Invalid length for paymasterAndData\""},"value":"BTPM: Invalid length for paymasterAndData"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3","typeString":"literal_string \"BTPM: Invalid length for paymasterAndData\""}],"id":4047,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15446:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15446:134:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4054,"nodeType":"ExpressionStatement","src":"15446:134:20"},{"assignments":[4057],"declarations":[{"constant":false,"id":4057,"mutability":"mutable","name":"priceSource","nameLocation":"15612:11:20","nodeType":"VariableDeclaration","scope":4123,"src":"15593:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"},"typeName":{"id":4056,"nodeType":"UserDefinedTypeName","pathNode":{"id":4055,"name":"ExchangeRateSource","nameLocations":["15593:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":3489,"src":"15593:18:20"},"referencedDeclaration":3489,"src":"15593:18:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},"visibility":"internal"}],"id":4072,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"baseExpression":{"id":4063,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"15690:16:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":4067,"name":"VALID_PND_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"15728:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"15690:55:20","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4064,"name":"VALID_PND_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"15707:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15726:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15707:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15683:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4061,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15683:6:20","typeDescriptions":{}}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15683:63:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15659:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4059,"name":"uint8","nodeType":"ElementaryTypeName","src":"15659:5:20","typeDescriptions":{}}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15659:102:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4058,"name":"ExchangeRateSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"15626:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ExchangeRateSource_$3489_$","typeString":"type(enum BiconomyTokenPaymaster.ExchangeRateSource)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15626:146:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},"nodeType":"VariableDeclarationStatement","src":"15593:179:20"},{"assignments":[4074,4076,4078,4080,4082,4084],"declarations":[{"constant":false,"id":4074,"mutability":"mutable","name":"validUntil","nameLocation":"15807:10:20","nodeType":"VariableDeclaration","scope":4123,"src":"15800:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4073,"name":"uint48","nodeType":"ElementaryTypeName","src":"15800:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"validAfter","nameLocation":"15839:10:20","nodeType":"VariableDeclaration","scope":4123,"src":"15832:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4075,"name":"uint48","nodeType":"ElementaryTypeName","src":"15832:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":4078,"mutability":"mutable","name":"feeToken","nameLocation":"15872:8:20","nodeType":"VariableDeclaration","scope":4123,"src":"15864:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4077,"name":"address","nodeType":"ElementaryTypeName","src":"15864:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4080,"mutability":"mutable","name":"oracleAggregator","nameLocation":"15903:16:20","nodeType":"VariableDeclaration","scope":4123,"src":"15895:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4079,"name":"address","nodeType":"ElementaryTypeName","src":"15895:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4082,"mutability":"mutable","name":"exchangeRate","nameLocation":"15942:12:20","nodeType":"VariableDeclaration","scope":4123,"src":"15934:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4081,"name":"uint256","nodeType":"ElementaryTypeName","src":"15934:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"priceMarkup","nameLocation":"15976:11:20","nodeType":"VariableDeclaration","scope":4123,"src":"15969:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4083,"name":"uint32","nodeType":"ElementaryTypeName","src":"15969:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4105,"initialValue":{"arguments":[{"baseExpression":{"id":4087,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"16026:16:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":4089,"name":"SIGNATURE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"16060:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"16026:51:20","startExpression":{"id":4088,"name":"VALID_PND_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"16043:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16093:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4091,"name":"uint48","nodeType":"ElementaryTypeName","src":"16093:6:20","typeDescriptions":{}}},{"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16101:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4093,"name":"uint48","nodeType":"ElementaryTypeName","src":"16101:6:20","typeDescriptions":{}}},{"id":4096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16109:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4095,"name":"address","nodeType":"ElementaryTypeName","src":"16109:7:20","typeDescriptions":{}}},{"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16118:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4097,"name":"address","nodeType":"ElementaryTypeName","src":"16118:7:20","typeDescriptions":{}}},{"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16127:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4099,"name":"uint256","nodeType":"ElementaryTypeName","src":"16127:7:20","typeDescriptions":{}}},{"id":4102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16136:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4101,"name":"uint32","nodeType":"ElementaryTypeName","src":"16136:6:20","typeDescriptions":{}}}],"id":4103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16092:51:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint32_$_$","typeString":"tuple(type(uint48),type(uint48),type(address),type(address),type(uint256),type(uint32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint32_$_$","typeString":"tuple(type(uint48),type(uint48),type(address),type(address),type(uint256),type(uint32))"}],"expression":{"id":4085,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16001:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16005:6:20","memberName":"decode","nodeType":"MemberAccess","src":"16001:10:20","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16001:153:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint48_$_t_uint48_$_t_address_payable_$_t_address_payable_$_t_uint256_$_t_uint32_$","typeString":"tuple(uint48,uint48,address payable,address payable,uint256,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"15785:369:20"},{"assignments":[4107],"declarations":[{"constant":false,"id":4107,"mutability":"mutable","name":"signature","nameLocation":"16180:9:20","nodeType":"VariableDeclaration","scope":4123,"src":"16167:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4106,"name":"bytes","nodeType":"ElementaryTypeName","src":"16167:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4111,"initialValue":{"baseExpression":{"id":4108,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"16192:16:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"16192:35:20","startExpression":{"id":4109,"name":"SIGNATURE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"16209:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"nodeType":"VariableDeclarationStatement","src":"16167:60:20"},{"expression":{"arguments":[{"id":4113,"name":"priceSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"16285:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},{"id":4114,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"16319:10:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":4115,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"16352:10:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":4116,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"16383:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4117,"name":"oracleAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"16420:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4118,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"16461:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4119,"name":"priceMarkup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"16497:11:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4120,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"16530:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4112,"name":"PaymasterData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"16247:13:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PaymasterData_$3485_storage_ptr_$","typeString":"type(struct BiconomyTokenPaymaster.PaymasterData storage pointer)"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["16272:11:20","16307:10:20","16340:10:20","16373:8:20","16402:16:20","16447:12:20","16484:11:20","16519:9:20"],"names":["priceSource","validUntil","validAfter","feeToken","oracleAggregator","exchangeRate","priceMarkup","signature"],"nodeType":"FunctionCall","src":"16247:300:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"functionReturnParameters":4046,"id":4122,"nodeType":"Return","src":"16240:307:20"}]},"functionSelector":"94d4ad60","id":4124,"implemented":true,"kind":"function","modifiers":[],"name":"parsePaymasterAndData","nameLocation":"15193:21:20","nodeType":"FunctionDefinition","parameters":{"id":4042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"paymasterAndData","nameLocation":"15240:16:20","nodeType":"VariableDeclaration","scope":4124,"src":"15225:31:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4040,"name":"bytes","nodeType":"ElementaryTypeName","src":"15225:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15214:49:20"},"returnParameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4124,"src":"15312:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData"},"typeName":{"id":4044,"nodeType":"UserDefinedTypeName","pathNode":{"id":4043,"name":"PaymasterData","nameLocations":["15312:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3485,"src":"15312:13:20"},"referencedDeclaration":3485,"src":"15312:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_storage_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData"}},"visibility":"internal"}],"src":"15311:22:20"},"scope":4561,"src":"15184:1371:20","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4153,"nodeType":"Block","src":"16687:292:20","statements":[{"id":4152,"nodeType":"UncheckedBlock","src":"16698:274:20","statements":[{"assignments":[4133],"declarations":[{"constant":false,"id":4133,"mutability":"mutable","name":"requiredGas","nameLocation":"16731:11:20","nodeType":"VariableDeclaration","scope":4152,"src":"16723:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"16723:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4144,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4134,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"16745:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16752:12:20","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":3351,"src":"16745:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4136,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"16784:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16791:20:20","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3353,"src":"16784:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16745:66:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4139,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"16831:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16838:18:20","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"16831:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16745:111:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4142,"name":"UNACCOUNTED_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"16876:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16745:147:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16723:169:20"},{"expression":{"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4145,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"16909:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"requiredGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"16927:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4147,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"16941:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16948:12:20","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3357,"src":"16941:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16927:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16909:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4151,"nodeType":"ExpressionStatement","src":"16909:51:20"}]}]},"id":4154,"implemented":true,"kind":"function","modifiers":[],"name":"_getRequiredPrefund","nameLocation":"16572:19:20","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"userOp","nameLocation":"16625:6:20","nodeType":"VariableDeclaration","scope":4154,"src":"16602:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4126,"nodeType":"UserDefinedTypeName","pathNode":{"id":4125,"name":"UserOperation","nameLocations":["16602:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"16602:13:20"},"referencedDeclaration":3364,"src":"16602:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"16591:47:20"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"requiredPrefund","nameLocation":"16670:15:20","nodeType":"VariableDeclaration","scope":4154,"src":"16662:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"16662:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16661:25:20"},"scope":4561,"src":"16563:416:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[2406],"body":{"id":4335,"nodeType":"Block","src":"18093:2964:20","statements":[{"expression":{"components":[{"id":4170,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"18105:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18104:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4172,"nodeType":"ExpressionStatement","src":"18104:17:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4174,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"18338:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18345:20:20","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":3353,"src":"18338:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4176,"name":"UNACCOUNTED_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"18368:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18338:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4254504d3a2067617320746f6f206c6f7720666f7220706f73744f70","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18399:30:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd","typeString":"literal_string \"BTPM: gas too low for postOp\""},"value":"BTPM: gas too low for postOp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd","typeString":"literal_string \"BTPM: gas too low for postOp\""}],"id":4173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18316:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18316:124:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4180,"nodeType":"ExpressionStatement","src":"18316:124:20"},{"assignments":[4183],"declarations":[{"constant":false,"id":4183,"mutability":"mutable","name":"data","nameLocation":"18572:4:20","nodeType":"VariableDeclaration","scope":4335,"src":"18551:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData"},"typeName":{"id":4182,"nodeType":"UserDefinedTypeName","pathNode":{"id":4181,"name":"PaymasterData","nameLocations":["18551:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3485,"src":"18551:13:20"},"referencedDeclaration":3485,"src":"18551:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_storage_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData"}},"visibility":"internal"}],"id":4188,"initialValue":{"arguments":[{"expression":{"id":4185,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"18601:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18608:16:20","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3361,"src":"18601:23:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4184,"name":"parsePaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"18579:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_struct$_PaymasterData_$3485_memory_ptr_$","typeString":"function (bytes calldata) pure returns (struct BiconomyTokenPaymaster.PaymasterData memory)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18579:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"nodeType":"VariableDeclarationStatement","src":"18551:74:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4190,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"18796:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18801:9:20","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":3484,"src":"18796:14:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18811:6:20","memberName":"length","nodeType":"MemberAccess","src":"18796:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18821:2:20","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"18796:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4254504d3a20696e76616c6964207369676e6174757265206c656e67746820696e207061796d6173746572416e6444617461","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18838:52:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e","typeString":"literal_string \"BTPM: invalid signature length in paymasterAndData\""},"value":"BTPM: invalid signature length in paymasterAndData"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e","typeString":"literal_string \"BTPM: invalid signature length in paymasterAndData\""}],"id":4189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18774:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18774:127:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4197,"nodeType":"ExpressionStatement","src":"18774:127:20"},{"assignments":[4199],"declarations":[{"constant":false,"id":4199,"mutability":"mutable","name":"tempHash","nameLocation":"18924:8:20","nodeType":"VariableDeclaration","scope":4335,"src":"18916:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18916:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4217,"initialValue":{"arguments":[{"id":4201,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"18957:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},{"expression":{"id":4202,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"18978:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18983:11:20","memberName":"priceSource","nodeType":"MemberAccess","referencedDeclaration":3470,"src":"18978:16:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},{"expression":{"id":4204,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"19009:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19014:10:20","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3472,"src":"19009:15:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":4206,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"19039:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19044:10:20","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3474,"src":"19039:15:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":4208,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"19069:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19074:8:20","memberName":"feeToken","nodeType":"MemberAccess","referencedDeclaration":3476,"src":"19069:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4210,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"19097:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19102:16:20","memberName":"oracleAggregator","nodeType":"MemberAccess","referencedDeclaration":3478,"src":"19097:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4212,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"19133:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19138:12:20","memberName":"exchangeRate","nodeType":"MemberAccess","referencedDeclaration":3480,"src":"19133:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4214,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"19165:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19170:11:20","memberName":"priceMarkup","nodeType":"MemberAccess","referencedDeclaration":3482,"src":"19165:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":4200,"name":"getHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"18935:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UserOperation_$3364_calldata_ptr_$_t_enum$_ExchangeRateSource_$3489_$_t_uint48_$_t_uint48_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$returns$_t_bytes32_$","typeString":"function (struct UserOperation calldata,enum BiconomyTokenPaymaster.ExchangeRateSource,uint48,uint48,address,address,uint256,uint32) view returns (bytes32)"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18935:257:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"18916:276:20"},{"expression":{"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4218,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"19286:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19296:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"19286:12:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4221,"nodeType":"ExpressionStatement","src":"19286:12:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"verifyingSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"19390:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"expression":{"id":4228,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"19467:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19472:9:20","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":3484,"src":"19467:14:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4225,"name":"tempHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"19449:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4223,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"19409:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$1177_$","typeString":"type(library MessageHashUtils)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19426:22:20","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":1118,"src":"19409:39:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19409:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19459:7:20","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":859,"src":"19409:57:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19409:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19390:92:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4244,"nodeType":"IfStatement","src":"19386:308:20","trueBody":{"id":4243,"nodeType":"Block","src":"19484:210:20","statements":[{"expression":{"components":[{"id":4232,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"19574:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"hexValue":"74727565","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19628:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":4236,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"19634:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19639:10:20","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3472,"src":"19634:15:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":4238,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"19651:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19656:10:20","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3474,"src":"19651:15:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":4233,"name":"Helpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"19600:7:20","typeDescriptions":{"typeIdentifier":"t_module_2803","typeString":"module \"contracts/core/Helpers.sol\""}},"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19608:19:20","memberName":"_packValidationData","nodeType":"MemberAccess","referencedDeclaration":2792,"src":"19600:27:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$","typeString":"function (bool,uint48,uint48) pure returns (uint256)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19600:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19555:127:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":4169,"id":4242,"nodeType":"Return","src":"19548:134:20"}]}},{"assignments":[4246],"declarations":[{"constant":false,"id":4246,"mutability":"mutable","name":"tokenRequiredPreFund","nameLocation":"20021:20:20","nodeType":"VariableDeclaration","scope":4335,"src":"20013:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4245,"name":"uint256","nodeType":"ElementaryTypeName","src":"20013:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4258,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4248,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"20065:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":4247,"name":"_getRequiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"20045:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UserOperation_$3364_calldata_ptr_$returns$_t_uint256_$","typeString":"function (struct UserOperation calldata) view returns (uint256)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20045:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4250,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"20075:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20080:12:20","memberName":"exchangeRate","nodeType":"MemberAccess","referencedDeclaration":3480,"src":"20075:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20045:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20044:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20109:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:2:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"20109:8:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"20044:73:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20013:104:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4260,"name":"tokenRequiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"20150:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20174:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20150:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4254504d3a2063616c63756c6174656420746f6b656e2063686172676520696e76616c6964","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20190:39:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c","typeString":"literal_string \"BTPM: calculated token charge invalid\""},"value":"BTPM: calculated token charge invalid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c","typeString":"literal_string \"BTPM: calculated token charge invalid\""}],"id":4259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20128:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20128:112:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4265,"nodeType":"ExpressionStatement","src":"20128:112:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4267,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"20259:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20264:11:20","memberName":"priceMarkup","nodeType":"MemberAccess","referencedDeclaration":3482,"src":"20259:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"326536","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20279:3:20","typeDescriptions":{"typeIdentifier":"t_rational_2000000_by_1","typeString":"int_const 2000000"},"value":"2e6"},"src":"20259:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4254504d3a207072696365206d61726b75702070657263656e7461676520746f6f2068696768","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20284:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928","typeString":"literal_string \"BTPM: price markup percentage too high\""},"value":"BTPM: price markup percentage too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928","typeString":"literal_string \"BTPM: price markup percentage too high\""}],"id":4266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20251:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20251:74:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4273,"nodeType":"ExpressionStatement","src":"20251:74:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4275,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"20344:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20349:11:20","memberName":"priceMarkup","nodeType":"MemberAccess","referencedDeclaration":3482,"src":"20344:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"316536","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20364:3:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"src":"20344:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4254504d3a207072696365206d61726b75702070657263656e7461676520746f6f206c6f77","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20369:39:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3","typeString":"literal_string \"BTPM: price markup percentage too low\""},"value":"BTPM: price markup percentage too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3","typeString":"literal_string \"BTPM: price markup percentage too low\""}],"id":4274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20336:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20336:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4281,"nodeType":"ExpressionStatement","src":"20336:73:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4288,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"20474:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20481:9:20","memberName":"getSender","nodeType":"MemberAccess","referencedDeclaration":2830,"src":"20474:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3364_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$3364_calldata_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20474:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":4284,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"20449:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20454:8:20","memberName":"feeToken","nodeType":"MemberAccess","referencedDeclaration":3476,"src":"20449:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4283,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"20442:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20442:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20464:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":182,"src":"20442:31:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20442:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4292,"name":"tokenRequiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"20516:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4293,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"20539:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20544:11:20","memberName":"priceMarkup","nodeType":"MemberAccess","referencedDeclaration":3482,"src":"20539:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"20516:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20515:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4297,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"20559:17:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"20515:61:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20514:63:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20442:135:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4254504d3a206163636f756e7420646f6573206e6f74206861766520656e6f75676820746f6b656e2062616c616e6365","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20592:50:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada","typeString":"literal_string \"BTPM: account does not have enough token balance\""},"value":"BTPM: account does not have enough token balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada","typeString":"literal_string \"BTPM: account does not have enough token balance\""}],"id":4282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20420:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20420:233:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4303,"nodeType":"ExpressionStatement","src":"20420:233:20"},{"expression":{"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4304,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"20666:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4307,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"20701:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20708:9:20","memberName":"getSender","nodeType":"MemberAccess","referencedDeclaration":2830,"src":"20701:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$3364_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$3364_calldata_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20701:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4310,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"20734:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20739:8:20","memberName":"feeToken","nodeType":"MemberAccess","referencedDeclaration":3476,"src":"20734:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4312,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"20762:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20767:16:20","memberName":"oracleAggregator","nodeType":"MemberAccess","referencedDeclaration":3478,"src":"20762:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4314,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"20798:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20803:11:20","memberName":"priceSource","nodeType":"MemberAccess","referencedDeclaration":3470,"src":"20798:16:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},{"expression":{"id":4316,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"20829:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20834:12:20","memberName":"exchangeRate","nodeType":"MemberAccess","referencedDeclaration":3480,"src":"20829:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4318,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"20861:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20866:11:20","memberName":"priceMarkup","nodeType":"MemberAccess","referencedDeclaration":3482,"src":"20861:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4320,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"20892:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4305,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20676:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20680:6:20","memberName":"encode","nodeType":"MemberAccess","src":"20676:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20676:237:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"20666:247:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4323,"nodeType":"ExpressionStatement","src":"20666:247:20"},{"expression":{"components":[{"id":4324,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"20948:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"hexValue":"66616c7365","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20998:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":4328,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"21005:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21010:10:20","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3472,"src":"21005:15:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":4330,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"21022:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_PaymasterData_$3485_memory_ptr","typeString":"struct BiconomyTokenPaymaster.PaymasterData memory"}},"id":4331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21027:10:20","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3474,"src":"21022:15:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":4325,"name":"Helpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"20970:7:20","typeDescriptions":{"typeIdentifier":"t_module_2803","typeString":"module \"contracts/core/Helpers.sol\""}},"id":4326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20978:19:20","memberName":"_packValidationData","nodeType":"MemberAccess","referencedDeclaration":2792,"src":"20970:27:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$","typeString":"function (bool,uint48,uint48) pure returns (uint256)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20970:68:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20933:116:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":4169,"id":4334,"nodeType":"Return","src":"20926:123:20"}]},"documentation":{"id":4155,"nodeType":"StructuredDocumentation","src":"16987:837:20","text":" @dev Verify that an external signer signed the paymaster data of a user operation.\n The paymaster data is expected to be the paymaster address, request data and a signature over the entire request parameters.\n paymasterAndData: hexConcat([paymasterAddress, priceSource, abi.encode(validUntil, validAfter, feeToken, oracleAggregator, exchangeRate, priceMarkup), signature])\n @param userOp The UserOperation struct that represents the current user operation.\n userOpHash The hash of the UserOperation struct.\n @param requiredPreFund The required amount of pre-funding for the paymaster.\n @return context A context string returned by the entry point after successful validation.\n @return validationData An integer returned by the entry point after successful validation."},"id":4336,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"17839:24:20","nodeType":"FunctionDefinition","overrides":{"id":4164,"nodeType":"OverrideSpecifier","overrides":[],"src":"18015:8:20"},"parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4158,"mutability":"mutable","name":"userOp","nameLocation":"17897:6:20","nodeType":"VariableDeclaration","scope":4336,"src":"17874:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4157,"nodeType":"UserDefinedTypeName","pathNode":{"id":4156,"name":"UserOperation","nameLocations":["17874:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"17874:13:20"},"referencedDeclaration":3364,"src":"17874:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$3364_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":4160,"mutability":"mutable","name":"userOpHash","nameLocation":"17922:10:20","nodeType":"VariableDeclaration","scope":4336,"src":"17914:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17914:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"requiredPreFund","nameLocation":"17951:15:20","nodeType":"VariableDeclaration","scope":4336,"src":"17943:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"17943:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17863:110:20"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"context","nameLocation":"18055:7:20","nodeType":"VariableDeclaration","scope":4336,"src":"18042:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4165,"name":"bytes","nodeType":"ElementaryTypeName","src":"18042:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"validationData","nameLocation":"18072:14:20","nodeType":"VariableDeclaration","scope":4336,"src":"18064:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"18064:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18041:46:20"},"scope":4561,"src":"17830:3227:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[2449],"body":{"id":4519,"nodeType":"Block","src":"21565:2816:20","statements":[{"assignments":[4349,4352,4354,4357,4359,4361,4363],"declarations":[{"constant":false,"id":4349,"mutability":"mutable","name":"account","nameLocation":"21599:7:20","nodeType":"VariableDeclaration","scope":4519,"src":"21591:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4348,"name":"address","nodeType":"ElementaryTypeName","src":"21591:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4352,"mutability":"mutable","name":"feeToken","nameLocation":"21628:8:20","nodeType":"VariableDeclaration","scope":4519,"src":"21621:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":4351,"nodeType":"UserDefinedTypeName","pathNode":{"id":4350,"name":"IERC20","nameLocations":["21621:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"21621:6:20"},"referencedDeclaration":225,"src":"21621:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"oracleAggregator","nameLocation":"21659:16:20","nodeType":"VariableDeclaration","scope":4519,"src":"21651:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4353,"name":"address","nodeType":"ElementaryTypeName","src":"21651:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4357,"mutability":"mutable","name":"priceSource","nameLocation":"21709:11:20","nodeType":"VariableDeclaration","scope":4519,"src":"21690:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"},"typeName":{"id":4356,"nodeType":"UserDefinedTypeName","pathNode":{"id":4355,"name":"ExchangeRateSource","nameLocations":["21690:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":3489,"src":"21690:18:20"},"referencedDeclaration":3489,"src":"21690:18:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},"visibility":"internal"},{"constant":false,"id":4359,"mutability":"mutable","name":"exchangeRate","nameLocation":"21743:12:20","nodeType":"VariableDeclaration","scope":4519,"src":"21735:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"21735:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4361,"mutability":"mutable","name":"priceMarkup","nameLocation":"21777:11:20","nodeType":"VariableDeclaration","scope":4519,"src":"21770:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4360,"name":"uint32","nodeType":"ElementaryTypeName","src":"21770:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4363,"mutability":"mutable","name":"userOpHash","nameLocation":"21811:10:20","nodeType":"VariableDeclaration","scope":4519,"src":"21803:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21803:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4381,"initialValue":{"arguments":[{"id":4366,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"21864:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21913:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4367,"name":"address","nodeType":"ElementaryTypeName","src":"21913:7:20","typeDescriptions":{}}},{"id":4369,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"21943:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},{"id":4371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21972:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4370,"name":"address","nodeType":"ElementaryTypeName","src":"21972:7:20","typeDescriptions":{}}},{"id":4372,"name":"ExchangeRateSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"22002:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ExchangeRateSource_$3489_$","typeString":"type(enum BiconomyTokenPaymaster.ExchangeRateSource)"}},{"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22043:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4373,"name":"uint256","nodeType":"ElementaryTypeName","src":"22043:7:20","typeDescriptions":{}}},{"id":4376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22073:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4375,"name":"uint32","nodeType":"ElementaryTypeName","src":"22073:6:20","typeDescriptions":{}}},{"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22102:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22102:7:20","typeDescriptions":{}}}],"id":4379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21890:238:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_contract$_IERC20_$225_$_$_t_type$_t_address_$_$_t_type$_t_enum$_ExchangeRateSource_$3489_$_$_t_type$_t_uint256_$_$_t_type$_t_uint32_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(address),type(contract IERC20),type(address),type(enum BiconomyTokenPaymaster.ExchangeRateSource),type(uint256),type(uint32),type(bytes32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_contract$_IERC20_$225_$_$_t_type$_t_address_$_$_t_type$_t_enum$_ExchangeRateSource_$3489_$_$_t_type$_t_uint256_$_$_t_type$_t_uint32_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(address),type(contract IERC20),type(address),type(enum BiconomyTokenPaymaster.ExchangeRateSource),type(uint256),type(uint32),type(bytes32))"}],"expression":{"id":4364,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21835:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21839:6:20","memberName":"decode","nodeType":"MemberAccess","src":"21835:10:20","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21835:308:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_contract$_IERC20_$225_$_t_address_payable_$_t_enum$_ExchangeRateSource_$3489_$_t_uint256_$_t_uint32_$_t_bytes32_$","typeString":"tuple(address payable,contract IERC20,address payable,enum BiconomyTokenPaymaster.ExchangeRateSource,uint256,uint32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"21576:567:20"},{"assignments":[4383],"declarations":[{"constant":false,"id":4383,"mutability":"mutable","name":"effectiveExchangeRate","nameLocation":"22164:21:20","nodeType":"VariableDeclaration","scope":4519,"src":"22156:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"22156:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4385,"initialValue":{"id":4384,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"22188:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22156:44:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4386,"name":"priceSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"22231:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4387,"name":"ExchangeRateSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"22246:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ExchangeRateSource_$3489_$","typeString":"type(enum BiconomyTokenPaymaster.ExchangeRateSource)"}},"id":4388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22265:12:20","memberName":"ORACLE_BASED","nodeType":"MemberAccess","referencedDeclaration":3488,"src":"22246:31:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}},"src":"22231:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"oracleAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"22294:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":4393,"name":"NATIVE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"22322:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22314:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4391,"name":"address","nodeType":"ElementaryTypeName","src":"22314:7:20","typeDescriptions":{}}},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22314:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22294:43:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22231:106:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"oracleAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"22354:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22382:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22374:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4398,"name":"address","nodeType":"ElementaryTypeName","src":"22374:7:20","typeDescriptions":{}}},"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22374:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22354:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22231:153:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4423,"nodeType":"IfStatement","src":"22213:339:20","trueBody":{"id":4422,"nodeType":"Block","src":"22396:156:20","statements":[{"assignments":[4405],"declarations":[{"constant":false,"id":4405,"mutability":"mutable","name":"result","nameLocation":"22419:6:20","nodeType":"VariableDeclaration","scope":4422,"src":"22411:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4404,"name":"uint256","nodeType":"ElementaryTypeName","src":"22411:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4413,"initialValue":{"arguments":[{"arguments":[{"id":4409,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"22450:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}],"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22442:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4407,"name":"address","nodeType":"ElementaryTypeName","src":"22442:7:20","typeDescriptions":{}}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22442:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4411,"name":"oracleAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"22461:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4406,"name":"exchangePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"22428:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22428:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22411:67:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"22497:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22507:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22497:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4421,"nodeType":"IfStatement","src":"22493:47:20","trueBody":{"expression":{"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4417,"name":"effectiveExchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"22510:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"22534:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22510:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4420,"nodeType":"ExpressionStatement","src":"22510:30:20"}}]}},{"assignments":[4425],"declarations":[{"constant":false,"id":4425,"mutability":"mutable","name":"charge","nameLocation":"22746:6:20","nodeType":"VariableDeclaration","scope":4519,"src":"22738:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4424,"name":"uint256","nodeType":"ElementaryTypeName","src":"22738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4426,"nodeType":"VariableDeclarationStatement","src":"22738:14:20"},{"id":4453,"nodeType":"Block","src":"22811:247:20","statements":[{"assignments":[4428],"declarations":[{"constant":false,"id":4428,"mutability":"mutable","name":"actualTokenCost","nameLocation":"22834:15:20","nodeType":"VariableDeclaration","scope":4453,"src":"22826:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"22826:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4442,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"22854:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4430,"name":"UNACCOUNTED_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"22888:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4431,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"22907:2:20","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22910:8:20","memberName":"gasprice","nodeType":"MemberAccess","src":"22907:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22888:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4434,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22887:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22854:65:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22853:67:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4437,"name":"effectiveExchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"22923:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22853:91:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22852:93:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22965:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"22852:117:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22826:143:20"},{"expression":{"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4443,"name":"charge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"22984:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4444,"name":"actualTokenCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"22995:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4445,"name":"priceMarkup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"23013:11:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"22995:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4447,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22994:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4448,"name":"PRICE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"23028:17:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"22994:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22993:53:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22984:62:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4452,"nodeType":"ExpressionStatement","src":"22984:62:20"}]},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4454,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"23074:4:20","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4455,"name":"PostOpMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"23082:10:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3207_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23093:14:20","memberName":"postOpReverted","nodeType":"MemberAccess","referencedDeclaration":3206,"src":"23082:25:20","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"}},"src":"23074:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4517,"nodeType":"Block","src":"23579:795:20","statements":[{"assignments":[4483],"declarations":[{"constant":false,"id":4483,"mutability":"mutable","name":"_data","nameLocation":"23714:5:20","nodeType":"VariableDeclaration","scope":4517,"src":"23701:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4482,"name":"bytes","nodeType":"ElementaryTypeName","src":"23701:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4493,"initialValue":{"arguments":[{"expression":{"expression":{"id":4486,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"23763:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23772:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":224,"src":"23763:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23785:8:20","memberName":"selector","nodeType":"MemberAccess","src":"23763:30:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4489,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"23812:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4490,"name":"feeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"23838:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4491,"name":"charge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"23868:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4484,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"23722:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23726:18:20","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"23722:22:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23722:167:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"23701:188:20"},{"assignments":[4495,null],"declarations":[{"constant":false,"id":4495,"mutability":"mutable","name":"success","nameLocation":"23910:7:20","nodeType":"VariableDeclaration","scope":4517,"src":"23905:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4494,"name":"bool","nodeType":"ElementaryTypeName","src":"23905:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4503,"initialValue":{"arguments":[{"id":4501,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"23963:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4498,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"23930:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}],"id":4497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23922:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4496,"name":"address","nodeType":"ElementaryTypeName","src":"23922:7:20","typeDescriptions":{}}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23922:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23940:4:20","memberName":"call","nodeType":"MemberAccess","src":"23922:22:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23922:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"23904:79:20"},{"condition":{"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"24002:8:20","subExpression":{"id":4504,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"24003:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4516,"nodeType":"IfStatement","src":"23998:365:20","trueBody":{"id":4515,"nodeType":"Block","src":"24012:351:20","statements":[{"eventCall":{"arguments":[{"arguments":[{"id":4509,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"24228:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}],"id":4508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24220:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4507,"name":"address","nodeType":"ElementaryTypeName","src":"24220:7:20","typeDescriptions":{}}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24220:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"24239:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4512,"name":"charge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24248:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4506,"name":"TokenPaymentDue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"24204:15:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24204:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4514,"nodeType":"EmitStatement","src":"24199:56:20"}]}}]},"id":4518,"nodeType":"IfStatement","src":"23070:1304:20","trueBody":{"id":4481,"nodeType":"Block","src":"23109:464:20","statements":[{"expression":{"arguments":[{"id":4462,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"23175:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4463,"name":"feeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"23201:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4464,"name":"charge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"23231:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4459,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"23134:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}],"id":4458,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"23127:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23127:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23144:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":224,"src":"23127:29:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23127:125:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4466,"nodeType":"ExpressionStatement","src":"23127:125:20"},{"eventCall":{"arguments":[{"id":4468,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"23314:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4471,"name":"feeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"23348:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}],"id":4470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23340:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4469,"name":"address","nodeType":"ElementaryTypeName","src":"23340:7:20","typeDescriptions":{}}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23340:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4473,"name":"charge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"23376:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4474,"name":"oracleAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"23401:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4475,"name":"priceMarkup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"23436:11:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4476,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"23466:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4477,"name":"effectiveExchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"23495:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4478,"name":"priceSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"23535:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_ExchangeRateSource_$3489","typeString":"enum BiconomyTokenPaymaster.ExchangeRateSource"}],"id":4467,"name":"TokenPaymasterOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"23272:23:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint32_$_t_bytes32_$_t_uint256_$_t_enum$_ExchangeRateSource_$3489_$returns$__$","typeString":"function (address,address,uint256,address,uint32,bytes32,uint256,enum BiconomyTokenPaymaster.ExchangeRateSource)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23272:289:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4480,"nodeType":"EmitStatement","src":"23267:294:20"}]}}]},"documentation":{"id":4337,"nodeType":"StructuredDocumentation","src":"21065:353:20","text":" @dev Executes the paymaster's payment conditions\n @param mode tells whether the op succeeded, reverted, or if the op succeeded but cause the postOp to revert\n @param context payment conditions signed by the paymaster in `validatePaymasterUserOp`\n @param actualGasCost amount to be paid to the entry point in wei"},"id":4520,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"21433:7:20","nodeType":"FunctionDefinition","overrides":{"id":4346,"nodeType":"OverrideSpecifier","overrides":[],"src":"21556:8:20"},"parameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4340,"mutability":"mutable","name":"mode","nameLocation":"21462:4:20","nodeType":"VariableDeclaration","scope":4520,"src":"21451:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":4339,"nodeType":"UserDefinedTypeName","pathNode":{"id":4338,"name":"PostOpMode","nameLocations":["21451:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":3207,"src":"21451:10:20"},"referencedDeclaration":3207,"src":"21451:10:20","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3207","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":4342,"mutability":"mutable","name":"context","nameLocation":"21492:7:20","nodeType":"VariableDeclaration","scope":4520,"src":"21477:22:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4341,"name":"bytes","nodeType":"ElementaryTypeName","src":"21477:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4344,"mutability":"mutable","name":"actualGasCost","nameLocation":"21518:13:20","nodeType":"VariableDeclaration","scope":4520,"src":"21510:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"21510:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21440:98:20"},"returnParameters":{"id":4347,"nodeType":"ParameterList","parameters":[],"src":"21565:0:20"},"scope":4561,"src":"21424:2957:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4548,"nodeType":"Block","src":"24501:130:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"24516:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24534:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24526:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4531,"name":"address","nodeType":"ElementaryTypeName","src":"24526:7:20","typeDescriptions":{}}},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24526:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24516:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4539,"nodeType":"IfStatement","src":"24512:62:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4536,"name":"CanNotWithdrawToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"24545:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24545:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4538,"nodeType":"RevertStatement","src":"24538:36:20"}},{"expression":{"arguments":[{"id":4544,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"24608:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4545,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"24616:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4541,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"24592:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}],"id":4540,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"24585:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24585:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24599:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":192,"src":"24585:22:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24585:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4547,"nodeType":"ExpressionStatement","src":"24585:38:20"}]},"id":4549,"implemented":true,"kind":"function","modifiers":[],"name":"_withdrawERC20","nameLocation":"24398:14:20","nodeType":"FunctionDefinition","parameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"token","nameLocation":"24430:5:20","nodeType":"VariableDeclaration","scope":4549,"src":"24423:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":4522,"nodeType":"UserDefinedTypeName","pathNode":{"id":4521,"name":"IERC20","nameLocations":["24423:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"24423:6:20"},"referencedDeclaration":225,"src":"24423:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4525,"mutability":"mutable","name":"target","nameLocation":"24454:6:20","nodeType":"VariableDeclaration","scope":4549,"src":"24446:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4524,"name":"address","nodeType":"ElementaryTypeName","src":"24446:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4527,"mutability":"mutable","name":"amount","nameLocation":"24479:6:20","nodeType":"VariableDeclaration","scope":4549,"src":"24471:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4526,"name":"uint256","nodeType":"ElementaryTypeName","src":"24471:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24412:80:20"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[],"src":"24501:0:20"},"scope":4561,"src":"24389:242:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4559,"nodeType":"Block","src":"24666:55:20","statements":[{"eventCall":{"arguments":[{"expression":{"id":4553,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24691:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24695:6:20","memberName":"sender","nodeType":"MemberAccess","src":"24691:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24703:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24707:5:20","memberName":"value","nodeType":"MemberAccess","src":"24703:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4552,"name":"Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"24682:8:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24682:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4558,"nodeType":"EmitStatement","src":"24677:36:20"}]},"id":4560,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4550,"nodeType":"ParameterList","parameters":[],"src":"24646:2:20"},"returnParameters":{"id":4551,"nodeType":"ParameterList","parameters":[],"src":"24666:0:20"},"scope":4561,"src":"24639:82:20","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4562,"src":"1962:22762:20","usedErrors":[13,18,766,771,776,4566,4569,4572,4575,4578,4581,4583,4585,4587,4589,4591],"usedEvents":[24,3518,3527,3536,3556,3565,3571]}],"src":"33:24691:20"},"id":20},"contracts/utils/TokenPaymasterErrors.sol":{"ast":{"absolutePath":"contracts/utils/TokenPaymasterErrors.sol","exportedSymbols":{"TokenPaymasterErrors":[4592]},"id":4593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4563,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"33:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"TokenPaymasterErrors","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4592,"linearizedBaseContracts":[4592],"name":"TokenPaymasterErrors","nameLocation":"70:20:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"98:86:21","text":" @notice Throws when the Entrypoint address provided is address(0)"},"errorSelector":"245d23e4","id":4566,"name":"EntryPointCannotBeZero","nameLocation":"196:22:21","nodeType":"ErrorDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[],"src":"218:2:21"},"src":"190:31:21"},{"documentation":{"id":4567,"nodeType":"StructuredDocumentation","src":"229:81:21","text":" @notice Throws when the owner address provided is address(0)"},"errorSelector":"9b15e16f","id":4569,"name":"OwnerCannotBeZero","nameLocation":"322:17:21","nodeType":"ErrorDefinition","parameters":{"id":4568,"nodeType":"ParameterList","parameters":[],"src":"339:2:21"},"src":"316:26:21"},{"documentation":{"id":4570,"nodeType":"StructuredDocumentation","src":"350:93:21","text":" @notice Throws when the verifiying signer address provided is address(0)"},"errorSelector":"8fc6a931","id":4572,"name":"VerifyingSignerCannotBeZero","nameLocation":"455:27:21","nodeType":"ErrorDefinition","parameters":{"id":4571,"nodeType":"ParameterList","parameters":[],"src":"482:2:21"},"src":"449:36:21"},{"documentation":{"id":4573,"nodeType":"StructuredDocumentation","src":"493:75:21","text":" @notice Throws when the 0 has been provided as deposit"},"errorSelector":"674c2ee2","id":4575,"name":"DepositCanNotBeZero","nameLocation":"580:19:21","nodeType":"ErrorDefinition","parameters":{"id":4574,"nodeType":"ParameterList","parameters":[],"src":"599:2:21"},"src":"574:28:21"},{"documentation":{"id":4576,"nodeType":"StructuredDocumentation","src":"610:73:21","text":" @notice Throws when trying to withdraw to address(0)"},"errorSelector":"92bc9df3","id":4578,"name":"CanNotWithdrawToZeroAddress","nameLocation":"695:27:21","nodeType":"ErrorDefinition","parameters":{"id":4577,"nodeType":"ParameterList","parameters":[],"src":"722:2:21"},"src":"689:36:21"},{"documentation":{"id":4579,"nodeType":"StructuredDocumentation","src":"1248:88:21","text":" @notice Throws when the fee receiver address provided is address(0)"},"errorSelector":"c9dd43d8","id":4581,"name":"FeeReceiverCannotBeZero","nameLocation":"1348:23:21","nodeType":"ErrorDefinition","parameters":{"id":4580,"nodeType":"ParameterList","parameters":[],"src":"1371:2:21"},"src":"1342:32:21"},{"errorSelector":"09067086","id":4583,"name":"TokensAndAmountsLengthMismatch","nameLocation":"1388:30:21","nodeType":"ErrorDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[],"src":"1418:2:21"},"src":"1382:39:21"},{"errorSelector":"d17e42bf","id":4585,"name":"NativeTokenBalanceZero","nameLocation":"1435:22:21","nodeType":"ErrorDefinition","parameters":{"id":4584,"nodeType":"ParameterList","parameters":[],"src":"1457:2:21"},"src":"1429:31:21"},{"errorSelector":"cdf06489","id":4587,"name":"NativeTokensWithdrawalFailed","nameLocation":"1474:28:21","nodeType":"ErrorDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[],"src":"1502:2:21"},"src":"1468:37:21"},{"errorSelector":"fb57d4ea","id":4589,"name":"CannotBeUnrealisticValue","nameLocation":"1519:24:21","nodeType":"ErrorDefinition","parameters":{"id":4588,"nodeType":"ParameterList","parameters":[],"src":"1543:2:21"},"src":"1513:33:21"},{"errorSelector":"172b03f3","id":4591,"name":"DEXRouterCannotBeZero","nameLocation":"1560:21:21","nodeType":"ErrorDefinition","parameters":{"id":4590,"nodeType":"ParameterList","parameters":[],"src":"1581:2:21"},"src":"1554:30:21"}],"scope":4593,"src":"61:1526:21","usedErrors":[4566,4569,4572,4575,4578,4581,4583,4585,4587,4589,4591],"usedEvents":[]}],"src":"33:1554:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"contracts/core/BasePaymaster.sol":{"BasePaymaster":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. Validates that the postOp is called only by the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xbd3189ba19234b7983c343fd70058e21de970feb4bc941c57f14820eb35878a8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d738449768414ab9d4d111113f4641bd0fbc833f9baf74d8ccebe43fe8d7bb\",\"dweb:/ipfs/QmSwpXHUerFzwJFyyLqyGGbzsLTwSimdcMKX5FKksNouEm\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/core/UserOperationLib.sol":{"UserOperationLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b294a995484b643593ffac36b72c900c330384c7c21a97859814bdbd7adca29464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP5 0xA9 SWAP6 BASEFEE 0x4B PUSH5 0x3593FFAC36 0xB7 0x2C SWAP1 0xC CALLER SUB DUP5 0xC7 0xC2 BYTE SWAP8 DUP6 SWAP9 EQ 0xBD 0xBD PUSH27 0xDCA29464736F6C6343000814003300000000000000000000000000 ","sourceMap":"282:2822:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b294a995484b643593ffac36b72c900c330384c7c21a97859814bdbd7adca29464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP5 0xA9 SWAP6 BASEFEE 0x4B PUSH5 0x3593FFAC36 0xB7 0x2C SWAP1 0xC CALLER SUB DUP5 0xC7 0xC2 BYTE SWAP8 DUP6 SWAP9 EQ 0xBD 0xBD PUSH27 0xDCA29464736F6C6343000814003300000000000000000000000000 ","sourceMap":"282:2822:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x341c6c70a05b8f2c7a093e909377c7c93874c0a36c70c55b765f386f1b0fcc01\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29ef1bdfa8a451ded8bb5910cfe8b416deb75574c305326670b19408bc5b3508\",\"dweb:/ipfs/QmcL4BCqJ75cKUQVv9iGRxToQamvYq8UqmfyrRAbAAXv22\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- Array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- Array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"Validate aggregated signature. Revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Validate signature of a single userOp. This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps, to identify the offending op. Should be caught in off-chain handleOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]}},\"version\":1}"}},"contracts/interfaces/IOracleAggregator.sol":{"IOracleAggregator":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getTokenValueOfOneNativeToken","outputs":[{"internalType":"uint256","name":"exchangeRate","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getTokenValueOfOneNativeToken(address)":"7f02a712"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenValueOfOneNativeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOracleAggregator.sol\":\"IOracleAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOracleAggregator.sol\":{\"keccak256\":\"0x35a4e8e25d4bff8f2b5efb60baa8af707570511be3c17fa8740a6f54f961280b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12423dd19d3e17b1a6a76fc6806aba32e072299b1448d0ad580d336820dc1357\",\"dweb:/ipfs/QmNaX5qumoM1VipT2mVukeQiH77C717WQSKShD5CsmT5ab\"]}},\"version\":1}"}},"contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]}},\"version\":1}"}},"contracts/token/OracleAggregator.sol":{"OracleAggregator":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"_newExchangeRate","type":"uint256"}],"name":"changeExchangeRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exchangeRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getTokenValueOfOneNativeToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3383":{"entryPoint":null,"id":3383,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550662386f26fc100006001819055506104998061006e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063215fce931461005c5780633ba0b9a9146100785780637f02a712146100965780638da5cb5b146100c6578063a6f9dae1146100e4575b600080fd5b610076600480360381019061007191906102da565b610100565b005b610080610198565b60405161008d9190610316565b60405180910390f35b6100b060048036038101906100ab919061038f565b61019e565b6040516100bd9190610316565b60405180910390f35b6100ce6101aa565b6040516100db91906103cb565b60405180910390f35b6100fe60048036038101906100f9919061038f565b6101ce565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018590610443565b60405180910390fd5b8060018190555050565b60015481565b60006001549050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025390610443565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b6000819050919050565b6102b7816102a4565b81146102c257600080fd5b50565b6000813590506102d4816102ae565b92915050565b6000602082840312156102f0576102ef61029f565b5b60006102fe848285016102c5565b91505092915050565b610310816102a4565b82525050565b600060208201905061032b6000830184610307565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035c82610331565b9050919050565b61036c81610351565b811461037757600080fd5b50565b60008135905061038981610363565b92915050565b6000602082840312156103a5576103a461029f565b5b60006103b38482850161037a565b91505092915050565b6103c581610351565b82525050565b60006020820190506103e060008301846103bc565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061042d6020836103e6565b9150610438826103f7565b602082019050919050565b6000602082019050818103600083015261045c81610420565b905091905056fea2646970667358221220d1f984f27f0f4389d7020bc3ff0862b3ec461c8988c363f9507fd9e43e3263a364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x2386F26FC10000 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x499 DUP1 PUSH2 0x6E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x215FCE93 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x7F02A712 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B7 DUP2 PUSH2 0x2A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D4 DUP2 PUSH2 0x2AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F0 JUMPI PUSH2 0x2EF PUSH2 0x29F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FE DUP5 DUP3 DUP6 ADD PUSH2 0x2C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x310 DUP2 PUSH2 0x2A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C DUP3 PUSH2 0x331 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36C DUP2 PUSH2 0x351 JUMP JUMPDEST DUP2 EQ PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x389 DUP2 PUSH2 0x363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x3A4 PUSH2 0x29F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP5 DUP3 DUP6 ADD PUSH2 0x37A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C5 DUP2 PUSH2 0x351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D PUSH1 0x20 DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x438 DUP3 PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45C DUP2 PUSH2 0x420 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xF9 DUP5 CALLCODE PUSH32 0xF4389D7020BC3FF0862B3EC461C8988C363F9507FD9E43E3263A364736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"61:708:19:-:0;;;153:159;;;;;;;;;;181:10;173:5;;:18;;;;;;;;;;;;;;;;;;273:4;258:12;:19;;;;61:708;;;;;;"},"deployedBytecode":{"functionDebugData":{"@changeExchangeRate_3419":{"entryPoint":256,"id":3419,"parameterSlots":1,"returnSlots":0},"@changeOwner_3407":{"entryPoint":462,"id":3407,"parameterSlots":1,"returnSlots":0},"@exchangeRate_3370":{"entryPoint":408,"id":3370,"parameterSlots":0,"returnSlots":0},"@getTokenValueOfOneNativeToken_3429":{"entryPoint":414,"id":3429,"parameterSlots":1,"returnSlots":1},"@owner_3368":{"entryPoint":426,"id":3368,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":890,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":709,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":911,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":956,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":1056,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":775,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1091,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":790,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":998,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":849,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":817,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":676,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":671,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":1015,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":867,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":686,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3728:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"379:32:22","statements":[{"nodeType":"YulAssignment","src":"389:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:22","type":""}],"src":"334:77:22"},{"body":{"nodeType":"YulBlock","src":"460:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:22"},"nodeType":"YulFunctionCall","src":"519:12:22"},"nodeType":"YulExpressionStatement","src":"519:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:22"},"nodeType":"YulFunctionCall","src":"490:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:22"},"nodeType":"YulFunctionCall","src":"480:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:22"},"nodeType":"YulFunctionCall","src":"473:43:22"},"nodeType":"YulIf","src":"470:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:22","type":""}],"src":"417:122:22"},{"body":{"nodeType":"YulBlock","src":"597:87:22","statements":[{"nodeType":"YulAssignment","src":"607:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:22"},"nodeType":"YulFunctionCall","src":"616:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:22"},"nodeType":"YulFunctionCall","src":"645:33:22"},"nodeType":"YulExpressionStatement","src":"645:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:22","type":""}],"src":"545:139:22"},{"body":{"nodeType":"YulBlock","src":"756:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:22"},"nodeType":"YulFunctionCall","src":"804:79:22"},"nodeType":"YulExpressionStatement","src":"804:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:22"},"nodeType":"YulFunctionCall","src":"773:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:22"},"nodeType":"YulFunctionCall","src":"769:32:22"},"nodeType":"YulIf","src":"766:119:22"},{"nodeType":"YulBlock","src":"895:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:22","type":""}]},{"nodeType":"YulAssignment","src":"939:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:22"},"nodeType":"YulFunctionCall","src":"970:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"949:20:22"},"nodeType":"YulFunctionCall","src":"949:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:22","type":""}],"src":"690:329:22"},{"body":{"nodeType":"YulBlock","src":"1090:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1107:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1130:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1112:17:22"},"nodeType":"YulFunctionCall","src":"1112:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1100:6:22"},"nodeType":"YulFunctionCall","src":"1100:37:22"},"nodeType":"YulExpressionStatement","src":"1100:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1078:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1085:3:22","type":""}],"src":"1025:118:22"},{"body":{"nodeType":"YulBlock","src":"1247:124:22","statements":[{"nodeType":"YulAssignment","src":"1257:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1269:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1280:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1265:3:22"},"nodeType":"YulFunctionCall","src":"1265:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1257:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1337:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1350:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1361:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1346:3:22"},"nodeType":"YulFunctionCall","src":"1346:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1293:43:22"},"nodeType":"YulFunctionCall","src":"1293:71:22"},"nodeType":"YulExpressionStatement","src":"1293:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1219:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1231:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1242:4:22","type":""}],"src":"1149:222:22"},{"body":{"nodeType":"YulBlock","src":"1422:81:22","statements":[{"nodeType":"YulAssignment","src":"1432:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1447:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1454:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1443:3:22"},"nodeType":"YulFunctionCall","src":"1443:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1432:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1404:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1414:7:22","type":""}],"src":"1377:126:22"},{"body":{"nodeType":"YulBlock","src":"1554:51:22","statements":[{"nodeType":"YulAssignment","src":"1564:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1593:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1575:17:22"},"nodeType":"YulFunctionCall","src":"1575:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1564:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1536:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1546:7:22","type":""}],"src":"1509:96:22"},{"body":{"nodeType":"YulBlock","src":"1654:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"1711:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1723:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1713:6:22"},"nodeType":"YulFunctionCall","src":"1713:12:22"},"nodeType":"YulExpressionStatement","src":"1713:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1677:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1702:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1684:17:22"},"nodeType":"YulFunctionCall","src":"1684:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1674:2:22"},"nodeType":"YulFunctionCall","src":"1674:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1667:6:22"},"nodeType":"YulFunctionCall","src":"1667:43:22"},"nodeType":"YulIf","src":"1664:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1647:5:22","type":""}],"src":"1611:122:22"},{"body":{"nodeType":"YulBlock","src":"1791:87:22","statements":[{"nodeType":"YulAssignment","src":"1801:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1823:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1810:12:22"},"nodeType":"YulFunctionCall","src":"1810:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1801:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1866:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1839:26:22"},"nodeType":"YulFunctionCall","src":"1839:33:22"},"nodeType":"YulExpressionStatement","src":"1839:33:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1777:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1785:5:22","type":""}],"src":"1739:139:22"},{"body":{"nodeType":"YulBlock","src":"1950:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"1996:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1998:77:22"},"nodeType":"YulFunctionCall","src":"1998:79:22"},"nodeType":"YulExpressionStatement","src":"1998:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1971:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1980:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1967:3:22"},"nodeType":"YulFunctionCall","src":"1967:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1992:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1963:3:22"},"nodeType":"YulFunctionCall","src":"1963:32:22"},"nodeType":"YulIf","src":"1960:119:22"},{"nodeType":"YulBlock","src":"2089:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2104:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2118:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2108:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2133:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2168:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2179:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:22"},"nodeType":"YulFunctionCall","src":"2164:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2188:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2143:20:22"},"nodeType":"YulFunctionCall","src":"2143:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2133:6:22"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1920:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1931:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1943:6:22","type":""}],"src":"1884:329:22"},{"body":{"nodeType":"YulBlock","src":"2284:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2301:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2324:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2306:17:22"},"nodeType":"YulFunctionCall","src":"2306:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2294:6:22"},"nodeType":"YulFunctionCall","src":"2294:37:22"},"nodeType":"YulExpressionStatement","src":"2294:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2272:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2279:3:22","type":""}],"src":"2219:118:22"},{"body":{"nodeType":"YulBlock","src":"2441:124:22","statements":[{"nodeType":"YulAssignment","src":"2451:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2474:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2459:3:22"},"nodeType":"YulFunctionCall","src":"2459:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2451:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2531:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2544:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2555:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2540:3:22"},"nodeType":"YulFunctionCall","src":"2540:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2487:43:22"},"nodeType":"YulFunctionCall","src":"2487:71:22"},"nodeType":"YulExpressionStatement","src":"2487:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2413:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2425:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2436:4:22","type":""}],"src":"2343:222:22"},{"body":{"nodeType":"YulBlock","src":"2667:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2684:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2689:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:22"},"nodeType":"YulFunctionCall","src":"2677:19:22"},"nodeType":"YulExpressionStatement","src":"2677:19:22"},{"nodeType":"YulAssignment","src":"2705:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2724:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2729:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2720:3:22"},"nodeType":"YulFunctionCall","src":"2720:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2705:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2639:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"2644:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2655:11:22","type":""}],"src":"2571:169:22"},{"body":{"nodeType":"YulBlock","src":"2852:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2874:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2882:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2870:3:22"},"nodeType":"YulFunctionCall","src":"2870:14:22"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2886:34:22","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2863:6:22"},"nodeType":"YulFunctionCall","src":"2863:58:22"},"nodeType":"YulExpressionStatement","src":"2863:58:22"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2844:6:22","type":""}],"src":"2746:182:22"},{"body":{"nodeType":"YulBlock","src":"3080:220:22","statements":[{"nodeType":"YulAssignment","src":"3090:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3156:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3161:2:22","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3097:58:22"},"nodeType":"YulFunctionCall","src":"3097:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3090:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3262:3:22"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"3173:88:22"},"nodeType":"YulFunctionCall","src":"3173:93:22"},"nodeType":"YulExpressionStatement","src":"3173:93:22"},{"nodeType":"YulAssignment","src":"3275:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3286:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3291:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3282:3:22"},"nodeType":"YulFunctionCall","src":"3282:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3275:3:22"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3068:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3076:3:22","type":""}],"src":"2934:366:22"},{"body":{"nodeType":"YulBlock","src":"3477:248:22","statements":[{"nodeType":"YulAssignment","src":"3487:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3499:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3510:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3495:3:22"},"nodeType":"YulFunctionCall","src":"3495:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3487:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3534:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3545:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:22"},"nodeType":"YulFunctionCall","src":"3530:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3553:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3559:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3549:3:22"},"nodeType":"YulFunctionCall","src":"3549:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:22"},"nodeType":"YulFunctionCall","src":"3523:47:22"},"nodeType":"YulExpressionStatement","src":"3523:47:22"},{"nodeType":"YulAssignment","src":"3579:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3713:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3587:124:22"},"nodeType":"YulFunctionCall","src":"3587:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3579:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3457:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3472:4:22","type":""}],"src":"3306:419:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c8063215fce931461005c5780633ba0b9a9146100785780637f02a712146100965780638da5cb5b146100c6578063a6f9dae1146100e4575b600080fd5b610076600480360381019061007191906102da565b610100565b005b610080610198565b60405161008d9190610316565b60405180910390f35b6100b060048036038101906100ab919061038f565b61019e565b6040516100bd9190610316565b60405180910390f35b6100ce6101aa565b6040516100db91906103cb565b60405180910390f35b6100fe60048036038101906100f9919061038f565b6101ce565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018590610443565b60405180910390fd5b8060018190555050565b60015481565b60006001549050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025390610443565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b6000819050919050565b6102b7816102a4565b81146102c257600080fd5b50565b6000813590506102d4816102ae565b92915050565b6000602082840312156102f0576102ef61029f565b5b60006102fe848285016102c5565b91505092915050565b610310816102a4565b82525050565b600060208201905061032b6000830184610307565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035c82610331565b9050919050565b61036c81610351565b811461037757600080fd5b50565b60008135905061038981610363565b92915050565b6000602082840312156103a5576103a461029f565b5b60006103b38482850161037a565b91505092915050565b6103c581610351565b82525050565b60006020820190506103e060008301846103bc565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061042d6020836103e6565b9150610438826103f7565b602082019050919050565b6000602082019050818103600083015261045c81610420565b905091905056fea2646970667358221220d1f984f27f0f4389d7020bc3ff0862b3ec461c8988c363f9507fd9e43e3263a364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x215FCE93 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x7F02A712 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253 SWAP1 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B7 DUP2 PUSH2 0x2A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D4 DUP2 PUSH2 0x2AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F0 JUMPI PUSH2 0x2EF PUSH2 0x29F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FE DUP5 DUP3 DUP6 ADD PUSH2 0x2C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x310 DUP2 PUSH2 0x2A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C DUP3 PUSH2 0x331 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36C DUP2 PUSH2 0x351 JUMP JUMPDEST DUP2 EQ PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x389 DUP2 PUSH2 0x363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x3A4 PUSH2 0x29F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP5 DUP3 DUP6 ADD PUSH2 0x37A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C5 DUP2 PUSH2 0x351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D PUSH1 0x20 DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x438 DUP3 PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45C DUP2 PUSH2 0x420 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xF9 DUP5 CALLCODE PUSH32 0xF4389D7020BC3FF0862B3EC461C8988C363F9507FD9E43E3263A364736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"61:708:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;121:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;655:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;96:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;429:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;530:118;367:5;;;;;;;;;;353:19;;:10;:19;;;345:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;624:16:::1;609:12;:31;;;;530:118:::0;:::o;121:24::-;;;;:::o;655:107::-;723:7;745:12;;738:19;;655:107;;;:::o;96:20::-;;;;;;;;;;;;:::o;429:93::-;367:5;;;;;;;;;;353:19;;:10;:19;;;345:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;505:9:::1;497:5;::::0;:17:::1;;;;;;;;;;;;;;;;;;429:93:::0;:::o;88:117:22:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:169::-;2655:11;2689:6;2684:3;2677:19;2729:4;2724:3;2720:14;2705:29;;2571:169;;;;:::o;2746:182::-;2886:34;2882:1;2874:6;2870:14;2863:58;2746:182;:::o;2934:366::-;3076:3;3097:67;3161:2;3156:3;3097:67;:::i;:::-;3090:74;;3173:93;3262:3;3173:93;:::i;:::-;3291:2;3286:3;3282:12;3275:19;;2934:366;;;:::o;3306:419::-;3472:4;3510:2;3499:9;3495:18;3487:26;;3559:9;3553:4;3549:20;3545:1;3534:9;3530:17;3523:47;3587:131;3713:4;3587:131;:::i;:::-;3579:139;;3306:419;;;:::o"},"methodIdentifiers":{"changeExchangeRate(uint256)":"215fce93","changeOwner(address)":"a6f9dae1","exchangeRate()":"3ba0b9a9","getTokenValueOfOneNativeToken(address)":"7f02a712","owner()":"8da5cb5b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newExchangeRate\",\"type\":\"uint256\"}],\"name\":\"changeExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getTokenValueOfOneNativeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/OracleAggregator.sol\":\"OracleAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/OracleAggregator.sol\":{\"keccak256\":\"0xc2252e72d5a60406e32f2231716e799e23344f3b6bdf4e45e03e03e804fa65a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49798e52829e03374fe352966a309a3e6d7c6b31f8a8037250cfcca9cc0c1fa\",\"dweb:/ipfs/Qmb1Voq2iy7sPEhb3ttTmB4faXsneATPXeXw755bBLnc2F\"]}},\"version\":1}"}},"contracts/utils/BiconomyTokenPaymaster.sol":{"BiconomyTokenPaymaster":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"},{"internalType":"address","name":"_verifyingSigner","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[],"name":"CanNotWithdrawToZeroAddress","type":"error"},{"inputs":[],"name":"CannotBeUnrealisticValue","type":"error"},{"inputs":[],"name":"DEXRouterCannotBeZero","type":"error"},{"inputs":[],"name":"DepositCanNotBeZero","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"EntryPointCannotBeZero","type":"error"},{"inputs":[],"name":"FeeReceiverCannotBeZero","type":"error"},{"inputs":[],"name":"NativeTokenBalanceZero","type":"error"},{"inputs":[],"name":"NativeTokensWithdrawalFailed","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"OwnerCannotBeZero","type":"error"},{"inputs":[],"name":"TokensAndAmountsLengthMismatch","type":"error"},{"inputs":[],"name":"VerifyingSignerCannotBeZero","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_oldOverheadCost","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_newOverheadCost","type":"uint256"},{"indexed":true,"internalType":"address","name":"_actor","type":"address"}],"name":"EPGasOverheadChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_oldfeeReceiver","type":"address"},{"indexed":true,"internalType":"address","name":"_newfeeReceiver","type":"address"},{"indexed":true,"internalType":"address","name":"_actor","type":"address"}],"name":"FeeReceiverChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Received","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"uint256","name":"totalCharge","type":"uint256"},{"indexed":false,"internalType":"address","name":"oracleAggregator","type":"address"},{"indexed":false,"internalType":"uint32","name":"priceMarkup","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"exchangeRate","type":"uint256"},{"indexed":false,"internalType":"enum BiconomyTokenPaymaster.ExchangeRateSource","name":"priceSource","type":"uint8"}],"name":"TokenPaymasterOperation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"uint256","name":"charge","type":"uint256"}],"name":"TokenPaymentDue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"_newSigner","type":"address"},{"indexed":true,"internalType":"address","name":"_actor","type":"address"}],"name":"VerifyingSignerChanged","type":"event"},{"inputs":[],"name":"UNACCOUNTED_COST","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeReceiver","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"enum BiconomyTokenPaymaster.ExchangeRateSource","name":"priceSource","type":"uint8"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"address","name":"oracleAggregator","type":"address"},{"internalType":"uint256","name":"exchangeRate","type":"uint256"},{"internalType":"uint32","name":"priceMarkup","type":"uint32"}],"name":"getHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"paymasterAndData","type":"bytes"}],"name":"parsePaymasterAndData","outputs":[{"components":[{"internalType":"enum BiconomyTokenPaymaster.ExchangeRateSource","name":"priceSource","type":"uint8"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"address","name":"oracleAggregator","type":"address"},{"internalType":"uint256","name":"exchangeRate","type":"uint256"},{"internalType":"uint32","name":"priceMarkup","type":"uint32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct BiconomyTokenPaymaster.PaymasterData","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newFeeReceiver","type":"address"}],"name":"setFeeReceiver","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newOverheadCost","type":"uint256"}],"name":"setUnaccountedEPGasOverhead","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_newVerifyingSigner","type":"address"}],"name":"setVerifyingSigner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"verifyingSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dest","type":"address"}],"name":"withdrawAllNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawERC20","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"target","type":"address"}],"name":"withdrawERC20Full","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"token","type":"address[]"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"}],"name":"withdrawMultipleERC20","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"token","type":"address[]"},{"internalType":"address","name":"target","type":"address"}],"name":"withdrawMultipleERC20Full","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawToCheck","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_2365":{"entryPoint":null,"id":2365,"parameterSlots":1,"returnSlots":0},"@_3619":{"entryPoint":null,"id":3619,"parameterSlots":3,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":563,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":842,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IEntryPoint_$3170_fromMemory":{"entryPoint":911,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_contract$_IEntryPoint_$3170t_address_fromMemory":{"entryPoint":934,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1026,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1043,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":796,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IEntryPoint_$3170":{"entryPoint":865,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":764,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":759,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":816,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IEntryPoint_$3170":{"entryPoint":885,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2382:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"379:81:22","statements":[{"nodeType":"YulAssignment","src":"389:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:22"},"nodeType":"YulFunctionCall","src":"400:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:22","type":""}],"src":"334:126:22"},{"body":{"nodeType":"YulBlock","src":"511:51:22","statements":[{"nodeType":"YulAssignment","src":"521:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:22"},"nodeType":"YulFunctionCall","src":"532:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:22","type":""}],"src":"466:96:22"},{"body":{"nodeType":"YulBlock","src":"611:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:22"},"nodeType":"YulFunctionCall","src":"670:12:22"},"nodeType":"YulExpressionStatement","src":"670:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:22"},"nodeType":"YulFunctionCall","src":"641:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:22"},"nodeType":"YulFunctionCall","src":"631:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:22"},"nodeType":"YulFunctionCall","src":"624:43:22"},"nodeType":"YulIf","src":"621:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:22","type":""}],"src":"568:122:22"},{"body":{"nodeType":"YulBlock","src":"759:80:22","statements":[{"nodeType":"YulAssignment","src":"769:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:22"},"nodeType":"YulFunctionCall","src":"778:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:22"},"nodeType":"YulFunctionCall","src":"800:33:22"},"nodeType":"YulExpressionStatement","src":"800:33:22"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:22","type":""}],"src":"696:143:22"},{"body":{"nodeType":"YulBlock","src":"910:51:22","statements":[{"nodeType":"YulAssignment","src":"920:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"949:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"931:17:22"},"nodeType":"YulFunctionCall","src":"931:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"920:7:22"}]}]},"name":"cleanup_t_contract$_IEntryPoint_$3170","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"892:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"902:7:22","type":""}],"src":"845:116:22"},{"body":{"nodeType":"YulBlock","src":"1030:99:22","statements":[{"body":{"nodeType":"YulBlock","src":"1107:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1116:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1119:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1109:6:22"},"nodeType":"YulFunctionCall","src":"1109:12:22"},"nodeType":"YulExpressionStatement","src":"1109:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1053:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1098:5:22"}],"functionName":{"name":"cleanup_t_contract$_IEntryPoint_$3170","nodeType":"YulIdentifier","src":"1060:37:22"},"nodeType":"YulFunctionCall","src":"1060:44:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1050:2:22"},"nodeType":"YulFunctionCall","src":"1050:55:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1043:6:22"},"nodeType":"YulFunctionCall","src":"1043:63:22"},"nodeType":"YulIf","src":"1040:83:22"}]},"name":"validator_revert_t_contract$_IEntryPoint_$3170","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1023:5:22","type":""}],"src":"967:162:22"},{"body":{"nodeType":"YulBlock","src":"1218:100:22","statements":[{"nodeType":"YulAssignment","src":"1228:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1243:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1237:5:22"},"nodeType":"YulFunctionCall","src":"1237:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1228:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1306:5:22"}],"functionName":{"name":"validator_revert_t_contract$_IEntryPoint_$3170","nodeType":"YulIdentifier","src":"1259:46:22"},"nodeType":"YulFunctionCall","src":"1259:53:22"},"nodeType":"YulExpressionStatement","src":"1259:53:22"}]},"name":"abi_decode_t_contract$_IEntryPoint_$3170_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1196:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1204:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1212:5:22","type":""}],"src":"1135:183:22"},{"body":{"nodeType":"YulBlock","src":"1455:572:22","statements":[{"body":{"nodeType":"YulBlock","src":"1501:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1503:77:22"},"nodeType":"YulFunctionCall","src":"1503:79:22"},"nodeType":"YulExpressionStatement","src":"1503:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1476:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1485:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1472:3:22"},"nodeType":"YulFunctionCall","src":"1472:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1497:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1468:3:22"},"nodeType":"YulFunctionCall","src":"1468:32:22"},"nodeType":"YulIf","src":"1465:119:22"},{"nodeType":"YulBlock","src":"1594:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1609:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1623:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1613:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1638:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1684:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1695:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1680:3:22"},"nodeType":"YulFunctionCall","src":"1680:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1704:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1648:31:22"},"nodeType":"YulFunctionCall","src":"1648:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1638:6:22"}]}]},{"nodeType":"YulBlock","src":"1732:149:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1747:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1761:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1751:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1777:94:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1843:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1854:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1839:3:22"},"nodeType":"YulFunctionCall","src":"1839:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1863:7:22"}],"functionName":{"name":"abi_decode_t_contract$_IEntryPoint_$3170_fromMemory","nodeType":"YulIdentifier","src":"1787:51:22"},"nodeType":"YulFunctionCall","src":"1787:84:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1777:6:22"}]}]},{"nodeType":"YulBlock","src":"1891:129:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1906:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1920:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1910:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1936:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1982:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1993:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1978:3:22"},"nodeType":"YulFunctionCall","src":"1978:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2002:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1946:31:22"},"nodeType":"YulFunctionCall","src":"1946:64:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1936:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_contract$_IEntryPoint_$3170t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1409:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1420:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1432:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1440:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1448:6:22","type":""}],"src":"1324:703:22"},{"body":{"nodeType":"YulBlock","src":"2098:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2115:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2138:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2120:17:22"},"nodeType":"YulFunctionCall","src":"2120:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2108:6:22"},"nodeType":"YulFunctionCall","src":"2108:37:22"},"nodeType":"YulExpressionStatement","src":"2108:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2086:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2093:3:22","type":""}],"src":"2033:118:22"},{"body":{"nodeType":"YulBlock","src":"2255:124:22","statements":[{"nodeType":"YulAssignment","src":"2265:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2277:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2288:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2273:3:22"},"nodeType":"YulFunctionCall","src":"2273:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2265:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2345:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2358:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2369:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2354:3:22"},"nodeType":"YulFunctionCall","src":"2354:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2301:43:22"},"nodeType":"YulFunctionCall","src":"2301:71:22"},"nodeType":"YulExpressionStatement","src":"2301:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2227:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2239:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2250:4:22","type":""}],"src":"2157:222:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$3170(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$3170(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$3170(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$3170_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$3170(value)\n    }\n\n    function abi_decode_tuple_t_addresst_contract$_IEntryPoint_$3170t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IEntryPoint_$3170_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405261afc8600155604051620040fd380380620040fd83398181016040528101906200002f9190620003a6565b8132600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000a65760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200009d919062000413565b60405180910390fd5b620000b7816200023360201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000154576040517f9b15e16f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001bb576040517f245d23e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000222576040517f8fc6a93100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806002553060035550505062000430565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200032982620002fc565b9050919050565b6200033b816200031c565b81146200034757600080fd5b50565b6000815190506200035b8162000330565b92915050565b60006200036e826200031c565b9050919050565b620003808162000361565b81146200038c57600080fd5b50565b600081519050620003a08162000375565b92915050565b600080600060608486031215620003c257620003c1620002f7565b5b6000620003d2868287016200034a565b9350506020620003e5868287016200038f565b9250506040620003f8868287016200034a565b9150509250925092565b6200040d816200031c565b82525050565b60006020820190506200042a600083018462000402565b92915050565b608051613c7962000484600039600081816105a40152818161063b0152818161077801528181610c6c01528181610cbe01528181610d4801528181610dd801528181610ece01526115e60152613c796000f3fe6080604052600436106101855760003560e01c8063b3f00674116100d1578063d0e30db01161008a578063efdcd97411610064578063efdcd974146104fb578063f2fde38b14610517578063f465c77e14610540578063f5cba98c1461057e576101da565b8063d0e30db0146104b9578063d9f66db1146104c3578063deeb3874146104df576101da565b8063b3f00674146103bb578063bb9fe6bf146103e6578063c23a5cea146103fd578063c399ec8814610426578063c6e7a95714610451578063d0db6f751461047c576101da565b8063617d057a1161013e5780638da5cb5b116101185780638da5cb5b146102ff57806394d4ad601461032a578063a9a2340914610367578063b0d691fe14610390576101da565b8063617d057a146102b0578063715018a6146102cc57806378b1da23146102e3576101da565b80630396cb60146101df578063205c2878146101fb57806323d9ac9b1461022457806344004cc11461024f57806345499d461461026b5780635deef2aa14610294576101da565b366101da573373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516101d09190612405565b60405180910390a2005b600080fd5b6101f960048036038101906101f49190612466565b61059a565b005b34801561020757600080fd5b50610222600480360381019061021d919061251d565b610631565b005b34801561023057600080fd5b506102396106ca565b604051610246919061257e565b60405180910390f35b61026960048036038101906102649190612603565b6106f0565b005b34801561027757600080fd5b50610292600480360381019061028d919061251d565b610708565b005b6102ae60048036038101906102a99190612656565b610807565b005b6102ca60048036038101906102c59190612751565b61089d565b005b3480156102d857600080fd5b506102e1610950565b005b6102fd60048036038101906102f891906127e6565b610964565b005b34801561030b57600080fd5b50610314610a63565b604051610321919061257e565b60405180910390f35b34801561033657600080fd5b50610351600480360381019061034c919061289c565b610a8c565b60405161035e9190612aee565b60405180910390f35b34801561037357600080fd5b5061038e60048036038101906103899190612b35565b610c50565b005b34801561039c57600080fd5b506103a5610c6a565b6040516103b29190612c08565b60405180910390f35b3480156103c757600080fd5b506103d0610c8e565b6040516103dd919061257e565b60405180910390f35b3480156103f257600080fd5b506103fb610cb4565b005b34801561040957600080fd5b50610424600480360381019061041f9190612c23565b610d3e565b005b34801561043257600080fd5b5061043b610dd4565b6040516104489190612405565b60405180910390f35b34801561045d57600080fd5b50610466610e75565b6040516104739190612405565b60405180910390f35b34801561048857600080fd5b506104a3600480360381019061049e9190612cc6565b610e7b565b6040516104b09190612db1565b60405180910390f35b6104c1610ecc565b005b6104dd60048036038101906104d89190612dcc565b610f5a565b005b6104f960048036038101906104f49190612df9565b611051565b005b61051560048036038101906105109190612dcc565b6110ea565b005b34801561052357600080fd5b5061053e60048036038101906105399190612dcc565b6111f8565b005b34801561054c57600080fd5b5061056760048036038101906105629190612e52565b61127e565b604051610575929190612f0b565b60405180910390f35b61059860048036038101906105939190612dcc565b6112a1565b005b6105a26113af565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016105fc9190612f4a565b6000604051808303818588803b15801561061557600080fd5b505af1158015610629573d6000803e3d6000fd5b505050505050565b6106396113af565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610694929190612f74565b600060405180830381600087803b1580156106ae57600080fd5b505af11580156106c2573d6000803e3d6000fd5b505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106f86113af565b610703838383611436565b505050565b6107106113af565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610776576040517f92bc9df300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016107d1929190612f74565b600060405180830381600087803b1580156107eb57600080fd5b505af11580156107ff573d6000803e3d6000fd5b505050505050565b61080f6113af565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161084a919061257e565b602060405180830381865afa158015610867573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088b9190612fb2565b9050610898838383611436565b505050565b6108a56113af565b8181905085859050146108e4576040517f0906708600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b858590508110156109485761093d86868381811061090857610907612fdf565b5b905060200201602081019061091d919061300e565b8585858581811061093157610930612fdf565b5b90506020020135611436565b8060010190506108e7565b505050505050565b6109586113af565b6109626000611520565b565b61096c6113af565b60005b83839050811015610a5d57600084848381811061098f5761098e612fdf565b5b90506020020160208101906109a4919061300e565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109dc919061257e565b602060405180830381865afa1580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d9190612fb2565b9050610a51858584818110610a3557610a34612fdf565b5b9050602002016020810190610a4a919061300e565b8483611436565b8160010191505061096f565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a94612353565b60d5838390501015610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad2906130be565b60405180910390fd5b6000838360016015610aed919061310d565b90601592610afd9392919061314b565b90610b0891906131ca565b60f81c60ff166001811115610b2057610b1f6128e9565b5b9050600080600080600080898960159060d592610b3f9392919061314b565b810190610b4c9190613229565b95509550955095509550955060008a8a60d5908092610b6d9392919061314b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050604051806101000160405280896001811115610bd157610bd06128e9565b5b81526020018865ffffffffffff1681526020018765ffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018363ffffffff168152602001828152509850505050505050505092915050565b610c586115e4565b610c6484848484611674565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cbc6113af565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d2457600080fd5b505af1158015610d38573d6000803e3d6000fd5b50505050565b610d466113af565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b8152600401610d9f91906132b6565b600060405180830381600087803b158015610db957600080fd5b505af1158015610dcd573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e2f919061257e565b602060405180830381865afa158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e709190612fb2565b905090565b60015481565b6000610e8689611a94565b46308a8a8a8a8a8a8a604051602001610ea89a999897969594939291906132ef565b60405160208183030381529060405280519060200120905098975050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610f26919061257e565b6000604051808303818588803b158015610f3f57600080fd5b505af1158015610f53573d6000803e3d6000fd5b5050505050565b610f626113af565b600047905060008103610fa1576040517fd17e42bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611007576040517f92bc9df300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600080600085875af190508061104c576040517fcdf0648900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6110596113af565b62030d40811115611096576040517ffb57d4ea00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001549050816001553373ffffffffffffffffffffffffffffffffffffffff1682827f303a4cca6d7dba1a29764b1c0aabac67516608dd37f88e064abc64c24b9c274360405160405180910390a45050565b6110f26113af565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611158576040517fc9dd43d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816003553373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fff179728e4df4b0421c7de2106b1968d0604e1670493f8da3f907f2d020bb6d560405160405180910390a45050565b6112006113af565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112725760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611269919061257e565b60405180910390fd5b61127b81611520565b50565b6060600061128a6115e4565b611295858585611b3e565b91509150935093915050565b6112a96113af565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361130f576040517f8fc6a93100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816002553373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fe1f62c0e6d7bb6d470828565415bf2e87dbfea50e52d2d753788b529bd0c6d6260405160405180910390a45050565b6113b7611f36565b73ffffffffffffffffffffffffffffffffffffffff166113d5610a63565b73ffffffffffffffffffffffffffffffffffffffff1614611434576113f8611f36565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161142b919061257e565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361149c576040517f92bc9df300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016114d7929190613392565b6020604051808303816000875af11580156114f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a91906133f3565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611672576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116699061346c565b60405180910390fd5b565b6000806000806000806000898981019061168e919061348c565b965096509650965096509650965060008390506001808111156116b4576116b36128e9565b5b8560018111156116c7576116c66128e9565b5b148015611714575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614155b801561174d5750600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614155b1561176e57600061175e8888611f3e565b90506000811461176c578091505b505b600080670de0b6b3a7640000833a600154611789919061352e565b8d6117949190613570565b61179e919061352e565b6117a891906135d3565b9050620f424063ffffffff168563ffffffff16826117c6919061352e565b6117d091906135d3565b9150506002808111156117e6576117e56128e9565b5b8d60028111156117f9576117f86128e9565b5b14611914578773ffffffffffffffffffffffffffffffffffffffff166323b872dd8a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b815260040161185d93929190613604565b6020604051808303816000875af115801561187c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a091906133f3565b50808873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f7c405b9cef9e824a5cf31a09e7b8810d01d9db34ee384388f33b438608807e1a8a8888888d60405161190795949392919061363b565b60405180910390a4611a85565b60006323b872dd60e01b8a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405160240161195593929190613604565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008973ffffffffffffffffffffffffffffffffffffffff16826040516119db91906136ca565b6000604051808303816000865af19150503d8060008114611a18576040519150601f19603f3d011682016040523d82523d6000602084013e611a1d565b606091505b5050905080611a8257828b73ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f41614445ea2ab6d87c504bdfc83cb5cb840e7219aa772383baff1ab0dd2a311360405160405180910390a45b50505b50505050505050505050505050565b60606000611aa183611fcb565b9050808360200135848060400190611ab991906136f0565b604051611ac7929190613787565b6040518091039020858060600190611adf91906136f0565b604051611aed929190613787565b604051809103902086608001358760a001358860c001358960e001358a6101000135604051602001611b27999897969594939291906137a0565b604051602081830303815290604052915050919050565b606060006001548560a0013511611b8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8190613879565b60405180910390fd5b6000611ba586806101200190611ba091906136f0565b610a8c565b905060418160e001515114611bef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be69061390b565b60405180910390fd5b6000611c1d87836000015184602001518560400151866060015187608001518860a001518960c00151610e7b565b9050604051806020016040528060008152509350611c508260e00151611c4283611fdb565b61201190919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611cc45783611cb960018460200151856040015161203d565b935093505050611f2e565b6000670de0b6b3a76400008360a00151611cdd8a612076565b611ce7919061352e565b611cf191906135d3565b905060008103611d36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2d9061399d565b60405180910390fd5b621e84808360c0015163ffffffff161115611d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7d90613a2f565b60405180910390fd5b620f42408360c0015163ffffffff161015611dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dcd90613ac1565b60405180910390fd5b620f424063ffffffff168360c0015163ffffffff1682611df6919061352e565b611e0091906135d3565b836060015173ffffffffffffffffffffffffffffffffffffffff166370a08231611e298b611fcb565b6040518263ffffffff1660e01b8152600401611e45919061257e565b602060405180830381865afa158015611e62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e869190612fb2565b1015611ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ebe90613b53565b60405180910390fd5b611ed088611fcb565b8360600151846080015185600001518660a001518760c001518c604051602001611f009796959493929190613b73565b604051602081830303815290604052945084611f2660008560200151866040015161203d565b945094505050505b935093915050565b600033905090565b60008173ffffffffffffffffffffffffffffffffffffffff16637f02a712846040518263ffffffff1660e01b8152600401611f79919061257e565b602060405180830381865afa925050508015611fb357506040513d601f19601f82011682018060405250810190611fb09190612fb2565b60015b611fc05760009050611fc5565b809150505b92915050565b6000808235905080915050919050565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080612021868661209f565b92509250925061203182826120fb565b82935050505092915050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85612065576000612068565b60015b60ff16171790509392505050565b6000806001548360c001358460a00135856080013501010190508260e001358102915050919050565b600080600060418451036120e45760008060006020870151925060408701519150606087015160001a90506120d68882858561225f565b9550955095505050506120f4565b60006002855160001b9250925092505b9250925092565b6000600381111561210f5761210e6128e9565b5b826003811115612122576121216128e9565b5b031561225b576001600381111561213c5761213b6128e9565b5b82600381111561214f5761214e6128e9565b5b03612186576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561219a576121996128e9565b5b8260038111156121ad576121ac6128e9565b5b036121f2578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016121e99190612405565b60405180910390fd5b600380811115612205576122046128e9565b5b826003811115612218576122176128e9565b5b0361225a57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016122519190612db1565b60405180910390fd5b5b5050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561229f576000600385925092509250612349565b6000600188888888604051600081526020016040526040516122c49493929190613bfe565b6020604051602081039080840390855afa1580156122e6573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361233a57600060016000801b93509350935050612349565b8060008060001b935093509350505b9450945094915050565b60405180610100016040528060006001811115612373576123726128e9565b5b8152602001600065ffffffffffff168152602001600065ffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600063ffffffff168152602001606081525090565b6000819050919050565b6123ff816123ec565b82525050565b600060208201905061241a60008301846123f6565b92915050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6124438161242a565b811461244e57600080fd5b50565b6000813590506124608161243a565b92915050565b60006020828403121561247c5761247b612420565b5b600061248a84828501612451565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124be82612493565b9050919050565b6124ce816124b3565b81146124d957600080fd5b50565b6000813590506124eb816124c5565b92915050565b6124fa816123ec565b811461250557600080fd5b50565b600081359050612517816124f1565b92915050565b6000806040838503121561253457612533612420565b5b6000612542858286016124dc565b925050602061255385828601612508565b9150509250929050565b600061256882612493565b9050919050565b6125788161255d565b82525050565b6000602082019050612593600083018461256f565b92915050565b60006125a48261255d565b9050919050565b6125b481612599565b81146125bf57600080fd5b50565b6000813590506125d1816125ab565b92915050565b6125e08161255d565b81146125eb57600080fd5b50565b6000813590506125fd816125d7565b92915050565b60008060006060848603121561261c5761261b612420565b5b600061262a868287016125c2565b935050602061263b868287016125ee565b925050604061264c86828701612508565b9150509250925092565b6000806040838503121561266d5761266c612420565b5b600061267b858286016125c2565b925050602061268c858286016125ee565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f8401126126bb576126ba612696565b5b8235905067ffffffffffffffff8111156126d8576126d761269b565b5b6020830191508360208202830111156126f4576126f36126a0565b5b9250929050565b60008083601f84011261271157612710612696565b5b8235905067ffffffffffffffff81111561272e5761272d61269b565b5b60208301915083602082028301111561274a576127496126a0565b5b9250929050565b60008060008060006060868803121561276d5761276c612420565b5b600086013567ffffffffffffffff81111561278b5761278a612425565b5b612797888289016126a5565b955095505060206127aa888289016125ee565b935050604086013567ffffffffffffffff8111156127cb576127ca612425565b5b6127d7888289016126fb565b92509250509295509295909350565b6000806000604084860312156127ff576127fe612420565b5b600084013567ffffffffffffffff81111561281d5761281c612425565b5b612829868287016126a5565b9350935050602061283c868287016125ee565b9150509250925092565b60008083601f84011261285c5761285b612696565b5b8235905067ffffffffffffffff8111156128795761287861269b565b5b602083019150836001820283011115612895576128946126a0565b5b9250929050565b600080602083850312156128b3576128b2612420565b5b600083013567ffffffffffffffff8111156128d1576128d0612425565b5b6128dd85828601612846565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110612929576129286128e9565b5b50565b600081905061293a82612918565b919050565b600061294a8261292c565b9050919050565b61295a8161293f565b82525050565b600065ffffffffffff82169050919050565b61297b81612960565b82525050565b61298a8161255d565b82525050565b612999816123ec565b82525050565b6129a88161242a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156129e85780820151818401526020810190506129cd565b60008484015250505050565b6000601f19601f8301169050919050565b6000612a10826129ae565b612a1a81856129b9565b9350612a2a8185602086016129ca565b612a33816129f4565b840191505092915050565b600061010083016000830151612a576000860182612951565b506020830151612a6a6020860182612972565b506040830151612a7d6040860182612972565b506060830151612a906060860182612981565b506080830151612aa36080860182612981565b5060a0830151612ab660a0860182612990565b5060c0830151612ac960c086018261299f565b5060e083015184820360e0860152612ae18282612a05565b9150508091505092915050565b60006020820190508181036000830152612b088184612a3e565b905092915050565b60038110612b1d57600080fd5b50565b600081359050612b2f81612b10565b92915050565b60008060008060608587031215612b4f57612b4e612420565b5b6000612b5d87828801612b20565b945050602085013567ffffffffffffffff811115612b7e57612b7d612425565b5b612b8a87828801612846565b93509350506040612b9d87828801612508565b91505092959194509250565b6000819050919050565b6000612bce612bc9612bc484612493565b612ba9565b612493565b9050919050565b6000612be082612bb3565b9050919050565b6000612bf282612bd5565b9050919050565b612c0281612be7565b82525050565b6000602082019050612c1d6000830184612bf9565b92915050565b600060208284031215612c3957612c38612420565b5b6000612c47848285016124dc565b91505092915050565b600080fd5b60006101608284031215612c6c57612c6b612c50565b5b81905092915050565b60028110612c8257600080fd5b50565b600081359050612c9481612c75565b92915050565b612ca381612960565b8114612cae57600080fd5b50565b600081359050612cc081612c9a565b92915050565b600080600080600080600080610100898b031215612ce757612ce6612420565b5b600089013567ffffffffffffffff811115612d0557612d04612425565b5b612d118b828c01612c55565b9850506020612d228b828c01612c85565b9750506040612d338b828c01612cb1565b9650506060612d448b828c01612cb1565b9550506080612d558b828c016125ee565b94505060a0612d668b828c016125ee565b93505060c0612d778b828c01612508565b92505060e0612d888b828c01612451565b9150509295985092959890939650565b6000819050919050565b612dab81612d98565b82525050565b6000602082019050612dc66000830184612da2565b92915050565b600060208284031215612de257612de1612420565b5b6000612df0848285016125ee565b91505092915050565b600060208284031215612e0f57612e0e612420565b5b6000612e1d84828501612508565b91505092915050565b612e2f81612d98565b8114612e3a57600080fd5b50565b600081359050612e4c81612e26565b92915050565b600080600060608486031215612e6b57612e6a612420565b5b600084013567ffffffffffffffff811115612e8957612e88612425565b5b612e9586828701612c55565b9350506020612ea686828701612e3d565b9250506040612eb786828701612508565b9150509250925092565b600082825260208201905092915050565b6000612edd826129ae565b612ee78185612ec1565b9350612ef78185602086016129ca565b612f00816129f4565b840191505092915050565b60006040820190508181036000830152612f258185612ed2565b9050612f3460208301846123f6565b9392505050565b612f448161242a565b82525050565b6000602082019050612f5f6000830184612f3b565b92915050565b612f6e816124b3565b82525050565b6000604082019050612f896000830185612f65565b612f9660208301846123f6565b9392505050565b600081519050612fac816124f1565b92915050565b600060208284031215612fc857612fc7612420565b5b6000612fd684828501612f9d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561302457613023612420565b5b6000613032848285016125c2565b91505092915050565b600082825260208201905092915050565b7f4254504d3a20496e76616c6964206c656e67746820666f72207061796d61737460008201527f6572416e64446174610000000000000000000000000000000000000000000000602082015250565b60006130a860298361303b565b91506130b38261304c565b604082019050919050565b600060208201905081810360008301526130d78161309b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613118826123ec565b9150613123836123ec565b925082820390508181111561313b5761313a6130de565b5b92915050565b600080fd5b600080fd5b6000808585111561315f5761315e613141565b5b838611156131705761316f613146565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b600082821b905092915050565b60006131d68383613186565b826131e18135613191565b925060018210156132215761321c7fff00000000000000000000000000000000000000000000000000000000000000836001036008026131bd565b831692505b505092915050565b60008060008060008060c0878903121561324657613245612420565b5b600061325489828a01612cb1565b965050602061326589828a01612cb1565b955050604061327689828a016124dc565b945050606061328789828a016124dc565b935050608061329889828a01612508565b92505060a06132a989828a01612451565b9150509295509295509295565b60006020820190506132cb6000830184612f65565b92915050565b6132da8161293f565b82525050565b6132e981612960565b82525050565b600061014082019050818103600083015261330a818d612ed2565b9050613319602083018c6123f6565b613326604083018b61256f565b613333606083018a6132d1565b61334060808301896132e0565b61334d60a08301886132e0565b61335a60c083018761256f565b61336760e083018661256f565b6133756101008301856123f6565b613383610120830184612f3b565b9b9a5050505050505050505050565b60006040820190506133a7600083018561256f565b6133b460208301846123f6565b9392505050565b60008115159050919050565b6133d0816133bb565b81146133db57600080fd5b50565b6000815190506133ed816133c7565b92915050565b60006020828403121561340957613408612420565b5b6000613417848285016133de565b91505092915050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b600061345660158361303b565b915061346182613420565b602082019050919050565b6000602082019050818103600083015261348581613449565b9050919050565b600080600080600080600060e0888a0312156134ab576134aa612420565b5b60006134b98a828b016124dc565b97505060206134ca8a828b016125c2565b96505060406134db8a828b016124dc565b95505060606134ec8a828b01612c85565b94505060806134fd8a828b01612508565b93505060a061350e8a828b01612451565b92505060c061351f8a828b01612e3d565b91505092959891949750929550565b6000613539826123ec565b9150613544836123ec565b9250828202613552816123ec565b91508282048414831517613569576135686130de565b5b5092915050565b600061357b826123ec565b9150613586836123ec565b925082820190508082111561359e5761359d6130de565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006135de826123ec565b91506135e9836123ec565b9250826135f9576135f86135a4565b5b828204905092915050565b6000606082019050613619600083018661256f565b613626602083018561256f565b61363360408301846123f6565b949350505050565b600060a082019050613650600083018861256f565b61365d6020830187612f3b565b61366a6040830186612da2565b61367760608301856123f6565b61368460808301846132d1565b9695505050505050565b600081905092915050565b60006136a4826129ae565b6136ae818561368e565b93506136be8185602086016129ca565b80840191505092915050565b60006136d68284613699565b915081905092915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261370d5761370c6136e1565b5b80840192508235915067ffffffffffffffff82111561372f5761372e6136e6565b5b60208301925060018202360383131561374b5761374a6136eb565b5b509250929050565b82818337600083830152505050565b600061376e838561368e565b935061377b838584613753565b82840190509392505050565b6000613794828486613762565b91508190509392505050565b6000610120820190506137b6600083018c61256f565b6137c3602083018b6123f6565b6137d0604083018a612da2565b6137dd6060830189612da2565b6137ea60808301886123f6565b6137f760a08301876123f6565b61380460c08301866123f6565b61381160e08301856123f6565b61381f6101008301846123f6565b9a9950505050505050505050565b7f4254504d3a2067617320746f6f206c6f7720666f7220706f73744f7000000000600082015250565b6000613863601c8361303b565b915061386e8261382d565b602082019050919050565b6000602082019050818103600083015261389281613856565b9050919050565b7f4254504d3a20696e76616c6964207369676e6174757265206c656e677468206960008201527f6e207061796d6173746572416e64446174610000000000000000000000000000602082015250565b60006138f560328361303b565b915061390082613899565b604082019050919050565b60006020820190508181036000830152613924816138e8565b9050919050565b7f4254504d3a2063616c63756c6174656420746f6b656e2063686172676520696e60008201527f76616c6964000000000000000000000000000000000000000000000000000000602082015250565b600061398760258361303b565b91506139928261392b565b604082019050919050565b600060208201905081810360008301526139b68161397a565b9050919050565b7f4254504d3a207072696365206d61726b75702070657263656e7461676520746f60008201527f6f20686967680000000000000000000000000000000000000000000000000000602082015250565b6000613a1960268361303b565b9150613a24826139bd565b604082019050919050565b60006020820190508181036000830152613a4881613a0c565b9050919050565b7f4254504d3a207072696365206d61726b75702070657263656e7461676520746f60008201527f6f206c6f77000000000000000000000000000000000000000000000000000000602082015250565b6000613aab60258361303b565b9150613ab682613a4f565b604082019050919050565b60006020820190508181036000830152613ada81613a9e565b9050919050565b7f4254504d3a206163636f756e7420646f6573206e6f74206861766520656e6f7560008201527f676820746f6b656e2062616c616e636500000000000000000000000000000000602082015250565b6000613b3d60308361303b565b9150613b4882613ae1565b604082019050919050565b60006020820190508181036000830152613b6c81613b30565b9050919050565b600060e082019050613b88600083018a61256f565b613b95602083018961256f565b613ba2604083018861256f565b613baf60608301876132d1565b613bbc60808301866123f6565b613bc960a0830185612f3b565b613bd660c0830184612da2565b98975050505050505050565b600060ff82169050919050565b613bf881613be2565b82525050565b6000608082019050613c136000830187612da2565b613c206020830186613bef565b613c2d6040830185612da2565b613c3a6060830184612da2565b9594505050505056fea2646970667358221220f7e23fe169906b6c1f004e69486176a7ee2f9758f992452bf4ace0d72459df4c64736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH2 0xAFC8 PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH3 0x40FD CODESIZE SUB DUP1 PUSH3 0x40FD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x2F SWAP2 SWAP1 PUSH3 0x3A6 JUMP JUMPDEST DUP2 ORIGIN PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xA6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9D SWAP2 SWAP1 PUSH3 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xB7 DUP2 PUSH3 0x233 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9B15E16F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x245D23E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x222 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8FC6A93100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SSTORE ADDRESS PUSH1 0x3 SSTORE POP POP POP PUSH3 0x430 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x329 DUP3 PUSH3 0x2FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x33B DUP2 PUSH3 0x31C JUMP JUMPDEST DUP2 EQ PUSH3 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x35B DUP2 PUSH3 0x330 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x36E DUP3 PUSH3 0x31C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x380 DUP2 PUSH3 0x361 JUMP JUMPDEST DUP2 EQ PUSH3 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3A0 DUP2 PUSH3 0x375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3C2 JUMPI PUSH3 0x3C1 PUSH3 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3D2 DUP7 DUP3 DUP8 ADD PUSH3 0x34A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x3E5 DUP7 DUP3 DUP8 ADD PUSH3 0x38F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x3F8 DUP7 DUP3 DUP8 ADD PUSH3 0x34A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x40D DUP2 PUSH3 0x31C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x42A PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3C79 PUSH3 0x484 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x5A4 ADD MSTORE DUP2 DUP2 PUSH2 0x63B ADD MSTORE DUP2 DUP2 PUSH2 0x778 ADD MSTORE DUP2 DUP2 PUSH2 0xC6C ADD MSTORE DUP2 DUP2 PUSH2 0xCBE ADD MSTORE DUP2 DUP2 PUSH2 0xD48 ADD MSTORE DUP2 DUP2 PUSH2 0xDD8 ADD MSTORE DUP2 DUP2 PUSH2 0xECE ADD MSTORE PUSH2 0x15E6 ADD MSTORE PUSH2 0x3C79 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB3F00674 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xEFDCD974 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEFDCD974 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0xF5CBA98C EQ PUSH2 0x57E JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xD9F66DB1 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xDEEB3874 EQ PUSH2 0x4DF JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xC6E7A957 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xD0DB6F75 EQ PUSH2 0x47C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x617D057A GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x94D4AD60 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x390 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x617D057A EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x78B1DA23 EQ PUSH2 0x2E3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x23D9AC9B EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x44004CC1 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x45499D46 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x5DEEF2AA EQ PUSH2 0x294 JUMPI PUSH2 0x1DA JUMP JUMPDEST CALLDATASIZE PUSH2 0x1DA JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x239 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x2656 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2751 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x950 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x27E6 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH2 0xCB4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x2C23 JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x2CC6 JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x2DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH2 0xECC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x2DF9 JUMP JUMPDEST PUSH2 0x1051 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0x10EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0x11F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x2E52 JUMP JUMPDEST PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP3 SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x598 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A2 PUSH2 0x13AF JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x629 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x639 PUSH2 0x13AF JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x694 SWAP3 SWAP2 SWAP1 PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6F8 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x703 DUP4 DUP4 DUP4 PUSH2 0x1436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x710 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x92BC9DF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP3 SWAP2 SWAP1 PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x80F PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84A SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x867 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88B SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST SWAP1 POP PUSH2 0x898 DUP4 DUP4 DUP4 PUSH2 0x1436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8A5 PUSH2 0x13AF JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x906708600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x948 JUMPI PUSH2 0x93D DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x2FDF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x91D SWAP2 SWAP1 PUSH2 0x300E JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x931 JUMPI PUSH2 0x930 PUSH2 0x2FDF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1436 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x8E7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x958 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x962 PUSH1 0x0 PUSH2 0x1520 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x96C PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xA5D JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x98F JUMPI PUSH2 0x98E PUSH2 0x2FDF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x300E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST SWAP1 POP PUSH2 0xA51 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA35 JUMPI PUSH2 0xA34 PUSH2 0x2FDF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x300E JUMP JUMPDEST DUP5 DUP4 PUSH2 0x1436 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x96F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA94 PUSH2 0x2353 JUMP JUMPDEST PUSH1 0xD5 DUP4 DUP4 SWAP1 POP LT ISZERO PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP1 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH1 0x15 PUSH2 0xAED SWAP2 SWAP1 PUSH2 0x310D JUMP JUMPDEST SWAP1 PUSH1 0x15 SWAP3 PUSH2 0xAFD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x314B JUMP JUMPDEST SWAP1 PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x31CA JUMP JUMPDEST PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB20 JUMPI PUSH2 0xB1F PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 DUP10 PUSH1 0x15 SWAP1 PUSH1 0xD5 SWAP3 PUSH2 0xB3F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x314B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x3229 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP PUSH1 0x0 DUP11 DUP11 PUSH1 0xD5 SWAP1 DUP1 SWAP3 PUSH2 0xB6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x314B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBD1 JUMPI PUSH2 0xBD0 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC58 PUSH2 0x15E4 JUMP JUMPDEST PUSH2 0xC64 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1674 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCBC PUSH2 0x13AF JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD46 PUSH2 0x13AF JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0x32B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2F SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE70 SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE86 DUP10 PUSH2 0x1A94 JUMP JUMPDEST CHAINID ADDRESS DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEA8 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF62 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xFA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD17E42BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1007 JUMPI PUSH1 0x40 MLOAD PUSH32 0x92BC9DF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 GAS CALL SWAP1 POP DUP1 PUSH2 0x104C JUMPI PUSH1 0x40 MLOAD PUSH32 0xCDF0648900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1059 PUSH2 0x13AF JUMP JUMPDEST PUSH3 0x30D40 DUP2 GT ISZERO PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB57D4EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP DUP2 PUSH1 0x1 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 PUSH32 0x303A4CCA6D7DBA1A29764B1C0AABAC67516608DD37F88E064ABC64C24B9C2743 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1158 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC9DD43D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFF179728E4DF4B0421C7DE2106B1968D0604E1670493F8DA3F907F2D020BB6D5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1200 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1272 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1269 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x127B DUP2 PUSH2 0x1520 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x128A PUSH2 0x15E4 JUMP JUMPDEST PUSH2 0x1295 DUP6 DUP6 DUP6 PUSH2 0x1B3E JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12A9 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8FC6A93100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x2 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1F62C0E6D7BB6D470828565415BF2E87DBFEA50E52D2D753788B529BD0C6D62 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x13B7 PUSH2 0x1F36 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D5 PUSH2 0xA63 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1434 JUMPI PUSH2 0x13F8 PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x149C JUMPI PUSH1 0x40 MLOAD PUSH32 0x92BC9DF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D7 SWAP3 SWAP2 SWAP1 PUSH2 0x3392 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151A SWAP2 SWAP1 PUSH2 0x33F3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1672 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1669 SWAP1 PUSH2 0x346C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP10 DUP10 DUP2 ADD SWAP1 PUSH2 0x168E SWAP2 SWAP1 PUSH2 0x348C JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16C7 JUMPI PUSH2 0x16C6 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x1714 JUMPI POP PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x174D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x176E JUMPI PUSH1 0x0 PUSH2 0x175E DUP9 DUP9 PUSH2 0x1F3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x176C JUMPI DUP1 SWAP2 POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 GASPRICE PUSH1 0x1 SLOAD PUSH2 0x1789 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST DUP14 PUSH2 0x1794 SWAP2 SWAP1 PUSH2 0x3570 JUMP JUMPDEST PUSH2 0x179E SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH2 0x17A8 SWAP2 SWAP1 PUSH2 0x35D3 JUMP JUMPDEST SWAP1 POP PUSH3 0xF4240 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND DUP3 PUSH2 0x17C6 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH2 0x17D0 SWAP2 SWAP1 PUSH2 0x35D3 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x17E5 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP14 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17F9 JUMPI PUSH2 0x17F8 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1914 JUMPI DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP11 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3604 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x187C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A0 SWAP2 SWAP1 PUSH2 0x33F3 JUMP JUMPDEST POP DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7C405B9CEF9E824A5CF31A09E7B8810D01D9DB34EE384388F33B438608807E1A DUP11 DUP9 DUP9 DUP9 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1907 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x363B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A85 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP11 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1955 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x19DB SWAP2 SWAP1 PUSH2 0x36CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A18 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A82 JUMPI DUP3 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x41614445EA2AB6D87C504BDFC83CB5CB840E7219AA772383BAFF1AB0DD2A3113 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1AA1 DUP4 PUSH2 0x1FCB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD CALLDATALOAD DUP5 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x1AB9 SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC7 SWAP3 SWAP2 SWAP1 PUSH2 0x3787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP1 PUSH1 0x60 ADD SWAP1 PUSH2 0x1ADF SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AED SWAP3 SWAP2 SWAP1 PUSH2 0x3787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP7 PUSH1 0x80 ADD CALLDATALOAD DUP8 PUSH1 0xA0 ADD CALLDATALOAD DUP9 PUSH1 0xC0 ADD CALLDATALOAD DUP10 PUSH1 0xE0 ADD CALLDATALOAD DUP11 PUSH2 0x100 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B27 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 SLOAD DUP6 PUSH1 0xA0 ADD CALLDATALOAD GT PUSH2 0x1B8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B81 SWAP1 PUSH2 0x3879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 DUP7 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x1BA0 SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP PUSH1 0x41 DUP2 PUSH1 0xE0 ADD MLOAD MLOAD EQ PUSH2 0x1BEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE6 SWAP1 PUSH2 0x390B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C1D DUP8 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP4 POP PUSH2 0x1C50 DUP3 PUSH1 0xE0 ADD MLOAD PUSH2 0x1C42 DUP4 PUSH2 0x1FDB JUMP JUMPDEST PUSH2 0x2011 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CC4 JUMPI DUP4 PUSH2 0x1CB9 PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x203D JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0xA0 ADD MLOAD PUSH2 0x1CDD DUP11 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x1CE7 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH2 0x1CF1 SWAP2 SWAP1 PUSH2 0x35D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x1D36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2D SWAP1 PUSH2 0x399D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1E8480 DUP4 PUSH1 0xC0 ADD MLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1D86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7D SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF4240 DUP4 PUSH1 0xC0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1DD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DCD SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF4240 PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0xC0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP3 PUSH2 0x1DF6 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH2 0x1E00 SWAP2 SWAP1 PUSH2 0x35D3 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x1E29 DUP12 PUSH2 0x1FCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E45 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E86 SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST LT ISZERO PUSH2 0x1EC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EBE SWAP1 PUSH2 0x3B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1ED0 DUP9 PUSH2 0x1FCB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0xC0 ADD MLOAD DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F00 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP DUP5 PUSH2 0x1F26 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x203D JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7F02A712 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F79 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1FB3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FB0 SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1FC0 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1FC5 JUMP JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 CALLDATALOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2021 DUP7 DUP7 PUSH2 0x209F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2031 DUP3 DUP3 PUSH2 0x20FB JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD0 DUP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL PUSH1 0xA0 DUP5 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL DUP6 PUSH2 0x2065 JUMPI PUSH1 0x0 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND OR OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP4 PUSH1 0xC0 ADD CALLDATALOAD DUP5 PUSH1 0xA0 ADD CALLDATALOAD DUP6 PUSH1 0x80 ADD CALLDATALOAD ADD ADD ADD SWAP1 POP DUP3 PUSH1 0xE0 ADD CALLDATALOAD DUP2 MUL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x20E4 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x20D6 DUP9 DUP3 DUP6 DUP6 PUSH2 0x225F JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x210F JUMPI PUSH2 0x210E PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2122 JUMPI PUSH2 0x2121 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x225B JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x213C JUMPI PUSH2 0x213B PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x214F JUMPI PUSH2 0x214E PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2186 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x219A JUMPI PUSH2 0x2199 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21AD JUMPI PUSH2 0x21AC PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x21F2 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2205 JUMPI PUSH2 0x2204 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x225A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2251 SWAP2 SWAP1 PUSH2 0x2DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x229F JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x22C4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x233A JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x2349 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2373 JUMPI PUSH2 0x2372 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23FF DUP2 PUSH2 0x23EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x241A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2443 DUP2 PUSH2 0x242A JUMP JUMPDEST DUP2 EQ PUSH2 0x244E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2460 DUP2 PUSH2 0x243A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x247C JUMPI PUSH2 0x247B PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x248A DUP5 DUP3 DUP6 ADD PUSH2 0x2451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BE DUP3 PUSH2 0x2493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24CE DUP2 PUSH2 0x24B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x24D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24EB DUP2 PUSH2 0x24C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24FA DUP2 PUSH2 0x23EC JUMP JUMPDEST DUP2 EQ PUSH2 0x2505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2517 DUP2 PUSH2 0x24F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2534 JUMPI PUSH2 0x2533 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2542 DUP6 DUP3 DUP7 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2553 DUP6 DUP3 DUP7 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2568 DUP3 PUSH2 0x2493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2578 DUP2 PUSH2 0x255D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2593 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A4 DUP3 PUSH2 0x255D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25B4 DUP2 PUSH2 0x2599 JUMP JUMPDEST DUP2 EQ PUSH2 0x25BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25D1 DUP2 PUSH2 0x25AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25E0 DUP2 PUSH2 0x255D JUMP JUMPDEST DUP2 EQ PUSH2 0x25EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25FD DUP2 PUSH2 0x25D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x261C JUMPI PUSH2 0x261B PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x262A DUP7 DUP3 DUP8 ADD PUSH2 0x25C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x263B DUP7 DUP3 DUP8 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x264C DUP7 DUP3 DUP8 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x266D JUMPI PUSH2 0x266C PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x267B DUP6 DUP3 DUP7 ADD PUSH2 0x25C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x268C DUP6 DUP3 DUP7 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x26BB JUMPI PUSH2 0x26BA PUSH2 0x2696 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26D8 JUMPI PUSH2 0x26D7 PUSH2 0x269B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x26F4 JUMPI PUSH2 0x26F3 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2711 JUMPI PUSH2 0x2710 PUSH2 0x2696 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x272E JUMPI PUSH2 0x272D PUSH2 0x269B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x274A JUMPI PUSH2 0x2749 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x276D JUMPI PUSH2 0x276C PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x278B JUMPI PUSH2 0x278A PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x2797 DUP9 DUP3 DUP10 ADD PUSH2 0x26A5 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x27AA DUP9 DUP3 DUP10 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27CB JUMPI PUSH2 0x27CA PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x27D7 DUP9 DUP3 DUP10 ADD PUSH2 0x26FB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27FF JUMPI PUSH2 0x27FE PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x281D JUMPI PUSH2 0x281C PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x2829 DUP7 DUP3 DUP8 ADD PUSH2 0x26A5 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x283C DUP7 DUP3 DUP8 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x285C JUMPI PUSH2 0x285B PUSH2 0x2696 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2879 JUMPI PUSH2 0x2878 PUSH2 0x269B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2895 JUMPI PUSH2 0x2894 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28B3 JUMPI PUSH2 0x28B2 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28D1 JUMPI PUSH2 0x28D0 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x28DD DUP6 DUP3 DUP7 ADD PUSH2 0x2846 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2929 JUMPI PUSH2 0x2928 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x293A DUP3 PUSH2 0x2918 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294A DUP3 PUSH2 0x292C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x295A DUP2 PUSH2 0x293F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x297B DUP2 PUSH2 0x2960 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x298A DUP2 PUSH2 0x255D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2999 DUP2 PUSH2 0x23EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29A8 DUP2 PUSH2 0x242A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29CD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A10 DUP3 PUSH2 0x29AE JUMP JUMPDEST PUSH2 0x2A1A DUP2 DUP6 PUSH2 0x29B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A2A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST PUSH2 0x2A33 DUP2 PUSH2 0x29F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2A57 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2951 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2A6A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2972 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2A7D PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2972 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2A90 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2981 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2AA3 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2981 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x2AB6 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x2990 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x2AC9 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x299F JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x2AE1 DUP3 DUP3 PUSH2 0x2A05 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B08 DUP2 DUP5 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2B1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B2F DUP2 PUSH2 0x2B10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2B4F JUMPI PUSH2 0x2B4E PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B5D DUP8 DUP3 DUP9 ADD PUSH2 0x2B20 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B7E JUMPI PUSH2 0x2B7D PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x2B8A DUP8 DUP3 DUP9 ADD PUSH2 0x2846 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x2B9D DUP8 DUP3 DUP9 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCE PUSH2 0x2BC9 PUSH2 0x2BC4 DUP5 PUSH2 0x2493 JUMP JUMPDEST PUSH2 0x2BA9 JUMP JUMPDEST PUSH2 0x2493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE0 DUP3 PUSH2 0x2BB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF2 DUP3 PUSH2 0x2BD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C02 DUP2 PUSH2 0x2BE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C1D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C39 JUMPI PUSH2 0x2C38 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C47 DUP5 DUP3 DUP6 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C6C JUMPI PUSH2 0x2C6B PUSH2 0x2C50 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C94 DUP2 PUSH2 0x2C75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CA3 DUP2 PUSH2 0x2960 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CC0 DUP2 PUSH2 0x2C9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2CE7 JUMPI PUSH2 0x2CE6 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D05 JUMPI PUSH2 0x2D04 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x2D11 DUP12 DUP3 DUP13 ADD PUSH2 0x2C55 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x2D22 DUP12 DUP3 DUP13 ADD PUSH2 0x2C85 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x2D33 DUP12 DUP3 DUP13 ADD PUSH2 0x2CB1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x2D44 DUP12 DUP3 DUP13 ADD PUSH2 0x2CB1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x2D55 DUP12 DUP3 DUP13 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x2D66 DUP12 DUP3 DUP13 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x2D77 DUP12 DUP3 DUP13 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x2D88 DUP12 DUP3 DUP13 ADD PUSH2 0x2451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DAB DUP2 PUSH2 0x2D98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DC6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE2 JUMPI PUSH2 0x2DE1 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DF0 DUP5 DUP3 DUP6 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E0F JUMPI PUSH2 0x2E0E PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E1D DUP5 DUP3 DUP6 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E2F DUP2 PUSH2 0x2D98 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E4C DUP2 PUSH2 0x2E26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E6B JUMPI PUSH2 0x2E6A PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E89 JUMPI PUSH2 0x2E88 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x2E95 DUP7 DUP3 DUP8 ADD PUSH2 0x2C55 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2EA6 DUP7 DUP3 DUP8 ADD PUSH2 0x2E3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2EB7 DUP7 DUP3 DUP8 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDD DUP3 PUSH2 0x29AE JUMP JUMPDEST PUSH2 0x2EE7 DUP2 DUP6 PUSH2 0x2EC1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2EF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST PUSH2 0x2F00 DUP2 PUSH2 0x29F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F25 DUP2 DUP6 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2F44 DUP2 PUSH2 0x242A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F6E DUP2 PUSH2 0x24B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F89 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F65 JUMP JUMPDEST PUSH2 0x2F96 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FAC DUP2 PUSH2 0x24F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FC8 JUMPI PUSH2 0x2FC7 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FD6 DUP5 DUP3 DUP6 ADD PUSH2 0x2F9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3024 JUMPI PUSH2 0x3023 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3032 DUP5 DUP3 DUP6 ADD PUSH2 0x25C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4254504D3A20496E76616C6964206C656E67746820666F72207061796D617374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572416E64446174610000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A8 PUSH1 0x29 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x30B3 DUP3 PUSH2 0x304C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30D7 DUP2 PUSH2 0x309B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3118 DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x3123 DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x313B JUMPI PUSH2 0x313A PUSH2 0x30DE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x315F JUMPI PUSH2 0x315E PUSH2 0x3141 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x3170 JUMPI PUSH2 0x316F PUSH2 0x3146 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D6 DUP4 DUP4 PUSH2 0x3186 JUMP JUMPDEST DUP3 PUSH2 0x31E1 DUP2 CALLDATALOAD PUSH2 0x3191 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP3 LT ISZERO PUSH2 0x3221 JUMPI PUSH2 0x321C PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x1 SUB PUSH1 0x8 MUL PUSH2 0x31BD JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3246 JUMPI PUSH2 0x3245 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3254 DUP10 DUP3 DUP11 ADD PUSH2 0x2CB1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3265 DUP10 DUP3 DUP11 ADD PUSH2 0x2CB1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3276 DUP10 DUP3 DUP11 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3287 DUP10 DUP3 DUP11 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3298 DUP10 DUP3 DUP11 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x32A9 DUP10 DUP3 DUP11 ADD PUSH2 0x2451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32DA DUP2 PUSH2 0x293F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x32E9 DUP2 PUSH2 0x2960 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x330A DUP2 DUP14 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP PUSH2 0x3319 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3326 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3333 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x32D1 JUMP JUMPDEST PUSH2 0x3340 PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x334D PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x335A PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3367 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3375 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3383 PUSH2 0x120 DUP4 ADD DUP5 PUSH2 0x2F3B JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x33B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33D0 DUP2 PUSH2 0x33BB JUMP JUMPDEST DUP2 EQ PUSH2 0x33DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x33ED DUP2 PUSH2 0x33C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3409 JUMPI PUSH2 0x3408 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3417 DUP5 DUP3 DUP6 ADD PUSH2 0x33DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3456 PUSH1 0x15 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3461 DUP3 PUSH2 0x3420 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3485 DUP2 PUSH2 0x3449 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x34AB JUMPI PUSH2 0x34AA PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34B9 DUP11 DUP3 DUP12 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x34CA DUP11 DUP3 DUP12 ADD PUSH2 0x25C2 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x34DB DUP11 DUP3 DUP12 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x34EC DUP11 DUP3 DUP12 ADD PUSH2 0x2C85 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x34FD DUP11 DUP3 DUP12 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x350E DUP11 DUP3 DUP12 ADD PUSH2 0x2451 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x351F DUP11 DUP3 DUP12 ADD PUSH2 0x2E3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3539 DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x3544 DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3552 DUP2 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3569 JUMPI PUSH2 0x3568 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357B DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x3586 DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x359E JUMPI PUSH2 0x359D PUSH2 0x30DE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35DE DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x35E9 DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x35F9 JUMPI PUSH2 0x35F8 PUSH2 0x35A4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3619 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3626 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3633 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3650 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x365D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2F3B JUMP JUMPDEST PUSH2 0x366A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2DA2 JUMP JUMPDEST PUSH2 0x3677 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3684 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x32D1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A4 DUP3 PUSH2 0x29AE JUMP JUMPDEST PUSH2 0x36AE DUP2 DUP6 PUSH2 0x368E JUMP JUMPDEST SWAP4 POP PUSH2 0x36BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D6 DUP3 DUP5 PUSH2 0x3699 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x370D JUMPI PUSH2 0x370C PUSH2 0x36E1 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x372F JUMPI PUSH2 0x372E PUSH2 0x36E6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x374B JUMPI PUSH2 0x374A PUSH2 0x36EB JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x376E DUP4 DUP6 PUSH2 0x368E JUMP JUMPDEST SWAP4 POP PUSH2 0x377B DUP4 DUP6 DUP5 PUSH2 0x3753 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3794 DUP3 DUP5 DUP7 PUSH2 0x3762 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x37B6 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x37C3 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x37D0 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2DA2 JUMP JUMPDEST PUSH2 0x37DD PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2DA2 JUMP JUMPDEST PUSH2 0x37EA PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x37F7 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3804 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3811 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x381F PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4254504D3A2067617320746F6F206C6F7720666F7220706F73744F7000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3863 PUSH1 0x1C DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x386E DUP3 PUSH2 0x382D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3892 DUP2 PUSH2 0x3856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4254504D3A20696E76616C6964207369676E6174757265206C656E6774682069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E207061796D6173746572416E64446174610000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F5 PUSH1 0x32 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3900 DUP3 PUSH2 0x3899 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3924 DUP2 PUSH2 0x38E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4254504D3A2063616C63756C6174656420746F6B656E2063686172676520696E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x76616C6964000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3987 PUSH1 0x25 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3992 DUP3 PUSH2 0x392B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39B6 DUP2 PUSH2 0x397A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4254504D3A207072696365206D61726B75702070657263656E7461676520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F20686967680000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A19 PUSH1 0x26 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3A24 DUP3 PUSH2 0x39BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A48 DUP2 PUSH2 0x3A0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4254504D3A207072696365206D61726B75702070657263656E7461676520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F206C6F77000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AAB PUSH1 0x25 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB6 DUP3 PUSH2 0x3A4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ADA DUP2 PUSH2 0x3A9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4254504D3A206163636F756E7420646F6573206E6F74206861766520656E6F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x676820746F6B656E2062616C616E636500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3D PUSH1 0x30 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3B48 DUP3 PUSH2 0x3AE1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B6C DUP2 PUSH2 0x3B30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x3B88 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3B95 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3BA2 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3BAF PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x32D1 JUMP JUMPDEST PUSH2 0x3BBC PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3BC9 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2F3B JUMP JUMPDEST PUSH2 0x3BD6 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x2DA2 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BF8 DUP2 PUSH2 0x3BE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C13 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2DA2 JUMP JUMPDEST PUSH2 0x3C20 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x3C2D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2DA2 JUMP JUMPDEST PUSH2 0x3C3A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2DA2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xE2 EXTCODEHASH 0xE1 PUSH10 0x906B6C1F004E69486176 0xA7 0xEE 0x2F SWAP8 PC 0xF9 SWAP3 GASLIMIT 0x2B DELEGATECALL 0xAC 0xE0 0xD7 0x24 MSIZE 0xDF 0x4C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1962:22762:20:-:0;;;3523:5;3489:39;;6233:600;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6368:11;579:9:9;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;614:11:9::1;601:24;;;;;;;;::::0;::::1;534:99:::0;6414:1:20::1;6396:20;;:6;:20;;::::0;6392:52:::1;;6425:19;;;;;;;;;;;;;;6392:52;6491:1;6459:34;;6467:11;6459:34;;::::0;6455:71:::1;;6502:24;;;;;;;;;;;;;;6455:71;6569:1;6541:30;;:16;:30;;::::0;6537:85:::1;;6593:29;;;;;;;;;;;;;;6537:85;6702:16;6680:20;6673:46;6758:9;6740:16;6733:35;6233:600:::0;;;1962:22762;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:22:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:116::-;902:7;931:24;949:5;931:24;:::i;:::-;920:35;;845:116;;;:::o;967:162::-;1060:44;1098:5;1060:44;:::i;:::-;1053:5;1050:55;1040:83;;1119:1;1116;1109:12;1040:83;967:162;:::o;1135:183::-;1212:5;1243:6;1237:13;1228:22;;1259:53;1306:5;1259:53;:::i;:::-;1135:183;;;;:::o;1324:703::-;1432:6;1440;1448;1497:2;1485:9;1476:7;1472:23;1468:32;1465:119;;;1503:79;;:::i;:::-;1465:119;1623:1;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1594:128;1761:2;1787:84;1863:7;1854:6;1843:9;1839:22;1787:84;:::i;:::-;1777:94;;1732:149;1920:2;1946:64;2002:7;1993:6;1982:9;1978:22;1946:64;:::i;:::-;1936:74;;1891:129;1324:703;;;;;:::o;2033:118::-;2120:24;2138:5;2120:24;:::i;:::-;2115:3;2108:37;2033:118;;:::o;2157:222::-;2250:4;2288:2;2277:9;2273:18;2265:26;;2301:71;2369:1;2358:9;2354:17;2345:6;2301:71;:::i;:::-;2157:222;;;;:::o;1962:22762:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UNACCOUNTED_COST_3496":{"entryPoint":3701,"id":3496,"parameterSlots":0,"returnSlots":0},"@_4560":{"entryPoint":null,"id":4560,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":5039,"id":84,"parameterSlots":0,"returnSlots":0},"@_getRequiredPrefund_4154":{"entryPoint":8310,"id":4154,"parameterSlots":1,"returnSlots":1},"@_msgSender_490":{"entryPoint":7990,"id":490,"parameterSlots":0,"returnSlots":1},"@_packValidationData_2792":{"entryPoint":8253,"id":2792,"parameterSlots":3,"returnSlots":1},"@_postOp_4520":{"entryPoint":5748,"id":4520,"parameterSlots":4,"returnSlots":0},"@_requireFromEntryPoint_2560":{"entryPoint":5604,"id":2560,"parameterSlots":0,"returnSlots":0},"@_throwError_1102":{"entryPoint":8443,"id":1102,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5408,"id":146,"parameterSlots":1,"returnSlots":0},"@_validatePaymasterUserOp_4336":{"entryPoint":6974,"id":4336,"parameterSlots":3,"returnSlots":2},"@_withdrawERC20_4549":{"entryPoint":5174,"id":4549,"parameterSlots":3,"returnSlots":0},"@addStake_2502":{"entryPoint":1434,"id":2502,"parameterSlots":1,"returnSlots":0},"@deposit_2466":{"entryPoint":3788,"id":2466,"parameterSlots":0,"returnSlots":0},"@entryPoint_2350":{"entryPoint":3178,"id":2350,"parameterSlots":0,"returnSlots":0},"@exchangePrice_3766":{"entryPoint":7998,"id":3766,"parameterSlots":2,"returnSlots":1},"@feeReceiver_3500":{"entryPoint":3214,"id":3500,"parameterSlots":0,"returnSlots":0},"@getDeposit_2517":{"entryPoint":3540,"id":2517,"parameterSlots":0,"returnSlots":1},"@getHash_3999":{"entryPoint":3707,"id":3999,"parameterSlots":8,"returnSlots":1},"@getPartialHash_4039":{"entryPoint":6804,"id":4039,"parameterSlots":1,"returnSlots":1},"@getSender_2830":{"entryPoint":8139,"id":2830,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":2659,"id":67,"parameterSlots":0,"returnSlots":1},"@parsePaymasterAndData_4124":{"entryPoint":2700,"id":4124,"parameterSlots":2,"returnSlots":1},"@postOp_2428":{"entryPoint":3152,"id":2428,"parameterSlots":4,"returnSlots":0},"@recover_859":{"entryPoint":8209,"id":859,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2384,"id":98,"parameterSlots":0,"returnSlots":0},"@setFeeReceiver_3681":{"entryPoint":4330,"id":3681,"parameterSlots":1,"returnSlots":0},"@setUnaccountedEPGasOverhead_3709":{"entryPoint":4177,"id":3709,"parameterSlots":1,"returnSlots":0},"@setVerifyingSigner_3650":{"entryPoint":4769,"id":3650,"parameterSlots":1,"returnSlots":0},"@toEthSignedMessageHash_1118":{"entryPoint":8155,"id":1118,"parameterSlots":1,"returnSlots":1},"@transferOwnership_126":{"entryPoint":4600,"id":126,"parameterSlots":1,"returnSlots":0},"@tryRecover_1017":{"entryPoint":8799,"id":1017,"parameterSlots":4,"returnSlots":3},"@tryRecover_829":{"entryPoint":8351,"id":829,"parameterSlots":2,"returnSlots":3},"@unlockStake_2529":{"entryPoint":3252,"id":2529,"parameterSlots":0,"returnSlots":0},"@validatePaymasterUserOp_2391":{"entryPoint":4734,"id":2391,"parameterSlots":3,"returnSlots":2},"@verifyingSigner_3498":{"entryPoint":1738,"id":3498,"parameterSlots":0,"returnSlots":0},"@withdrawAllNative_3952":{"entryPoint":3930,"id":3952,"parameterSlots":1,"returnSlots":0},"@withdrawERC20Full_3814":{"entryPoint":2055,"id":3814,"parameterSlots":2,"returnSlots":0},"@withdrawERC20_3786":{"entryPoint":1776,"id":3786,"parameterSlots":3,"returnSlots":0},"@withdrawMultipleERC20Full_3908":{"entryPoint":2404,"id":3908,"parameterSlots":3,"returnSlots":0},"@withdrawMultipleERC20_3862":{"entryPoint":2205,"id":3862,"parameterSlots":5,"returnSlots":0},"@withdrawStake_2544":{"entryPoint":3390,"id":2544,"parameterSlots":1,"returnSlots":0},"@withdrawToCheck_3737":{"entryPoint":1800,"id":3737,"parameterSlots":2,"returnSlots":0},"@withdrawTo_2484":{"entryPoint":1585,"id":2484,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":9710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":9436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr":{"entryPoint":9893,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":9979,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool_fromMemory":{"entryPoint":13278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":11837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":10310,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_contract$_IERC20_$225":{"entryPoint":9666,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_ExchangeRateSource_$3489":{"entryPoint":11397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_PostOpMode_$3207":{"entryPoint":11040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_UserOperation_$3364_calldata_ptr":{"entryPoint":11349,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":12189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":9297,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint48":{"entryPoint":11441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":11299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_contract$_IERC20_$225t_address_payablet_enum$_ExchangeRateSource_$3489t_uint256t_uint32t_bytes32":{"entryPoint":13452,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":9501,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptrt_address":{"entryPoint":10214,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptrt_addresst_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":10065,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":13299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":10396,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_IERC20_$225":{"entryPoint":12302,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$225t_address":{"entryPoint":9814,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_IERC20_$225t_addresst_uint256":{"entryPoint":9731,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_enum$_PostOpMode_$3207t_bytes_calldata_ptrt_uint256":{"entryPoint":11061,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_struct$_UserOperation_$3364_calldata_ptrt_bytes32t_uint256":{"entryPoint":11858,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_UserOperation_$3364_calldata_ptrt_enum$_ExchangeRateSource_$3489t_uint48t_uint48t_addresst_addresst_uint256t_uint32":{"entryPoint":11462,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint256":{"entryPoint":11769,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":12210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":9318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint48t_uint48t_address_payablet_address_payablet_uint256t_uint32":{"entryPoint":12841,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":12133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address":{"entryPoint":10625,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9583,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":11682,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14178,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":10757,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11986,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IEntryPoint_$3170_to_t_address_fromStack":{"entryPoint":11257,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8":{"entryPoint":10577,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8_fromStack":{"entryPoint":13009,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack":{"entryPoint":13385,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c_to_t_string_memory_ptr_fromStack":{"entryPoint":14714,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3_to_t_string_memory_ptr_fromStack":{"entryPoint":12443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd_to_t_string_memory_ptr_fromStack":{"entryPoint":14422,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928_to_t_string_memory_ptr_fromStack":{"entryPoint":14860,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada_to_t_string_memory_ptr_fromStack":{"entryPoint":15152,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3_to_t_string_memory_ptr_fromStack":{"entryPoint":15006,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e_to_t_string_memory_ptr_fromStack":{"entryPoint":14568,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_PaymasterData_$3485_memory_ptr_to_t_struct$_PaymasterData_$3485_memory_ptr_fromStack":{"entryPoint":10814,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10640,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9206,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":10655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":12091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48":{"entryPoint":10610,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":13024,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":15343,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14215,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14026,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":12982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":12148,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_enum$_ExchangeRateSource_$3489_t_uint256_t_uint32_t_bytes32__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint32_t_bytes32__fromStack_reversed":{"entryPoint":15219,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":13828,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":13202,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14240,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_address_t_uint32_t_bytes32_t_uint256_t_enum$_ExchangeRateSource_$3489__to_t_address_t_uint32_t_bytes32_t_uint256_t_uint8__fromStack_reversed":{"entryPoint":13883,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":11697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":15358,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":12043,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256_t_address_t_enum$_ExchangeRateSource_$3489_t_uint48_t_uint48_t_address_t_address_t_uint256_t_uint32__to_t_bytes_memory_ptr_t_uint256_t_address_t_uint8_t_uint48_t_uint48_t_address_t_address_t_uint256_t_uint32__fromStack_reversed":{"entryPoint":13039,"id":null,"parameterSlots":11,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$3170__to_t_address__fromStack_reversed":{"entryPoint":11272,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12478,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14457,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14895,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15187,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15041,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_PaymasterData_$3485_memory_ptr__to_t_struct$_PaymasterData_$3485_memory_ptr__fromStack_reversed":{"entryPoint":10990,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":12106,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":14064,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_calldata_ptr":{"entryPoint":12678,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":10670,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":10681,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11969,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13966,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12347,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":12619,"id":null,"parameterSlots":4,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":13680,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":13779,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":13614,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12557,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9565,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":9395,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":13243,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":12689,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11672,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$225":{"entryPoint":9625,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_ExchangeRateSource_$3489":{"entryPoint":10540,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9363,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9196,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":9258,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":10592,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":15330,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes1":{"entryPoint":12746,"id":null,"parameterSlots":2,"returnSlots":1},"convert_t_contract$_IEntryPoint_$3170_to_t_address":{"entryPoint":11239,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_ExchangeRateSource_$3489_to_t_uint8":{"entryPoint":10559,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":11221,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":11187,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":14163,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":10698,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":11177,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":12510,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13732,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":10473,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12255,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":9883,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9878,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":14054,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":11344,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":14049,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":12614,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":12609,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":9888,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":14059,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9253,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9248,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10740,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":12733,"id":null,"parameterSlots":2,"returnSlots":1},"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9":{"entryPoint":13344,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c":{"entryPoint":14635,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3":{"entryPoint":12364,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd":{"entryPoint":14381,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928":{"entryPoint":14781,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada":{"entryPoint":15073,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3":{"entryPoint":14927,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e":{"entryPoint":14489,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_ExchangeRateSource_$3489":{"entryPoint":10520,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9687,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":9413,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13255,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":11814,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$225":{"entryPoint":9643,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_ExchangeRateSource_$3489":{"entryPoint":11381,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_PostOpMode_$3207":{"entryPoint":11024,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9457,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":9274,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint48":{"entryPoint":11418,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:47883:22","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:22","statements":[{"nodeType":"YulAssignment","src":"62:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:22","type":""}],"src":"7:77:22"},{"body":{"nodeType":"YulBlock","src":"155:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:22"},"nodeType":"YulFunctionCall","src":"177:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:22"},"nodeType":"YulFunctionCall","src":"165:37:22"},"nodeType":"YulExpressionStatement","src":"165:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:22","type":""}],"src":"90:118:22"},{"body":{"nodeType":"YulBlock","src":"312:124:22","statements":[{"nodeType":"YulAssignment","src":"322:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:22"},"nodeType":"YulFunctionCall","src":"330:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:22"},"nodeType":"YulFunctionCall","src":"411:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:22"},"nodeType":"YulFunctionCall","src":"358:71:22"},"nodeType":"YulExpressionStatement","src":"358:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:22","type":""}],"src":"214:222:22"},{"body":{"nodeType":"YulBlock","src":"482:35:22","statements":[{"nodeType":"YulAssignment","src":"492:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:22"},"nodeType":"YulFunctionCall","src":"502:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:22","type":""}],"src":"442:75:22"},{"body":{"nodeType":"YulBlock","src":"612:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:22"},"nodeType":"YulFunctionCall","src":"622:12:22"},"nodeType":"YulExpressionStatement","src":"622:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:22"},{"body":{"nodeType":"YulBlock","src":"735:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:22"},"nodeType":"YulFunctionCall","src":"745:12:22"},"nodeType":"YulExpressionStatement","src":"745:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:22"},{"body":{"nodeType":"YulBlock","src":"813:49:22","statements":[{"nodeType":"YulAssignment","src":"823:33:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"838:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"845:10:22","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"834:3:22"},"nodeType":"YulFunctionCall","src":"834:22:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"823:7:22"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"795:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"805:7:22","type":""}],"src":"769:93:22"},{"body":{"nodeType":"YulBlock","src":"910:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"966:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"975:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"978:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"968:6:22"},"nodeType":"YulFunctionCall","src":"968:12:22"},"nodeType":"YulExpressionStatement","src":"968:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"933:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"957:5:22"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"940:16:22"},"nodeType":"YulFunctionCall","src":"940:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"930:2:22"},"nodeType":"YulFunctionCall","src":"930:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"923:6:22"},"nodeType":"YulFunctionCall","src":"923:42:22"},"nodeType":"YulIf","src":"920:62:22"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"903:5:22","type":""}],"src":"868:120:22"},{"body":{"nodeType":"YulBlock","src":"1045:86:22","statements":[{"nodeType":"YulAssignment","src":"1055:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1077:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1064:12:22"},"nodeType":"YulFunctionCall","src":"1064:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1055:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1119:5:22"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1093:25:22"},"nodeType":"YulFunctionCall","src":"1093:32:22"},"nodeType":"YulExpressionStatement","src":"1093:32:22"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1023:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1031:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1039:5:22","type":""}],"src":"994:137:22"},{"body":{"nodeType":"YulBlock","src":"1202:262:22","statements":[{"body":{"nodeType":"YulBlock","src":"1248:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1250:77:22"},"nodeType":"YulFunctionCall","src":"1250:79:22"},"nodeType":"YulExpressionStatement","src":"1250:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1223:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1232:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1219:3:22"},"nodeType":"YulFunctionCall","src":"1219:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1244:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1215:3:22"},"nodeType":"YulFunctionCall","src":"1215:32:22"},"nodeType":"YulIf","src":"1212:119:22"},{"nodeType":"YulBlock","src":"1341:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1356:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1370:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1360:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1385:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1419:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1430:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1415:3:22"},"nodeType":"YulFunctionCall","src":"1415:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:22"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1395:19:22"},"nodeType":"YulFunctionCall","src":"1395:52:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1385:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1172:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1183:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1195:6:22","type":""}],"src":"1137:327:22"},{"body":{"nodeType":"YulBlock","src":"1515:81:22","statements":[{"nodeType":"YulAssignment","src":"1525:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1540:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1547:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:22"},"nodeType":"YulFunctionCall","src":"1536:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1525:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1497:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1507:7:22","type":""}],"src":"1470:126:22"},{"body":{"nodeType":"YulBlock","src":"1655:51:22","statements":[{"nodeType":"YulAssignment","src":"1665:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1694:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1676:17:22"},"nodeType":"YulFunctionCall","src":"1676:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1665:7:22"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1647:7:22","type":""}],"src":"1602:104:22"},{"body":{"nodeType":"YulBlock","src":"1763:87:22","statements":[{"body":{"nodeType":"YulBlock","src":"1828:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1837:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1840:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1830:6:22"},"nodeType":"YulFunctionCall","src":"1830:12:22"},"nodeType":"YulExpressionStatement","src":"1830:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1786:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1819:5:22"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"1793:25:22"},"nodeType":"YulFunctionCall","src":"1793:32:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1783:2:22"},"nodeType":"YulFunctionCall","src":"1783:43:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1776:6:22"},"nodeType":"YulFunctionCall","src":"1776:51:22"},"nodeType":"YulIf","src":"1773:71:22"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1756:5:22","type":""}],"src":"1712:138:22"},{"body":{"nodeType":"YulBlock","src":"1916:95:22","statements":[{"nodeType":"YulAssignment","src":"1926:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1948:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1935:12:22"},"nodeType":"YulFunctionCall","src":"1935:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1926:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1999:5:22"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"1964:34:22"},"nodeType":"YulFunctionCall","src":"1964:41:22"},"nodeType":"YulExpressionStatement","src":"1964:41:22"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1894:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1902:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1910:5:22","type":""}],"src":"1856:155:22"},{"body":{"nodeType":"YulBlock","src":"2060:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"2117:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2126:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2129:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2119:6:22"},"nodeType":"YulFunctionCall","src":"2119:12:22"},"nodeType":"YulExpressionStatement","src":"2119:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2083:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2108:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2090:17:22"},"nodeType":"YulFunctionCall","src":"2090:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2080:2:22"},"nodeType":"YulFunctionCall","src":"2080:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2073:6:22"},"nodeType":"YulFunctionCall","src":"2073:43:22"},"nodeType":"YulIf","src":"2070:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2053:5:22","type":""}],"src":"2017:122:22"},{"body":{"nodeType":"YulBlock","src":"2197:87:22","statements":[{"nodeType":"YulAssignment","src":"2207:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2229:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2216:12:22"},"nodeType":"YulFunctionCall","src":"2216:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2207:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2272:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2245:26:22"},"nodeType":"YulFunctionCall","src":"2245:33:22"},"nodeType":"YulExpressionStatement","src":"2245:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2175:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2183:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2191:5:22","type":""}],"src":"2145:139:22"},{"body":{"nodeType":"YulBlock","src":"2381:399:22","statements":[{"body":{"nodeType":"YulBlock","src":"2427:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2429:77:22"},"nodeType":"YulFunctionCall","src":"2429:79:22"},"nodeType":"YulExpressionStatement","src":"2429:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2402:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2411:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2398:3:22"},"nodeType":"YulFunctionCall","src":"2398:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2423:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2394:3:22"},"nodeType":"YulFunctionCall","src":"2394:32:22"},"nodeType":"YulIf","src":"2391:119:22"},{"nodeType":"YulBlock","src":"2520:125:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2535:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2549:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2539:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2564:71:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2607:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2618:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:22"},"nodeType":"YulFunctionCall","src":"2603:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2627:7:22"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"2574:28:22"},"nodeType":"YulFunctionCall","src":"2574:61:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2564:6:22"}]}]},{"nodeType":"YulBlock","src":"2655:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2670:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2684:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2674:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2700:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:22"},"nodeType":"YulFunctionCall","src":"2731:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2710:20:22"},"nodeType":"YulFunctionCall","src":"2710:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2700:6:22"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2343:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2354:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2366:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2374:6:22","type":""}],"src":"2290:490:22"},{"body":{"nodeType":"YulBlock","src":"2831:51:22","statements":[{"nodeType":"YulAssignment","src":"2841:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2870:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2852:17:22"},"nodeType":"YulFunctionCall","src":"2852:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2841:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2813:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2823:7:22","type":""}],"src":"2786:96:22"},{"body":{"nodeType":"YulBlock","src":"2953:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2970:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2993:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2975:17:22"},"nodeType":"YulFunctionCall","src":"2975:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2963:6:22"},"nodeType":"YulFunctionCall","src":"2963:37:22"},"nodeType":"YulExpressionStatement","src":"2963:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2941:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2948:3:22","type":""}],"src":"2888:118:22"},{"body":{"nodeType":"YulBlock","src":"3110:124:22","statements":[{"nodeType":"YulAssignment","src":"3120:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3132:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3143:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3128:3:22"},"nodeType":"YulFunctionCall","src":"3128:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3120:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3200:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3213:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3224:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3209:3:22"},"nodeType":"YulFunctionCall","src":"3209:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3156:43:22"},"nodeType":"YulFunctionCall","src":"3156:71:22"},"nodeType":"YulExpressionStatement","src":"3156:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3082:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3094:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3105:4:22","type":""}],"src":"3012:222:22"},{"body":{"nodeType":"YulBlock","src":"3299:51:22","statements":[{"nodeType":"YulAssignment","src":"3309:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3338:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3320:17:22"},"nodeType":"YulFunctionCall","src":"3320:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3309:7:22"}]}]},"name":"cleanup_t_contract$_IERC20_$225","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3281:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3291:7:22","type":""}],"src":"3240:110:22"},{"body":{"nodeType":"YulBlock","src":"3413:93:22","statements":[{"body":{"nodeType":"YulBlock","src":"3484:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3493:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3496:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3486:6:22"},"nodeType":"YulFunctionCall","src":"3486:12:22"},"nodeType":"YulExpressionStatement","src":"3486:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3436:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3475:5:22"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$225","nodeType":"YulIdentifier","src":"3443:31:22"},"nodeType":"YulFunctionCall","src":"3443:38:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3433:2:22"},"nodeType":"YulFunctionCall","src":"3433:49:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3426:6:22"},"nodeType":"YulFunctionCall","src":"3426:57:22"},"nodeType":"YulIf","src":"3423:77:22"}]},"name":"validator_revert_t_contract$_IERC20_$225","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3406:5:22","type":""}],"src":"3356:150:22"},{"body":{"nodeType":"YulBlock","src":"3578:101:22","statements":[{"nodeType":"YulAssignment","src":"3588:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3610:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3597:12:22"},"nodeType":"YulFunctionCall","src":"3597:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3588:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3667:5:22"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$225","nodeType":"YulIdentifier","src":"3626:40:22"},"nodeType":"YulFunctionCall","src":"3626:47:22"},"nodeType":"YulExpressionStatement","src":"3626:47:22"}]},"name":"abi_decode_t_contract$_IERC20_$225","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3556:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"3564:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3572:5:22","type":""}],"src":"3512:167:22"},{"body":{"nodeType":"YulBlock","src":"3728:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"3785:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3794:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3797:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3787:6:22"},"nodeType":"YulFunctionCall","src":"3787:12:22"},"nodeType":"YulExpressionStatement","src":"3787:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3751:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3776:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3758:17:22"},"nodeType":"YulFunctionCall","src":"3758:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3748:2:22"},"nodeType":"YulFunctionCall","src":"3748:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3741:6:22"},"nodeType":"YulFunctionCall","src":"3741:43:22"},"nodeType":"YulIf","src":"3738:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3721:5:22","type":""}],"src":"3685:122:22"},{"body":{"nodeType":"YulBlock","src":"3865:87:22","statements":[{"nodeType":"YulAssignment","src":"3875:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3897:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3884:12:22"},"nodeType":"YulFunctionCall","src":"3884:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3875:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3940:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3913:26:22"},"nodeType":"YulFunctionCall","src":"3913:33:22"},"nodeType":"YulExpressionStatement","src":"3913:33:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3843:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"3851:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3859:5:22","type":""}],"src":"3813:139:22"},{"body":{"nodeType":"YulBlock","src":"4072:533:22","statements":[{"body":{"nodeType":"YulBlock","src":"4118:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4120:77:22"},"nodeType":"YulFunctionCall","src":"4120:79:22"},"nodeType":"YulExpressionStatement","src":"4120:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4093:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4102:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4089:3:22"},"nodeType":"YulFunctionCall","src":"4089:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4114:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4085:3:22"},"nodeType":"YulFunctionCall","src":"4085:32:22"},"nodeType":"YulIf","src":"4082:119:22"},{"nodeType":"YulBlock","src":"4211:131:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4226:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4240:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4230:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4255:77:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4304:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4315:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4300:3:22"},"nodeType":"YulFunctionCall","src":"4300:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4324:7:22"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$225","nodeType":"YulIdentifier","src":"4265:34:22"},"nodeType":"YulFunctionCall","src":"4265:67:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4255:6:22"}]}]},{"nodeType":"YulBlock","src":"4352:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4367:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4381:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4371:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4397:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4443:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:22"},"nodeType":"YulFunctionCall","src":"4428:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4452:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4407:20:22"},"nodeType":"YulFunctionCall","src":"4407:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4397:6:22"}]}]},{"nodeType":"YulBlock","src":"4480:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4495:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4509:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4499:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4525:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4560:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4571:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4556:3:22"},"nodeType":"YulFunctionCall","src":"4556:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4580:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4535:20:22"},"nodeType":"YulFunctionCall","src":"4535:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4525:6:22"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$225t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4026:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4037:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4049:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4057:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4065:6:22","type":""}],"src":"3958:647:22"},{"body":{"nodeType":"YulBlock","src":"4708:405:22","statements":[{"body":{"nodeType":"YulBlock","src":"4754:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4756:77:22"},"nodeType":"YulFunctionCall","src":"4756:79:22"},"nodeType":"YulExpressionStatement","src":"4756:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4729:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4738:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4725:3:22"},"nodeType":"YulFunctionCall","src":"4725:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4750:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4721:3:22"},"nodeType":"YulFunctionCall","src":"4721:32:22"},"nodeType":"YulIf","src":"4718:119:22"},{"nodeType":"YulBlock","src":"4847:131:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4862:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4876:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4866:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4891:77:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4940:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4951:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4936:3:22"},"nodeType":"YulFunctionCall","src":"4936:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4960:7:22"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$225","nodeType":"YulIdentifier","src":"4901:34:22"},"nodeType":"YulFunctionCall","src":"4901:67:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4891:6:22"}]}]},{"nodeType":"YulBlock","src":"4988:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5003:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5017:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5007:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5033:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5079:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5064:3:22"},"nodeType":"YulFunctionCall","src":"5064:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5088:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5043:20:22"},"nodeType":"YulFunctionCall","src":"5043:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5033:6:22"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$225t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4670:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4681:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4693:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4701:6:22","type":""}],"src":"4611:502:22"},{"body":{"nodeType":"YulBlock","src":"5208:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5225:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5228:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5218:6:22"},"nodeType":"YulFunctionCall","src":"5218:12:22"},"nodeType":"YulExpressionStatement","src":"5218:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5119:117:22"},{"body":{"nodeType":"YulBlock","src":"5331:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5348:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5351:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5341:6:22"},"nodeType":"YulFunctionCall","src":"5341:12:22"},"nodeType":"YulExpressionStatement","src":"5341:12:22"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"5242:117:22"},{"body":{"nodeType":"YulBlock","src":"5454:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5471:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5474:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5464:6:22"},"nodeType":"YulFunctionCall","src":"5464:12:22"},"nodeType":"YulExpressionStatement","src":"5464:12:22"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5365:117:22"},{"body":{"nodeType":"YulBlock","src":"5617:478:22","statements":[{"body":{"nodeType":"YulBlock","src":"5666:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5668:77:22"},"nodeType":"YulFunctionCall","src":"5668:79:22"},"nodeType":"YulExpressionStatement","src":"5668:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5645:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5653:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5641:3:22"},"nodeType":"YulFunctionCall","src":"5641:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"5660:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5637:3:22"},"nodeType":"YulFunctionCall","src":"5637:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5630:6:22"},"nodeType":"YulFunctionCall","src":"5630:35:22"},"nodeType":"YulIf","src":"5627:122:22"},{"nodeType":"YulAssignment","src":"5758:30:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5781:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5768:12:22"},"nodeType":"YulFunctionCall","src":"5768:20:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5758:6:22"}]},{"body":{"nodeType":"YulBlock","src":"5831:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"5833:77:22"},"nodeType":"YulFunctionCall","src":"5833:79:22"},"nodeType":"YulExpressionStatement","src":"5833:79:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5803:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5811:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5800:2:22"},"nodeType":"YulFunctionCall","src":"5800:30:22"},"nodeType":"YulIf","src":"5797:117:22"},{"nodeType":"YulAssignment","src":"5923:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5939:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5947:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5935:3:22"},"nodeType":"YulFunctionCall","src":"5935:17:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"5923:8:22"}]},{"body":{"nodeType":"YulBlock","src":"6006:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6008:77:22"},"nodeType":"YulFunctionCall","src":"6008:79:22"},"nodeType":"YulExpressionStatement","src":"6008:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"5971:8:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5985:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5993:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5981:3:22"},"nodeType":"YulFunctionCall","src":"5981:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5967:3:22"},"nodeType":"YulFunctionCall","src":"5967:32:22"},{"name":"end","nodeType":"YulIdentifier","src":"6001:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5964:2:22"},"nodeType":"YulFunctionCall","src":"5964:41:22"},"nodeType":"YulIf","src":"5961:128:22"}]},"name":"abi_decode_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5584:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"5592:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"5600:8:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"5610:6:22","type":""}],"src":"5513:582:22"},{"body":{"nodeType":"YulBlock","src":"6208:478:22","statements":[{"body":{"nodeType":"YulBlock","src":"6257:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6259:77:22"},"nodeType":"YulFunctionCall","src":"6259:79:22"},"nodeType":"YulExpressionStatement","src":"6259:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6236:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6244:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6232:3:22"},"nodeType":"YulFunctionCall","src":"6232:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"6251:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6228:3:22"},"nodeType":"YulFunctionCall","src":"6228:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6221:6:22"},"nodeType":"YulFunctionCall","src":"6221:35:22"},"nodeType":"YulIf","src":"6218:122:22"},{"nodeType":"YulAssignment","src":"6349:30:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6372:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6359:12:22"},"nodeType":"YulFunctionCall","src":"6359:20:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6349:6:22"}]},{"body":{"nodeType":"YulBlock","src":"6422:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6424:77:22"},"nodeType":"YulFunctionCall","src":"6424:79:22"},"nodeType":"YulExpressionStatement","src":"6424:79:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6394:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6402:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6391:2:22"},"nodeType":"YulFunctionCall","src":"6391:30:22"},"nodeType":"YulIf","src":"6388:117:22"},{"nodeType":"YulAssignment","src":"6514:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6530:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6538:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6526:3:22"},"nodeType":"YulFunctionCall","src":"6526:17:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6514:8:22"}]},{"body":{"nodeType":"YulBlock","src":"6597:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6599:77:22"},"nodeType":"YulFunctionCall","src":"6599:79:22"},"nodeType":"YulExpressionStatement","src":"6599:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6562:8:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6576:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6584:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6572:3:22"},"nodeType":"YulFunctionCall","src":"6572:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6558:3:22"},"nodeType":"YulFunctionCall","src":"6558:32:22"},{"name":"end","nodeType":"YulIdentifier","src":"6592:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6555:2:22"},"nodeType":"YulFunctionCall","src":"6555:41:22"},"nodeType":"YulIf","src":"6552:128:22"}]},"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6175:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"6183:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6191:8:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"6201:6:22","type":""}],"src":"6118:568:22"},{"body":{"nodeType":"YulBlock","src":"6876:923:22","statements":[{"body":{"nodeType":"YulBlock","src":"6922:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6924:77:22"},"nodeType":"YulFunctionCall","src":"6924:79:22"},"nodeType":"YulExpressionStatement","src":"6924:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6897:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6906:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6893:3:22"},"nodeType":"YulFunctionCall","src":"6893:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6918:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6889:3:22"},"nodeType":"YulFunctionCall","src":"6889:32:22"},"nodeType":"YulIf","src":"6886:119:22"},{"nodeType":"YulBlock","src":"7015:326:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7030:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7061:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7072:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7057:3:22"},"nodeType":"YulFunctionCall","src":"7057:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7044:12:22"},"nodeType":"YulFunctionCall","src":"7044:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7034:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7122:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7124:77:22"},"nodeType":"YulFunctionCall","src":"7124:79:22"},"nodeType":"YulExpressionStatement","src":"7124:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7094:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7102:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7091:2:22"},"nodeType":"YulFunctionCall","src":"7091:30:22"},"nodeType":"YulIf","src":"7088:117:22"},{"nodeType":"YulAssignment","src":"7219:112:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7303:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7314:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7299:3:22"},"nodeType":"YulFunctionCall","src":"7299:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7323:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7237:61:22"},"nodeType":"YulFunctionCall","src":"7237:94:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7219:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"7227:6:22"}]}]},{"nodeType":"YulBlock","src":"7351:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7366:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7380:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7370:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7396:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7431:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7442:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7427:3:22"},"nodeType":"YulFunctionCall","src":"7427:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7451:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7406:20:22"},"nodeType":"YulFunctionCall","src":"7406:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7396:6:22"}]}]},{"nodeType":"YulBlock","src":"7479:313:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7494:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7525:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7536:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7521:3:22"},"nodeType":"YulFunctionCall","src":"7521:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7508:12:22"},"nodeType":"YulFunctionCall","src":"7508:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7498:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7587:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7589:77:22"},"nodeType":"YulFunctionCall","src":"7589:79:22"},"nodeType":"YulExpressionStatement","src":"7589:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7559:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7567:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7556:2:22"},"nodeType":"YulFunctionCall","src":"7556:30:22"},"nodeType":"YulIf","src":"7553:117:22"},{"nodeType":"YulAssignment","src":"7684:98:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7754:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7765:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7750:3:22"},"nodeType":"YulFunctionCall","src":"7750:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7774:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7702:47:22"},"nodeType":"YulFunctionCall","src":"7702:80:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7684:6:22"},{"name":"value4","nodeType":"YulIdentifier","src":"7692:6:22"}]}]}]},"name":"abi_decode_tuple_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptrt_addresst_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6814:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6825:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6837:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6845:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6853:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6861:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6869:6:22","type":""}],"src":"6692:1107:22"},{"body":{"nodeType":"YulBlock","src":"7937:600:22","statements":[{"body":{"nodeType":"YulBlock","src":"7983:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7985:77:22"},"nodeType":"YulFunctionCall","src":"7985:79:22"},"nodeType":"YulExpressionStatement","src":"7985:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7958:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"7967:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7954:3:22"},"nodeType":"YulFunctionCall","src":"7954:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"7979:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7950:3:22"},"nodeType":"YulFunctionCall","src":"7950:32:22"},"nodeType":"YulIf","src":"7947:119:22"},{"nodeType":"YulBlock","src":"8076:326:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8122:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8133:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8118:3:22"},"nodeType":"YulFunctionCall","src":"8118:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8105:12:22"},"nodeType":"YulFunctionCall","src":"8105:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8095:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8183:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8185:77:22"},"nodeType":"YulFunctionCall","src":"8185:79:22"},"nodeType":"YulExpressionStatement","src":"8185:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8155:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8163:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8152:2:22"},"nodeType":"YulFunctionCall","src":"8152:30:22"},"nodeType":"YulIf","src":"8149:117:22"},{"nodeType":"YulAssignment","src":"8280:112:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8364:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"8375:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8360:3:22"},"nodeType":"YulFunctionCall","src":"8360:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8384:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"8298:61:22"},"nodeType":"YulFunctionCall","src":"8298:94:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8280:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"8288:6:22"}]}]},{"nodeType":"YulBlock","src":"8412:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8427:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8441:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8431:6:22","type":""}]},{"nodeType":"YulAssignment","src":"8457:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8492:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"8503:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8488:3:22"},"nodeType":"YulFunctionCall","src":"8488:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8512:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8467:20:22"},"nodeType":"YulFunctionCall","src":"8467:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8457:6:22"}]}]}]},"name":"abi_decode_tuple_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7891:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7902:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7914:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7922:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7930:6:22","type":""}],"src":"7805:732:22"},{"body":{"nodeType":"YulBlock","src":"8630:478:22","statements":[{"body":{"nodeType":"YulBlock","src":"8679:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8681:77:22"},"nodeType":"YulFunctionCall","src":"8681:79:22"},"nodeType":"YulExpressionStatement","src":"8681:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8658:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8666:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8654:3:22"},"nodeType":"YulFunctionCall","src":"8654:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"8673:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8650:3:22"},"nodeType":"YulFunctionCall","src":"8650:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8643:6:22"},"nodeType":"YulFunctionCall","src":"8643:35:22"},"nodeType":"YulIf","src":"8640:122:22"},{"nodeType":"YulAssignment","src":"8771:30:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8794:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8781:12:22"},"nodeType":"YulFunctionCall","src":"8781:20:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8771:6:22"}]},{"body":{"nodeType":"YulBlock","src":"8844:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"8846:77:22"},"nodeType":"YulFunctionCall","src":"8846:79:22"},"nodeType":"YulExpressionStatement","src":"8846:79:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8816:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8824:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8813:2:22"},"nodeType":"YulFunctionCall","src":"8813:30:22"},"nodeType":"YulIf","src":"8810:117:22"},{"nodeType":"YulAssignment","src":"8936:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8952:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8960:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8948:3:22"},"nodeType":"YulFunctionCall","src":"8948:17:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8936:8:22"}]},{"body":{"nodeType":"YulBlock","src":"9019:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9021:77:22"},"nodeType":"YulFunctionCall","src":"9021:79:22"},"nodeType":"YulExpressionStatement","src":"9021:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8984:8:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8998:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9006:4:22","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8994:3:22"},"nodeType":"YulFunctionCall","src":"8994:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8980:3:22"},"nodeType":"YulFunctionCall","src":"8980:32:22"},{"name":"end","nodeType":"YulIdentifier","src":"9014:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8977:2:22"},"nodeType":"YulFunctionCall","src":"8977:41:22"},"nodeType":"YulIf","src":"8974:128:22"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8597:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"8605:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"8613:8:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"8623:6:22","type":""}],"src":"8556:552:22"},{"body":{"nodeType":"YulBlock","src":"9199:442:22","statements":[{"body":{"nodeType":"YulBlock","src":"9245:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9247:77:22"},"nodeType":"YulFunctionCall","src":"9247:79:22"},"nodeType":"YulExpressionStatement","src":"9247:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9220:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"9229:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9216:3:22"},"nodeType":"YulFunctionCall","src":"9216:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"9241:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9212:3:22"},"nodeType":"YulFunctionCall","src":"9212:32:22"},"nodeType":"YulIf","src":"9209:119:22"},{"nodeType":"YulBlock","src":"9338:296:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9353:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9384:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9395:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9380:3:22"},"nodeType":"YulFunctionCall","src":"9380:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9367:12:22"},"nodeType":"YulFunctionCall","src":"9367:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9357:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9445:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9447:77:22"},"nodeType":"YulFunctionCall","src":"9447:79:22"},"nodeType":"YulExpressionStatement","src":"9447:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9417:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9425:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9414:2:22"},"nodeType":"YulFunctionCall","src":"9414:30:22"},"nodeType":"YulIf","src":"9411:117:22"},{"nodeType":"YulAssignment","src":"9542:82:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9596:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9607:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9592:3:22"},"nodeType":"YulFunctionCall","src":"9592:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9616:7:22"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"9560:31:22"},"nodeType":"YulFunctionCall","src":"9560:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9542:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"9550:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9161:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9172:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9184:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9192:6:22","type":""}],"src":"9114:527:22"},{"body":{"nodeType":"YulBlock","src":"9675:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9692:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9695:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9685:6:22"},"nodeType":"YulFunctionCall","src":"9685:88:22"},"nodeType":"YulExpressionStatement","src":"9685:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9789:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9792:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9782:6:22"},"nodeType":"YulFunctionCall","src":"9782:15:22"},"nodeType":"YulExpressionStatement","src":"9782:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9813:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9816:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9806:6:22"},"nodeType":"YulFunctionCall","src":"9806:15:22"},"nodeType":"YulExpressionStatement","src":"9806:15:22"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"9647:180:22"},{"body":{"nodeType":"YulBlock","src":"9899:62:22","statements":[{"body":{"nodeType":"YulBlock","src":"9933:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"9935:16:22"},"nodeType":"YulFunctionCall","src":"9935:18:22"},"nodeType":"YulExpressionStatement","src":"9935:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9922:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"9929:1:22","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9919:2:22"},"nodeType":"YulFunctionCall","src":"9919:12:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9912:6:22"},"nodeType":"YulFunctionCall","src":"9912:20:22"},"nodeType":"YulIf","src":"9909:46:22"}]},"name":"validator_assert_t_enum$_ExchangeRateSource_$3489","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9892:5:22","type":""}],"src":"9833:128:22"},{"body":{"nodeType":"YulBlock","src":"10035:89:22","statements":[{"nodeType":"YulAssignment","src":"10045:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"10056:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10045:7:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10112:5:22"}],"functionName":{"name":"validator_assert_t_enum$_ExchangeRateSource_$3489","nodeType":"YulIdentifier","src":"10062:49:22"},"nodeType":"YulFunctionCall","src":"10062:56:22"},"nodeType":"YulExpressionStatement","src":"10062:56:22"}]},"name":"cleanup_t_enum$_ExchangeRateSource_$3489","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10017:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10027:7:22","type":""}],"src":"9967:157:22"},{"body":{"nodeType":"YulBlock","src":"10211:76:22","statements":[{"nodeType":"YulAssignment","src":"10221:60:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10275:5:22"}],"functionName":{"name":"cleanup_t_enum$_ExchangeRateSource_$3489","nodeType":"YulIdentifier","src":"10234:40:22"},"nodeType":"YulFunctionCall","src":"10234:47:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10221:9:22"}]}]},"name":"convert_t_enum$_ExchangeRateSource_$3489_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10191:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10201:9:22","type":""}],"src":"10130:157:22"},{"body":{"nodeType":"YulBlock","src":"10369:87:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10386:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10443:5:22"}],"functionName":{"name":"convert_t_enum$_ExchangeRateSource_$3489_to_t_uint8","nodeType":"YulIdentifier","src":"10391:51:22"},"nodeType":"YulFunctionCall","src":"10391:58:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10379:6:22"},"nodeType":"YulFunctionCall","src":"10379:71:22"},"nodeType":"YulExpressionStatement","src":"10379:71:22"}]},"name":"abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10357:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10364:3:22","type":""}],"src":"10293:163:22"},{"body":{"nodeType":"YulBlock","src":"10506:53:22","statements":[{"nodeType":"YulAssignment","src":"10516:37:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10531:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"10538:14:22","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10527:3:22"},"nodeType":"YulFunctionCall","src":"10527:26:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10516:7:22"}]}]},"name":"cleanup_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10488:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10498:7:22","type":""}],"src":"10462:97:22"},{"body":{"nodeType":"YulBlock","src":"10618:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10635:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10657:5:22"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"10640:16:22"},"nodeType":"YulFunctionCall","src":"10640:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10628:6:22"},"nodeType":"YulFunctionCall","src":"10628:36:22"},"nodeType":"YulExpressionStatement","src":"10628:36:22"}]},"name":"abi_encode_t_uint48_to_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10606:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10613:3:22","type":""}],"src":"10565:105:22"},{"body":{"nodeType":"YulBlock","src":"10731:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10748:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10771:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10753:17:22"},"nodeType":"YulFunctionCall","src":"10753:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10741:6:22"},"nodeType":"YulFunctionCall","src":"10741:37:22"},"nodeType":"YulExpressionStatement","src":"10741:37:22"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10719:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10726:3:22","type":""}],"src":"10676:108:22"},{"body":{"nodeType":"YulBlock","src":"10845:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10862:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10885:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10867:17:22"},"nodeType":"YulFunctionCall","src":"10867:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10855:6:22"},"nodeType":"YulFunctionCall","src":"10855:37:22"},"nodeType":"YulExpressionStatement","src":"10855:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10833:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10840:3:22","type":""}],"src":"10790:108:22"},{"body":{"nodeType":"YulBlock","src":"10957:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10974:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10996:5:22"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"10979:16:22"},"nodeType":"YulFunctionCall","src":"10979:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10967:6:22"},"nodeType":"YulFunctionCall","src":"10967:36:22"},"nodeType":"YulExpressionStatement","src":"10967:36:22"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10945:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10952:3:22","type":""}],"src":"10904:105:22"},{"body":{"nodeType":"YulBlock","src":"11073:40:22","statements":[{"nodeType":"YulAssignment","src":"11084:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11100:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11094:5:22"},"nodeType":"YulFunctionCall","src":"11094:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11084:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11056:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11066:6:22","type":""}],"src":"11015:98:22"},{"body":{"nodeType":"YulBlock","src":"11204:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11221:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"11226:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11214:6:22"},"nodeType":"YulFunctionCall","src":"11214:19:22"},"nodeType":"YulExpressionStatement","src":"11214:19:22"},{"nodeType":"YulAssignment","src":"11242:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11261:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11266:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11257:3:22"},"nodeType":"YulFunctionCall","src":"11257:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11242:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11176:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"11181:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11192:11:22","type":""}],"src":"11119:158:22"},{"body":{"nodeType":"YulBlock","src":"11345:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11355:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"11364:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11359:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"11424:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11449:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"11454:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11445:3:22"},"nodeType":"YulFunctionCall","src":"11445:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11468:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"11473:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11464:3:22"},"nodeType":"YulFunctionCall","src":"11464:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11458:5:22"},"nodeType":"YulFunctionCall","src":"11458:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11438:6:22"},"nodeType":"YulFunctionCall","src":"11438:39:22"},"nodeType":"YulExpressionStatement","src":"11438:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11385:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"11388:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11382:2:22"},"nodeType":"YulFunctionCall","src":"11382:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11396:19:22","statements":[{"nodeType":"YulAssignment","src":"11398:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11407:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"11410:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11403:3:22"},"nodeType":"YulFunctionCall","src":"11403:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11398:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"11378:3:22","statements":[]},"src":"11374:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11507:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"11512:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11503:3:22"},"nodeType":"YulFunctionCall","src":"11503:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"11521:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11496:6:22"},"nodeType":"YulFunctionCall","src":"11496:27:22"},"nodeType":"YulExpressionStatement","src":"11496:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11327:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11332:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"11337:6:22","type":""}],"src":"11283:246:22"},{"body":{"nodeType":"YulBlock","src":"11583:54:22","statements":[{"nodeType":"YulAssignment","src":"11593:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11611:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"11618:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11607:3:22"},"nodeType":"YulFunctionCall","src":"11607:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11627:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11623:3:22"},"nodeType":"YulFunctionCall","src":"11623:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11603:3:22"},"nodeType":"YulFunctionCall","src":"11603:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11593:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11566:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11576:6:22","type":""}],"src":"11535:102:22"},{"body":{"nodeType":"YulBlock","src":"11723:273:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11733:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11779:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11747:31:22"},"nodeType":"YulFunctionCall","src":"11747:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11737:6:22","type":""}]},{"nodeType":"YulAssignment","src":"11794:67:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11849:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"11854:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11801:47:22"},"nodeType":"YulFunctionCall","src":"11801:60:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11794:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11909:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"11916:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11905:3:22"},"nodeType":"YulFunctionCall","src":"11905:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"11923:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"11928:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11870:34:22"},"nodeType":"YulFunctionCall","src":"11870:65:22"},"nodeType":"YulExpressionStatement","src":"11870:65:22"},{"nodeType":"YulAssignment","src":"11944:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11955:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11982:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11960:21:22"},"nodeType":"YulFunctionCall","src":"11960:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11951:3:22"},"nodeType":"YulFunctionCall","src":"11951:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11944:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11704:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11711:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11719:3:22","type":""}],"src":"11643:353:22"},{"body":{"nodeType":"YulBlock","src":"12236:1596:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12246:28:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12262:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12267:6:22","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12258:3:22"},"nodeType":"YulFunctionCall","src":"12258:16:22"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"12250:4:22","type":""}]},{"nodeType":"YulBlock","src":"12284:192:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12326:43:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12356:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"12363:4:22","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12352:3:22"},"nodeType":"YulFunctionCall","src":"12352:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12346:5:22"},"nodeType":"YulFunctionCall","src":"12346:23:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12330:12:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12437:12:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12455:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12460:4:22","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12451:3:22"},"nodeType":"YulFunctionCall","src":"12451:14:22"}],"functionName":{"name":"abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8","nodeType":"YulIdentifier","src":"12382:54:22"},"nodeType":"YulFunctionCall","src":"12382:84:22"},"nodeType":"YulExpressionStatement","src":"12382:84:22"}]},{"nodeType":"YulBlock","src":"12486:168:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12527:43:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12557:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"12564:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12553:3:22"},"nodeType":"YulFunctionCall","src":"12553:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12547:5:22"},"nodeType":"YulFunctionCall","src":"12547:23:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12531:12:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12615:12:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12633:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12638:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12629:3:22"},"nodeType":"YulFunctionCall","src":"12629:14:22"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48","nodeType":"YulIdentifier","src":"12583:31:22"},"nodeType":"YulFunctionCall","src":"12583:61:22"},"nodeType":"YulExpressionStatement","src":"12583:61:22"}]},{"nodeType":"YulBlock","src":"12664:168:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12705:43:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12735:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"12742:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12731:3:22"},"nodeType":"YulFunctionCall","src":"12731:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12725:5:22"},"nodeType":"YulFunctionCall","src":"12725:23:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12709:12:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12793:12:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12811:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12816:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12807:3:22"},"nodeType":"YulFunctionCall","src":"12807:14:22"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48","nodeType":"YulIdentifier","src":"12761:31:22"},"nodeType":"YulFunctionCall","src":"12761:61:22"},"nodeType":"YulExpressionStatement","src":"12761:61:22"}]},{"nodeType":"YulBlock","src":"12842:168:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12881:43:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12911:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"12918:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12907:3:22"},"nodeType":"YulFunctionCall","src":"12907:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12901:5:22"},"nodeType":"YulFunctionCall","src":"12901:23:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12885:12:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12971:12:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12989:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12994:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12985:3:22"},"nodeType":"YulFunctionCall","src":"12985:14:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"12937:33:22"},"nodeType":"YulFunctionCall","src":"12937:63:22"},"nodeType":"YulExpressionStatement","src":"12937:63:22"}]},{"nodeType":"YulBlock","src":"13020:176:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13067:43:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13097:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"13104:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13093:3:22"},"nodeType":"YulFunctionCall","src":"13093:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13087:5:22"},"nodeType":"YulFunctionCall","src":"13087:23:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13071:12:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13157:12:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13175:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13180:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13171:3:22"},"nodeType":"YulFunctionCall","src":"13171:14:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13123:33:22"},"nodeType":"YulFunctionCall","src":"13123:63:22"},"nodeType":"YulExpressionStatement","src":"13123:63:22"}]},{"nodeType":"YulBlock","src":"13206:172:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13249:43:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13279:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"13286:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13275:3:22"},"nodeType":"YulFunctionCall","src":"13275:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13269:5:22"},"nodeType":"YulFunctionCall","src":"13269:23:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13253:12:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13339:12:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13357:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13362:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13353:3:22"},"nodeType":"YulFunctionCall","src":"13353:14:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13305:33:22"},"nodeType":"YulFunctionCall","src":"13305:63:22"},"nodeType":"YulExpressionStatement","src":"13305:63:22"}]},{"nodeType":"YulBlock","src":"13388:169:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13430:43:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13460:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"13467:4:22","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13456:3:22"},"nodeType":"YulFunctionCall","src":"13456:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13450:5:22"},"nodeType":"YulFunctionCall","src":"13450:23:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13434:12:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13518:12:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13536:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13541:4:22","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13532:3:22"},"nodeType":"YulFunctionCall","src":"13532:14:22"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"13486:31:22"},"nodeType":"YulFunctionCall","src":"13486:61:22"},"nodeType":"YulExpressionStatement","src":"13486:61:22"}]},{"nodeType":"YulBlock","src":"13567:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13607:43:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13637:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"13644:4:22","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13633:3:22"},"nodeType":"YulFunctionCall","src":"13633:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13627:5:22"},"nodeType":"YulFunctionCall","src":"13627:23:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13611:12:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13675:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13680:4:22","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13671:3:22"},"nodeType":"YulFunctionCall","src":"13671:14:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13691:4:22"},{"name":"pos","nodeType":"YulIdentifier","src":"13697:3:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13687:3:22"},"nodeType":"YulFunctionCall","src":"13687:14:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13664:6:22"},"nodeType":"YulFunctionCall","src":"13664:38:22"},"nodeType":"YulExpressionStatement","src":"13664:38:22"},{"nodeType":"YulAssignment","src":"13715:79:22","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13775:12:22"},{"name":"tail","nodeType":"YulIdentifier","src":"13789:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13723:51:22"},"nodeType":"YulFunctionCall","src":"13723:71:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13715:4:22"}]}]},{"nodeType":"YulAssignment","src":"13815:11:22","value":{"name":"tail","nodeType":"YulIdentifier","src":"13822:4:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13815:3:22"}]}]},"name":"abi_encode_t_struct$_PaymasterData_$3485_memory_ptr_to_t_struct$_PaymasterData_$3485_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12215:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12222:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12231:3:22","type":""}],"src":"12100:1732:22"},{"body":{"nodeType":"YulBlock","src":"13998:237:22","statements":[{"nodeType":"YulAssignment","src":"14008:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14020:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14031:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14016:3:22"},"nodeType":"YulFunctionCall","src":"14016:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14008:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14055:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14066:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14051:3:22"},"nodeType":"YulFunctionCall","src":"14051:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14074:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14080:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14070:3:22"},"nodeType":"YulFunctionCall","src":"14070:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14044:6:22"},"nodeType":"YulFunctionCall","src":"14044:47:22"},"nodeType":"YulExpressionStatement","src":"14044:47:22"},{"nodeType":"YulAssignment","src":"14100:128:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14214:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"14223:4:22"}],"functionName":{"name":"abi_encode_t_struct$_PaymasterData_$3485_memory_ptr_to_t_struct$_PaymasterData_$3485_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14108:105:22"},"nodeType":"YulFunctionCall","src":"14108:120:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14100:4:22"}]}]},"name":"abi_encode_tuple_t_struct$_PaymasterData_$3485_memory_ptr__to_t_struct$_PaymasterData_$3485_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13970:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13982:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13993:4:22","type":""}],"src":"13838:397:22"},{"body":{"nodeType":"YulBlock","src":"14299:56:22","statements":[{"body":{"nodeType":"YulBlock","src":"14333:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14342:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14345:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14335:6:22"},"nodeType":"YulFunctionCall","src":"14335:12:22"},"nodeType":"YulExpressionStatement","src":"14335:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14322:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"14329:1:22","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14319:2:22"},"nodeType":"YulFunctionCall","src":"14319:12:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14312:6:22"},"nodeType":"YulFunctionCall","src":"14312:20:22"},"nodeType":"YulIf","src":"14309:40:22"}]},"name":"validator_revert_t_enum$_PostOpMode_$3207","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14292:5:22","type":""}],"src":"14241:114:22"},{"body":{"nodeType":"YulBlock","src":"14428:102:22","statements":[{"nodeType":"YulAssignment","src":"14438:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14460:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14447:12:22"},"nodeType":"YulFunctionCall","src":"14447:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14438:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14518:5:22"}],"functionName":{"name":"validator_revert_t_enum$_PostOpMode_$3207","nodeType":"YulIdentifier","src":"14476:41:22"},"nodeType":"YulFunctionCall","src":"14476:48:22"},"nodeType":"YulExpressionStatement","src":"14476:48:22"}]},"name":"abi_decode_t_enum$_PostOpMode_$3207","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14406:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"14414:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14422:5:22","type":""}],"src":"14361:169:22"},{"body":{"nodeType":"YulBlock","src":"14670:713:22","statements":[{"body":{"nodeType":"YulBlock","src":"14716:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14718:77:22"},"nodeType":"YulFunctionCall","src":"14718:79:22"},"nodeType":"YulExpressionStatement","src":"14718:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14691:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14700:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14687:3:22"},"nodeType":"YulFunctionCall","src":"14687:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"14712:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14683:3:22"},"nodeType":"YulFunctionCall","src":"14683:32:22"},"nodeType":"YulIf","src":"14680:119:22"},{"nodeType":"YulBlock","src":"14809:132:22","statements":[{"nodeType":"YulVariableDeclaration","src":"14824:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"14838:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14828:6:22","type":""}]},{"nodeType":"YulAssignment","src":"14853:78:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14903:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"14914:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14899:3:22"},"nodeType":"YulFunctionCall","src":"14899:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14923:7:22"}],"functionName":{"name":"abi_decode_t_enum$_PostOpMode_$3207","nodeType":"YulIdentifier","src":"14863:35:22"},"nodeType":"YulFunctionCall","src":"14863:68:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14853:6:22"}]}]},{"nodeType":"YulBlock","src":"14951:297:22","statements":[{"nodeType":"YulVariableDeclaration","src":"14966:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14997:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15008:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14993:3:22"},"nodeType":"YulFunctionCall","src":"14993:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14980:12:22"},"nodeType":"YulFunctionCall","src":"14980:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14970:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"15059:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15061:77:22"},"nodeType":"YulFunctionCall","src":"15061:79:22"},"nodeType":"YulExpressionStatement","src":"15061:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15031:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"15039:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15028:2:22"},"nodeType":"YulFunctionCall","src":"15028:30:22"},"nodeType":"YulIf","src":"15025:117:22"},{"nodeType":"YulAssignment","src":"15156:82:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15210:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"15221:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15206:3:22"},"nodeType":"YulFunctionCall","src":"15206:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15230:7:22"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"15174:31:22"},"nodeType":"YulFunctionCall","src":"15174:64:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15156:6:22"},{"name":"value2","nodeType":"YulIdentifier","src":"15164:6:22"}]}]},{"nodeType":"YulBlock","src":"15258:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"15273:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"15287:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15277:6:22","type":""}]},{"nodeType":"YulAssignment","src":"15303:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15338:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"15349:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15334:3:22"},"nodeType":"YulFunctionCall","src":"15334:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15358:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15313:20:22"},"nodeType":"YulFunctionCall","src":"15313:53:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15303:6:22"}]}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$3207t_bytes_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14616:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14627:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14639:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14647:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14655:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14663:6:22","type":""}],"src":"14536:847:22"},{"body":{"nodeType":"YulBlock","src":"15421:28:22","statements":[{"nodeType":"YulAssignment","src":"15431:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"15438:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15431:3:22"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15407:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15417:3:22","type":""}],"src":"15389:60:22"},{"body":{"nodeType":"YulBlock","src":"15515:82:22","statements":[{"nodeType":"YulAssignment","src":"15525:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15583:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"15565:17:22"},"nodeType":"YulFunctionCall","src":"15565:24:22"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"15556:8:22"},"nodeType":"YulFunctionCall","src":"15556:34:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"15538:17:22"},"nodeType":"YulFunctionCall","src":"15538:53:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"15525:9:22"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15495:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15505:9:22","type":""}],"src":"15455:142:22"},{"body":{"nodeType":"YulBlock","src":"15663:66:22","statements":[{"nodeType":"YulAssignment","src":"15673:50:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15717:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"15686:30:22"},"nodeType":"YulFunctionCall","src":"15686:37:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"15673:9:22"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15643:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15653:9:22","type":""}],"src":"15603:126:22"},{"body":{"nodeType":"YulBlock","src":"15815:66:22","statements":[{"nodeType":"YulAssignment","src":"15825:50:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15869:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"15838:30:22"},"nodeType":"YulFunctionCall","src":"15838:37:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"15825:9:22"}]}]},"name":"convert_t_contract$_IEntryPoint_$3170_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15795:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15805:9:22","type":""}],"src":"15735:146:22"},{"body":{"nodeType":"YulBlock","src":"15972:86:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15989:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16045:5:22"}],"functionName":{"name":"convert_t_contract$_IEntryPoint_$3170_to_t_address","nodeType":"YulIdentifier","src":"15994:50:22"},"nodeType":"YulFunctionCall","src":"15994:57:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15982:6:22"},"nodeType":"YulFunctionCall","src":"15982:70:22"},"nodeType":"YulExpressionStatement","src":"15982:70:22"}]},"name":"abi_encode_t_contract$_IEntryPoint_$3170_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15960:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15967:3:22","type":""}],"src":"15887:171:22"},{"body":{"nodeType":"YulBlock","src":"16182:144:22","statements":[{"nodeType":"YulAssignment","src":"16192:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16204:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16215:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16200:3:22"},"nodeType":"YulFunctionCall","src":"16200:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16192:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16292:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16305:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16316:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16301:3:22"},"nodeType":"YulFunctionCall","src":"16301:17:22"}],"functionName":{"name":"abi_encode_t_contract$_IEntryPoint_$3170_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16228:63:22"},"nodeType":"YulFunctionCall","src":"16228:91:22"},"nodeType":"YulExpressionStatement","src":"16228:91:22"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$3170__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16154:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16166:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16177:4:22","type":""}],"src":"16064:262:22"},{"body":{"nodeType":"YulBlock","src":"16406:271:22","statements":[{"body":{"nodeType":"YulBlock","src":"16452:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16454:77:22"},"nodeType":"YulFunctionCall","src":"16454:79:22"},"nodeType":"YulExpressionStatement","src":"16454:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16427:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"16436:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16423:3:22"},"nodeType":"YulFunctionCall","src":"16423:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"16448:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16419:3:22"},"nodeType":"YulFunctionCall","src":"16419:32:22"},"nodeType":"YulIf","src":"16416:119:22"},{"nodeType":"YulBlock","src":"16545:125:22","statements":[{"nodeType":"YulVariableDeclaration","src":"16560:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"16574:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16564:6:22","type":""}]},{"nodeType":"YulAssignment","src":"16589:71:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16632:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"16643:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16628:3:22"},"nodeType":"YulFunctionCall","src":"16628:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16652:7:22"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"16599:28:22"},"nodeType":"YulFunctionCall","src":"16599:61:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16589:6:22"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16376:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16387:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16399:6:22","type":""}],"src":"16332:345:22"},{"body":{"nodeType":"YulBlock","src":"16772:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16789:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16792:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16782:6:22"},"nodeType":"YulFunctionCall","src":"16782:12:22"},"nodeType":"YulExpressionStatement","src":"16782:12:22"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"16683:117:22"},{"body":{"nodeType":"YulBlock","src":"16919:153:22","statements":[{"body":{"nodeType":"YulBlock","src":"16959:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"16961:77:22"},"nodeType":"YulFunctionCall","src":"16961:79:22"},"nodeType":"YulExpressionStatement","src":"16961:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"16940:3:22"},{"name":"offset","nodeType":"YulIdentifier","src":"16945:6:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16936:3:22"},"nodeType":"YulFunctionCall","src":"16936:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"16954:3:22","type":"","value":"352"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16932:3:22"},"nodeType":"YulFunctionCall","src":"16932:26:22"},"nodeType":"YulIf","src":"16929:113:22"},{"nodeType":"YulAssignment","src":"17051:15:22","value":{"name":"offset","nodeType":"YulIdentifier","src":"17060:6:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17051:5:22"}]}]},"name":"abi_decode_t_struct$_UserOperation_$3364_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16897:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"16905:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16913:5:22","type":""}],"src":"16834:238:22"},{"body":{"nodeType":"YulBlock","src":"17144:56:22","statements":[{"body":{"nodeType":"YulBlock","src":"17178:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17187:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17190:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17180:6:22"},"nodeType":"YulFunctionCall","src":"17180:12:22"},"nodeType":"YulExpressionStatement","src":"17180:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17167:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"17174:1:22","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17164:2:22"},"nodeType":"YulFunctionCall","src":"17164:12:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17157:6:22"},"nodeType":"YulFunctionCall","src":"17157:20:22"},"nodeType":"YulIf","src":"17154:40:22"}]},"name":"validator_revert_t_enum$_ExchangeRateSource_$3489","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17137:5:22","type":""}],"src":"17078:122:22"},{"body":{"nodeType":"YulBlock","src":"17281:110:22","statements":[{"nodeType":"YulAssignment","src":"17291:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17313:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17300:12:22"},"nodeType":"YulFunctionCall","src":"17300:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17291:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17379:5:22"}],"functionName":{"name":"validator_revert_t_enum$_ExchangeRateSource_$3489","nodeType":"YulIdentifier","src":"17329:49:22"},"nodeType":"YulFunctionCall","src":"17329:56:22"},"nodeType":"YulExpressionStatement","src":"17329:56:22"}]},"name":"abi_decode_t_enum$_ExchangeRateSource_$3489","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17259:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"17267:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17275:5:22","type":""}],"src":"17206:185:22"},{"body":{"nodeType":"YulBlock","src":"17439:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"17495:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17504:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17507:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17497:6:22"},"nodeType":"YulFunctionCall","src":"17497:12:22"},"nodeType":"YulExpressionStatement","src":"17497:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17462:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17486:5:22"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"17469:16:22"},"nodeType":"YulFunctionCall","src":"17469:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17459:2:22"},"nodeType":"YulFunctionCall","src":"17459:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17452:6:22"},"nodeType":"YulFunctionCall","src":"17452:42:22"},"nodeType":"YulIf","src":"17449:62:22"}]},"name":"validator_revert_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17432:5:22","type":""}],"src":"17397:120:22"},{"body":{"nodeType":"YulBlock","src":"17574:86:22","statements":[{"nodeType":"YulAssignment","src":"17584:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17606:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17593:12:22"},"nodeType":"YulFunctionCall","src":"17593:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17584:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17648:5:22"}],"functionName":{"name":"validator_revert_t_uint48","nodeType":"YulIdentifier","src":"17622:25:22"},"nodeType":"YulFunctionCall","src":"17622:32:22"},"nodeType":"YulExpressionStatement","src":"17622:32:22"}]},"name":"abi_decode_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17552:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"17560:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17568:5:22","type":""}],"src":"17523:137:22"},{"body":{"nodeType":"YulBlock","src":"17904:1377:22","statements":[{"body":{"nodeType":"YulBlock","src":"17951:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17953:77:22"},"nodeType":"YulFunctionCall","src":"17953:79:22"},"nodeType":"YulExpressionStatement","src":"17953:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17925:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"17934:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17921:3:22"},"nodeType":"YulFunctionCall","src":"17921:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"17946:3:22","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17917:3:22"},"nodeType":"YulFunctionCall","src":"17917:33:22"},"nodeType":"YulIf","src":"17914:120:22"},{"nodeType":"YulBlock","src":"18044:310:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18059:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18090:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"18101:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18086:3:22"},"nodeType":"YulFunctionCall","src":"18086:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18073:12:22"},"nodeType":"YulFunctionCall","src":"18073:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18063:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"18151:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18153:77:22"},"nodeType":"YulFunctionCall","src":"18153:79:22"},"nodeType":"YulExpressionStatement","src":"18153:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18123:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"18131:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18120:2:22"},"nodeType":"YulFunctionCall","src":"18120:30:22"},"nodeType":"YulIf","src":"18117:117:22"},{"nodeType":"YulAssignment","src":"18248:96:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18316:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"18327:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18312:3:22"},"nodeType":"YulFunctionCall","src":"18312:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18336:7:22"}],"functionName":{"name":"abi_decode_t_struct$_UserOperation_$3364_calldata_ptr","nodeType":"YulIdentifier","src":"18258:53:22"},"nodeType":"YulFunctionCall","src":"18258:86:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18248:6:22"}]}]},{"nodeType":"YulBlock","src":"18364:141:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18379:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"18393:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18383:6:22","type":""}]},{"nodeType":"YulAssignment","src":"18409:86:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18467:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"18478:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18463:3:22"},"nodeType":"YulFunctionCall","src":"18463:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18487:7:22"}],"functionName":{"name":"abi_decode_t_enum$_ExchangeRateSource_$3489","nodeType":"YulIdentifier","src":"18419:43:22"},"nodeType":"YulFunctionCall","src":"18419:76:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18409:6:22"}]}]},{"nodeType":"YulBlock","src":"18515:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18530:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"18544:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18534:6:22","type":""}]},{"nodeType":"YulAssignment","src":"18560:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18594:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"18605:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18590:3:22"},"nodeType":"YulFunctionCall","src":"18590:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18614:7:22"}],"functionName":{"name":"abi_decode_t_uint48","nodeType":"YulIdentifier","src":"18570:19:22"},"nodeType":"YulFunctionCall","src":"18570:52:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18560:6:22"}]}]},{"nodeType":"YulBlock","src":"18642:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18657:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"18671:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18661:6:22","type":""}]},{"nodeType":"YulAssignment","src":"18687:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18721:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"18732:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18717:3:22"},"nodeType":"YulFunctionCall","src":"18717:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18741:7:22"}],"functionName":{"name":"abi_decode_t_uint48","nodeType":"YulIdentifier","src":"18697:19:22"},"nodeType":"YulFunctionCall","src":"18697:52:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"18687:6:22"}]}]},{"nodeType":"YulBlock","src":"18769:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18784:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"18798:3:22","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18788:6:22","type":""}]},{"nodeType":"YulAssignment","src":"18815:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18850:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"18861:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18846:3:22"},"nodeType":"YulFunctionCall","src":"18846:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18870:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18825:20:22"},"nodeType":"YulFunctionCall","src":"18825:53:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"18815:6:22"}]}]},{"nodeType":"YulBlock","src":"18898:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18913:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"18927:3:22","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18917:6:22","type":""}]},{"nodeType":"YulAssignment","src":"18944:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18979:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"18990:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18975:3:22"},"nodeType":"YulFunctionCall","src":"18975:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18999:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18954:20:22"},"nodeType":"YulFunctionCall","src":"18954:53:22"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"18944:6:22"}]}]},{"nodeType":"YulBlock","src":"19027:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19042:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"19056:3:22","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19046:6:22","type":""}]},{"nodeType":"YulAssignment","src":"19073:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19108:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"19119:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19104:3:22"},"nodeType":"YulFunctionCall","src":"19104:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19128:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19083:20:22"},"nodeType":"YulFunctionCall","src":"19083:53:22"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"19073:6:22"}]}]},{"nodeType":"YulBlock","src":"19156:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19171:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"19185:3:22","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19175:6:22","type":""}]},{"nodeType":"YulAssignment","src":"19202:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19236:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"19247:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19232:3:22"},"nodeType":"YulFunctionCall","src":"19232:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19256:7:22"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"19212:19:22"},"nodeType":"YulFunctionCall","src":"19212:52:22"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"19202:6:22"}]}]}]},"name":"abi_decode_tuple_t_struct$_UserOperation_$3364_calldata_ptrt_enum$_ExchangeRateSource_$3489t_uint48t_uint48t_addresst_addresst_uint256t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17818:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17829:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17841:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17849:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17857:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17865:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17873:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17881:6:22","type":""},{"name":"value6","nodeType":"YulTypedName","src":"17889:6:22","type":""},{"name":"value7","nodeType":"YulTypedName","src":"17897:6:22","type":""}],"src":"17666:1615:22"},{"body":{"nodeType":"YulBlock","src":"19332:32:22","statements":[{"nodeType":"YulAssignment","src":"19342:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"19353:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19342:7:22"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19314:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19324:7:22","type":""}],"src":"19287:77:22"},{"body":{"nodeType":"YulBlock","src":"19435:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19452:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19475:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"19457:17:22"},"nodeType":"YulFunctionCall","src":"19457:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19445:6:22"},"nodeType":"YulFunctionCall","src":"19445:37:22"},"nodeType":"YulExpressionStatement","src":"19445:37:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19423:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19430:3:22","type":""}],"src":"19370:118:22"},{"body":{"nodeType":"YulBlock","src":"19592:124:22","statements":[{"nodeType":"YulAssignment","src":"19602:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19614:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19625:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19610:3:22"},"nodeType":"YulFunctionCall","src":"19610:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19602:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19682:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19695:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19706:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19691:3:22"},"nodeType":"YulFunctionCall","src":"19691:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19638:43:22"},"nodeType":"YulFunctionCall","src":"19638:71:22"},"nodeType":"YulExpressionStatement","src":"19638:71:22"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19564:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19576:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19587:4:22","type":""}],"src":"19494:222:22"},{"body":{"nodeType":"YulBlock","src":"19788:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"19834:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19836:77:22"},"nodeType":"YulFunctionCall","src":"19836:79:22"},"nodeType":"YulExpressionStatement","src":"19836:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19809:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"19818:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19805:3:22"},"nodeType":"YulFunctionCall","src":"19805:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"19830:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19801:3:22"},"nodeType":"YulFunctionCall","src":"19801:32:22"},"nodeType":"YulIf","src":"19798:119:22"},{"nodeType":"YulBlock","src":"19927:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19942:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"19956:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19946:6:22","type":""}]},{"nodeType":"YulAssignment","src":"19971:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20006:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"20017:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20002:3:22"},"nodeType":"YulFunctionCall","src":"20002:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20026:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19981:20:22"},"nodeType":"YulFunctionCall","src":"19981:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19971:6:22"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19758:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19769:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19781:6:22","type":""}],"src":"19722:329:22"},{"body":{"nodeType":"YulBlock","src":"20123:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"20169:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20171:77:22"},"nodeType":"YulFunctionCall","src":"20171:79:22"},"nodeType":"YulExpressionStatement","src":"20171:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20144:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"20153:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20140:3:22"},"nodeType":"YulFunctionCall","src":"20140:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"20165:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20136:3:22"},"nodeType":"YulFunctionCall","src":"20136:32:22"},"nodeType":"YulIf","src":"20133:119:22"},{"nodeType":"YulBlock","src":"20262:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"20277:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"20291:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20281:6:22","type":""}]},{"nodeType":"YulAssignment","src":"20306:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20341:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"20352:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20337:3:22"},"nodeType":"YulFunctionCall","src":"20337:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20361:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20316:20:22"},"nodeType":"YulFunctionCall","src":"20316:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20306:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20093:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20104:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20116:6:22","type":""}],"src":"20057:329:22"},{"body":{"nodeType":"YulBlock","src":"20435:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"20492:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20501:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20504:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20494:6:22"},"nodeType":"YulFunctionCall","src":"20494:12:22"},"nodeType":"YulExpressionStatement","src":"20494:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20458:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20483:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"20465:17:22"},"nodeType":"YulFunctionCall","src":"20465:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20455:2:22"},"nodeType":"YulFunctionCall","src":"20455:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20448:6:22"},"nodeType":"YulFunctionCall","src":"20448:43:22"},"nodeType":"YulIf","src":"20445:63:22"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20428:5:22","type":""}],"src":"20392:122:22"},{"body":{"nodeType":"YulBlock","src":"20572:87:22","statements":[{"nodeType":"YulAssignment","src":"20582:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20604:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20591:12:22"},"nodeType":"YulFunctionCall","src":"20591:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20582:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20647:5:22"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"20620:26:22"},"nodeType":"YulFunctionCall","src":"20620:33:22"},"nodeType":"YulExpressionStatement","src":"20620:33:22"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20550:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"20558:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20566:5:22","type":""}],"src":"20520:139:22"},{"body":{"nodeType":"YulBlock","src":"20798:712:22","statements":[{"body":{"nodeType":"YulBlock","src":"20844:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20846:77:22"},"nodeType":"YulFunctionCall","src":"20846:79:22"},"nodeType":"YulExpressionStatement","src":"20846:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20819:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"20828:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20815:3:22"},"nodeType":"YulFunctionCall","src":"20815:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"20840:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20811:3:22"},"nodeType":"YulFunctionCall","src":"20811:32:22"},"nodeType":"YulIf","src":"20808:119:22"},{"nodeType":"YulBlock","src":"20937:310:22","statements":[{"nodeType":"YulVariableDeclaration","src":"20952:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20983:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20994:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20979:3:22"},"nodeType":"YulFunctionCall","src":"20979:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20966:12:22"},"nodeType":"YulFunctionCall","src":"20966:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20956:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"21044:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21046:77:22"},"nodeType":"YulFunctionCall","src":"21046:79:22"},"nodeType":"YulExpressionStatement","src":"21046:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21016:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21024:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21013:2:22"},"nodeType":"YulFunctionCall","src":"21013:30:22"},"nodeType":"YulIf","src":"21010:117:22"},{"nodeType":"YulAssignment","src":"21141:96:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21209:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"21220:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21205:3:22"},"nodeType":"YulFunctionCall","src":"21205:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21229:7:22"}],"functionName":{"name":"abi_decode_t_struct$_UserOperation_$3364_calldata_ptr","nodeType":"YulIdentifier","src":"21151:53:22"},"nodeType":"YulFunctionCall","src":"21151:86:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21141:6:22"}]}]},{"nodeType":"YulBlock","src":"21257:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"21272:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"21286:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21276:6:22","type":""}]},{"nodeType":"YulAssignment","src":"21302:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21337:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"21348:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21333:3:22"},"nodeType":"YulFunctionCall","src":"21333:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21357:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"21312:20:22"},"nodeType":"YulFunctionCall","src":"21312:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21302:6:22"}]}]},{"nodeType":"YulBlock","src":"21385:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"21400:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"21414:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21404:6:22","type":""}]},{"nodeType":"YulAssignment","src":"21430:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21465:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"21476:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21461:3:22"},"nodeType":"YulFunctionCall","src":"21461:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21485:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21440:20:22"},"nodeType":"YulFunctionCall","src":"21440:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21430:6:22"}]}]}]},"name":"abi_decode_tuple_t_struct$_UserOperation_$3364_calldata_ptrt_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20752:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20763:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20775:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20783:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20791:6:22","type":""}],"src":"20665:845:22"},{"body":{"nodeType":"YulBlock","src":"21611:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21628:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21633:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21621:6:22"},"nodeType":"YulFunctionCall","src":"21621:19:22"},"nodeType":"YulExpressionStatement","src":"21621:19:22"},{"nodeType":"YulAssignment","src":"21649:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21668:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"21673:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21664:3:22"},"nodeType":"YulFunctionCall","src":"21664:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21649:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21583:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"21588:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21599:11:22","type":""}],"src":"21516:168:22"},{"body":{"nodeType":"YulBlock","src":"21780:283:22","statements":[{"nodeType":"YulVariableDeclaration","src":"21790:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21836:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21804:31:22"},"nodeType":"YulFunctionCall","src":"21804:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21794:6:22","type":""}]},{"nodeType":"YulAssignment","src":"21851:77:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21916:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21921:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21858:57:22"},"nodeType":"YulFunctionCall","src":"21858:70:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21851:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21976:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"21983:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21972:3:22"},"nodeType":"YulFunctionCall","src":"21972:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"21990:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21995:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"21937:34:22"},"nodeType":"YulFunctionCall","src":"21937:65:22"},"nodeType":"YulExpressionStatement","src":"21937:65:22"},{"nodeType":"YulAssignment","src":"22011:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22022:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22049:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22027:21:22"},"nodeType":"YulFunctionCall","src":"22027:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22018:3:22"},"nodeType":"YulFunctionCall","src":"22018:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22011:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21761:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21768:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21776:3:22","type":""}],"src":"21690:373:22"},{"body":{"nodeType":"YulBlock","src":"22213:275:22","statements":[{"nodeType":"YulAssignment","src":"22223:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22235:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22246:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22231:3:22"},"nodeType":"YulFunctionCall","src":"22231:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22223:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22270:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22281:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22266:3:22"},"nodeType":"YulFunctionCall","src":"22266:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22289:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"22295:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22285:3:22"},"nodeType":"YulFunctionCall","src":"22285:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22259:6:22"},"nodeType":"YulFunctionCall","src":"22259:47:22"},"nodeType":"YulExpressionStatement","src":"22259:47:22"},{"nodeType":"YulAssignment","src":"22315:84:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22385:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"22394:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22323:61:22"},"nodeType":"YulFunctionCall","src":"22323:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22315:4:22"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22453:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22466:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22477:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22462:3:22"},"nodeType":"YulFunctionCall","src":"22462:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22409:43:22"},"nodeType":"YulFunctionCall","src":"22409:72:22"},"nodeType":"YulExpressionStatement","src":"22409:72:22"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22177:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22189:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22197:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22208:4:22","type":""}],"src":"22069:419:22"},{"body":{"nodeType":"YulBlock","src":"22557:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22574:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22596:5:22"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"22579:16:22"},"nodeType":"YulFunctionCall","src":"22579:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22567:6:22"},"nodeType":"YulFunctionCall","src":"22567:36:22"},"nodeType":"YulExpressionStatement","src":"22567:36:22"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22545:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22552:3:22","type":""}],"src":"22494:115:22"},{"body":{"nodeType":"YulBlock","src":"22711:122:22","statements":[{"nodeType":"YulAssignment","src":"22721:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22733:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22744:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22729:3:22"},"nodeType":"YulFunctionCall","src":"22729:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22721:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22799:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22812:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22823:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22808:3:22"},"nodeType":"YulFunctionCall","src":"22808:17:22"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"22757:41:22"},"nodeType":"YulFunctionCall","src":"22757:69:22"},"nodeType":"YulExpressionStatement","src":"22757:69:22"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22683:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22695:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22706:4:22","type":""}],"src":"22615:218:22"},{"body":{"nodeType":"YulBlock","src":"22920:61:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22937:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22968:5:22"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"22942:25:22"},"nodeType":"YulFunctionCall","src":"22942:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22930:6:22"},"nodeType":"YulFunctionCall","src":"22930:45:22"},"nodeType":"YulExpressionStatement","src":"22930:45:22"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22908:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22915:3:22","type":""}],"src":"22839:142:22"},{"body":{"nodeType":"YulBlock","src":"23129:222:22","statements":[{"nodeType":"YulAssignment","src":"23139:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23151:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"23162:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23147:3:22"},"nodeType":"YulFunctionCall","src":"23147:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23139:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23235:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23248:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"23259:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23244:3:22"},"nodeType":"YulFunctionCall","src":"23244:17:22"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"23175:59:22"},"nodeType":"YulFunctionCall","src":"23175:87:22"},"nodeType":"YulExpressionStatement","src":"23175:87:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23316:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23329:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"23340:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23325:3:22"},"nodeType":"YulFunctionCall","src":"23325:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23272:43:22"},"nodeType":"YulFunctionCall","src":"23272:72:22"},"nodeType":"YulExpressionStatement","src":"23272:72:22"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23093:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23105:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23113:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23124:4:22","type":""}],"src":"22987:364:22"},{"body":{"nodeType":"YulBlock","src":"23420:80:22","statements":[{"nodeType":"YulAssignment","src":"23430:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23445:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23439:5:22"},"nodeType":"YulFunctionCall","src":"23439:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23430:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23488:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"23461:26:22"},"nodeType":"YulFunctionCall","src":"23461:33:22"},"nodeType":"YulExpressionStatement","src":"23461:33:22"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23398:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"23406:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23414:5:22","type":""}],"src":"23357:143:22"},{"body":{"nodeType":"YulBlock","src":"23583:274:22","statements":[{"body":{"nodeType":"YulBlock","src":"23629:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23631:77:22"},"nodeType":"YulFunctionCall","src":"23631:79:22"},"nodeType":"YulExpressionStatement","src":"23631:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23604:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"23613:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23600:3:22"},"nodeType":"YulFunctionCall","src":"23600:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"23625:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23596:3:22"},"nodeType":"YulFunctionCall","src":"23596:32:22"},"nodeType":"YulIf","src":"23593:119:22"},{"nodeType":"YulBlock","src":"23722:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"23737:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"23751:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23741:6:22","type":""}]},{"nodeType":"YulAssignment","src":"23766:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23812:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"23823:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23808:3:22"},"nodeType":"YulFunctionCall","src":"23808:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23832:7:22"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"23776:31:22"},"nodeType":"YulFunctionCall","src":"23776:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23766:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23553:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23564:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23576:6:22","type":""}],"src":"23506:351:22"},{"body":{"nodeType":"YulBlock","src":"23891:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23908:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23911:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23901:6:22"},"nodeType":"YulFunctionCall","src":"23901:88:22"},"nodeType":"YulExpressionStatement","src":"23901:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24005:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24008:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23998:6:22"},"nodeType":"YulFunctionCall","src":"23998:15:22"},"nodeType":"YulExpressionStatement","src":"23998:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24029:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24032:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24022:6:22"},"nodeType":"YulFunctionCall","src":"24022:15:22"},"nodeType":"YulExpressionStatement","src":"24022:15:22"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"23863:180:22"},{"body":{"nodeType":"YulBlock","src":"24129:277:22","statements":[{"body":{"nodeType":"YulBlock","src":"24175:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24177:77:22"},"nodeType":"YulFunctionCall","src":"24177:79:22"},"nodeType":"YulExpressionStatement","src":"24177:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24150:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"24159:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24146:3:22"},"nodeType":"YulFunctionCall","src":"24146:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"24171:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24142:3:22"},"nodeType":"YulFunctionCall","src":"24142:32:22"},"nodeType":"YulIf","src":"24139:119:22"},{"nodeType":"YulBlock","src":"24268:131:22","statements":[{"nodeType":"YulVariableDeclaration","src":"24283:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"24297:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24287:6:22","type":""}]},{"nodeType":"YulAssignment","src":"24312:77:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24361:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"24372:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24357:3:22"},"nodeType":"YulFunctionCall","src":"24357:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24381:7:22"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$225","nodeType":"YulIdentifier","src":"24322:34:22"},"nodeType":"YulFunctionCall","src":"24322:67:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24312:6:22"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$225","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24099:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24110:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24122:6:22","type":""}],"src":"24049:357:22"},{"body":{"nodeType":"YulBlock","src":"24508:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24525:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"24530:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24518:6:22"},"nodeType":"YulFunctionCall","src":"24518:19:22"},"nodeType":"YulExpressionStatement","src":"24518:19:22"},{"nodeType":"YulAssignment","src":"24546:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24565:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"24570:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24561:3:22"},"nodeType":"YulFunctionCall","src":"24561:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"24546:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24480:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"24485:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"24496:11:22","type":""}],"src":"24412:169:22"},{"body":{"nodeType":"YulBlock","src":"24693:122:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24715:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24723:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24711:3:22"},"nodeType":"YulFunctionCall","src":"24711:14:22"},{"hexValue":"4254504d3a20496e76616c6964206c656e67746820666f72207061796d617374","kind":"string","nodeType":"YulLiteral","src":"24727:34:22","type":"","value":"BTPM: Invalid length for paymast"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24704:6:22"},"nodeType":"YulFunctionCall","src":"24704:58:22"},"nodeType":"YulExpressionStatement","src":"24704:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24783:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24791:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24779:3:22"},"nodeType":"YulFunctionCall","src":"24779:15:22"},{"hexValue":"6572416e6444617461","kind":"string","nodeType":"YulLiteral","src":"24796:11:22","type":"","value":"erAndData"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24772:6:22"},"nodeType":"YulFunctionCall","src":"24772:36:22"},"nodeType":"YulExpressionStatement","src":"24772:36:22"}]},"name":"store_literal_in_memory_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24685:6:22","type":""}],"src":"24587:228:22"},{"body":{"nodeType":"YulBlock","src":"24967:220:22","statements":[{"nodeType":"YulAssignment","src":"24977:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25043:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"25048:2:22","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24984:58:22"},"nodeType":"YulFunctionCall","src":"24984:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24977:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25149:3:22"}],"functionName":{"name":"store_literal_in_memory_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3","nodeType":"YulIdentifier","src":"25060:88:22"},"nodeType":"YulFunctionCall","src":"25060:93:22"},"nodeType":"YulExpressionStatement","src":"25060:93:22"},{"nodeType":"YulAssignment","src":"25162:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25173:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"25178:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25169:3:22"},"nodeType":"YulFunctionCall","src":"25169:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25162:3:22"}]}]},"name":"abi_encode_t_stringliteral_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24955:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24963:3:22","type":""}],"src":"24821:366:22"},{"body":{"nodeType":"YulBlock","src":"25364:248:22","statements":[{"nodeType":"YulAssignment","src":"25374:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25386:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"25397:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25382:3:22"},"nodeType":"YulFunctionCall","src":"25382:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25374:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25421:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"25432:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25417:3:22"},"nodeType":"YulFunctionCall","src":"25417:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25440:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"25446:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25436:3:22"},"nodeType":"YulFunctionCall","src":"25436:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25410:6:22"},"nodeType":"YulFunctionCall","src":"25410:47:22"},"nodeType":"YulExpressionStatement","src":"25410:47:22"},{"nodeType":"YulAssignment","src":"25466:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25600:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25474:124:22"},"nodeType":"YulFunctionCall","src":"25474:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25466:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25344:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25359:4:22","type":""}],"src":"25193:419:22"},{"body":{"nodeType":"YulBlock","src":"25646:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25663:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25666:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25656:6:22"},"nodeType":"YulFunctionCall","src":"25656:88:22"},"nodeType":"YulExpressionStatement","src":"25656:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25760:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25763:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25753:6:22"},"nodeType":"YulFunctionCall","src":"25753:15:22"},"nodeType":"YulExpressionStatement","src":"25753:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25784:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25787:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25777:6:22"},"nodeType":"YulFunctionCall","src":"25777:15:22"},"nodeType":"YulExpressionStatement","src":"25777:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"25618:180:22"},{"body":{"nodeType":"YulBlock","src":"25849:149:22","statements":[{"nodeType":"YulAssignment","src":"25859:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25882:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25864:17:22"},"nodeType":"YulFunctionCall","src":"25864:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25859:1:22"}]},{"nodeType":"YulAssignment","src":"25893:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25916:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25898:17:22"},"nodeType":"YulFunctionCall","src":"25898:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25893:1:22"}]},{"nodeType":"YulAssignment","src":"25927:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25939:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"25942:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25935:3:22"},"nodeType":"YulFunctionCall","src":"25935:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"25927:4:22"}]},{"body":{"nodeType":"YulBlock","src":"25969:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25971:16:22"},"nodeType":"YulFunctionCall","src":"25971:18:22"},"nodeType":"YulExpressionStatement","src":"25971:18:22"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"25960:4:22"},{"name":"x","nodeType":"YulIdentifier","src":"25966:1:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25957:2:22"},"nodeType":"YulFunctionCall","src":"25957:11:22"},"nodeType":"YulIf","src":"25954:37:22"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25835:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"25838:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"25844:4:22","type":""}],"src":"25804:194:22"},{"body":{"nodeType":"YulBlock","src":"26093:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26110:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26113:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26103:6:22"},"nodeType":"YulFunctionCall","src":"26103:12:22"},"nodeType":"YulExpressionStatement","src":"26103:12:22"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulFunctionDefinition","src":"26004:117:22"},{"body":{"nodeType":"YulBlock","src":"26216:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26233:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26236:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26226:6:22"},"nodeType":"YulFunctionCall","src":"26226:12:22"},"nodeType":"YulExpressionStatement","src":"26226:12:22"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulFunctionDefinition","src":"26127:117:22"},{"body":{"nodeType":"YulBlock","src":"26376:343:22","statements":[{"body":{"nodeType":"YulBlock","src":"26414:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulIdentifier","src":"26416:77:22"},"nodeType":"YulFunctionCall","src":"26416:79:22"},"nodeType":"YulExpressionStatement","src":"26416:79:22"}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"26392:10:22"},{"name":"endIndex","nodeType":"YulIdentifier","src":"26404:8:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26389:2:22"},"nodeType":"YulFunctionCall","src":"26389:24:22"},"nodeType":"YulIf","src":"26386:111:22"},{"body":{"nodeType":"YulBlock","src":"26530:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulIdentifier","src":"26532:77:22"},"nodeType":"YulFunctionCall","src":"26532:79:22"},"nodeType":"YulExpressionStatement","src":"26532:79:22"}]},"condition":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"26512:8:22"},{"name":"length","nodeType":"YulIdentifier","src":"26522:6:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26509:2:22"},"nodeType":"YulFunctionCall","src":"26509:20:22"},"nodeType":"YulIf","src":"26506:107:22"},{"nodeType":"YulAssignment","src":"26622:44:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26639:6:22"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"26651:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"26663:1:22","type":"","value":"1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"26647:3:22"},"nodeType":"YulFunctionCall","src":"26647:18:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26635:3:22"},"nodeType":"YulFunctionCall","src":"26635:31:22"},"variableNames":[{"name":"offsetOut","nodeType":"YulIdentifier","src":"26622:9:22"}]},{"nodeType":"YulAssignment","src":"26675:38:22","value":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"26692:8:22"},{"name":"startIndex","nodeType":"YulIdentifier","src":"26702:10:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26688:3:22"},"nodeType":"YulFunctionCall","src":"26688:25:22"},"variableNames":[{"name":"lengthOut","nodeType":"YulIdentifier","src":"26675:9:22"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"26314:6:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"26322:6:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"26330:10:22","type":""},{"name":"endIndex","nodeType":"YulTypedName","src":"26342:8:22","type":""}],"returnVariables":[{"name":"offsetOut","nodeType":"YulTypedName","src":"26355:9:22","type":""},{"name":"lengthOut","nodeType":"YulTypedName","src":"26366:9:22","type":""}],"src":"26250:469:22"},{"body":{"nodeType":"YulBlock","src":"26790:31:22","statements":[{"nodeType":"YulAssignment","src":"26801:13:22","value":{"name":"len","nodeType":"YulIdentifier","src":"26811:3:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26801:6:22"}]}]},"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26768:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"26775:3:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"26783:6:22","type":""}],"src":"26725:96:22"},{"body":{"nodeType":"YulBlock","src":"26885:28:22","statements":[{"nodeType":"YulAssignment","src":"26895:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"26903:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"26895:4:22"}]}]},"name":"array_dataslot_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"26872:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"26880:4:22","type":""}],"src":"26827:86:22"},{"body":{"nodeType":"YulBlock","src":"26963:105:22","statements":[{"nodeType":"YulAssignment","src":"26973:89:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26988:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"26995:66:22","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26984:3:22"},"nodeType":"YulFunctionCall","src":"26984:78:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26973:7:22"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26945:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26955:7:22","type":""}],"src":"26919:149:22"},{"body":{"nodeType":"YulBlock","src":"27127:54:22","statements":[{"nodeType":"YulAssignment","src":"27137:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"27162:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"27168:5:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27158:3:22"},"nodeType":"YulFunctionCall","src":"27158:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"27137:8:22"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"27102:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"27108:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"27118:8:22","type":""}],"src":"27074:107:22"},{"body":{"nodeType":"YulBlock","src":"27283:452:22","statements":[{"nodeType":"YulVariableDeclaration","src":"27294:59:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"27342:5:22"},{"name":"len","nodeType":"YulIdentifier","src":"27349:3:22"}],"functionName":{"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"27308:33:22"},"nodeType":"YulFunctionCall","src":"27308:45:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27298:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27362:21:22","value":{"name":"array","nodeType":"YulIdentifier","src":"27378:5:22"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"27366:8:22","type":""}]},{"nodeType":"YulAssignment","src":"27393:49:22","value":{"arguments":[{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"27432:8:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27419:12:22"},"nodeType":"YulFunctionCall","src":"27419:22:22"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"27402:16:22"},"nodeType":"YulFunctionCall","src":"27402:40:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27393:5:22"}]},{"body":{"nodeType":"YulBlock","src":"27469:259:22","statements":[{"nodeType":"YulAssignment","src":"27483:235:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27513:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27580:1:22","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27587:1:22","type":"","value":"1"},{"name":"length","nodeType":"YulIdentifier","src":"27590:6:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27583:3:22"},"nodeType":"YulFunctionCall","src":"27583:14:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27576:3:22"},"nodeType":"YulFunctionCall","src":"27576:22:22"},{"kind":"number","nodeType":"YulLiteral","src":"27620:66:22","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"27536:18:22"},"nodeType":"YulFunctionCall","src":"27536:168:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27492:3:22"},"nodeType":"YulFunctionCall","src":"27492:226:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27483:5:22"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27458:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"27466:1:22","type":"","value":"1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27455:2:22"},"nodeType":"YulFunctionCall","src":"27455:13:22"},"nodeType":"YulIf","src":"27452:276:22"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"27262:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"27269:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"27277:5:22","type":""}],"src":"27187:548:22"},{"body":{"nodeType":"YulBlock","src":"27905:919:22","statements":[{"body":{"nodeType":"YulBlock","src":"27952:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"27954:77:22"},"nodeType":"YulFunctionCall","src":"27954:79:22"},"nodeType":"YulExpressionStatement","src":"27954:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27926:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"27935:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27922:3:22"},"nodeType":"YulFunctionCall","src":"27922:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"27947:3:22","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27918:3:22"},"nodeType":"YulFunctionCall","src":"27918:33:22"},"nodeType":"YulIf","src":"27915:120:22"},{"nodeType":"YulBlock","src":"28045:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"28060:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"28074:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28064:6:22","type":""}]},{"nodeType":"YulAssignment","src":"28089:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28123:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"28134:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28119:3:22"},"nodeType":"YulFunctionCall","src":"28119:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28143:7:22"}],"functionName":{"name":"abi_decode_t_uint48","nodeType":"YulIdentifier","src":"28099:19:22"},"nodeType":"YulFunctionCall","src":"28099:52:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28089:6:22"}]}]},{"nodeType":"YulBlock","src":"28171:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"28186:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"28200:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28190:6:22","type":""}]},{"nodeType":"YulAssignment","src":"28216:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28250:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"28261:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28246:3:22"},"nodeType":"YulFunctionCall","src":"28246:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28270:7:22"}],"functionName":{"name":"abi_decode_t_uint48","nodeType":"YulIdentifier","src":"28226:19:22"},"nodeType":"YulFunctionCall","src":"28226:52:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"28216:6:22"}]}]},{"nodeType":"YulBlock","src":"28298:126:22","statements":[{"nodeType":"YulVariableDeclaration","src":"28313:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"28327:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28317:6:22","type":""}]},{"nodeType":"YulAssignment","src":"28343:71:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28386:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"28397:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28382:3:22"},"nodeType":"YulFunctionCall","src":"28382:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28406:7:22"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"28353:28:22"},"nodeType":"YulFunctionCall","src":"28353:61:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"28343:6:22"}]}]},{"nodeType":"YulBlock","src":"28434:126:22","statements":[{"nodeType":"YulVariableDeclaration","src":"28449:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"28463:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28453:6:22","type":""}]},{"nodeType":"YulAssignment","src":"28479:71:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28522:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"28533:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28518:3:22"},"nodeType":"YulFunctionCall","src":"28518:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28542:7:22"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"28489:28:22"},"nodeType":"YulFunctionCall","src":"28489:61:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"28479:6:22"}]}]},{"nodeType":"YulBlock","src":"28570:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"28585:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"28599:3:22","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28589:6:22","type":""}]},{"nodeType":"YulAssignment","src":"28616:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28651:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"28662:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28647:3:22"},"nodeType":"YulFunctionCall","src":"28647:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28671:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"28626:20:22"},"nodeType":"YulFunctionCall","src":"28626:53:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"28616:6:22"}]}]},{"nodeType":"YulBlock","src":"28699:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"28714:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"28728:3:22","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28718:6:22","type":""}]},{"nodeType":"YulAssignment","src":"28745:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28779:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"28790:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28775:3:22"},"nodeType":"YulFunctionCall","src":"28775:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28799:7:22"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"28755:19:22"},"nodeType":"YulFunctionCall","src":"28755:52:22"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"28745:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint48t_uint48t_address_payablet_address_payablet_uint256t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27835:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27846:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27858:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27866:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27874:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27882:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27890:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"27898:6:22","type":""}],"src":"27741:1083:22"},{"body":{"nodeType":"YulBlock","src":"28944:140:22","statements":[{"nodeType":"YulAssignment","src":"28954:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28966:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"28977:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28962:3:22"},"nodeType":"YulFunctionCall","src":"28962:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28954:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29050:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29063:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"29074:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29059:3:22"},"nodeType":"YulFunctionCall","src":"29059:17:22"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"28990:59:22"},"nodeType":"YulFunctionCall","src":"28990:87:22"},"nodeType":"YulExpressionStatement","src":"28990:87:22"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28916:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28928:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28939:4:22","type":""}],"src":"28830:254:22"},{"body":{"nodeType":"YulBlock","src":"29176:87:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29193:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29250:5:22"}],"functionName":{"name":"convert_t_enum$_ExchangeRateSource_$3489_to_t_uint8","nodeType":"YulIdentifier","src":"29198:51:22"},"nodeType":"YulFunctionCall","src":"29198:58:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29186:6:22"},"nodeType":"YulFunctionCall","src":"29186:71:22"},"nodeType":"YulExpressionStatement","src":"29186:71:22"}]},"name":"abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29164:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29171:3:22","type":""}],"src":"29090:173:22"},{"body":{"nodeType":"YulBlock","src":"29332:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29349:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29371:5:22"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"29354:16:22"},"nodeType":"YulFunctionCall","src":"29354:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29342:6:22"},"nodeType":"YulFunctionCall","src":"29342:36:22"},"nodeType":"YulExpressionStatement","src":"29342:36:22"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29320:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29327:3:22","type":""}],"src":"29269:115:22"},{"body":{"nodeType":"YulBlock","src":"29773:953:22","statements":[{"nodeType":"YulAssignment","src":"29783:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29795:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"29806:3:22","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29791:3:22"},"nodeType":"YulFunctionCall","src":"29791:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29783:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29831:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"29842:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29827:3:22"},"nodeType":"YulFunctionCall","src":"29827:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29850:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"29856:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29846:3:22"},"nodeType":"YulFunctionCall","src":"29846:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29820:6:22"},"nodeType":"YulFunctionCall","src":"29820:47:22"},"nodeType":"YulExpressionStatement","src":"29820:47:22"},{"nodeType":"YulAssignment","src":"29876:84:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29946:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"29955:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29884:61:22"},"nodeType":"YulFunctionCall","src":"29884:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29876:4:22"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30014:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30027:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30038:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30023:3:22"},"nodeType":"YulFunctionCall","src":"30023:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29970:43:22"},"nodeType":"YulFunctionCall","src":"29970:72:22"},"nodeType":"YulExpressionStatement","src":"29970:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"30096:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30109:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30120:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30105:3:22"},"nodeType":"YulFunctionCall","src":"30105:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30052:43:22"},"nodeType":"YulFunctionCall","src":"30052:72:22"},"nodeType":"YulExpressionStatement","src":"30052:72:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"30199:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30212:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30223:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30208:3:22"},"nodeType":"YulFunctionCall","src":"30208:18:22"}],"functionName":{"name":"abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"30134:64:22"},"nodeType":"YulFunctionCall","src":"30134:93:22"},"nodeType":"YulExpressionStatement","src":"30134:93:22"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"30279:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30292:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30303:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30288:3:22"},"nodeType":"YulFunctionCall","src":"30288:19:22"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"30237:41:22"},"nodeType":"YulFunctionCall","src":"30237:71:22"},"nodeType":"YulExpressionStatement","src":"30237:71:22"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"30360:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30373:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30384:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30369:3:22"},"nodeType":"YulFunctionCall","src":"30369:19:22"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"30318:41:22"},"nodeType":"YulFunctionCall","src":"30318:71:22"},"nodeType":"YulExpressionStatement","src":"30318:71:22"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"30443:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30456:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30467:3:22","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30452:3:22"},"nodeType":"YulFunctionCall","src":"30452:19:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30399:43:22"},"nodeType":"YulFunctionCall","src":"30399:73:22"},"nodeType":"YulExpressionStatement","src":"30399:73:22"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"30526:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30539:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30550:3:22","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30535:3:22"},"nodeType":"YulFunctionCall","src":"30535:19:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30482:43:22"},"nodeType":"YulFunctionCall","src":"30482:73:22"},"nodeType":"YulExpressionStatement","src":"30482:73:22"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"30609:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30622:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30633:3:22","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30618:3:22"},"nodeType":"YulFunctionCall","src":"30618:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30565:43:22"},"nodeType":"YulFunctionCall","src":"30565:73:22"},"nodeType":"YulExpressionStatement","src":"30565:73:22"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"30690:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30703:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30714:3:22","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30699:3:22"},"nodeType":"YulFunctionCall","src":"30699:19:22"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"30648:41:22"},"nodeType":"YulFunctionCall","src":"30648:71:22"},"nodeType":"YulExpressionStatement","src":"30648:71:22"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256_t_address_t_enum$_ExchangeRateSource_$3489_t_uint48_t_uint48_t_address_t_address_t_uint256_t_uint32__to_t_bytes_memory_ptr_t_uint256_t_address_t_uint8_t_uint48_t_uint48_t_address_t_address_t_uint256_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29673:9:22","type":""},{"name":"value9","nodeType":"YulTypedName","src":"29685:6:22","type":""},{"name":"value8","nodeType":"YulTypedName","src":"29693:6:22","type":""},{"name":"value7","nodeType":"YulTypedName","src":"29701:6:22","type":""},{"name":"value6","nodeType":"YulTypedName","src":"29709:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"29717:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"29725:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29733:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29741:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29749:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29757:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29768:4:22","type":""}],"src":"29390:1336:22"},{"body":{"nodeType":"YulBlock","src":"30858:206:22","statements":[{"nodeType":"YulAssignment","src":"30868:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30880:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30891:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30876:3:22"},"nodeType":"YulFunctionCall","src":"30876:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30868:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30948:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30961:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30972:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30957:3:22"},"nodeType":"YulFunctionCall","src":"30957:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30904:43:22"},"nodeType":"YulFunctionCall","src":"30904:71:22"},"nodeType":"YulExpressionStatement","src":"30904:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31029:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31042:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"31053:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31038:3:22"},"nodeType":"YulFunctionCall","src":"31038:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30985:43:22"},"nodeType":"YulFunctionCall","src":"30985:72:22"},"nodeType":"YulExpressionStatement","src":"30985:72:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30822:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30834:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30842:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30853:4:22","type":""}],"src":"30732:332:22"},{"body":{"nodeType":"YulBlock","src":"31112:48:22","statements":[{"nodeType":"YulAssignment","src":"31122:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31147:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31140:6:22"},"nodeType":"YulFunctionCall","src":"31140:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31133:6:22"},"nodeType":"YulFunctionCall","src":"31133:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31122:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31094:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31104:7:22","type":""}],"src":"31070:90:22"},{"body":{"nodeType":"YulBlock","src":"31206:76:22","statements":[{"body":{"nodeType":"YulBlock","src":"31260:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31269:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31272:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31262:6:22"},"nodeType":"YulFunctionCall","src":"31262:12:22"},"nodeType":"YulExpressionStatement","src":"31262:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31229:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31251:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"31236:14:22"},"nodeType":"YulFunctionCall","src":"31236:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31226:2:22"},"nodeType":"YulFunctionCall","src":"31226:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31219:6:22"},"nodeType":"YulFunctionCall","src":"31219:40:22"},"nodeType":"YulIf","src":"31216:60:22"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31199:5:22","type":""}],"src":"31166:116:22"},{"body":{"nodeType":"YulBlock","src":"31348:77:22","statements":[{"nodeType":"YulAssignment","src":"31358:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31373:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31367:5:22"},"nodeType":"YulFunctionCall","src":"31367:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31358:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31413:5:22"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"31389:23:22"},"nodeType":"YulFunctionCall","src":"31389:30:22"},"nodeType":"YulExpressionStatement","src":"31389:30:22"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"31326:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"31334:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"31342:5:22","type":""}],"src":"31288:137:22"},{"body":{"nodeType":"YulBlock","src":"31505:271:22","statements":[{"body":{"nodeType":"YulBlock","src":"31551:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"31553:77:22"},"nodeType":"YulFunctionCall","src":"31553:79:22"},"nodeType":"YulExpressionStatement","src":"31553:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31526:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"31535:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31522:3:22"},"nodeType":"YulFunctionCall","src":"31522:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"31547:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31518:3:22"},"nodeType":"YulFunctionCall","src":"31518:32:22"},"nodeType":"YulIf","src":"31515:119:22"},{"nodeType":"YulBlock","src":"31644:125:22","statements":[{"nodeType":"YulVariableDeclaration","src":"31659:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"31673:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31663:6:22","type":""}]},{"nodeType":"YulAssignment","src":"31688:71:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31731:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"31742:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31727:3:22"},"nodeType":"YulFunctionCall","src":"31727:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31751:7:22"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"31698:28:22"},"nodeType":"YulFunctionCall","src":"31698:61:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"31688:6:22"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31475:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31486:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31498:6:22","type":""}],"src":"31431:345:22"},{"body":{"nodeType":"YulBlock","src":"31888:65:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31910:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"31918:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31906:3:22"},"nodeType":"YulFunctionCall","src":"31906:14:22"},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","kind":"string","nodeType":"YulLiteral","src":"31922:23:22","type":"","value":"Sender not EntryPoint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31899:6:22"},"nodeType":"YulFunctionCall","src":"31899:47:22"},"nodeType":"YulExpressionStatement","src":"31899:47:22"}]},"name":"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31880:6:22","type":""}],"src":"31782:171:22"},{"body":{"nodeType":"YulBlock","src":"32105:220:22","statements":[{"nodeType":"YulAssignment","src":"32115:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32181:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"32186:2:22","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32122:58:22"},"nodeType":"YulFunctionCall","src":"32122:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32115:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32287:3:22"}],"functionName":{"name":"store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","nodeType":"YulIdentifier","src":"32198:88:22"},"nodeType":"YulFunctionCall","src":"32198:93:22"},"nodeType":"YulExpressionStatement","src":"32198:93:22"},{"nodeType":"YulAssignment","src":"32300:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32311:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"32316:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32307:3:22"},"nodeType":"YulFunctionCall","src":"32307:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32300:3:22"}]}]},"name":"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32093:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32101:3:22","type":""}],"src":"31959:366:22"},{"body":{"nodeType":"YulBlock","src":"32502:248:22","statements":[{"nodeType":"YulAssignment","src":"32512:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32524:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"32535:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32520:3:22"},"nodeType":"YulFunctionCall","src":"32520:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32512:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32559:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"32570:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32555:3:22"},"nodeType":"YulFunctionCall","src":"32555:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32578:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"32584:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32574:3:22"},"nodeType":"YulFunctionCall","src":"32574:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32548:6:22"},"nodeType":"YulFunctionCall","src":"32548:47:22"},"nodeType":"YulExpressionStatement","src":"32548:47:22"},{"nodeType":"YulAssignment","src":"32604:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32738:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32612:124:22"},"nodeType":"YulFunctionCall","src":"32612:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32604:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32482:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32497:4:22","type":""}],"src":"32331:419:22"},{"body":{"nodeType":"YulBlock","src":"32976:1087:22","statements":[{"body":{"nodeType":"YulBlock","src":"33023:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33025:77:22"},"nodeType":"YulFunctionCall","src":"33025:79:22"},"nodeType":"YulExpressionStatement","src":"33025:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"32997:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"33006:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32993:3:22"},"nodeType":"YulFunctionCall","src":"32993:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"33018:3:22","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"32989:3:22"},"nodeType":"YulFunctionCall","src":"32989:33:22"},"nodeType":"YulIf","src":"32986:120:22"},{"nodeType":"YulBlock","src":"33116:125:22","statements":[{"nodeType":"YulVariableDeclaration","src":"33131:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"33145:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33135:6:22","type":""}]},{"nodeType":"YulAssignment","src":"33160:71:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33203:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"33214:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33199:3:22"},"nodeType":"YulFunctionCall","src":"33199:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33223:7:22"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"33170:28:22"},"nodeType":"YulFunctionCall","src":"33170:61:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33160:6:22"}]}]},{"nodeType":"YulBlock","src":"33251:132:22","statements":[{"nodeType":"YulVariableDeclaration","src":"33266:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"33280:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33270:6:22","type":""}]},{"nodeType":"YulAssignment","src":"33296:77:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33345:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"33356:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33341:3:22"},"nodeType":"YulFunctionCall","src":"33341:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33365:7:22"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$225","nodeType":"YulIdentifier","src":"33306:34:22"},"nodeType":"YulFunctionCall","src":"33306:67:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"33296:6:22"}]}]},{"nodeType":"YulBlock","src":"33393:126:22","statements":[{"nodeType":"YulVariableDeclaration","src":"33408:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"33422:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33412:6:22","type":""}]},{"nodeType":"YulAssignment","src":"33438:71:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33481:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"33492:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33477:3:22"},"nodeType":"YulFunctionCall","src":"33477:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33501:7:22"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"33448:28:22"},"nodeType":"YulFunctionCall","src":"33448:61:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"33438:6:22"}]}]},{"nodeType":"YulBlock","src":"33529:141:22","statements":[{"nodeType":"YulVariableDeclaration","src":"33544:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"33558:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33548:6:22","type":""}]},{"nodeType":"YulAssignment","src":"33574:86:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33632:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"33643:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33628:3:22"},"nodeType":"YulFunctionCall","src":"33628:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33652:7:22"}],"functionName":{"name":"abi_decode_t_enum$_ExchangeRateSource_$3489","nodeType":"YulIdentifier","src":"33584:43:22"},"nodeType":"YulFunctionCall","src":"33584:76:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"33574:6:22"}]}]},{"nodeType":"YulBlock","src":"33680:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"33695:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"33709:3:22","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33699:6:22","type":""}]},{"nodeType":"YulAssignment","src":"33726:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33761:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"33772:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33757:3:22"},"nodeType":"YulFunctionCall","src":"33757:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33781:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"33736:20:22"},"nodeType":"YulFunctionCall","src":"33736:53:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"33726:6:22"}]}]},{"nodeType":"YulBlock","src":"33809:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"33824:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"33838:3:22","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33828:6:22","type":""}]},{"nodeType":"YulAssignment","src":"33855:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33889:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"33900:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33885:3:22"},"nodeType":"YulFunctionCall","src":"33885:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33909:7:22"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"33865:19:22"},"nodeType":"YulFunctionCall","src":"33865:52:22"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"33855:6:22"}]}]},{"nodeType":"YulBlock","src":"33937:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"33952:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"33966:3:22","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33956:6:22","type":""}]},{"nodeType":"YulAssignment","src":"33983:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34018:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"34029:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34014:3:22"},"nodeType":"YulFunctionCall","src":"34014:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34038:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"33993:20:22"},"nodeType":"YulFunctionCall","src":"33993:53:22"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"33983:6:22"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_contract$_IERC20_$225t_address_payablet_enum$_ExchangeRateSource_$3489t_uint256t_uint32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32898:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"32909:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"32921:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32929:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32937:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32945:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"32953:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"32961:6:22","type":""},{"name":"value6","nodeType":"YulTypedName","src":"32969:6:22","type":""}],"src":"32756:1307:22"},{"body":{"nodeType":"YulBlock","src":"34117:362:22","statements":[{"nodeType":"YulAssignment","src":"34127:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34150:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34132:17:22"},"nodeType":"YulFunctionCall","src":"34132:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34127:1:22"}]},{"nodeType":"YulAssignment","src":"34161:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34184:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34166:17:22"},"nodeType":"YulFunctionCall","src":"34166:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34161:1:22"}]},{"nodeType":"YulVariableDeclaration","src":"34195:28:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34218:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"34221:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34214:3:22"},"nodeType":"YulFunctionCall","src":"34214:9:22"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"34199:11:22","type":""}]},{"nodeType":"YulAssignment","src":"34232:41:22","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"34261:11:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34243:17:22"},"nodeType":"YulFunctionCall","src":"34243:30:22"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"34232:7:22"}]},{"body":{"nodeType":"YulBlock","src":"34450:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34452:16:22"},"nodeType":"YulFunctionCall","src":"34452:18:22"},"nodeType":"YulExpressionStatement","src":"34452:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34383:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34376:6:22"},"nodeType":"YulFunctionCall","src":"34376:9:22"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34406:1:22"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"34413:7:22"},{"name":"x","nodeType":"YulIdentifier","src":"34422:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"34409:3:22"},"nodeType":"YulFunctionCall","src":"34409:15:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"34403:2:22"},"nodeType":"YulFunctionCall","src":"34403:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34356:2:22"},"nodeType":"YulFunctionCall","src":"34356:83:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34336:6:22"},"nodeType":"YulFunctionCall","src":"34336:113:22"},"nodeType":"YulIf","src":"34333:139:22"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34100:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"34103:1:22","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"34109:7:22","type":""}],"src":"34069:410:22"},{"body":{"nodeType":"YulBlock","src":"34529:147:22","statements":[{"nodeType":"YulAssignment","src":"34539:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34562:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34544:17:22"},"nodeType":"YulFunctionCall","src":"34544:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34539:1:22"}]},{"nodeType":"YulAssignment","src":"34573:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34596:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34578:17:22"},"nodeType":"YulFunctionCall","src":"34578:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34573:1:22"}]},{"nodeType":"YulAssignment","src":"34607:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34618:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"34621:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34614:3:22"},"nodeType":"YulFunctionCall","src":"34614:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"34607:3:22"}]},{"body":{"nodeType":"YulBlock","src":"34647:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34649:16:22"},"nodeType":"YulFunctionCall","src":"34649:18:22"},"nodeType":"YulExpressionStatement","src":"34649:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34639:1:22"},{"name":"sum","nodeType":"YulIdentifier","src":"34642:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34636:2:22"},"nodeType":"YulFunctionCall","src":"34636:10:22"},"nodeType":"YulIf","src":"34633:36:22"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34516:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"34519:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"34525:3:22","type":""}],"src":"34485:191:22"},{"body":{"nodeType":"YulBlock","src":"34710:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34727:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34730:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34720:6:22"},"nodeType":"YulFunctionCall","src":"34720:88:22"},"nodeType":"YulExpressionStatement","src":"34720:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34824:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"34827:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34817:6:22"},"nodeType":"YulFunctionCall","src":"34817:15:22"},"nodeType":"YulExpressionStatement","src":"34817:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34848:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34851:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34841:6:22"},"nodeType":"YulFunctionCall","src":"34841:15:22"},"nodeType":"YulExpressionStatement","src":"34841:15:22"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"34682:180:22"},{"body":{"nodeType":"YulBlock","src":"34910:143:22","statements":[{"nodeType":"YulAssignment","src":"34920:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34943:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34925:17:22"},"nodeType":"YulFunctionCall","src":"34925:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34920:1:22"}]},{"nodeType":"YulAssignment","src":"34954:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34977:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34959:17:22"},"nodeType":"YulFunctionCall","src":"34959:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34954:1:22"}]},{"body":{"nodeType":"YulBlock","src":"35001:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"35003:16:22"},"nodeType":"YulFunctionCall","src":"35003:18:22"},"nodeType":"YulExpressionStatement","src":"35003:18:22"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34998:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34991:6:22"},"nodeType":"YulFunctionCall","src":"34991:9:22"},"nodeType":"YulIf","src":"34988:35:22"},{"nodeType":"YulAssignment","src":"35033:14:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35042:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"35045:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"35038:3:22"},"nodeType":"YulFunctionCall","src":"35038:9:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"35033:1:22"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34899:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"34902:1:22","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"34908:1:22","type":""}],"src":"34868:185:22"},{"body":{"nodeType":"YulBlock","src":"35213:288:22","statements":[{"nodeType":"YulAssignment","src":"35223:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35235:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35246:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35231:3:22"},"nodeType":"YulFunctionCall","src":"35231:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35223:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35303:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35316:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35327:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35312:3:22"},"nodeType":"YulFunctionCall","src":"35312:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35259:43:22"},"nodeType":"YulFunctionCall","src":"35259:71:22"},"nodeType":"YulExpressionStatement","src":"35259:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35384:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35397:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35408:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35393:3:22"},"nodeType":"YulFunctionCall","src":"35393:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35340:43:22"},"nodeType":"YulFunctionCall","src":"35340:72:22"},"nodeType":"YulExpressionStatement","src":"35340:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35466:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35479:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35490:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35475:3:22"},"nodeType":"YulFunctionCall","src":"35475:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35422:43:22"},"nodeType":"YulFunctionCall","src":"35422:72:22"},"nodeType":"YulExpressionStatement","src":"35422:72:22"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35169:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35181:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35189:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35197:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35208:4:22","type":""}],"src":"35059:442:22"},{"body":{"nodeType":"YulBlock","src":"35736:473:22","statements":[{"nodeType":"YulAssignment","src":"35746:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35758:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35769:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35754:3:22"},"nodeType":"YulFunctionCall","src":"35754:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35746:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35827:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35840:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35851:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35836:3:22"},"nodeType":"YulFunctionCall","src":"35836:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35783:43:22"},"nodeType":"YulFunctionCall","src":"35783:71:22"},"nodeType":"YulExpressionStatement","src":"35783:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35906:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35919:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35930:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35915:3:22"},"nodeType":"YulFunctionCall","src":"35915:18:22"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"35864:41:22"},"nodeType":"YulFunctionCall","src":"35864:70:22"},"nodeType":"YulExpressionStatement","src":"35864:70:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35988:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36001:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"36012:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35997:3:22"},"nodeType":"YulFunctionCall","src":"35997:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"35944:43:22"},"nodeType":"YulFunctionCall","src":"35944:72:22"},"nodeType":"YulExpressionStatement","src":"35944:72:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36070:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36083:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"36094:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36079:3:22"},"nodeType":"YulFunctionCall","src":"36079:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36026:43:22"},"nodeType":"YulFunctionCall","src":"36026:72:22"},"nodeType":"YulExpressionStatement","src":"36026:72:22"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"36173:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36186:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"36197:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36182:3:22"},"nodeType":"YulFunctionCall","src":"36182:19:22"}],"functionName":{"name":"abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"36108:64:22"},"nodeType":"YulFunctionCall","src":"36108:94:22"},"nodeType":"YulExpressionStatement","src":"36108:94:22"}]},"name":"abi_encode_tuple_t_address_t_uint32_t_bytes32_t_uint256_t_enum$_ExchangeRateSource_$3489__to_t_address_t_uint32_t_bytes32_t_uint256_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35676:9:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"35688:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35696:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35704:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35712:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35720:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35731:4:22","type":""}],"src":"35507:702:22"},{"body":{"nodeType":"YulBlock","src":"36328:34:22","statements":[{"nodeType":"YulAssignment","src":"36338:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"36353:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"36338:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36300:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"36305:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"36316:11:22","type":""}],"src":"36215:147:22"},{"body":{"nodeType":"YulBlock","src":"36476:278:22","statements":[{"nodeType":"YulVariableDeclaration","src":"36486:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36532:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"36500:31:22"},"nodeType":"YulFunctionCall","src":"36500:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"36490:6:22","type":""}]},{"nodeType":"YulAssignment","src":"36547:95:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36630:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"36635:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36554:75:22"},"nodeType":"YulFunctionCall","src":"36554:88:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36547:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36690:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"36697:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36686:3:22"},"nodeType":"YulFunctionCall","src":"36686:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"36704:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"36709:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"36651:34:22"},"nodeType":"YulFunctionCall","src":"36651:65:22"},"nodeType":"YulExpressionStatement","src":"36651:65:22"},{"nodeType":"YulAssignment","src":"36725:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36736:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"36741:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36732:3:22"},"nodeType":"YulFunctionCall","src":"36732:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36725:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36457:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36464:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36472:3:22","type":""}],"src":"36368:386:22"},{"body":{"nodeType":"YulBlock","src":"36894:137:22","statements":[{"nodeType":"YulAssignment","src":"36905:100:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36992:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"37001:3:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36912:79:22"},"nodeType":"YulFunctionCall","src":"36912:93:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36905:3:22"}]},{"nodeType":"YulAssignment","src":"37015:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"37022:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37015:3:22"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36873:3:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36879:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36890:3:22","type":""}],"src":"36760:271:22"},{"body":{"nodeType":"YulBlock","src":"37126:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37143:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37146:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37136:6:22"},"nodeType":"YulFunctionCall","src":"37136:12:22"},"nodeType":"YulExpressionStatement","src":"37136:12:22"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"37037:117:22"},{"body":{"nodeType":"YulBlock","src":"37249:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37266:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37269:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37259:6:22"},"nodeType":"YulFunctionCall","src":"37259:12:22"},"nodeType":"YulExpressionStatement","src":"37259:12:22"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"37160:117:22"},{"body":{"nodeType":"YulBlock","src":"37372:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37389:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37392:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37382:6:22"},"nodeType":"YulFunctionCall","src":"37382:12:22"},"nodeType":"YulExpressionStatement","src":"37382:12:22"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"37283:117:22"},{"body":{"nodeType":"YulBlock","src":"37496:634:22","statements":[{"nodeType":"YulVariableDeclaration","src":"37506:51:22","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"37545:11:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"37532:12:22"},"nodeType":"YulFunctionCall","src":"37532:25:22"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"37510:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"37651:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"37653:77:22"},"nodeType":"YulFunctionCall","src":"37653:79:22"},"nodeType":"YulExpressionStatement","src":"37653:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"37580:18:22"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"37608:12:22"},"nodeType":"YulFunctionCall","src":"37608:14:22"},{"name":"base_ref","nodeType":"YulIdentifier","src":"37624:8:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37604:3:22"},"nodeType":"YulFunctionCall","src":"37604:29:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37639:4:22","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"37645:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37635:3:22"},"nodeType":"YulFunctionCall","src":"37635:12:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37600:3:22"},"nodeType":"YulFunctionCall","src":"37600:48:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"37576:3:22"},"nodeType":"YulFunctionCall","src":"37576:73:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37569:6:22"},"nodeType":"YulFunctionCall","src":"37569:81:22"},"nodeType":"YulIf","src":"37566:168:22"},{"nodeType":"YulAssignment","src":"37743:41:22","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"37755:8:22"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"37765:18:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37751:3:22"},"nodeType":"YulFunctionCall","src":"37751:33:22"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"37743:4:22"}]},{"nodeType":"YulAssignment","src":"37794:28:22","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"37817:4:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"37804:12:22"},"nodeType":"YulFunctionCall","src":"37804:18:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"37794:6:22"}]},{"body":{"nodeType":"YulBlock","src":"37865:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"37867:77:22"},"nodeType":"YulFunctionCall","src":"37867:79:22"},"nodeType":"YulExpressionStatement","src":"37867:79:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37837:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"37845:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37834:2:22"},"nodeType":"YulFunctionCall","src":"37834:30:22"},"nodeType":"YulIf","src":"37831:117:22"},{"nodeType":"YulAssignment","src":"37957:21:22","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"37969:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"37975:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37965:3:22"},"nodeType":"YulFunctionCall","src":"37965:13:22"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"37957:4:22"}]},{"body":{"nodeType":"YulBlock","src":"38040:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"38042:77:22"},"nodeType":"YulFunctionCall","src":"38042:79:22"},"nodeType":"YulExpressionStatement","src":"38042:79:22"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"37994:4:22"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"38004:12:22"},"nodeType":"YulFunctionCall","src":"38004:14:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38024:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"38032:4:22","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"38020:3:22"},"nodeType":"YulFunctionCall","src":"38020:17:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38000:3:22"},"nodeType":"YulFunctionCall","src":"38000:38:22"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"37990:3:22"},"nodeType":"YulFunctionCall","src":"37990:49:22"},"nodeType":"YulIf","src":"37987:136:22"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"37457:8:22","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"37467:11:22","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"37483:4:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"37489:6:22","type":""}],"src":"37406:724:22"},{"body":{"nodeType":"YulBlock","src":"38200:82:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"38223:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"38228:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"38233:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"38210:12:22"},"nodeType":"YulFunctionCall","src":"38210:30:22"},"nodeType":"YulExpressionStatement","src":"38210:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"38260:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"38265:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38256:3:22"},"nodeType":"YulFunctionCall","src":"38256:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"38274:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38249:6:22"},"nodeType":"YulFunctionCall","src":"38249:27:22"},"nodeType":"YulExpressionStatement","src":"38249:27:22"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"38182:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"38187:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"38192:6:22","type":""}],"src":"38136:146:22"},{"body":{"nodeType":"YulBlock","src":"38428:209:22","statements":[{"nodeType":"YulAssignment","src":"38438:95:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38521:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"38526:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38445:75:22"},"nodeType":"YulFunctionCall","src":"38445:88:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38438:3:22"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"38580:5:22"},{"name":"pos","nodeType":"YulIdentifier","src":"38587:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"38592:6:22"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"38543:36:22"},"nodeType":"YulFunctionCall","src":"38543:56:22"},"nodeType":"YulExpressionStatement","src":"38543:56:22"},{"nodeType":"YulAssignment","src":"38608:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38619:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"38624:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38615:3:22"},"nodeType":"YulFunctionCall","src":"38615:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38608:3:22"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"38401:5:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"38408:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38416:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38424:3:22","type":""}],"src":"38310:327:22"},{"body":{"nodeType":"YulBlock","src":"38787:147:22","statements":[{"nodeType":"YulAssignment","src":"38798:110:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38887:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"38895:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"38904:3:22"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38805:81:22"},"nodeType":"YulFunctionCall","src":"38805:103:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38798:3:22"}]},{"nodeType":"YulAssignment","src":"38918:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"38925:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38918:3:22"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38758:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38764:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38772:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38783:3:22","type":""}],"src":"38643:291:22"},{"body":{"nodeType":"YulBlock","src":"39262:786:22","statements":[{"nodeType":"YulAssignment","src":"39272:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39284:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39295:3:22","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39280:3:22"},"nodeType":"YulFunctionCall","src":"39280:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39272:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39353:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39366:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39377:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39362:3:22"},"nodeType":"YulFunctionCall","src":"39362:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39309:43:22"},"nodeType":"YulFunctionCall","src":"39309:71:22"},"nodeType":"YulExpressionStatement","src":"39309:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39434:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39447:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39458:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39443:3:22"},"nodeType":"YulFunctionCall","src":"39443:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"39390:43:22"},"nodeType":"YulFunctionCall","src":"39390:72:22"},"nodeType":"YulExpressionStatement","src":"39390:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"39516:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39529:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39540:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39525:3:22"},"nodeType":"YulFunctionCall","src":"39525:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"39472:43:22"},"nodeType":"YulFunctionCall","src":"39472:72:22"},"nodeType":"YulExpressionStatement","src":"39472:72:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"39598:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39611:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39622:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39607:3:22"},"nodeType":"YulFunctionCall","src":"39607:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"39554:43:22"},"nodeType":"YulFunctionCall","src":"39554:72:22"},"nodeType":"YulExpressionStatement","src":"39554:72:22"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"39680:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39693:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39704:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39689:3:22"},"nodeType":"YulFunctionCall","src":"39689:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"39636:43:22"},"nodeType":"YulFunctionCall","src":"39636:73:22"},"nodeType":"YulExpressionStatement","src":"39636:73:22"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"39763:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39776:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39787:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39772:3:22"},"nodeType":"YulFunctionCall","src":"39772:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"39719:43:22"},"nodeType":"YulFunctionCall","src":"39719:73:22"},"nodeType":"YulExpressionStatement","src":"39719:73:22"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"39846:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39859:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39870:3:22","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39855:3:22"},"nodeType":"YulFunctionCall","src":"39855:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"39802:43:22"},"nodeType":"YulFunctionCall","src":"39802:73:22"},"nodeType":"YulExpressionStatement","src":"39802:73:22"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"39929:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39942:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39953:3:22","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39938:3:22"},"nodeType":"YulFunctionCall","src":"39938:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"39885:43:22"},"nodeType":"YulFunctionCall","src":"39885:73:22"},"nodeType":"YulExpressionStatement","src":"39885:73:22"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"40012:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40025:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"40036:3:22","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40021:3:22"},"nodeType":"YulFunctionCall","src":"40021:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"39968:43:22"},"nodeType":"YulFunctionCall","src":"39968:73:22"},"nodeType":"YulExpressionStatement","src":"39968:73:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39170:9:22","type":""},{"name":"value8","nodeType":"YulTypedName","src":"39182:6:22","type":""},{"name":"value7","nodeType":"YulTypedName","src":"39190:6:22","type":""},{"name":"value6","nodeType":"YulTypedName","src":"39198:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"39206:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"39214:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"39222:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39230:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39238:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39246:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39257:4:22","type":""}],"src":"38940:1108:22"},{"body":{"nodeType":"YulBlock","src":"40160:72:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40182:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"40190:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40178:3:22"},"nodeType":"YulFunctionCall","src":"40178:14:22"},{"hexValue":"4254504d3a2067617320746f6f206c6f7720666f7220706f73744f70","kind":"string","nodeType":"YulLiteral","src":"40194:30:22","type":"","value":"BTPM: gas too low for postOp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40171:6:22"},"nodeType":"YulFunctionCall","src":"40171:54:22"},"nodeType":"YulExpressionStatement","src":"40171:54:22"}]},"name":"store_literal_in_memory_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40152:6:22","type":""}],"src":"40054:178:22"},{"body":{"nodeType":"YulBlock","src":"40384:220:22","statements":[{"nodeType":"YulAssignment","src":"40394:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40460:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"40465:2:22","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40401:58:22"},"nodeType":"YulFunctionCall","src":"40401:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40394:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40566:3:22"}],"functionName":{"name":"store_literal_in_memory_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd","nodeType":"YulIdentifier","src":"40477:88:22"},"nodeType":"YulFunctionCall","src":"40477:93:22"},"nodeType":"YulExpressionStatement","src":"40477:93:22"},{"nodeType":"YulAssignment","src":"40579:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40590:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"40595:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40586:3:22"},"nodeType":"YulFunctionCall","src":"40586:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40579:3:22"}]}]},"name":"abi_encode_t_stringliteral_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40372:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40380:3:22","type":""}],"src":"40238:366:22"},{"body":{"nodeType":"YulBlock","src":"40781:248:22","statements":[{"nodeType":"YulAssignment","src":"40791:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40803:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"40814:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40799:3:22"},"nodeType":"YulFunctionCall","src":"40799:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40791:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40838:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"40849:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40834:3:22"},"nodeType":"YulFunctionCall","src":"40834:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40857:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"40863:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40853:3:22"},"nodeType":"YulFunctionCall","src":"40853:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40827:6:22"},"nodeType":"YulFunctionCall","src":"40827:47:22"},"nodeType":"YulExpressionStatement","src":"40827:47:22"},{"nodeType":"YulAssignment","src":"40883:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41017:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40891:124:22"},"nodeType":"YulFunctionCall","src":"40891:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40883:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40761:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40776:4:22","type":""}],"src":"40610:419:22"},{"body":{"nodeType":"YulBlock","src":"41141:131:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41163:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"41171:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41159:3:22"},"nodeType":"YulFunctionCall","src":"41159:14:22"},{"hexValue":"4254504d3a20696e76616c6964207369676e6174757265206c656e6774682069","kind":"string","nodeType":"YulLiteral","src":"41175:34:22","type":"","value":"BTPM: invalid signature length i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41152:6:22"},"nodeType":"YulFunctionCall","src":"41152:58:22"},"nodeType":"YulExpressionStatement","src":"41152:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41231:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"41239:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41227:3:22"},"nodeType":"YulFunctionCall","src":"41227:15:22"},{"hexValue":"6e207061796d6173746572416e6444617461","kind":"string","nodeType":"YulLiteral","src":"41244:20:22","type":"","value":"n paymasterAndData"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41220:6:22"},"nodeType":"YulFunctionCall","src":"41220:45:22"},"nodeType":"YulExpressionStatement","src":"41220:45:22"}]},"name":"store_literal_in_memory_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41133:6:22","type":""}],"src":"41035:237:22"},{"body":{"nodeType":"YulBlock","src":"41424:220:22","statements":[{"nodeType":"YulAssignment","src":"41434:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41500:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"41505:2:22","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41441:58:22"},"nodeType":"YulFunctionCall","src":"41441:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41434:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41606:3:22"}],"functionName":{"name":"store_literal_in_memory_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e","nodeType":"YulIdentifier","src":"41517:88:22"},"nodeType":"YulFunctionCall","src":"41517:93:22"},"nodeType":"YulExpressionStatement","src":"41517:93:22"},{"nodeType":"YulAssignment","src":"41619:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41630:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"41635:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41626:3:22"},"nodeType":"YulFunctionCall","src":"41626:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41619:3:22"}]}]},"name":"abi_encode_t_stringliteral_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41412:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41420:3:22","type":""}],"src":"41278:366:22"},{"body":{"nodeType":"YulBlock","src":"41821:248:22","statements":[{"nodeType":"YulAssignment","src":"41831:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41843:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"41854:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41839:3:22"},"nodeType":"YulFunctionCall","src":"41839:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41831:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41878:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"41889:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41874:3:22"},"nodeType":"YulFunctionCall","src":"41874:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41897:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"41903:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41893:3:22"},"nodeType":"YulFunctionCall","src":"41893:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41867:6:22"},"nodeType":"YulFunctionCall","src":"41867:47:22"},"nodeType":"YulExpressionStatement","src":"41867:47:22"},{"nodeType":"YulAssignment","src":"41923:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42057:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41931:124:22"},"nodeType":"YulFunctionCall","src":"41931:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41923:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41801:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41816:4:22","type":""}],"src":"41650:419:22"},{"body":{"nodeType":"YulBlock","src":"42181:118:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42203:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"42211:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42199:3:22"},"nodeType":"YulFunctionCall","src":"42199:14:22"},{"hexValue":"4254504d3a2063616c63756c6174656420746f6b656e2063686172676520696e","kind":"string","nodeType":"YulLiteral","src":"42215:34:22","type":"","value":"BTPM: calculated token charge in"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42192:6:22"},"nodeType":"YulFunctionCall","src":"42192:58:22"},"nodeType":"YulExpressionStatement","src":"42192:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42271:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"42279:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42267:3:22"},"nodeType":"YulFunctionCall","src":"42267:15:22"},{"hexValue":"76616c6964","kind":"string","nodeType":"YulLiteral","src":"42284:7:22","type":"","value":"valid"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42260:6:22"},"nodeType":"YulFunctionCall","src":"42260:32:22"},"nodeType":"YulExpressionStatement","src":"42260:32:22"}]},"name":"store_literal_in_memory_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42173:6:22","type":""}],"src":"42075:224:22"},{"body":{"nodeType":"YulBlock","src":"42451:220:22","statements":[{"nodeType":"YulAssignment","src":"42461:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42527:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"42532:2:22","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42468:58:22"},"nodeType":"YulFunctionCall","src":"42468:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42461:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42633:3:22"}],"functionName":{"name":"store_literal_in_memory_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c","nodeType":"YulIdentifier","src":"42544:88:22"},"nodeType":"YulFunctionCall","src":"42544:93:22"},"nodeType":"YulExpressionStatement","src":"42544:93:22"},{"nodeType":"YulAssignment","src":"42646:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42657:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"42662:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42653:3:22"},"nodeType":"YulFunctionCall","src":"42653:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42646:3:22"}]}]},"name":"abi_encode_t_stringliteral_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42439:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42447:3:22","type":""}],"src":"42305:366:22"},{"body":{"nodeType":"YulBlock","src":"42848:248:22","statements":[{"nodeType":"YulAssignment","src":"42858:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42870:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"42881:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42866:3:22"},"nodeType":"YulFunctionCall","src":"42866:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42858:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42905:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"42916:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42901:3:22"},"nodeType":"YulFunctionCall","src":"42901:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42924:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"42930:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42920:3:22"},"nodeType":"YulFunctionCall","src":"42920:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42894:6:22"},"nodeType":"YulFunctionCall","src":"42894:47:22"},"nodeType":"YulExpressionStatement","src":"42894:47:22"},{"nodeType":"YulAssignment","src":"42950:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43084:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42958:124:22"},"nodeType":"YulFunctionCall","src":"42958:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42950:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42828:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42843:4:22","type":""}],"src":"42677:419:22"},{"body":{"nodeType":"YulBlock","src":"43208:119:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43230:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"43238:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43226:3:22"},"nodeType":"YulFunctionCall","src":"43226:14:22"},{"hexValue":"4254504d3a207072696365206d61726b75702070657263656e7461676520746f","kind":"string","nodeType":"YulLiteral","src":"43242:34:22","type":"","value":"BTPM: price markup percentage to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43219:6:22"},"nodeType":"YulFunctionCall","src":"43219:58:22"},"nodeType":"YulExpressionStatement","src":"43219:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43298:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"43306:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43294:3:22"},"nodeType":"YulFunctionCall","src":"43294:15:22"},{"hexValue":"6f2068696768","kind":"string","nodeType":"YulLiteral","src":"43311:8:22","type":"","value":"o high"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43287:6:22"},"nodeType":"YulFunctionCall","src":"43287:33:22"},"nodeType":"YulExpressionStatement","src":"43287:33:22"}]},"name":"store_literal_in_memory_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43200:6:22","type":""}],"src":"43102:225:22"},{"body":{"nodeType":"YulBlock","src":"43479:220:22","statements":[{"nodeType":"YulAssignment","src":"43489:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43555:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"43560:2:22","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43496:58:22"},"nodeType":"YulFunctionCall","src":"43496:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43489:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43661:3:22"}],"functionName":{"name":"store_literal_in_memory_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928","nodeType":"YulIdentifier","src":"43572:88:22"},"nodeType":"YulFunctionCall","src":"43572:93:22"},"nodeType":"YulExpressionStatement","src":"43572:93:22"},{"nodeType":"YulAssignment","src":"43674:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43685:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"43690:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43681:3:22"},"nodeType":"YulFunctionCall","src":"43681:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43674:3:22"}]}]},"name":"abi_encode_t_stringliteral_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43467:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43475:3:22","type":""}],"src":"43333:366:22"},{"body":{"nodeType":"YulBlock","src":"43876:248:22","statements":[{"nodeType":"YulAssignment","src":"43886:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43898:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"43909:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43894:3:22"},"nodeType":"YulFunctionCall","src":"43894:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43886:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43933:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"43944:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43929:3:22"},"nodeType":"YulFunctionCall","src":"43929:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43952:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"43958:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43948:3:22"},"nodeType":"YulFunctionCall","src":"43948:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43922:6:22"},"nodeType":"YulFunctionCall","src":"43922:47:22"},"nodeType":"YulExpressionStatement","src":"43922:47:22"},{"nodeType":"YulAssignment","src":"43978:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44112:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43986:124:22"},"nodeType":"YulFunctionCall","src":"43986:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43978:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43856:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43871:4:22","type":""}],"src":"43705:419:22"},{"body":{"nodeType":"YulBlock","src":"44236:118:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44258:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"44266:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44254:3:22"},"nodeType":"YulFunctionCall","src":"44254:14:22"},{"hexValue":"4254504d3a207072696365206d61726b75702070657263656e7461676520746f","kind":"string","nodeType":"YulLiteral","src":"44270:34:22","type":"","value":"BTPM: price markup percentage to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44247:6:22"},"nodeType":"YulFunctionCall","src":"44247:58:22"},"nodeType":"YulExpressionStatement","src":"44247:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44326:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"44334:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44322:3:22"},"nodeType":"YulFunctionCall","src":"44322:15:22"},{"hexValue":"6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"44339:7:22","type":"","value":"o low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44315:6:22"},"nodeType":"YulFunctionCall","src":"44315:32:22"},"nodeType":"YulExpressionStatement","src":"44315:32:22"}]},"name":"store_literal_in_memory_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44228:6:22","type":""}],"src":"44130:224:22"},{"body":{"nodeType":"YulBlock","src":"44506:220:22","statements":[{"nodeType":"YulAssignment","src":"44516:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44582:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"44587:2:22","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44523:58:22"},"nodeType":"YulFunctionCall","src":"44523:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44516:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44688:3:22"}],"functionName":{"name":"store_literal_in_memory_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3","nodeType":"YulIdentifier","src":"44599:88:22"},"nodeType":"YulFunctionCall","src":"44599:93:22"},"nodeType":"YulExpressionStatement","src":"44599:93:22"},{"nodeType":"YulAssignment","src":"44701:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44712:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"44717:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44708:3:22"},"nodeType":"YulFunctionCall","src":"44708:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44701:3:22"}]}]},"name":"abi_encode_t_stringliteral_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44494:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44502:3:22","type":""}],"src":"44360:366:22"},{"body":{"nodeType":"YulBlock","src":"44903:248:22","statements":[{"nodeType":"YulAssignment","src":"44913:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44925:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"44936:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44921:3:22"},"nodeType":"YulFunctionCall","src":"44921:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44913:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44960:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"44971:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44956:3:22"},"nodeType":"YulFunctionCall","src":"44956:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44979:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"44985:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44975:3:22"},"nodeType":"YulFunctionCall","src":"44975:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44949:6:22"},"nodeType":"YulFunctionCall","src":"44949:47:22"},"nodeType":"YulExpressionStatement","src":"44949:47:22"},{"nodeType":"YulAssignment","src":"45005:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45139:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45013:124:22"},"nodeType":"YulFunctionCall","src":"45013:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45005:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44883:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44898:4:22","type":""}],"src":"44732:419:22"},{"body":{"nodeType":"YulBlock","src":"45263:129:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45285:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"45293:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45281:3:22"},"nodeType":"YulFunctionCall","src":"45281:14:22"},{"hexValue":"4254504d3a206163636f756e7420646f6573206e6f74206861766520656e6f75","kind":"string","nodeType":"YulLiteral","src":"45297:34:22","type":"","value":"BTPM: account does not have enou"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45274:6:22"},"nodeType":"YulFunctionCall","src":"45274:58:22"},"nodeType":"YulExpressionStatement","src":"45274:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45353:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"45361:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45349:3:22"},"nodeType":"YulFunctionCall","src":"45349:15:22"},{"hexValue":"676820746f6b656e2062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"45366:18:22","type":"","value":"gh token balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45342:6:22"},"nodeType":"YulFunctionCall","src":"45342:43:22"},"nodeType":"YulExpressionStatement","src":"45342:43:22"}]},"name":"store_literal_in_memory_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45255:6:22","type":""}],"src":"45157:235:22"},{"body":{"nodeType":"YulBlock","src":"45544:220:22","statements":[{"nodeType":"YulAssignment","src":"45554:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45620:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"45625:2:22","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45561:58:22"},"nodeType":"YulFunctionCall","src":"45561:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45554:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45726:3:22"}],"functionName":{"name":"store_literal_in_memory_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada","nodeType":"YulIdentifier","src":"45637:88:22"},"nodeType":"YulFunctionCall","src":"45637:93:22"},"nodeType":"YulExpressionStatement","src":"45637:93:22"},{"nodeType":"YulAssignment","src":"45739:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45750:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"45755:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45746:3:22"},"nodeType":"YulFunctionCall","src":"45746:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45739:3:22"}]}]},"name":"abi_encode_t_stringliteral_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45532:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45540:3:22","type":""}],"src":"45398:366:22"},{"body":{"nodeType":"YulBlock","src":"45941:248:22","statements":[{"nodeType":"YulAssignment","src":"45951:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45963:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"45974:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45959:3:22"},"nodeType":"YulFunctionCall","src":"45959:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45951:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45998:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"46009:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45994:3:22"},"nodeType":"YulFunctionCall","src":"45994:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46017:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"46023:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46013:3:22"},"nodeType":"YulFunctionCall","src":"46013:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45987:6:22"},"nodeType":"YulFunctionCall","src":"45987:47:22"},"nodeType":"YulExpressionStatement","src":"45987:47:22"},{"nodeType":"YulAssignment","src":"46043:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46177:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46051:124:22"},"nodeType":"YulFunctionCall","src":"46051:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46043:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45921:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45936:4:22","type":""}],"src":"45770:419:22"},{"body":{"nodeType":"YulBlock","src":"46480:639:22","statements":[{"nodeType":"YulAssignment","src":"46490:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46502:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"46513:3:22","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46498:3:22"},"nodeType":"YulFunctionCall","src":"46498:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46490:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46571:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46584:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"46595:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46580:3:22"},"nodeType":"YulFunctionCall","src":"46580:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"46527:43:22"},"nodeType":"YulFunctionCall","src":"46527:71:22"},"nodeType":"YulExpressionStatement","src":"46527:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46652:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46665:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"46676:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46661:3:22"},"nodeType":"YulFunctionCall","src":"46661:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"46608:43:22"},"nodeType":"YulFunctionCall","src":"46608:72:22"},"nodeType":"YulExpressionStatement","src":"46608:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"46734:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46747:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"46758:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46743:3:22"},"nodeType":"YulFunctionCall","src":"46743:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"46690:43:22"},"nodeType":"YulFunctionCall","src":"46690:72:22"},"nodeType":"YulExpressionStatement","src":"46690:72:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"46837:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46850:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"46861:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46846:3:22"},"nodeType":"YulFunctionCall","src":"46846:18:22"}],"functionName":{"name":"abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"46772:64:22"},"nodeType":"YulFunctionCall","src":"46772:93:22"},"nodeType":"YulExpressionStatement","src":"46772:93:22"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"46919:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46932:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"46943:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46928:3:22"},"nodeType":"YulFunctionCall","src":"46928:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"46875:43:22"},"nodeType":"YulFunctionCall","src":"46875:73:22"},"nodeType":"YulExpressionStatement","src":"46875:73:22"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"47000:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47013:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"47024:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47009:3:22"},"nodeType":"YulFunctionCall","src":"47009:19:22"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"46958:41:22"},"nodeType":"YulFunctionCall","src":"46958:71:22"},"nodeType":"YulExpressionStatement","src":"46958:71:22"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"47083:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47096:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"47107:3:22","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47092:3:22"},"nodeType":"YulFunctionCall","src":"47092:19:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"47039:43:22"},"nodeType":"YulFunctionCall","src":"47039:73:22"},"nodeType":"YulExpressionStatement","src":"47039:73:22"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_enum$_ExchangeRateSource_$3489_t_uint256_t_uint32_t_bytes32__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46404:9:22","type":""},{"name":"value6","nodeType":"YulTypedName","src":"46416:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"46424:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"46432:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"46440:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"46448:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"46456:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46464:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46475:4:22","type":""}],"src":"46195:924:22"},{"body":{"nodeType":"YulBlock","src":"47168:43:22","statements":[{"nodeType":"YulAssignment","src":"47178:27:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47193:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"47200:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47189:3:22"},"nodeType":"YulFunctionCall","src":"47189:16:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"47178:7:22"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47150:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"47160:7:22","type":""}],"src":"47125:86:22"},{"body":{"nodeType":"YulBlock","src":"47278:51:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47295:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47316:5:22"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"47300:15:22"},"nodeType":"YulFunctionCall","src":"47300:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47288:6:22"},"nodeType":"YulFunctionCall","src":"47288:35:22"},"nodeType":"YulExpressionStatement","src":"47288:35:22"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47266:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"47273:3:22","type":""}],"src":"47217:112:22"},{"body":{"nodeType":"YulBlock","src":"47513:367:22","statements":[{"nodeType":"YulAssignment","src":"47523:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47535:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"47546:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47531:3:22"},"nodeType":"YulFunctionCall","src":"47531:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47523:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"47604:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47617:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"47628:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47613:3:22"},"nodeType":"YulFunctionCall","src":"47613:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"47560:43:22"},"nodeType":"YulFunctionCall","src":"47560:71:22"},"nodeType":"YulExpressionStatement","src":"47560:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"47681:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47694:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"47705:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47690:3:22"},"nodeType":"YulFunctionCall","src":"47690:18:22"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"47641:39:22"},"nodeType":"YulFunctionCall","src":"47641:68:22"},"nodeType":"YulExpressionStatement","src":"47641:68:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"47763:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47776:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"47787:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47772:3:22"},"nodeType":"YulFunctionCall","src":"47772:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"47719:43:22"},"nodeType":"YulFunctionCall","src":"47719:72:22"},"nodeType":"YulExpressionStatement","src":"47719:72:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"47845:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47858:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"47869:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47854:3:22"},"nodeType":"YulFunctionCall","src":"47854:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"47801:43:22"},"nodeType":"YulFunctionCall","src":"47801:72:22"},"nodeType":"YulExpressionStatement","src":"47801:72:22"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47461:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"47473:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"47481:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47489:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47497:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47508:4:22","type":""}],"src":"47335:545:22"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC20_$225(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$225(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$225(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$225(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$225(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$225t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$225(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$225t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$225(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // contract IERC20[]\n    function abi_decode_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptrt_addresst_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_contract$_IERC20_$225_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_ExchangeRateSource_$3489(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_ExchangeRateSource_$3489(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ExchangeRateSource_$3489(value)\n    }\n\n    function convert_t_enum$_ExchangeRateSource_$3489_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ExchangeRateSource_$3489(value)\n    }\n\n    function abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_ExchangeRateSource_$3489_to_t_uint8(value))\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct BiconomyTokenPaymaster.PaymasterData -> struct BiconomyTokenPaymaster.PaymasterData\n    function abi_encode_t_struct$_PaymasterData_$3485_memory_ptr_to_t_struct$_PaymasterData_$3485_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // priceSource\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // validUntil\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint48_to_t_uint48(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // validAfter\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint48_to_t_uint48(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // feeToken\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // oracleAggregator\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // exchangeRate\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // priceMarkup\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // signature\n\n            let memberValue0 := mload(add(value, 0xe0))\n\n            mstore(add(pos, 0xe0), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_PaymasterData_$3485_memory_ptr__to_t_struct$_PaymasterData_$3485_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_PaymasterData_$3485_memory_ptr_to_t_struct$_PaymasterData_$3485_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_enum$_PostOpMode_$3207(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_PostOpMode_$3207(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_PostOpMode_$3207(value)\n    }\n\n    function abi_decode_tuple_t_enum$_PostOpMode_$3207t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_PostOpMode_$3207(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$3170_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$3170_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$3170_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$3170__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$3170_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct UserOperation\n    function abi_decode_t_struct$_UserOperation_$3364_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 352) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function validator_revert_t_enum$_ExchangeRateSource_$3489(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_ExchangeRateSource_$3489(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_ExchangeRateSource_$3489(value)\n    }\n\n    function validator_revert_t_uint48(value) {\n        if iszero(eq(value, cleanup_t_uint48(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint48(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint48(value)\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$3364_calldata_ptrt_enum$_ExchangeRateSource_$3489t_uint48t_uint48t_addresst_addresst_uint256t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$3364_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_ExchangeRateSource_$3489(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$3364_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$3364_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$225(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$225(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTPM: Invalid length for paymast\")\n\n        mstore(add(memPtr, 32), \"erAndData\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e67fed31609f10204394f20c3911c94ed691dcae5138997df080fa434ad6de3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes1(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes1(calldataload(dataArea))\n\n        if lt(length, 1) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(1, length)),\n                    0xff00000000000000000000000000000000000000000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint48t_uint48t_address_payablet_address_payablet_uint256t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_ExchangeRateSource_$3489_to_t_uint8(value))\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256_t_address_t_enum$_ExchangeRateSource_$3489_t_uint48_t_uint48_t_address_t_address_t_uint256_t_uint32__to_t_bytes_memory_ptr_t_uint256_t_address_t_uint8_t_uint48_t_uint48_t_address_t_address_t_uint256_t_uint32__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value9,  add(headStart, 288))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender not EntryPoint\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_contract$_IERC20_$225t_address_payablet_enum$_ExchangeRateSource_$3489t_uint256t_uint32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$225(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_enum$_ExchangeRateSource_$3489(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint32_t_bytes32_t_uint256_t_enum$_ExchangeRateSource_$3489__to_t_address_t_uint32_t_bytes32_t_uint256_t_uint8__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_bytes32_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function store_literal_in_memory_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTPM: gas too low for postOp\")\n\n    }\n\n    function abi_encode_t_stringliteral_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_786f68eefdbd29ca429d4984b731fa2ee8c21bf729474618e9c83f95ec5907cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTPM: invalid signature length i\")\n\n        mstore(add(memPtr, 32), \"n paymasterAndData\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3af807e66c40ea1b79d36cd3de1fbc3927fe974786881efa0a96874b52ea23e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTPM: calculated token charge in\")\n\n        mstore(add(memPtr, 32), \"valid\")\n\n    }\n\n    function abi_encode_t_stringliteral_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6bac90e20dcaae28a324b705f77f6b9dadf13ff03496e6ff5fa41b2e05e6415c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTPM: price markup percentage to\")\n\n        mstore(add(memPtr, 32), \"o high\")\n\n    }\n\n    function abi_encode_t_stringliteral_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8449af442f4c7e61d6f7fd3b130135a1da2e8e33813717cd9dc807698fa94928_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTPM: price markup percentage to\")\n\n        mstore(add(memPtr, 32), \"o low\")\n\n    }\n\n    function abi_encode_t_stringliteral_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95f2de0f0d9a90c7a67600333f9492bcd2a6a3b5468421e831b79e174f92b8b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada(memPtr) {\n\n        mstore(add(memPtr, 0), \"BTPM: account does not have enou\")\n\n        mstore(add(memPtr, 32), \"gh token balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8944372c8bcedcfff90e4be4e8a2b986ecfaa4edf3716c92affeae67147b8ada_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_enum$_ExchangeRateSource_$3489_t_uint256_t_uint32_t_bytes32__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint32_t_bytes32__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_ExchangeRateSource_$3489_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2350":[{"length":32,"start":1444},{"length":32,"start":1595},{"length":32,"start":1912},{"length":32,"start":3180},{"length":32,"start":3262},{"length":32,"start":3400},{"length":32,"start":3544},{"length":32,"start":3790},{"length":32,"start":5606}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB3F00674 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xEFDCD974 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEFDCD974 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0xF5CBA98C EQ PUSH2 0x57E JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xD9F66DB1 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xDEEB3874 EQ PUSH2 0x4DF JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xC6E7A957 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xD0DB6F75 EQ PUSH2 0x47C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x617D057A GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x94D4AD60 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x390 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x617D057A EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x78B1DA23 EQ PUSH2 0x2E3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x23D9AC9B EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x44004CC1 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x45499D46 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x5DEEF2AA EQ PUSH2 0x294 JUMPI PUSH2 0x1DA JUMP JUMPDEST CALLDATASIZE PUSH2 0x1DA JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x239 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x2656 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2751 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x950 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x27E6 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH2 0xCB4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x2C23 JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x2CC6 JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x2DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH2 0xECC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x2DF9 JUMP JUMPDEST PUSH2 0x1051 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0x10EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0x11F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x2E52 JUMP JUMPDEST PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP3 SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x598 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A2 PUSH2 0x13AF JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x396CB60 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x629 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x639 PUSH2 0x13AF JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x694 SWAP3 SWAP2 SWAP1 PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6F8 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x703 DUP4 DUP4 DUP4 PUSH2 0x1436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x710 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x92BC9DF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP3 SWAP2 SWAP1 PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x80F PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84A SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x867 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88B SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST SWAP1 POP PUSH2 0x898 DUP4 DUP4 DUP4 PUSH2 0x1436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8A5 PUSH2 0x13AF JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x906708600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x948 JUMPI PUSH2 0x93D DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x2FDF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x91D SWAP2 SWAP1 PUSH2 0x300E JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x931 JUMPI PUSH2 0x930 PUSH2 0x2FDF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1436 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x8E7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x958 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x962 PUSH1 0x0 PUSH2 0x1520 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x96C PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xA5D JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x98F JUMPI PUSH2 0x98E PUSH2 0x2FDF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x300E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1D SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST SWAP1 POP PUSH2 0xA51 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA35 JUMPI PUSH2 0xA34 PUSH2 0x2FDF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x300E JUMP JUMPDEST DUP5 DUP4 PUSH2 0x1436 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x96F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA94 PUSH2 0x2353 JUMP JUMPDEST PUSH1 0xD5 DUP4 DUP4 SWAP1 POP LT ISZERO PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP1 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH1 0x15 PUSH2 0xAED SWAP2 SWAP1 PUSH2 0x310D JUMP JUMPDEST SWAP1 PUSH1 0x15 SWAP3 PUSH2 0xAFD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x314B JUMP JUMPDEST SWAP1 PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x31CA JUMP JUMPDEST PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB20 JUMPI PUSH2 0xB1F PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 DUP10 PUSH1 0x15 SWAP1 PUSH1 0xD5 SWAP3 PUSH2 0xB3F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x314B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x3229 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP PUSH1 0x0 DUP11 DUP11 PUSH1 0xD5 SWAP1 DUP1 SWAP3 PUSH2 0xB6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x314B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBD1 JUMPI PUSH2 0xBD0 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC58 PUSH2 0x15E4 JUMP JUMPDEST PUSH2 0xC64 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1674 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCBC PUSH2 0x13AF JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD46 PUSH2 0x13AF JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC23A5CEA DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0x32B6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2F SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE70 SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE86 DUP10 PUSH2 0x1A94 JUMP JUMPDEST CHAINID ADDRESS DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEA8 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF62 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xFA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD17E42BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1007 JUMPI PUSH1 0x40 MLOAD PUSH32 0x92BC9DF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 GAS CALL SWAP1 POP DUP1 PUSH2 0x104C JUMPI PUSH1 0x40 MLOAD PUSH32 0xCDF0648900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1059 PUSH2 0x13AF JUMP JUMPDEST PUSH3 0x30D40 DUP2 GT ISZERO PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB57D4EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP DUP2 PUSH1 0x1 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 PUSH32 0x303A4CCA6D7DBA1A29764B1C0AABAC67516608DD37F88E064ABC64C24B9C2743 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1158 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC9DD43D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFF179728E4DF4B0421C7DE2106B1968D0604E1670493F8DA3F907F2D020BB6D5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1200 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1272 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1269 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x127B DUP2 PUSH2 0x1520 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x128A PUSH2 0x15E4 JUMP JUMPDEST PUSH2 0x1295 DUP6 DUP6 DUP6 PUSH2 0x1B3E JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12A9 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8FC6A93100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x2 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1F62C0E6D7BB6D470828565415BF2E87DBFEA50E52D2D753788B529BD0C6D62 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x13B7 PUSH2 0x1F36 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D5 PUSH2 0xA63 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1434 JUMPI PUSH2 0x13F8 PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x149C JUMPI PUSH1 0x40 MLOAD PUSH32 0x92BC9DF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D7 SWAP3 SWAP2 SWAP1 PUSH2 0x3392 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151A SWAP2 SWAP1 PUSH2 0x33F3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1672 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1669 SWAP1 PUSH2 0x346C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP10 DUP10 DUP2 ADD SWAP1 PUSH2 0x168E SWAP2 SWAP1 PUSH2 0x348C JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16C7 JUMPI PUSH2 0x16C6 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x1714 JUMPI POP PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x174D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x176E JUMPI PUSH1 0x0 PUSH2 0x175E DUP9 DUP9 PUSH2 0x1F3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x176C JUMPI DUP1 SWAP2 POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 GASPRICE PUSH1 0x1 SLOAD PUSH2 0x1789 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST DUP14 PUSH2 0x1794 SWAP2 SWAP1 PUSH2 0x3570 JUMP JUMPDEST PUSH2 0x179E SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH2 0x17A8 SWAP2 SWAP1 PUSH2 0x35D3 JUMP JUMPDEST SWAP1 POP PUSH3 0xF4240 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND DUP3 PUSH2 0x17C6 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH2 0x17D0 SWAP2 SWAP1 PUSH2 0x35D3 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x17E6 JUMPI PUSH2 0x17E5 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP14 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17F9 JUMPI PUSH2 0x17F8 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1914 JUMPI DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP11 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3604 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x187C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A0 SWAP2 SWAP1 PUSH2 0x33F3 JUMP JUMPDEST POP DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7C405B9CEF9E824A5CF31A09E7B8810D01D9DB34EE384388F33B438608807E1A DUP11 DUP9 DUP9 DUP9 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1907 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x363B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A85 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP11 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1955 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x19DB SWAP2 SWAP1 PUSH2 0x36CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A18 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A82 JUMPI DUP3 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x41614445EA2AB6D87C504BDFC83CB5CB840E7219AA772383BAFF1AB0DD2A3113 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1AA1 DUP4 PUSH2 0x1FCB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD CALLDATALOAD DUP5 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x1AB9 SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC7 SWAP3 SWAP2 SWAP1 PUSH2 0x3787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP1 PUSH1 0x60 ADD SWAP1 PUSH2 0x1ADF SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AED SWAP3 SWAP2 SWAP1 PUSH2 0x3787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP7 PUSH1 0x80 ADD CALLDATALOAD DUP8 PUSH1 0xA0 ADD CALLDATALOAD DUP9 PUSH1 0xC0 ADD CALLDATALOAD DUP10 PUSH1 0xE0 ADD CALLDATALOAD DUP11 PUSH2 0x100 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B27 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 SLOAD DUP6 PUSH1 0xA0 ADD CALLDATALOAD GT PUSH2 0x1B8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B81 SWAP1 PUSH2 0x3879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 DUP7 DUP1 PUSH2 0x120 ADD SWAP1 PUSH2 0x1BA0 SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP PUSH1 0x41 DUP2 PUSH1 0xE0 ADD MLOAD MLOAD EQ PUSH2 0x1BEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE6 SWAP1 PUSH2 0x390B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C1D DUP8 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP4 POP PUSH2 0x1C50 DUP3 PUSH1 0xE0 ADD MLOAD PUSH2 0x1C42 DUP4 PUSH2 0x1FDB JUMP JUMPDEST PUSH2 0x2011 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CC4 JUMPI DUP4 PUSH2 0x1CB9 PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x203D JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0xA0 ADD MLOAD PUSH2 0x1CDD DUP11 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x1CE7 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH2 0x1CF1 SWAP2 SWAP1 PUSH2 0x35D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x1D36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2D SWAP1 PUSH2 0x399D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1E8480 DUP4 PUSH1 0xC0 ADD MLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1D86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7D SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF4240 DUP4 PUSH1 0xC0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1DD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DCD SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF4240 PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0xC0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP3 PUSH2 0x1DF6 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH2 0x1E00 SWAP2 SWAP1 PUSH2 0x35D3 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x1E29 DUP12 PUSH2 0x1FCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E45 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E86 SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST LT ISZERO PUSH2 0x1EC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EBE SWAP1 PUSH2 0x3B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1ED0 DUP9 PUSH2 0x1FCB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0xC0 ADD MLOAD DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F00 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP DUP5 PUSH2 0x1F26 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x203D JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7F02A712 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F79 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1FB3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FB0 SWAP2 SWAP1 PUSH2 0x2FB2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1FC0 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1FC5 JUMP JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 CALLDATALOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2021 DUP7 DUP7 PUSH2 0x209F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2031 DUP3 DUP3 PUSH2 0x20FB JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD0 DUP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL PUSH1 0xA0 DUP5 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL DUP6 PUSH2 0x2065 JUMPI PUSH1 0x0 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND OR OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP4 PUSH1 0xC0 ADD CALLDATALOAD DUP5 PUSH1 0xA0 ADD CALLDATALOAD DUP6 PUSH1 0x80 ADD CALLDATALOAD ADD ADD ADD SWAP1 POP DUP3 PUSH1 0xE0 ADD CALLDATALOAD DUP2 MUL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x20E4 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x20D6 DUP9 DUP3 DUP6 DUP6 PUSH2 0x225F JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x210F JUMPI PUSH2 0x210E PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2122 JUMPI PUSH2 0x2121 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x225B JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x213C JUMPI PUSH2 0x213B PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x214F JUMPI PUSH2 0x214E PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2186 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x219A JUMPI PUSH2 0x2199 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21AD JUMPI PUSH2 0x21AC PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x21F2 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2205 JUMPI PUSH2 0x2204 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x225A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2251 SWAP2 SWAP1 PUSH2 0x2DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x229F JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x22C4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x233A JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x2349 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2373 JUMPI PUSH2 0x2372 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23FF DUP2 PUSH2 0x23EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x241A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2443 DUP2 PUSH2 0x242A JUMP JUMPDEST DUP2 EQ PUSH2 0x244E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2460 DUP2 PUSH2 0x243A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x247C JUMPI PUSH2 0x247B PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x248A DUP5 DUP3 DUP6 ADD PUSH2 0x2451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BE DUP3 PUSH2 0x2493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24CE DUP2 PUSH2 0x24B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x24D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24EB DUP2 PUSH2 0x24C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24FA DUP2 PUSH2 0x23EC JUMP JUMPDEST DUP2 EQ PUSH2 0x2505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2517 DUP2 PUSH2 0x24F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2534 JUMPI PUSH2 0x2533 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2542 DUP6 DUP3 DUP7 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2553 DUP6 DUP3 DUP7 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2568 DUP3 PUSH2 0x2493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2578 DUP2 PUSH2 0x255D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2593 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A4 DUP3 PUSH2 0x255D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25B4 DUP2 PUSH2 0x2599 JUMP JUMPDEST DUP2 EQ PUSH2 0x25BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25D1 DUP2 PUSH2 0x25AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25E0 DUP2 PUSH2 0x255D JUMP JUMPDEST DUP2 EQ PUSH2 0x25EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25FD DUP2 PUSH2 0x25D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x261C JUMPI PUSH2 0x261B PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x262A DUP7 DUP3 DUP8 ADD PUSH2 0x25C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x263B DUP7 DUP3 DUP8 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x264C DUP7 DUP3 DUP8 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x266D JUMPI PUSH2 0x266C PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x267B DUP6 DUP3 DUP7 ADD PUSH2 0x25C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x268C DUP6 DUP3 DUP7 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x26BB JUMPI PUSH2 0x26BA PUSH2 0x2696 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26D8 JUMPI PUSH2 0x26D7 PUSH2 0x269B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x26F4 JUMPI PUSH2 0x26F3 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2711 JUMPI PUSH2 0x2710 PUSH2 0x2696 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x272E JUMPI PUSH2 0x272D PUSH2 0x269B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x274A JUMPI PUSH2 0x2749 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x276D JUMPI PUSH2 0x276C PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x278B JUMPI PUSH2 0x278A PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x2797 DUP9 DUP3 DUP10 ADD PUSH2 0x26A5 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x27AA DUP9 DUP3 DUP10 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27CB JUMPI PUSH2 0x27CA PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x27D7 DUP9 DUP3 DUP10 ADD PUSH2 0x26FB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27FF JUMPI PUSH2 0x27FE PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x281D JUMPI PUSH2 0x281C PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x2829 DUP7 DUP3 DUP8 ADD PUSH2 0x26A5 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x283C DUP7 DUP3 DUP8 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x285C JUMPI PUSH2 0x285B PUSH2 0x2696 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2879 JUMPI PUSH2 0x2878 PUSH2 0x269B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2895 JUMPI PUSH2 0x2894 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28B3 JUMPI PUSH2 0x28B2 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28D1 JUMPI PUSH2 0x28D0 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x28DD DUP6 DUP3 DUP7 ADD PUSH2 0x2846 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2929 JUMPI PUSH2 0x2928 PUSH2 0x28E9 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x293A DUP3 PUSH2 0x2918 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294A DUP3 PUSH2 0x292C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x295A DUP2 PUSH2 0x293F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x297B DUP2 PUSH2 0x2960 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x298A DUP2 PUSH2 0x255D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2999 DUP2 PUSH2 0x23EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29A8 DUP2 PUSH2 0x242A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29CD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A10 DUP3 PUSH2 0x29AE JUMP JUMPDEST PUSH2 0x2A1A DUP2 DUP6 PUSH2 0x29B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A2A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST PUSH2 0x2A33 DUP2 PUSH2 0x29F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2A57 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2951 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2A6A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2972 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2A7D PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2972 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2A90 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2981 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2AA3 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2981 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x2AB6 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x2990 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x2AC9 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x299F JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x2AE1 DUP3 DUP3 PUSH2 0x2A05 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B08 DUP2 DUP5 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2B1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B2F DUP2 PUSH2 0x2B10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2B4F JUMPI PUSH2 0x2B4E PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B5D DUP8 DUP3 DUP9 ADD PUSH2 0x2B20 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B7E JUMPI PUSH2 0x2B7D PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x2B8A DUP8 DUP3 DUP9 ADD PUSH2 0x2846 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x2B9D DUP8 DUP3 DUP9 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCE PUSH2 0x2BC9 PUSH2 0x2BC4 DUP5 PUSH2 0x2493 JUMP JUMPDEST PUSH2 0x2BA9 JUMP JUMPDEST PUSH2 0x2493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE0 DUP3 PUSH2 0x2BB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF2 DUP3 PUSH2 0x2BD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C02 DUP2 PUSH2 0x2BE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C1D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C39 JUMPI PUSH2 0x2C38 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C47 DUP5 DUP3 DUP6 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C6C JUMPI PUSH2 0x2C6B PUSH2 0x2C50 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C94 DUP2 PUSH2 0x2C75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CA3 DUP2 PUSH2 0x2960 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CC0 DUP2 PUSH2 0x2C9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2CE7 JUMPI PUSH2 0x2CE6 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D05 JUMPI PUSH2 0x2D04 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x2D11 DUP12 DUP3 DUP13 ADD PUSH2 0x2C55 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x2D22 DUP12 DUP3 DUP13 ADD PUSH2 0x2C85 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x2D33 DUP12 DUP3 DUP13 ADD PUSH2 0x2CB1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x2D44 DUP12 DUP3 DUP13 ADD PUSH2 0x2CB1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x2D55 DUP12 DUP3 DUP13 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x2D66 DUP12 DUP3 DUP13 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x2D77 DUP12 DUP3 DUP13 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x2D88 DUP12 DUP3 DUP13 ADD PUSH2 0x2451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DAB DUP2 PUSH2 0x2D98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DC6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE2 JUMPI PUSH2 0x2DE1 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DF0 DUP5 DUP3 DUP6 ADD PUSH2 0x25EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E0F JUMPI PUSH2 0x2E0E PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E1D DUP5 DUP3 DUP6 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E2F DUP2 PUSH2 0x2D98 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E4C DUP2 PUSH2 0x2E26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E6B JUMPI PUSH2 0x2E6A PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E89 JUMPI PUSH2 0x2E88 PUSH2 0x2425 JUMP JUMPDEST JUMPDEST PUSH2 0x2E95 DUP7 DUP3 DUP8 ADD PUSH2 0x2C55 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2EA6 DUP7 DUP3 DUP8 ADD PUSH2 0x2E3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2EB7 DUP7 DUP3 DUP8 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDD DUP3 PUSH2 0x29AE JUMP JUMPDEST PUSH2 0x2EE7 DUP2 DUP6 PUSH2 0x2EC1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2EF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST PUSH2 0x2F00 DUP2 PUSH2 0x29F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F25 DUP2 DUP6 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2F44 DUP2 PUSH2 0x242A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F6E DUP2 PUSH2 0x24B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F89 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F65 JUMP JUMPDEST PUSH2 0x2F96 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FAC DUP2 PUSH2 0x24F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FC8 JUMPI PUSH2 0x2FC7 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FD6 DUP5 DUP3 DUP6 ADD PUSH2 0x2F9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3024 JUMPI PUSH2 0x3023 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3032 DUP5 DUP3 DUP6 ADD PUSH2 0x25C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4254504D3A20496E76616C6964206C656E67746820666F72207061796D617374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572416E64446174610000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A8 PUSH1 0x29 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x30B3 DUP3 PUSH2 0x304C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30D7 DUP2 PUSH2 0x309B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3118 DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x3123 DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x313B JUMPI PUSH2 0x313A PUSH2 0x30DE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x315F JUMPI PUSH2 0x315E PUSH2 0x3141 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x3170 JUMPI PUSH2 0x316F PUSH2 0x3146 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D6 DUP4 DUP4 PUSH2 0x3186 JUMP JUMPDEST DUP3 PUSH2 0x31E1 DUP2 CALLDATALOAD PUSH2 0x3191 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP3 LT ISZERO PUSH2 0x3221 JUMPI PUSH2 0x321C PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x1 SUB PUSH1 0x8 MUL PUSH2 0x31BD JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3246 JUMPI PUSH2 0x3245 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3254 DUP10 DUP3 DUP11 ADD PUSH2 0x2CB1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3265 DUP10 DUP3 DUP11 ADD PUSH2 0x2CB1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3276 DUP10 DUP3 DUP11 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3287 DUP10 DUP3 DUP11 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3298 DUP10 DUP3 DUP11 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x32A9 DUP10 DUP3 DUP11 ADD PUSH2 0x2451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32DA DUP2 PUSH2 0x293F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x32E9 DUP2 PUSH2 0x2960 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x330A DUP2 DUP14 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP PUSH2 0x3319 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3326 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3333 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x32D1 JUMP JUMPDEST PUSH2 0x3340 PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x334D PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x32E0 JUMP JUMPDEST PUSH2 0x335A PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3367 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3375 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3383 PUSH2 0x120 DUP4 ADD DUP5 PUSH2 0x2F3B JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x33B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33D0 DUP2 PUSH2 0x33BB JUMP JUMPDEST DUP2 EQ PUSH2 0x33DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x33ED DUP2 PUSH2 0x33C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3409 JUMPI PUSH2 0x3408 PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3417 DUP5 DUP3 DUP6 ADD PUSH2 0x33DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53656E646572206E6F7420456E747279506F696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3456 PUSH1 0x15 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3461 DUP3 PUSH2 0x3420 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3485 DUP2 PUSH2 0x3449 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x34AB JUMPI PUSH2 0x34AA PUSH2 0x2420 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34B9 DUP11 DUP3 DUP12 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x34CA DUP11 DUP3 DUP12 ADD PUSH2 0x25C2 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x34DB DUP11 DUP3 DUP12 ADD PUSH2 0x24DC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x34EC DUP11 DUP3 DUP12 ADD PUSH2 0x2C85 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x34FD DUP11 DUP3 DUP12 ADD PUSH2 0x2508 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x350E DUP11 DUP3 DUP12 ADD PUSH2 0x2451 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x351F DUP11 DUP3 DUP12 ADD PUSH2 0x2E3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3539 DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x3544 DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3552 DUP2 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3569 JUMPI PUSH2 0x3568 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357B DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x3586 DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x359E JUMPI PUSH2 0x359D PUSH2 0x30DE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35DE DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x35E9 DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x35F9 JUMPI PUSH2 0x35F8 PUSH2 0x35A4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3619 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3626 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3633 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3650 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x365D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2F3B JUMP JUMPDEST PUSH2 0x366A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2DA2 JUMP JUMPDEST PUSH2 0x3677 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3684 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x32D1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A4 DUP3 PUSH2 0x29AE JUMP JUMPDEST PUSH2 0x36AE DUP2 DUP6 PUSH2 0x368E JUMP JUMPDEST SWAP4 POP PUSH2 0x36BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D6 DUP3 DUP5 PUSH2 0x3699 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x370D JUMPI PUSH2 0x370C PUSH2 0x36E1 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x372F JUMPI PUSH2 0x372E PUSH2 0x36E6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x374B JUMPI PUSH2 0x374A PUSH2 0x36EB JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x376E DUP4 DUP6 PUSH2 0x368E JUMP JUMPDEST SWAP4 POP PUSH2 0x377B DUP4 DUP6 DUP5 PUSH2 0x3753 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3794 DUP3 DUP5 DUP7 PUSH2 0x3762 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x37B6 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x37C3 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x37D0 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2DA2 JUMP JUMPDEST PUSH2 0x37DD PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2DA2 JUMP JUMPDEST PUSH2 0x37EA PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x37F7 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3804 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3811 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x381F PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x23F6 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4254504D3A2067617320746F6F206C6F7720666F7220706F73744F7000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3863 PUSH1 0x1C DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x386E DUP3 PUSH2 0x382D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3892 DUP2 PUSH2 0x3856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4254504D3A20696E76616C6964207369676E6174757265206C656E6774682069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E207061796D6173746572416E64446174610000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F5 PUSH1 0x32 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3900 DUP3 PUSH2 0x3899 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3924 DUP2 PUSH2 0x38E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4254504D3A2063616C63756C6174656420746F6B656E2063686172676520696E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x76616C6964000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3987 PUSH1 0x25 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3992 DUP3 PUSH2 0x392B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39B6 DUP2 PUSH2 0x397A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4254504D3A207072696365206D61726B75702070657263656E7461676520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F20686967680000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A19 PUSH1 0x26 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3A24 DUP3 PUSH2 0x39BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A48 DUP2 PUSH2 0x3A0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4254504D3A207072696365206D61726B75702070657263656E7461676520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F206C6F77000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AAB PUSH1 0x25 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB6 DUP3 PUSH2 0x3A4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ADA DUP2 PUSH2 0x3A9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4254504D3A206163636F756E7420646F6573206E6F74206861766520656E6F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x676820746F6B656E2062616C616E636500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3D PUSH1 0x30 DUP4 PUSH2 0x303B JUMP JUMPDEST SWAP2 POP PUSH2 0x3B48 DUP3 PUSH2 0x3AE1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B6C DUP2 PUSH2 0x3B30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x3B88 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3B95 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3BA2 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x256F JUMP JUMPDEST PUSH2 0x3BAF PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x32D1 JUMP JUMPDEST PUSH2 0x3BBC PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x3BC9 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2F3B JUMP JUMPDEST PUSH2 0x3BD6 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x2DA2 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BF8 DUP2 PUSH2 0x3BE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C13 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2DA2 JUMP JUMPDEST PUSH2 0x3C20 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3BEF JUMP JUMPDEST PUSH2 0x3C2D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2DA2 JUMP JUMPDEST PUSH2 0x3C3A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2DA2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xE2 EXTCODEHASH 0xE1 PUSH10 0x906B6C1F004E69486176 0xA7 0xEE 0x2F SWAP8 PC 0xF9 SWAP3 GASLIMIT 0x2B DELEGATECALL 0xAC 0xE0 0xD7 0x24 MSIZE 0xDF 0x4C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1962:22762:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24691:10;24682:31;;;24703:9;24682:31;;;;;;:::i;:::-;;;;;;;;1962:22762;;;;;3695:142:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3287:176;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3585:30:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10790:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9683:263;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11188:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11675:446;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;12345:382:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15184:1371:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1480:223:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;486:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3665:26:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4203:85:9;;;;;;;;;;;;;:::i;:::-;;4516:135;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3925:113;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3489:39:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13792:868;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3009:106:9;;;:::i;:::-;;12894:470:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8889:486;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8091:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;673:322:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;7236:445:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3695:142:9;1531:13:0;:11;:13::i;:::-;3775:10:9::1;:19;;;3802:9;3813:15;3775:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3695:142:::0;:::o;3287:176::-;1531:13:0;:11;:13::i;:::-;3409:10:9::1;:21;;;3431:15;3448:6;3409:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3287:176:::0;;:::o;3585:30:20:-;;;;;;;;;;;;;:::o;10790:184::-;1531:13:0;:11;:13::i;:::-;10929:37:20::1;10944:5;10951:6;10959;10929:14;:37::i;:::-;10790:184:::0;;;:::o;9683:263::-;1531:13:0;:11;:13::i;:::-;9841:1:20::1;9814:29;;:15;:29;;::::0;9810:71:::1;;9852:29;;;;;;;;;;;;;;9810:71;9892:10;:21;;;9914:15;9931:6;9892:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9683:263:::0;;:::o;11188:221::-;1531:13:0;:11;:13::i;:::-;11306:14:20::1;11323:5;:15;;;11347:4;11323:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11306:47;;11364:37;11379:5;11386:6;11394;11364:14;:37::i;:::-;11295:114;11188:221:::0;;:::o;11675:446::-;1531:13:0;:11;:13::i;:::-;11864:6:20::1;;:13;;11848:5;;:12;;:29;11844:87;;11899:32;;;;;;;;;;;;;;11844:87;11972:9;11967:136;11987:5;;:12;;11983:1;:16;11967:136;;;12022:43;12037:5;;12043:1;12037:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;12047:6;12055;;12062:1;12055:9;;;;;;;:::i;:::-;;;;;;;;12022:14;:43::i;:::-;12084:3;;;;;11967:136;;;;11675:446:::0;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;12345:382:20:-;1531:13:0;:11;:13::i;:::-;12512:9:20::1;12507:202;12527:5;;:12;;12523:1;:16;12507:202;;;12562:14;12579:5;;12585:1;12579:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:18;;;12606:4;12579:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12562:50;;12631:40;12646:5;;12652:1;12646:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;12656:6;12664;12631:14;:40::i;:::-;12690:3;;;;;12543:166;12507:202;;;;12345:382:::0;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;15184:1371:20:-;15312:20;;:::i;:::-;4103:3;15468:16;;:23;;:43;;15446:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;15593:30;15690:16;;15726:1;4048:2;15707:20;;;;:::i;:::-;15690:55;4048:2;15690:55;;;;;;;:::i;:::-;15683:63;;;;;:::i;:::-;15659:102;;15626:146;;;;;;;;;;:::i;:::-;;15593:179;;15800:17;15832;15864:16;15895:24;15934:20;15969:18;16026:16;;4048:2;16026:51;4103:3;16026:51;;;;;;;:::i;:::-;16001:153;;;;;;;:::i;:::-;15785:369;;;;;;;;;;;;16167:22;16192:16;;4103:3;16192:35;;;;;;;;;:::i;:::-;16167:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16247:300;;;;;;;;16285:11;16247:300;;;;;;;;:::i;:::-;;;;;;16319:10;16247:300;;;;;;16352:10;16247:300;;;;;;16383:8;16247:300;;;;;;16420:16;16247:300;;;;;;16461:12;16247:300;;;;16497:11;16247:300;;;;;;16530:9;16247:300;;;16240:307;;;;;;;;;;15184:1371;;;;:::o;1480:223:9:-;1623:24;:22;:24::i;:::-;1658:37;1666:4;1672:7;;1681:13;1658:7;:37::i;:::-;1480:223;;;;:::o;486:39::-;;;:::o;3665:26:20:-;;;;;;;;;;;;;:::o;4203:85:9:-;1531:13:0;:11;:13::i;:::-;4256:10:9::1;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4203:85::o:0;4516:135::-;1531:13:0;:11;:13::i;:::-;4602:10:9::1;:24;;;4627:15;4602:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4516:135:::0;:::o;3925:113::-;3968:7;3995:10;:20;;;4024:4;3995:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3988:42;;3925:113;:::o;3489:39:20:-;;;;:::o;13792:868::-;14096:7;14285:22;14300:6;14285:14;:22::i;:::-;14330:13;14374:4;14402:11;14436:10;14469;14502:8;14533:16;14572:12;14607:11;14252:385;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14224:428;;;;;;14204:448;;13792:868;;;;;;;;;;:::o;3009:106:9:-;3054:10;:20;;;3082:9;3101:4;3054:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3009:106::o;12894:470:20:-;1531:13:0;:11;:13::i;:::-;12988:16:20::1;13007:21;12988:40;;13055:1;13043:8;:13:::0;13039:50:::1;;13065:24;;;;;;;;;;;;;;13039:50;13120:1;13104:18;;:4;:18;;::::0;13100:60:::1;;13131:29;;;;;;;;;;;;;;13100:60;13171:12;13282:1:::0;13279::::1;13276::::0;13273::::1;13263:8;13257:4;13250:5;13245:39;13234:50;;13310:7;13305:51;;13326:30;;;;;;;;;;;;;;13305:51;12977:387;;12894:470:::0;:::o;8889:486::-;1531:13:0;:11;:13::i;:::-;9096:6:20::1;9077:16;:25;9073:64;;;9111:26;;;;;;;;;;;;;;9073:64;9148:16;9167;;9148:35;;9264:16;9241:21;9234:47;9356:10;9307:60;;9338:16;9328:8;9307:60;;;;;;;;;;8995:380;8889:486:::0;:::o;8091:406::-;1531:13:0;:11;:13::i;:::-;8225:1:20::1;8198:29;;:15;:29;;::::0;8194:67:::1;;8236:25;;;;;;;;;;;;;;8194:67;8272:22;8297:11;;;;;;;;;;;8272:36;;8384:15;8366:16;8359:41;8478:10;8426:63;;8461:15;8426:63;;8445:14;8426:63;;;;;;;;;;;;8183:314;8091:406:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;673:322:9:-;835:20;857:22;892:24;:22;:24::i;:::-;934:53;959:6;967:10;979:7;934:24;:53::i;:::-;927:60;;;;673:322;;;;;;:::o;7236:445:20:-;1531:13:0;:11;:13::i;:::-;7382:1:20::1;7351:33;;:19;:33;;::::0;7347:88:::1;;7406:29;;;;;;;;;;;;;;7347:88;7446:17;7466:15;;;;;;;;;;;7446:35;;7561:19;7539:20;7532:49;7662:10;7607:66;;7641:19;7607:66;;7630:9;7607:66;;;;;;;;;;;;7336:345;7236:445:::0;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;24389:242:20:-;24534:1;24516:20;;:6;:20;;;24512:62;;24545:29;;;;;;;;;;;;;;24512:62;24592:5;24585:22;;;24608:6;24616;24585:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;24389:242;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;4735:137:9:-;4827:10;4805:33;;:10;:33;;;4797:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4735:137::o;21424:2957:20:-;21591:15;21621;21651:24;21690:30;21735:20;21770:18;21803;21864:7;;21835:308;;;;;;;:::i;:::-;21576:567;;;;;;;;;;;;;;22156:29;22188:12;22156:44;;22246:31;22231:46;;;;;;;;:::i;:::-;;:11;:46;;;;;;;;:::i;:::-;;;:106;;;;;4166:42;22294:43;;:16;:43;;;;22231:106;:153;;;;;22382:1;22354:30;;:16;:30;;;;22231:153;22213:339;;;22411:14;22428:50;22450:8;22461:16;22428:13;:50::i;:::-;22411:67;;22507:1;22497:6;:11;22493:47;;22534:6;22510:30;;22493:47;22396:156;22213:339;22738:14;22826:23;22965:4;22923:21;22907:11;22888:16;;:30;;;;:::i;:::-;22854:13;:65;;;;:::i;:::-;22853:91;;;;:::i;:::-;22852:117;;;;:::i;:::-;22826:143;;3392:3;22994:51;;23013:11;22995:29;;:15;:29;;;;:::i;:::-;22994:51;;;;:::i;:::-;22984:62;;22811:247;23082:25;23074:33;;;;;;;;:::i;:::-;;:4;:33;;;;;;;;:::i;:::-;;;23070:1304;;23134:8;23127:29;;;23175:7;23201:11;;;;;;;;;;;23231:6;23127:125;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;23376:6;23348:8;23272:289;;23314:7;23272:289;;;23401:16;23436:11;23466:10;23495:21;23535:11;23272:289;;;;;;;;;;:::i;:::-;;;;;;;;23070:1304;;;23701:18;23763:30;;;23812:7;23838:11;;;;;;;;;;;23868:6;23722:167;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23701:188;;23905:12;23930:8;23922:22;;23963:5;23922:61;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23904:79;;;24003:7;23998:365;;24248:6;24239:7;24204:51;;24228:8;24204:51;;;;;;;;;;;;23998:365;23579:795;;23070:1304;21565:2816;;;;;;;;;21424:2957;;;;:::o;14666:508::-;14749:12;14774:14;14791:18;:6;:16;:18::i;:::-;14774:35;;14852:6;14873;:12;;;14910:6;:15;;;;;;;;:::i;:::-;14900:26;;;;;;;:::i;:::-;;;;;;;;14951:6;:15;;;;;;;;:::i;:::-;14941:26;;;;;;;:::i;:::-;;;;;;;;14982:6;:19;;;15016:6;:27;;;15058:6;:25;;;15098:6;:19;;;15132:6;:27;;;14827:343;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14820:350;;;14666:508;;;:::o;17830:3227::-;18042:20;18064:22;18368:16;;18338:6;:27;;;:46;18316:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;18551:25;18579:46;18601:6;:23;;;;;;;;:::i;:::-;18579:21;:46::i;:::-;18551:74;;18821:2;18796:4;:14;;;:21;:27;18774:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;18916:16;18935:257;18957:6;18978:4;:16;;;19009:4;:15;;;19039:4;:15;;;19069:4;:13;;;19097:4;:21;;;19133:4;:17;;;19165:4;:16;;;18935:7;:257::i;:::-;18916:276;;19286:12;;;;;;;;;;;;;;19409:73;19467:4;:14;;;19409:49;19449:8;19409:39;:49::i;:::-;:57;;:73;;;;:::i;:::-;19390:92;;:15;;;;;;;;;;;:92;;;19386:308;;19574:7;19600:67;19628:4;19634;:15;;;19651:4;:15;;;19600:27;:67::i;:::-;19548:134;;;;;;;;19386:308;20013:28;20109:8;20075:4;:17;;;20045:27;20065:6;20045:19;:27::i;:::-;:47;;;;:::i;:::-;20044:73;;;;:::i;:::-;20013:104;;20174:1;20150:20;:25;20128:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;20279:3;20259:4;:16;;;:23;;;;20251:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;20364:3;20344:4;:16;;;:23;;;;20336:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3392:3;20515:61;;20539:4;:16;;;20516:39;;:20;:39;;;;:::i;:::-;20515:61;;;;:::i;:::-;20449:4;:13;;;20442:31;;;20474:18;:6;:16;:18::i;:::-;20442:51;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:135;;20420:233;;;;;;;;;;;;:::i;:::-;;;;;;;;;20701:18;:6;:16;:18::i;:::-;20734:4;:13;;;20762:4;:21;;;20798:4;:16;;;20829:4;:17;;;20861:4;:16;;;20892:10;20676:237;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20666:247;;20948:7;20970:68;20998:5;21005:4;:15;;;21022:4;:15;;;20970:27;:68::i;:::-;20926:123;;;;;;;17830:3227;;;;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;10134:401:20:-;10256:7;10311:17;10293:66;;;10378:6;10293:106;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;10276:252;;10515:1;10508:8;;;;10276:252;10462:12;10455:19;;;10134:401;;;;;:::o;426:326:11:-;515:7;535:12;687:6;674:20;666:28;;738:4;715:29;;;426:326;;;:::o;1222:460:6:-;1298:14;1403:34;1397:4;1390:48;1505:11;1499:4;1492:25;1597:4;1591;1581:21;1571:31;;1222:460;;;:::o;3702:255:5:-;3780:7;3800:17;3819:18;3839:16;3859:27;3870:4;3876:9;3859:10;:27::i;:::-;3799:87;;;;;;3896:28;3908:5;3915:8;3896:11;:28::i;:::-;3941:9;3934:16;;;;;3702:255;;;;:::o;3287:257:10:-;3402:7;3530:8;3514:10;3506:19;;:33;;3489:3;3474:10;3466:19;;:26;;3435:9;:17;;3451:1;3435:17;;;3447:1;3435:17;3434:59;;;:106;3418:122;;3287:257;;;;;:::o;16563:416:20:-;16662:23;16723:19;16876:16;;16831:6;:25;;;16784:6;:27;;;16745:6;:19;;;:66;:111;:147;16723:169;;16941:6;:19;;;16927:11;:33;16909:51;;16698:274;16563:416;;;:::o;2129:766:5:-;2210:7;2219:12;2233:7;2276:2;2256:9;:16;:22;2252:637;;2294:9;2317;2340:7;2592:4;2581:9;2577:20;2571:27;2566:32;;2641:4;2630:9;2626:20;2620:27;2615:32;;2698:4;2687:9;2683:20;2677:27;2674:1;2669:36;2664:41;;2739:25;2750:4;2756:1;2759;2762;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;2811:1;2815:35;2860:9;:16;2852:25;;2795:83;;;;;;2129:766;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;5140:1530::-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:22:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:93;805:7;845:10;838:5;834:22;823:33;;769:93;;;:::o;868:120::-;940:23;957:5;940:23;:::i;:::-;933:5;930:34;920:62;;978:1;975;968:12;920:62;868:120;:::o;994:137::-;1039:5;1077:6;1064:20;1055:29;;1093:32;1119:5;1093:32;:::i;:::-;994:137;;;;:::o;1137:327::-;1195:6;1244:2;1232:9;1223:7;1219:23;1215:32;1212:119;;;1250:79;;:::i;:::-;1212:119;1370:1;1395:52;1439:7;1430:6;1419:9;1415:22;1395:52;:::i;:::-;1385:62;;1341:116;1137:327;;;;:::o;1470:126::-;1507:7;1547:42;1540:5;1536:54;1525:65;;1470:126;;;:::o;1602:104::-;1647:7;1676:24;1694:5;1676:24;:::i;:::-;1665:35;;1602:104;;;:::o;1712:138::-;1793:32;1819:5;1793:32;:::i;:::-;1786:5;1783:43;1773:71;;1840:1;1837;1830:12;1773:71;1712:138;:::o;1856:155::-;1910:5;1948:6;1935:20;1926:29;;1964:41;1999:5;1964:41;:::i;:::-;1856:155;;;;:::o;2017:122::-;2090:24;2108:5;2090:24;:::i;:::-;2083:5;2080:35;2070:63;;2129:1;2126;2119:12;2070:63;2017:122;:::o;2145:139::-;2191:5;2229:6;2216:20;2207:29;;2245:33;2272:5;2245:33;:::i;:::-;2145:139;;;;:::o;2290:490::-;2366:6;2374;2423:2;2411:9;2402:7;2398:23;2394:32;2391:119;;;2429:79;;:::i;:::-;2391:119;2549:1;2574:61;2627:7;2618:6;2607:9;2603:22;2574:61;:::i;:::-;2564:71;;2520:125;2684:2;2710:53;2755:7;2746:6;2735:9;2731:22;2710:53;:::i;:::-;2700:63;;2655:118;2290:490;;;;;:::o;2786:96::-;2823:7;2852:24;2870:5;2852:24;:::i;:::-;2841:35;;2786:96;;;:::o;2888:118::-;2975:24;2993:5;2975:24;:::i;:::-;2970:3;2963:37;2888:118;;:::o;3012:222::-;3105:4;3143:2;3132:9;3128:18;3120:26;;3156:71;3224:1;3213:9;3209:17;3200:6;3156:71;:::i;:::-;3012:222;;;;:::o;3240:110::-;3291:7;3320:24;3338:5;3320:24;:::i;:::-;3309:35;;3240:110;;;:::o;3356:150::-;3443:38;3475:5;3443:38;:::i;:::-;3436:5;3433:49;3423:77;;3496:1;3493;3486:12;3423:77;3356:150;:::o;3512:167::-;3572:5;3610:6;3597:20;3588:29;;3626:47;3667:5;3626:47;:::i;:::-;3512:167;;;;:::o;3685:122::-;3758:24;3776:5;3758:24;:::i;:::-;3751:5;3748:35;3738:63;;3797:1;3794;3787:12;3738:63;3685:122;:::o;3813:139::-;3859:5;3897:6;3884:20;3875:29;;3913:33;3940:5;3913:33;:::i;:::-;3813:139;;;;:::o;3958:647::-;4049:6;4057;4065;4114:2;4102:9;4093:7;4089:23;4085:32;4082:119;;;4120:79;;:::i;:::-;4082:119;4240:1;4265:67;4324:7;4315:6;4304:9;4300:22;4265:67;:::i;:::-;4255:77;;4211:131;4381:2;4407:53;4452:7;4443:6;4432:9;4428:22;4407:53;:::i;:::-;4397:63;;4352:118;4509:2;4535:53;4580:7;4571:6;4560:9;4556:22;4535:53;:::i;:::-;4525:63;;4480:118;3958:647;;;;;:::o;4611:502::-;4693:6;4701;4750:2;4738:9;4729:7;4725:23;4721:32;4718:119;;;4756:79;;:::i;:::-;4718:119;4876:1;4901:67;4960:7;4951:6;4940:9;4936:22;4901:67;:::i;:::-;4891:77;;4847:131;5017:2;5043:53;5088:7;5079:6;5068:9;5064:22;5043:53;:::i;:::-;5033:63;;4988:118;4611:502;;;;;:::o;5119:117::-;5228:1;5225;5218:12;5242:117;5351:1;5348;5341:12;5365:117;5474:1;5471;5464:12;5513:582;5600:8;5610:6;5660:3;5653:4;5645:6;5641:17;5637:27;5627:122;;5668:79;;:::i;:::-;5627:122;5781:6;5768:20;5758:30;;5811:18;5803:6;5800:30;5797:117;;;5833:79;;:::i;:::-;5797:117;5947:4;5939:6;5935:17;5923:29;;6001:3;5993:4;5985:6;5981:17;5971:8;5967:32;5964:41;5961:128;;;6008:79;;:::i;:::-;5961:128;5513:582;;;;;:::o;6118:568::-;6191:8;6201:6;6251:3;6244:4;6236:6;6232:17;6228:27;6218:122;;6259:79;;:::i;:::-;6218:122;6372:6;6359:20;6349:30;;6402:18;6394:6;6391:30;6388:117;;;6424:79;;:::i;:::-;6388:117;6538:4;6530:6;6526:17;6514:29;;6592:3;6584:4;6576:6;6572:17;6562:8;6558:32;6555:41;6552:128;;;6599:79;;:::i;:::-;6552:128;6118:568;;;;;:::o;6692:1107::-;6837:6;6845;6853;6861;6869;6918:2;6906:9;6897:7;6893:23;6889:32;6886:119;;;6924:79;;:::i;:::-;6886:119;7072:1;7061:9;7057:17;7044:31;7102:18;7094:6;7091:30;7088:117;;;7124:79;;:::i;:::-;7088:117;7237:94;7323:7;7314:6;7303:9;7299:22;7237:94;:::i;:::-;7219:112;;;;7015:326;7380:2;7406:53;7451:7;7442:6;7431:9;7427:22;7406:53;:::i;:::-;7396:63;;7351:118;7536:2;7525:9;7521:18;7508:32;7567:18;7559:6;7556:30;7553:117;;;7589:79;;:::i;:::-;7553:117;7702:80;7774:7;7765:6;7754:9;7750:22;7702:80;:::i;:::-;7684:98;;;;7479:313;6692:1107;;;;;;;;:::o;7805:732::-;7914:6;7922;7930;7979:2;7967:9;7958:7;7954:23;7950:32;7947:119;;;7985:79;;:::i;:::-;7947:119;8133:1;8122:9;8118:17;8105:31;8163:18;8155:6;8152:30;8149:117;;;8185:79;;:::i;:::-;8149:117;8298:94;8384:7;8375:6;8364:9;8360:22;8298:94;:::i;:::-;8280:112;;;;8076:326;8441:2;8467:53;8512:7;8503:6;8492:9;8488:22;8467:53;:::i;:::-;8457:63;;8412:118;7805:732;;;;;:::o;8556:552::-;8613:8;8623:6;8673:3;8666:4;8658:6;8654:17;8650:27;8640:122;;8681:79;;:::i;:::-;8640:122;8794:6;8781:20;8771:30;;8824:18;8816:6;8813:30;8810:117;;;8846:79;;:::i;:::-;8810:117;8960:4;8952:6;8948:17;8936:29;;9014:3;9006:4;8998:6;8994:17;8984:8;8980:32;8977:41;8974:128;;;9021:79;;:::i;:::-;8974:128;8556:552;;;;;:::o;9114:527::-;9184:6;9192;9241:2;9229:9;9220:7;9216:23;9212:32;9209:119;;;9247:79;;:::i;:::-;9209:119;9395:1;9384:9;9380:17;9367:31;9425:18;9417:6;9414:30;9411:117;;;9447:79;;:::i;:::-;9411:117;9560:64;9616:7;9607:6;9596:9;9592:22;9560:64;:::i;:::-;9542:82;;;;9338:296;9114:527;;;;;:::o;9647:180::-;9695:77;9692:1;9685:88;9792:4;9789:1;9782:15;9816:4;9813:1;9806:15;9833:128;9929:1;9922:5;9919:12;9909:46;;9935:18;;:::i;:::-;9909:46;9833:128;:::o;9967:157::-;10027:7;10056:5;10045:16;;10062:56;10112:5;10062:56;:::i;:::-;9967:157;;;:::o;10130:::-;10201:9;10234:47;10275:5;10234:47;:::i;:::-;10221:60;;10130:157;;;:::o;10293:163::-;10391:58;10443:5;10391:58;:::i;:::-;10386:3;10379:71;10293:163;;:::o;10462:97::-;10498:7;10538:14;10531:5;10527:26;10516:37;;10462:97;;;:::o;10565:105::-;10640:23;10657:5;10640:23;:::i;:::-;10635:3;10628:36;10565:105;;:::o;10676:108::-;10753:24;10771:5;10753:24;:::i;:::-;10748:3;10741:37;10676:108;;:::o;10790:::-;10867:24;10885:5;10867:24;:::i;:::-;10862:3;10855:37;10790:108;;:::o;10904:105::-;10979:23;10996:5;10979:23;:::i;:::-;10974:3;10967:36;10904:105;;:::o;11015:98::-;11066:6;11100:5;11094:12;11084:22;;11015:98;;;:::o;11119:158::-;11192:11;11226:6;11221:3;11214:19;11266:4;11261:3;11257:14;11242:29;;11119:158;;;;:::o;11283:246::-;11364:1;11374:113;11388:6;11385:1;11382:13;11374:113;;;11473:1;11468:3;11464:11;11458:18;11454:1;11449:3;11445:11;11438:39;11410:2;11407:1;11403:10;11398:15;;11374:113;;;11521:1;11512:6;11507:3;11503:16;11496:27;11345:184;11283:246;;;:::o;11535:102::-;11576:6;11627:2;11623:7;11618:2;11611:5;11607:14;11603:28;11593:38;;11535:102;;;:::o;11643:353::-;11719:3;11747:38;11779:5;11747:38;:::i;:::-;11801:60;11854:6;11849:3;11801:60;:::i;:::-;11794:67;;11870:65;11928:6;11923:3;11916:4;11909:5;11905:16;11870:65;:::i;:::-;11960:29;11982:6;11960:29;:::i;:::-;11955:3;11951:39;11944:46;;11723:273;11643:353;;;;:::o;12100:1732::-;12231:3;12267:6;12262:3;12258:16;12363:4;12356:5;12352:16;12346:23;12382:84;12460:4;12455:3;12451:14;12437:12;12382:84;:::i;:::-;12284:192;12564:4;12557:5;12553:16;12547:23;12583:61;12638:4;12633:3;12629:14;12615:12;12583:61;:::i;:::-;12486:168;12742:4;12735:5;12731:16;12725:23;12761:61;12816:4;12811:3;12807:14;12793:12;12761:61;:::i;:::-;12664:168;12918:4;12911:5;12907:16;12901:23;12937:63;12994:4;12989:3;12985:14;12971:12;12937:63;:::i;:::-;12842:168;13104:4;13097:5;13093:16;13087:23;13123:63;13180:4;13175:3;13171:14;13157:12;13123:63;:::i;:::-;13020:176;13286:4;13279:5;13275:16;13269:23;13305:63;13362:4;13357:3;13353:14;13339:12;13305:63;:::i;:::-;13206:172;13467:4;13460:5;13456:16;13450:23;13486:61;13541:4;13536:3;13532:14;13518:12;13486:61;:::i;:::-;13388:169;13644:4;13637:5;13633:16;13627:23;13697:3;13691:4;13687:14;13680:4;13675:3;13671:14;13664:38;13723:71;13789:4;13775:12;13723:71;:::i;:::-;13715:79;;13567:238;13822:4;13815:11;;12236:1596;12100:1732;;;;:::o;13838:397::-;13993:4;14031:2;14020:9;14016:18;14008:26;;14080:9;14074:4;14070:20;14066:1;14055:9;14051:17;14044:47;14108:120;14223:4;14214:6;14108:120;:::i;:::-;14100:128;;13838:397;;;;:::o;14241:114::-;14329:1;14322:5;14319:12;14309:40;;14345:1;14342;14335:12;14309:40;14241:114;:::o;14361:169::-;14422:5;14460:6;14447:20;14438:29;;14476:48;14518:5;14476:48;:::i;:::-;14361:169;;;;:::o;14536:847::-;14639:6;14647;14655;14663;14712:2;14700:9;14691:7;14687:23;14683:32;14680:119;;;14718:79;;:::i;:::-;14680:119;14838:1;14863:68;14923:7;14914:6;14903:9;14899:22;14863:68;:::i;:::-;14853:78;;14809:132;15008:2;14997:9;14993:18;14980:32;15039:18;15031:6;15028:30;15025:117;;;15061:79;;:::i;:::-;15025:117;15174:64;15230:7;15221:6;15210:9;15206:22;15174:64;:::i;:::-;15156:82;;;;14951:297;15287:2;15313:53;15358:7;15349:6;15338:9;15334:22;15313:53;:::i;:::-;15303:63;;15258:118;14536:847;;;;;;;:::o;15389:60::-;15417:3;15438:5;15431:12;;15389:60;;;:::o;15455:142::-;15505:9;15538:53;15556:34;15565:24;15583:5;15565:24;:::i;:::-;15556:34;:::i;:::-;15538:53;:::i;:::-;15525:66;;15455:142;;;:::o;15603:126::-;15653:9;15686:37;15717:5;15686:37;:::i;:::-;15673:50;;15603:126;;;:::o;15735:146::-;15805:9;15838:37;15869:5;15838:37;:::i;:::-;15825:50;;15735:146;;;:::o;15887:171::-;15994:57;16045:5;15994:57;:::i;:::-;15989:3;15982:70;15887:171;;:::o;16064:262::-;16177:4;16215:2;16204:9;16200:18;16192:26;;16228:91;16316:1;16305:9;16301:17;16292:6;16228:91;:::i;:::-;16064:262;;;;:::o;16332:345::-;16399:6;16448:2;16436:9;16427:7;16423:23;16419:32;16416:119;;;16454:79;;:::i;:::-;16416:119;16574:1;16599:61;16652:7;16643:6;16632:9;16628:22;16599:61;:::i;:::-;16589:71;;16545:125;16332:345;;;;:::o;16683:117::-;16792:1;16789;16782:12;16834:238;16913:5;16954:3;16945:6;16940:3;16936:16;16932:26;16929:113;;;16961:79;;:::i;:::-;16929:113;17060:6;17051:15;;16834:238;;;;:::o;17078:122::-;17174:1;17167:5;17164:12;17154:40;;17190:1;17187;17180:12;17154:40;17078:122;:::o;17206:185::-;17275:5;17313:6;17300:20;17291:29;;17329:56;17379:5;17329:56;:::i;:::-;17206:185;;;;:::o;17397:120::-;17469:23;17486:5;17469:23;:::i;:::-;17462:5;17459:34;17449:62;;17507:1;17504;17497:12;17449:62;17397:120;:::o;17523:137::-;17568:5;17606:6;17593:20;17584:29;;17622:32;17648:5;17622:32;:::i;:::-;17523:137;;;;:::o;17666:1615::-;17841:6;17849;17857;17865;17873;17881;17889;17897;17946:3;17934:9;17925:7;17921:23;17917:33;17914:120;;;17953:79;;:::i;:::-;17914:120;18101:1;18090:9;18086:17;18073:31;18131:18;18123:6;18120:30;18117:117;;;18153:79;;:::i;:::-;18117:117;18258:86;18336:7;18327:6;18316:9;18312:22;18258:86;:::i;:::-;18248:96;;18044:310;18393:2;18419:76;18487:7;18478:6;18467:9;18463:22;18419:76;:::i;:::-;18409:86;;18364:141;18544:2;18570:52;18614:7;18605:6;18594:9;18590:22;18570:52;:::i;:::-;18560:62;;18515:117;18671:2;18697:52;18741:7;18732:6;18721:9;18717:22;18697:52;:::i;:::-;18687:62;;18642:117;18798:3;18825:53;18870:7;18861:6;18850:9;18846:22;18825:53;:::i;:::-;18815:63;;18769:119;18927:3;18954:53;18999:7;18990:6;18979:9;18975:22;18954:53;:::i;:::-;18944:63;;18898:119;19056:3;19083:53;19128:7;19119:6;19108:9;19104:22;19083:53;:::i;:::-;19073:63;;19027:119;19185:3;19212:52;19256:7;19247:6;19236:9;19232:22;19212:52;:::i;:::-;19202:62;;19156:118;17666:1615;;;;;;;;;;;:::o;19287:77::-;19324:7;19353:5;19342:16;;19287:77;;;:::o;19370:118::-;19457:24;19475:5;19457:24;:::i;:::-;19452:3;19445:37;19370:118;;:::o;19494:222::-;19587:4;19625:2;19614:9;19610:18;19602:26;;19638:71;19706:1;19695:9;19691:17;19682:6;19638:71;:::i;:::-;19494:222;;;;:::o;19722:329::-;19781:6;19830:2;19818:9;19809:7;19805:23;19801:32;19798:119;;;19836:79;;:::i;:::-;19798:119;19956:1;19981:53;20026:7;20017:6;20006:9;20002:22;19981:53;:::i;:::-;19971:63;;19927:117;19722:329;;;;:::o;20057:::-;20116:6;20165:2;20153:9;20144:7;20140:23;20136:32;20133:119;;;20171:79;;:::i;:::-;20133:119;20291:1;20316:53;20361:7;20352:6;20341:9;20337:22;20316:53;:::i;:::-;20306:63;;20262:117;20057:329;;;;:::o;20392:122::-;20465:24;20483:5;20465:24;:::i;:::-;20458:5;20455:35;20445:63;;20504:1;20501;20494:12;20445:63;20392:122;:::o;20520:139::-;20566:5;20604:6;20591:20;20582:29;;20620:33;20647:5;20620:33;:::i;:::-;20520:139;;;;:::o;20665:845::-;20775:6;20783;20791;20840:2;20828:9;20819:7;20815:23;20811:32;20808:119;;;20846:79;;:::i;:::-;20808:119;20994:1;20983:9;20979:17;20966:31;21024:18;21016:6;21013:30;21010:117;;;21046:79;;:::i;:::-;21010:117;21151:86;21229:7;21220:6;21209:9;21205:22;21151:86;:::i;:::-;21141:96;;20937:310;21286:2;21312:53;21357:7;21348:6;21337:9;21333:22;21312:53;:::i;:::-;21302:63;;21257:118;21414:2;21440:53;21485:7;21476:6;21465:9;21461:22;21440:53;:::i;:::-;21430:63;;21385:118;20665:845;;;;;:::o;21516:168::-;21599:11;21633:6;21628:3;21621:19;21673:4;21668:3;21664:14;21649:29;;21516:168;;;;:::o;21690:373::-;21776:3;21804:38;21836:5;21804:38;:::i;:::-;21858:70;21921:6;21916:3;21858:70;:::i;:::-;21851:77;;21937:65;21995:6;21990:3;21983:4;21976:5;21972:16;21937:65;:::i;:::-;22027:29;22049:6;22027:29;:::i;:::-;22022:3;22018:39;22011:46;;21780:283;21690:373;;;;:::o;22069:419::-;22208:4;22246:2;22235:9;22231:18;22223:26;;22295:9;22289:4;22285:20;22281:1;22270:9;22266:17;22259:47;22323:76;22394:4;22385:6;22323:76;:::i;:::-;22315:84;;22409:72;22477:2;22466:9;22462:18;22453:6;22409:72;:::i;:::-;22069:419;;;;;:::o;22494:115::-;22579:23;22596:5;22579:23;:::i;:::-;22574:3;22567:36;22494:115;;:::o;22615:218::-;22706:4;22744:2;22733:9;22729:18;22721:26;;22757:69;22823:1;22812:9;22808:17;22799:6;22757:69;:::i;:::-;22615:218;;;;:::o;22839:142::-;22942:32;22968:5;22942:32;:::i;:::-;22937:3;22930:45;22839:142;;:::o;22987:364::-;23124:4;23162:2;23151:9;23147:18;23139:26;;23175:87;23259:1;23248:9;23244:17;23235:6;23175:87;:::i;:::-;23272:72;23340:2;23329:9;23325:18;23316:6;23272:72;:::i;:::-;22987:364;;;;;:::o;23357:143::-;23414:5;23445:6;23439:13;23430:22;;23461:33;23488:5;23461:33;:::i;:::-;23357:143;;;;:::o;23506:351::-;23576:6;23625:2;23613:9;23604:7;23600:23;23596:32;23593:119;;;23631:79;;:::i;:::-;23593:119;23751:1;23776:64;23832:7;23823:6;23812:9;23808:22;23776:64;:::i;:::-;23766:74;;23722:128;23506:351;;;;:::o;23863:180::-;23911:77;23908:1;23901:88;24008:4;24005:1;23998:15;24032:4;24029:1;24022:15;24049:357;24122:6;24171:2;24159:9;24150:7;24146:23;24142:32;24139:119;;;24177:79;;:::i;:::-;24139:119;24297:1;24322:67;24381:7;24372:6;24361:9;24357:22;24322:67;:::i;:::-;24312:77;;24268:131;24049:357;;;;:::o;24412:169::-;24496:11;24530:6;24525:3;24518:19;24570:4;24565:3;24561:14;24546:29;;24412:169;;;;:::o;24587:228::-;24727:34;24723:1;24715:6;24711:14;24704:58;24796:11;24791:2;24783:6;24779:15;24772:36;24587:228;:::o;24821:366::-;24963:3;24984:67;25048:2;25043:3;24984:67;:::i;:::-;24977:74;;25060:93;25149:3;25060:93;:::i;:::-;25178:2;25173:3;25169:12;25162:19;;24821:366;;;:::o;25193:419::-;25359:4;25397:2;25386:9;25382:18;25374:26;;25446:9;25440:4;25436:20;25432:1;25421:9;25417:17;25410:47;25474:131;25600:4;25474:131;:::i;:::-;25466:139;;25193:419;;;:::o;25618:180::-;25666:77;25663:1;25656:88;25763:4;25760:1;25753:15;25787:4;25784:1;25777:15;25804:194;25844:4;25864:20;25882:1;25864:20;:::i;:::-;25859:25;;25898:20;25916:1;25898:20;:::i;:::-;25893:25;;25942:1;25939;25935:9;25927:17;;25966:1;25960:4;25957:11;25954:37;;;25971:18;;:::i;:::-;25954:37;25804:194;;;;:::o;26004:117::-;26113:1;26110;26103:12;26127:117;26236:1;26233;26226:12;26250:469;26355:9;26366;26404:8;26392:10;26389:24;26386:111;;;26416:79;;:::i;:::-;26386:111;26522:6;26512:8;26509:20;26506:107;;;26532:79;;:::i;:::-;26506:107;26663:1;26651:10;26647:18;26639:6;26635:31;26622:44;;26702:10;26692:8;26688:25;26675:38;;26250:469;;;;;;;:::o;26725:96::-;26783:6;26811:3;26801:13;;26725:96;;;;:::o;26919:149::-;26955:7;26995:66;26988:5;26984:78;26973:89;;26919:149;;;:::o;27074:107::-;27118:8;27168:5;27162:4;27158:16;27137:37;;27074:107;;;;:::o;27187:548::-;27277:5;27308:45;27349:3;27342:5;27308:45;:::i;:::-;27378:5;27402:40;27432:8;27419:22;27402:40;:::i;:::-;27393:49;;27466:1;27458:6;27455:13;27452:276;;;27536:168;27620:66;27590:6;27587:1;27583:14;27580:1;27576:22;27536:168;:::i;:::-;27513:5;27492:226;27483:235;;27452:276;27283:452;;27187:548;;;;:::o;27741:1083::-;27858:6;27866;27874;27882;27890;27898;27947:3;27935:9;27926:7;27922:23;27918:33;27915:120;;;27954:79;;:::i;:::-;27915:120;28074:1;28099:52;28143:7;28134:6;28123:9;28119:22;28099:52;:::i;:::-;28089:62;;28045:116;28200:2;28226:52;28270:7;28261:6;28250:9;28246:22;28226:52;:::i;:::-;28216:62;;28171:117;28327:2;28353:61;28406:7;28397:6;28386:9;28382:22;28353:61;:::i;:::-;28343:71;;28298:126;28463:2;28489:61;28542:7;28533:6;28522:9;28518:22;28489:61;:::i;:::-;28479:71;;28434:126;28599:3;28626:53;28671:7;28662:6;28651:9;28647:22;28626:53;:::i;:::-;28616:63;;28570:119;28728:3;28755:52;28799:7;28790:6;28779:9;28775:22;28755:52;:::i;:::-;28745:62;;28699:118;27741:1083;;;;;;;;:::o;28830:254::-;28939:4;28977:2;28966:9;28962:18;28954:26;;28990:87;29074:1;29063:9;29059:17;29050:6;28990:87;:::i;:::-;28830:254;;;;:::o;29090:173::-;29198:58;29250:5;29198:58;:::i;:::-;29193:3;29186:71;29090:173;;:::o;29269:115::-;29354:23;29371:5;29354:23;:::i;:::-;29349:3;29342:36;29269:115;;:::o;29390:1336::-;29768:4;29806:3;29795:9;29791:19;29783:27;;29856:9;29850:4;29846:20;29842:1;29831:9;29827:17;29820:47;29884:76;29955:4;29946:6;29884:76;:::i;:::-;29876:84;;29970:72;30038:2;30027:9;30023:18;30014:6;29970:72;:::i;:::-;30052;30120:2;30109:9;30105:18;30096:6;30052:72;:::i;:::-;30134:93;30223:2;30212:9;30208:18;30199:6;30134:93;:::i;:::-;30237:71;30303:3;30292:9;30288:19;30279:6;30237:71;:::i;:::-;30318;30384:3;30373:9;30369:19;30360:6;30318:71;:::i;:::-;30399:73;30467:3;30456:9;30452:19;30443:6;30399:73;:::i;:::-;30482;30550:3;30539:9;30535:19;30526:6;30482:73;:::i;:::-;30565;30633:3;30622:9;30618:19;30609:6;30565:73;:::i;:::-;30648:71;30714:3;30703:9;30699:19;30690:6;30648:71;:::i;:::-;29390:1336;;;;;;;;;;;;;:::o;30732:332::-;30853:4;30891:2;30880:9;30876:18;30868:26;;30904:71;30972:1;30961:9;30957:17;30948:6;30904:71;:::i;:::-;30985:72;31053:2;31042:9;31038:18;31029:6;30985:72;:::i;:::-;30732:332;;;;;:::o;31070:90::-;31104:7;31147:5;31140:13;31133:21;31122:32;;31070:90;;;:::o;31166:116::-;31236:21;31251:5;31236:21;:::i;:::-;31229:5;31226:32;31216:60;;31272:1;31269;31262:12;31216:60;31166:116;:::o;31288:137::-;31342:5;31373:6;31367:13;31358:22;;31389:30;31413:5;31389:30;:::i;:::-;31288:137;;;;:::o;31431:345::-;31498:6;31547:2;31535:9;31526:7;31522:23;31518:32;31515:119;;;31553:79;;:::i;:::-;31515:119;31673:1;31698:61;31751:7;31742:6;31731:9;31727:22;31698:61;:::i;:::-;31688:71;;31644:125;31431:345;;;;:::o;31782:171::-;31922:23;31918:1;31910:6;31906:14;31899:47;31782:171;:::o;31959:366::-;32101:3;32122:67;32186:2;32181:3;32122:67;:::i;:::-;32115:74;;32198:93;32287:3;32198:93;:::i;:::-;32316:2;32311:3;32307:12;32300:19;;31959:366;;;:::o;32331:419::-;32497:4;32535:2;32524:9;32520:18;32512:26;;32584:9;32578:4;32574:20;32570:1;32559:9;32555:17;32548:47;32612:131;32738:4;32612:131;:::i;:::-;32604:139;;32331:419;;;:::o;32756:1307::-;32921:6;32929;32937;32945;32953;32961;32969;33018:3;33006:9;32997:7;32993:23;32989:33;32986:120;;;33025:79;;:::i;:::-;32986:120;33145:1;33170:61;33223:7;33214:6;33203:9;33199:22;33170:61;:::i;:::-;33160:71;;33116:125;33280:2;33306:67;33365:7;33356:6;33345:9;33341:22;33306:67;:::i;:::-;33296:77;;33251:132;33422:2;33448:61;33501:7;33492:6;33481:9;33477:22;33448:61;:::i;:::-;33438:71;;33393:126;33558:2;33584:76;33652:7;33643:6;33632:9;33628:22;33584:76;:::i;:::-;33574:86;;33529:141;33709:3;33736:53;33781:7;33772:6;33761:9;33757:22;33736:53;:::i;:::-;33726:63;;33680:119;33838:3;33865:52;33909:7;33900:6;33889:9;33885:22;33865:52;:::i;:::-;33855:62;;33809:118;33966:3;33993:53;34038:7;34029:6;34018:9;34014:22;33993:53;:::i;:::-;33983:63;;33937:119;32756:1307;;;;;;;;;;:::o;34069:410::-;34109:7;34132:20;34150:1;34132:20;:::i;:::-;34127:25;;34166:20;34184:1;34166:20;:::i;:::-;34161:25;;34221:1;34218;34214:9;34243:30;34261:11;34243:30;:::i;:::-;34232:41;;34422:1;34413:7;34409:15;34406:1;34403:22;34383:1;34376:9;34356:83;34333:139;;34452:18;;:::i;:::-;34333:139;34117:362;34069:410;;;;:::o;34485:191::-;34525:3;34544:20;34562:1;34544:20;:::i;:::-;34539:25;;34578:20;34596:1;34578:20;:::i;:::-;34573:25;;34621:1;34618;34614:9;34607:16;;34642:3;34639:1;34636:10;34633:36;;;34649:18;;:::i;:::-;34633:36;34485:191;;;;:::o;34682:180::-;34730:77;34727:1;34720:88;34827:4;34824:1;34817:15;34851:4;34848:1;34841:15;34868:185;34908:1;34925:20;34943:1;34925:20;:::i;:::-;34920:25;;34959:20;34977:1;34959:20;:::i;:::-;34954:25;;34998:1;34988:35;;35003:18;;:::i;:::-;34988:35;35045:1;35042;35038:9;35033:14;;34868:185;;;;:::o;35059:442::-;35208:4;35246:2;35235:9;35231:18;35223:26;;35259:71;35327:1;35316:9;35312:17;35303:6;35259:71;:::i;:::-;35340:72;35408:2;35397:9;35393:18;35384:6;35340:72;:::i;:::-;35422;35490:2;35479:9;35475:18;35466:6;35422:72;:::i;:::-;35059:442;;;;;;:::o;35507:702::-;35731:4;35769:3;35758:9;35754:19;35746:27;;35783:71;35851:1;35840:9;35836:17;35827:6;35783:71;:::i;:::-;35864:70;35930:2;35919:9;35915:18;35906:6;35864:70;:::i;:::-;35944:72;36012:2;36001:9;35997:18;35988:6;35944:72;:::i;:::-;36026;36094:2;36083:9;36079:18;36070:6;36026:72;:::i;:::-;36108:94;36197:3;36186:9;36182:19;36173:6;36108:94;:::i;:::-;35507:702;;;;;;;;:::o;36215:147::-;36316:11;36353:3;36338:18;;36215:147;;;;:::o;36368:386::-;36472:3;36500:38;36532:5;36500:38;:::i;:::-;36554:88;36635:6;36630:3;36554:88;:::i;:::-;36547:95;;36651:65;36709:6;36704:3;36697:4;36690:5;36686:16;36651:65;:::i;:::-;36741:6;36736:3;36732:16;36725:23;;36476:278;36368:386;;;;:::o;36760:271::-;36890:3;36912:93;37001:3;36992:6;36912:93;:::i;:::-;36905:100;;37022:3;37015:10;;36760:271;;;;:::o;37037:117::-;37146:1;37143;37136:12;37160:117;37269:1;37266;37259:12;37283:117;37392:1;37389;37382:12;37406:724;37483:4;37489:6;37545:11;37532:25;37645:1;37639:4;37635:12;37624:8;37608:14;37604:29;37600:48;37580:18;37576:73;37566:168;;37653:79;;:::i;:::-;37566:168;37765:18;37755:8;37751:33;37743:41;;37817:4;37804:18;37794:28;;37845:18;37837:6;37834:30;37831:117;;;37867:79;;:::i;:::-;37831:117;37975:2;37969:4;37965:13;37957:21;;38032:4;38024:6;38020:17;38004:14;38000:38;37994:4;37990:49;37987:136;;;38042:79;;:::i;:::-;37987:136;37496:634;37406:724;;;;;:::o;38136:146::-;38233:6;38228:3;38223;38210:30;38274:1;38265:6;38260:3;38256:16;38249:27;38136:146;;;:::o;38310:327::-;38424:3;38445:88;38526:6;38521:3;38445:88;:::i;:::-;38438:95;;38543:56;38592:6;38587:3;38580:5;38543:56;:::i;:::-;38624:6;38619:3;38615:16;38608:23;;38310:327;;;;;:::o;38643:291::-;38783:3;38805:103;38904:3;38895:6;38887;38805:103;:::i;:::-;38798:110;;38925:3;38918:10;;38643:291;;;;;:::o;38940:1108::-;39257:4;39295:3;39284:9;39280:19;39272:27;;39309:71;39377:1;39366:9;39362:17;39353:6;39309:71;:::i;:::-;39390:72;39458:2;39447:9;39443:18;39434:6;39390:72;:::i;:::-;39472;39540:2;39529:9;39525:18;39516:6;39472:72;:::i;:::-;39554;39622:2;39611:9;39607:18;39598:6;39554:72;:::i;:::-;39636:73;39704:3;39693:9;39689:19;39680:6;39636:73;:::i;:::-;39719;39787:3;39776:9;39772:19;39763:6;39719:73;:::i;:::-;39802;39870:3;39859:9;39855:19;39846:6;39802:73;:::i;:::-;39885;39953:3;39942:9;39938:19;39929:6;39885:73;:::i;:::-;39968;40036:3;40025:9;40021:19;40012:6;39968:73;:::i;:::-;38940:1108;;;;;;;;;;;;:::o;40054:178::-;40194:30;40190:1;40182:6;40178:14;40171:54;40054:178;:::o;40238:366::-;40380:3;40401:67;40465:2;40460:3;40401:67;:::i;:::-;40394:74;;40477:93;40566:3;40477:93;:::i;:::-;40595:2;40590:3;40586:12;40579:19;;40238:366;;;:::o;40610:419::-;40776:4;40814:2;40803:9;40799:18;40791:26;;40863:9;40857:4;40853:20;40849:1;40838:9;40834:17;40827:47;40891:131;41017:4;40891:131;:::i;:::-;40883:139;;40610:419;;;:::o;41035:237::-;41175:34;41171:1;41163:6;41159:14;41152:58;41244:20;41239:2;41231:6;41227:15;41220:45;41035:237;:::o;41278:366::-;41420:3;41441:67;41505:2;41500:3;41441:67;:::i;:::-;41434:74;;41517:93;41606:3;41517:93;:::i;:::-;41635:2;41630:3;41626:12;41619:19;;41278:366;;;:::o;41650:419::-;41816:4;41854:2;41843:9;41839:18;41831:26;;41903:9;41897:4;41893:20;41889:1;41878:9;41874:17;41867:47;41931:131;42057:4;41931:131;:::i;:::-;41923:139;;41650:419;;;:::o;42075:224::-;42215:34;42211:1;42203:6;42199:14;42192:58;42284:7;42279:2;42271:6;42267:15;42260:32;42075:224;:::o;42305:366::-;42447:3;42468:67;42532:2;42527:3;42468:67;:::i;:::-;42461:74;;42544:93;42633:3;42544:93;:::i;:::-;42662:2;42657:3;42653:12;42646:19;;42305:366;;;:::o;42677:419::-;42843:4;42881:2;42870:9;42866:18;42858:26;;42930:9;42924:4;42920:20;42916:1;42905:9;42901:17;42894:47;42958:131;43084:4;42958:131;:::i;:::-;42950:139;;42677:419;;;:::o;43102:225::-;43242:34;43238:1;43230:6;43226:14;43219:58;43311:8;43306:2;43298:6;43294:15;43287:33;43102:225;:::o;43333:366::-;43475:3;43496:67;43560:2;43555:3;43496:67;:::i;:::-;43489:74;;43572:93;43661:3;43572:93;:::i;:::-;43690:2;43685:3;43681:12;43674:19;;43333:366;;;:::o;43705:419::-;43871:4;43909:2;43898:9;43894:18;43886:26;;43958:9;43952:4;43948:20;43944:1;43933:9;43929:17;43922:47;43986:131;44112:4;43986:131;:::i;:::-;43978:139;;43705:419;;;:::o;44130:224::-;44270:34;44266:1;44258:6;44254:14;44247:58;44339:7;44334:2;44326:6;44322:15;44315:32;44130:224;:::o;44360:366::-;44502:3;44523:67;44587:2;44582:3;44523:67;:::i;:::-;44516:74;;44599:93;44688:3;44599:93;:::i;:::-;44717:2;44712:3;44708:12;44701:19;;44360:366;;;:::o;44732:419::-;44898:4;44936:2;44925:9;44921:18;44913:26;;44985:9;44979:4;44975:20;44971:1;44960:9;44956:17;44949:47;45013:131;45139:4;45013:131;:::i;:::-;45005:139;;44732:419;;;:::o;45157:235::-;45297:34;45293:1;45285:6;45281:14;45274:58;45366:18;45361:2;45353:6;45349:15;45342:43;45157:235;:::o;45398:366::-;45540:3;45561:67;45625:2;45620:3;45561:67;:::i;:::-;45554:74;;45637:93;45726:3;45637:93;:::i;:::-;45755:2;45750:3;45746:12;45739:19;;45398:366;;;:::o;45770:419::-;45936:4;45974:2;45963:9;45959:18;45951:26;;46023:9;46017:4;46013:20;46009:1;45998:9;45994:17;45987:47;46051:131;46177:4;46051:131;:::i;:::-;46043:139;;45770:419;;;:::o;46195:924::-;46475:4;46513:3;46502:9;46498:19;46490:27;;46527:71;46595:1;46584:9;46580:17;46571:6;46527:71;:::i;:::-;46608:72;46676:2;46665:9;46661:18;46652:6;46608:72;:::i;:::-;46690;46758:2;46747:9;46743:18;46734:6;46690:72;:::i;:::-;46772:93;46861:2;46850:9;46846:18;46837:6;46772:93;:::i;:::-;46875:73;46943:3;46932:9;46928:19;46919:6;46875:73;:::i;:::-;46958:71;47024:3;47013:9;47009:19;47000:6;46958:71;:::i;:::-;47039:73;47107:3;47096:9;47092:19;47083:6;47039:73;:::i;:::-;46195:924;;;;;;;;;;:::o;47125:86::-;47160:7;47200:4;47193:5;47189:16;47178:27;;47125:86;;;:::o;47217:112::-;47300:22;47316:5;47300:22;:::i;:::-;47295:3;47288:35;47217:112;;:::o;47335:545::-;47508:4;47546:3;47535:9;47531:19;47523:27;;47560:71;47628:1;47617:9;47613:17;47604:6;47560:71;:::i;:::-;47641:68;47705:2;47694:9;47690:18;47681:6;47641:68;:::i;:::-;47719:72;47787:2;47776:9;47772:18;47763:6;47719:72;:::i;:::-;47801;47869:2;47858:9;47854:18;47845:6;47801:72;:::i;:::-;47335:545;;;;;;;:::o"},"methodIdentifiers":{"UNACCOUNTED_COST()":"c6e7a957","addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","feeReceiver()":"b3f00674","getDeposit()":"c399ec88","getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint8,uint48,uint48,address,address,uint256,uint32)":"d0db6f75","owner()":"8da5cb5b","parsePaymasterAndData(bytes)":"94d4ad60","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","setFeeReceiver(address)":"efdcd974","setUnaccountedEPGasOverhead(uint256)":"deeb3874","setVerifyingSigner(address)":"f5cba98c","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","verifyingSigner()":"23d9ac9b","withdrawAllNative(address)":"d9f66db1","withdrawERC20(address,address,uint256)":"44004cc1","withdrawERC20Full(address,address)":"5deef2aa","withdrawMultipleERC20(address[],address,uint256[])":"617d057a","withdrawMultipleERC20Full(address[],address)":"78b1da23","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878","withdrawToCheck(address,uint256)":"45499d46"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifyingSigner\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CanNotWithdrawToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotBeUnrealisticValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DEXRouterCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositCanNotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntryPointCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeReceiverCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenBalanceZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokensWithdrawalFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokensAndAmountsLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VerifyingSignerCannotBeZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_oldOverheadCost\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newOverheadCost\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_actor\",\"type\":\"address\"}],\"name\":\"EPGasOverheadChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldfeeReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newfeeReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_actor\",\"type\":\"address\"}],\"name\":\"FeeReceiverChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalCharge\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracleAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"priceMarkup\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum BiconomyTokenPaymaster.ExchangeRateSource\",\"name\":\"priceSource\",\"type\":\"uint8\"}],\"name\":\"TokenPaymasterOperation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"charge\",\"type\":\"uint256\"}],\"name\":\"TokenPaymentDue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_actor\",\"type\":\"address\"}],\"name\":\"VerifyingSignerChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNACCOUNTED_COST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"enum BiconomyTokenPaymaster.ExchangeRateSource\",\"name\":\"priceSource\",\"type\":\"uint8\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracleAggregator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"priceMarkup\",\"type\":\"uint32\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"}],\"name\":\"parsePaymasterAndData\",\"outputs\":[{\"components\":[{\"internalType\":\"enum BiconomyTokenPaymaster.ExchangeRateSource\",\"name\":\"priceSource\",\"type\":\"uint8\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracleAggregator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"priceMarkup\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct BiconomyTokenPaymaster.PaymasterData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeeReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceiver\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newOverheadCost\",\"type\":\"uint256\"}],\"name\":\"setUnaccountedEPGasOverhead\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVerifyingSigner\",\"type\":\"address\"}],\"name\":\"setVerifyingSigner\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyingSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"withdrawAllNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawERC20Full\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"token\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"withdrawMultipleERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"token\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawMultipleERC20Full\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint8,uint48,uint48,address,address,uint256,uint32)\":{\"details\":\"This method is called by the off-chain service, to sign the request. It is called on-chain from the validatePaymasterUserOp, to validate the signature.\",\"returns\":{\"_0\":\"hash we're going to sign off-chain (and validate on-chain)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFeeReceiver(address)\":{\"details\":\"Set a new fee receiver. Can only be called by the owner of the contract.\",\"params\":{\"_newFeeReceiver\":\"The new address to be set as the address of new fee receiver.\"}},\"setUnaccountedEPGasOverhead(uint256)\":{\"details\":\"Set a new overhead for unaccounted cost Can only be called by the owner of the contract.\",\"params\":{\"_newOverheadCost\":\"The new value to be set as the gas cost overhead.\"}},\"setVerifyingSigner(address)\":{\"details\":\"Set a new verifying signer address. Can only be called by the owner of the contract.\",\"params\":{\"_newVerifyingSigner\":\"The new address to be set as the verifying signer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawAllNative(address)\":{\"details\":\"pull native tokens out of paymaster in case they were sent to the paymaster at any point\",\"params\":{\"dest\":\"address to send to\"}},\"withdrawERC20(address,address,uint256)\":{\"details\":\"pull tokens out of paymaster in case they were sent to the paymaster at any point.\",\"params\":{\"amount\":\"amount to withdraw\",\"target\":\"address to send to\",\"token\":\"the token deposit to withdraw\"}},\"withdrawERC20Full(address,address)\":{\"details\":\"pull tokens out of paymaster in case they were sent to the paymaster at any point.\",\"params\":{\"target\":\"address to send to\",\"token\":\"the token deposit to withdraw\"}},\"withdrawMultipleERC20(address[],address,uint256[])\":{\"details\":\"pull multiple tokens out of paymaster in case they were sent to the paymaster at any point.\",\"params\":{\"amount\":\"amounts to withdraw\",\"target\":\"address to send to\",\"token\":\"the tokens deposit to withdraw\"}},\"withdrawMultipleERC20Full(address[],address)\":{\"details\":\"pull multiple tokens out of paymaster in case they were sent to the paymaster at any point.\",\"params\":{\"target\":\"address to send to\",\"token\":\"the tokens deposit to withdraw\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}},\"withdrawToCheck(address,uint256)\":{\"details\":\"Withdraws the specified amount of gas tokens from the paymaster's balance and transfers them to the specified address.\",\"params\":{\"amount\":\"The amount of gas tokens to withdraw.\",\"withdrawAddress\":\"The address to which the gas tokens should be transferred.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CanNotWithdrawToZeroAddress()\":[{\"notice\":\"Throws when trying to withdraw to address(0)\"}],\"DepositCanNotBeZero()\":[{\"notice\":\"Throws when the 0 has been provided as deposit\"}],\"EntryPointCannotBeZero()\":[{\"notice\":\"Throws when the Entrypoint address provided is address(0)\"}],\"FeeReceiverCannotBeZero()\":[{\"notice\":\"Throws when the fee receiver address provided is address(0)\"}],\"OwnerCannotBeZero()\":[{\"notice\":\"Throws when the owner address provided is address(0)\"}],\"VerifyingSignerCannotBeZero()\":[{\"notice\":\"Throws when the verifiying signer address provided is address(0)\"}]},\"events\":{\"EPGasOverheadChanged(uint256,uint256,address)\":{\"notice\":\"Designed to enable the community to track change in storage variable UNACCOUNTED_COST which is used to maintain gas execution cost which can't be calculated within contract\"},\"FeeReceiverChanged(address,address,address)\":{\"notice\":\"Designed to enable the community to track change in storage variable feeReceiver which is an address (self or other SCW/EOA) responsible for collecting all the tokens being withdrawn as fees\"},\"TokenPaymasterOperation(address,address,uint256,address,uint32,bytes32,uint256,uint8)\":{\"notice\":\"Designed to enable tracking how much fees were charged from the sender and in which ERC20 token More information can be emitted like exchangeRate used, what was the source of exchangeRate etc\"},\"TokenPaymentDue(address,address,uint256)\":{\"notice\":\"Notify in case paymaster failed to withdraw tokens from sender\"},\"VerifyingSignerChanged(address,address,address)\":{\"notice\":\"Designed to enable the community to track change in storage variable verifyingSigner which is used to authorize any operation for this paymaster (validation stage) and provides signature\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint8,uint48,uint48,address,address,uint256,uint32)\":{\"notice\":\"That this signature covers all fields of the UserOperation, except the \\\"paymasterAndData\\\", which will carry the signature itself.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"setFeeReceiver(address)\":{\"notice\":\"If _newFeeReceiver is set to zero address, it will revert with an error. After setting the new address, it will emit an event FeeReceiverChanged.\"},\"setUnaccountedEPGasOverhead(uint256)\":{\"notice\":\"If _newOverheadCost is set to very high value, it will revert with an error. After setting the new value, it will emit an event EPGasOverheadChanged.\"},\"setVerifyingSigner(address)\":{\"notice\":\"If _newVerifyingSigner is set to zero address, it will revert with an error. After setting the new signer address, it will emit an event VerifyingSignerChanged.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"A token-based paymaster that allows user to pay gas fee in ERC20 tokens. The paymaster owner chooses which tokens to accept. The payment manager (usually the owner) first deposits native gas into the EntryPoint. Then, for each transaction, it takes the gas fee from the user's ERC20 token balance. The manager must convert these collected tokens back to native gas and deposit it into the EntryPoint to keep the system running. It is an extension of VerifyingPaymaster which trusts external signer to authorize the transaction, but also with an ability to withdraw tokens. The validatePaymasterUserOp function does not interact with external contracts but uses an externally provided exchange rate. Based on the exchangeRate and requiredPrefund amount, the validation method checks if the user's account has enough token balance. This is done by only looking at the referenced storage. All Withdrawn tokens are sent to a dynamic fee receiver address. Optionally a safe guard deposit may be used in future versions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/BiconomyTokenPaymaster.sol\":\"BiconomyTokenPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xbd3189ba19234b7983c343fd70058e21de970feb4bc941c57f14820eb35878a8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d738449768414ab9d4d111113f4641bd0fbc833f9baf74d8ccebe43fe8d7bb\",\"dweb:/ipfs/QmSwpXHUerFzwJFyyLqyGGbzsLTwSimdcMKX5FKksNouEm\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x341c6c70a05b8f2c7a093e909377c7c93874c0a36c70c55b765f386f1b0fcc01\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29ef1bdfa8a451ded8bb5910cfe8b416deb75574c305326670b19408bc5b3508\",\"dweb:/ipfs/QmcL4BCqJ75cKUQVv9iGRxToQamvYq8UqmfyrRAbAAXv22\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IOracleAggregator.sol\":{\"keccak256\":\"0x35a4e8e25d4bff8f2b5efb60baa8af707570511be3c17fa8740a6f54f961280b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12423dd19d3e17b1a6a76fc6806aba32e072299b1448d0ad580d336820dc1357\",\"dweb:/ipfs/QmNaX5qumoM1VipT2mVukeQiH77C717WQSKShD5CsmT5ab\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]},\"contracts/utils/BiconomyTokenPaymaster.sol\":{\"keccak256\":\"0x68d4511af63d18e540701e1f7537ed8c69417767927cd59d2bb147dca71840eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8932d7cb1d45c5abc25553b14a5368bf0ec1e56f6f48040a02ccb1ad66c53d4a\",\"dweb:/ipfs/QmPY1zTSXN2rq9RRxpKw3yWUijQf5WqGA7XMk4AbiFWiP9\"]},\"contracts/utils/TokenPaymasterErrors.sol\":{\"keccak256\":\"0x214040fad39dfee2cfaf25cabe29c8632f19a91079722e56ceb0416d0d460d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46330acc2298bdfc004f6545480f11790e8867f12421cef8dd48c9f80178640c\",\"dweb:/ipfs/QmNc9bgW2uWmTszXX46c2WNhmVxA8WQZxZxpvw5xY5WeqZ\"]}},\"version\":1}"}},"contracts/utils/TokenPaymasterErrors.sol":{"TokenPaymasterErrors":{"abi":[{"inputs":[],"name":"CanNotWithdrawToZeroAddress","type":"error"},{"inputs":[],"name":"CannotBeUnrealisticValue","type":"error"},{"inputs":[],"name":"DEXRouterCannotBeZero","type":"error"},{"inputs":[],"name":"DepositCanNotBeZero","type":"error"},{"inputs":[],"name":"EntryPointCannotBeZero","type":"error"},{"inputs":[],"name":"FeeReceiverCannotBeZero","type":"error"},{"inputs":[],"name":"NativeTokenBalanceZero","type":"error"},{"inputs":[],"name":"NativeTokensWithdrawalFailed","type":"error"},{"inputs":[],"name":"OwnerCannotBeZero","type":"error"},{"inputs":[],"name":"TokensAndAmountsLengthMismatch","type":"error"},{"inputs":[],"name":"VerifyingSignerCannotBeZero","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122056b9af42bf682b6cbee88a198656ea2bd002b6f7701e485c754317ae7385268a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xB9 0xAF TIMESTAMP 0xBF PUSH9 0x2B6CBEE88A198656EA 0x2B 0xD0 MUL 0xB6 0xF7 PUSH17 0x1E485C754317AE7385268A64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"61:1526:21:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122056b9af42bf682b6cbee88a198656ea2bd002b6f7701e485c754317ae7385268a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xB9 0xAF TIMESTAMP 0xBF PUSH9 0x2B6CBEE88A198656EA 0x2B 0xD0 MUL 0xB6 0xF7 PUSH17 0x1E485C754317AE7385268A64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"61:1526:21:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CanNotWithdrawToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotBeUnrealisticValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DEXRouterCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositCanNotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntryPointCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeReceiverCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenBalanceZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokensWithdrawalFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokensAndAmountsLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VerifyingSignerCannotBeZero\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"CanNotWithdrawToZeroAddress()\":[{\"notice\":\"Throws when trying to withdraw to address(0)\"}],\"DepositCanNotBeZero()\":[{\"notice\":\"Throws when the 0 has been provided as deposit\"}],\"EntryPointCannotBeZero()\":[{\"notice\":\"Throws when the Entrypoint address provided is address(0)\"}],\"FeeReceiverCannotBeZero()\":[{\"notice\":\"Throws when the fee receiver address provided is address(0)\"}],\"OwnerCannotBeZero()\":[{\"notice\":\"Throws when the owner address provided is address(0)\"}],\"VerifyingSignerCannotBeZero()\":[{\"notice\":\"Throws when the verifiying signer address provided is address(0)\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/TokenPaymasterErrors.sol\":\"TokenPaymasterErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/TokenPaymasterErrors.sol\":{\"keccak256\":\"0x214040fad39dfee2cfaf25cabe29c8632f19a91079722e56ceb0416d0d460d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46330acc2298bdfc004f6545480f11790e8867f12421cef8dd48c9f80178640c\",\"dweb:/ipfs/QmNc9bgW2uWmTszXX46c2WNhmVxA8WQZxZxpvw5xY5WeqZ\"]}},\"version\":1}"}}}}}