{"id":"cad29cc1c63abb0d654418199cd7ac4c","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"../../interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"../ERC1967/ERC1967Utils.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Not enough balance for performing a CREATE2 deploy.\n     */\n    error Create2InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error Create2FailedDeployment();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Create2InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        if (addr == address(0)) {\n            revert Create2FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/callback/TokenCallbackHandler.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable no-empty-blocks */\r\n\r\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\n// import \"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\r\n\r\n/**\r\n * Token callback handler.\r\n *   Handles supported tokens' callbacks, allowing account receiving these tokens.\r\n */\r\n// contract TokenCallbackHandler is IERC777Recipient, IERC721Receiver, IERC1155Receiver {\r\ncontract TokenCallbackHandler is IERC721Receiver, IERC1155Receiver {\r\n    function tokensReceived(\r\n        address,\r\n        address,\r\n        address,\r\n        uint256,\r\n        bytes calldata,\r\n        bytes calldata\r\n    // ) external pure override {\r\n    ) external pure{\r\n    }\r\n\r\n    function onERC721Received(\r\n        address,\r\n        address,\r\n        uint256,\r\n        bytes calldata\r\n    ) external pure override returns (bytes4) {\r\n        return IERC721Receiver.onERC721Received.selector;\r\n    }\r\n\r\n    function onERC1155Received(\r\n        address,\r\n        address,\r\n        uint256,\r\n        uint256,\r\n        bytes calldata\r\n    ) external pure override returns (bytes4) {\r\n        return IERC1155Receiver.onERC1155Received.selector;\r\n    }\r\n\r\n    function onERC1155BatchReceived(\r\n        address,\r\n        address,\r\n        uint256[] calldata,\r\n        uint256[] calldata,\r\n        bytes calldata\r\n    ) external pure override returns (bytes4) {\r\n        return IERC1155Receiver.onERC1155BatchReceived.selector;\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) external view virtual override returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721Receiver).interfaceId ||\r\n            interfaceId == type(IERC1155Receiver).interfaceId ||\r\n            interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}"},"contracts/core/BaseAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-empty-blocks */\r\n\r\nimport \"../interfaces/IAccount.sol\";\r\nimport \"../interfaces/IEntryPoint.sol\";\r\nimport \"./Helpers.sol\";\r\nimport \"./UserOperationLib.sol\";\r\n\r\n/**\r\n * Basic account implementation.\r\n * This contract provides the basic logic for implementing the IAccount interface - validateUserOp\r\n * Specific account implementation should inherit it and provide the account-specific logic.\r\n */\r\nabstract contract BaseAccount is IAccount {\r\n    using UserOperationLib for UserOperation;\r\n\r\n    /**\r\n     * Return value in case of signature failure, with no time-range.\r\n     * Equivalent to _packValidationData(true,0,0).\r\n     */\r\n    uint256 internal constant SIG_VALIDATION_FAILED = 1;\r\n\r\n    /**\r\n     * Return the account nonce.\r\n     * This method returns the next sequential nonce.\r\n     * For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\r\n     */\r\n    function getNonce() public view virtual returns (uint256) {\r\n        return entryPoint().getNonce(address(this), 0);\r\n    }\r\n\r\n    /**\r\n     * Return the entryPoint used by this account.\r\n     * Subclass should return the current entryPoint used by this account.\r\n     */\r\n    function entryPoint() public view virtual returns (IEntryPoint);\r\n\r\n    /**\r\n     * Validate user's signature and nonce.\r\n     * Subclass doesn't need to override this method. Instead,\r\n     * it should override the specific internal validation methods.\r\n     * @param userOp              - The user operation to validate.\r\n     * @param userOpHash          - The hash of the user operation.\r\n     * @param missingAccountFunds - The amount of funds missing from the account\r\n     *                              to pay for the user operation.\r\n     */\r\n    function validateUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 missingAccountFunds\r\n    ) external virtual override returns (uint256 validationData) {\r\n        _requireFromEntryPoint();\r\n        validationData = _validateSignature(userOp, userOpHash);\r\n        _validateNonce(userOp.nonce);\r\n        _payPrefund(missingAccountFunds);\r\n    }\r\n\r\n    /**\r\n     * Ensure the request comes from the known entrypoint.\r\n     */\r\n    function _requireFromEntryPoint() internal view virtual {\r\n        require(\r\n            msg.sender == address(entryPoint()),\r\n            \"account: not from EntryPoint\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Validate the signature is valid for this message.\r\n     * @param userOp          - Validate the userOp.signature field.\r\n     * @param userOpHash      - Convenient field: the hash of the request, to check the signature against.\r\n     *                          (also hashes the entrypoint and chain id)\r\n     * @return validationData - Signature and time-range of this operation.\r\n     *                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\r\n     *                              otherwise, an address of an \"authorizer\" contract.\r\n     *                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\r\n     *                          <6-byte> validAfter - first timestamp this operation is valid\r\n     *                          If the account doesn't use time-range, it is enough to return\r\n     *                          SIG_VALIDATION_FAILED value (1) for signature failure.\r\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function _validateSignature(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash\r\n    ) internal virtual returns (uint256 validationData);\r\n\r\n    /**\r\n     * Validate the nonce of the UserOperation.\r\n     * This method may validate the nonce requirement of this account.\r\n     * e.g.\r\n     * To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\r\n     *      `require(nonce < type(uint64).max)`\r\n     * For a hypothetical account that *requires* the nonce to be out-of-order:\r\n     *      `require(nonce & type(uint64).max == 0)`\r\n     *\r\n     * The actual nonce uniqueness is managed by the EntryPoint, and thus no other\r\n     * action is needed by the account itself.\r\n     *\r\n     * @param nonce to validate\r\n     *\r\n     * solhint-disable-next-line no-empty-blocks\r\n     */\r\n    function _validateNonce(uint256 nonce) internal view virtual {\r\n    }\r\n\r\n    /**\r\n     * Sends to the entrypoint (msg.sender) the missing funds for this transaction.\r\n     * SubClass MAY override this method for better funds management\r\n     * (e.g. send to the entryPoint more than the minimum required, so that in future transactions\r\n     * it will not be required to send again).\r\n     * @param missingAccountFunds - The minimum value this method should send the entrypoint.\r\n     *                              This value MAY be zero, in case there is enough deposit,\r\n     *                              or the userOp has a paymaster.\r\n     */\r\n    function _payPrefund(uint256 missingAccountFunds) internal virtual {\r\n        if (missingAccountFunds != 0) {\r\n            (bool success, ) = payable(msg.sender).call{\r\n                value: missingAccountFunds,\r\n                gas: type(uint256).max\r\n            }(\"\");\r\n            (success);\r\n            //ignore failure (its EntryPoint's job to verify, not account.)\r\n        }\r\n    }\r\n}"},"contracts/core/BasePaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.20;\r\n\r\n/* solhint-disable reason-string */\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../interfaces/IPaymaster.sol\";\r\nimport \"../interfaces/IEntryPoint.sol\";\r\nimport \"./Helpers.sol\";\r\n\r\n/**\r\n * Helper class for creating a paymaster.\r\n * provides helper methods for staking.\r\n * Validates that the postOp is called only by the entryPoint.\r\n */\r\nabstract contract BasePaymaster is IPaymaster, Ownable {\r\n    IEntryPoint public immutable entryPoint;\r\n\r\n    constructor(IEntryPoint _entryPoint) Ownable(tx.origin) {\r\n        entryPoint = _entryPoint;\r\n    }\r\n\r\n    /// @inheritdoc IPaymaster\r\n    function validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external override returns (bytes memory context, uint256 validationData) {\r\n        _requireFromEntryPoint();\r\n        return _validatePaymasterUserOp(userOp, userOpHash, maxCost);\r\n    }\r\n\r\n    /**\r\n     * Validate a user operation.\r\n     * @param userOp     - The user operation.\r\n     * @param userOpHash - The hash of the user operation.\r\n     * @param maxCost    - The maximum cost of the user operation.\r\n     */\r\n    function _validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) internal virtual returns (bytes memory context, uint256 validationData);\r\n\r\n    /// @inheritdoc IPaymaster\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) external override {\r\n        _requireFromEntryPoint();\r\n        _postOp(mode, context, actualGasCost);\r\n    }\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * (verified to be called only through the entryPoint)\r\n     * @dev If subclass returns a non-empty context from validatePaymasterUserOp,\r\n     *      it must also implement this method.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. still has to pay for gas.\r\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\r\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\r\n     */\r\n    function _postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) internal virtual {\r\n        (mode, context, actualGasCost); // unused params\r\n        // subclass must override this method if validatePaymasterUserOp returns a context\r\n        revert(\"must override\");\r\n    }\r\n\r\n    /**\r\n     * Add a deposit for this paymaster, used for paying for transaction fees.\r\n     */\r\n    function deposit() public payable {\r\n        entryPoint.depositTo{value: msg.value}(address(this));\r\n    }\r\n\r\n    /**\r\n     * Withdraw value from the deposit.\r\n     * @param withdrawAddress - Target to send to.\r\n     * @param amount          - Amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 amount\r\n    ) public onlyOwner {\r\n        entryPoint.withdrawTo(withdrawAddress, amount);\r\n    }\r\n\r\n    /**\r\n     * Add stake for this paymaster.\r\n     * This method can also carry eth value to add to the current stake.\r\n     * @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased.\r\n     */\r\n    function addStake(uint32 unstakeDelaySec) external payable onlyOwner {\r\n        entryPoint.addStake{value: msg.value}(unstakeDelaySec);\r\n    }\r\n\r\n    /**\r\n     * Return current paymaster's deposit on the entryPoint.\r\n     */\r\n    function getDeposit() public view returns (uint256) {\r\n        return entryPoint.balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * Unlock the stake, in order to withdraw it.\r\n     * The paymaster can't serve requests once unlocked, until it calls addStake again\r\n     */\r\n    function unlockStake() external onlyOwner {\r\n        entryPoint.unlockStake();\r\n    }\r\n\r\n    /**\r\n     * Withdraw the entire paymaster's stake.\r\n     * stake must be unlocked first (and then wait for the unstakeDelay to be over)\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external onlyOwner {\r\n        entryPoint.withdrawStake(withdrawAddress);\r\n    }\r\n\r\n    /**\r\n     * Validate the call is made from a valid entrypoint\r\n     */\r\n    function _requireFromEntryPoint() internal virtual {\r\n        require(msg.sender == address(entryPoint), \"Sender not EntryPoint\");\r\n    }\r\n}"},"contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\n/**\r\n * Returned data from validateUserOp.\r\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and\r\n * parsed by `_parseValidationData`.\r\n * @param aggregator  - address(0) - The account validated the signature by itself.\r\n *                      address(1) - The account failed to validate the signature.\r\n *                      otherwise - This is an address of a signature aggregator that must\r\n *                                  be used to validate the signature.\r\n * @param validAfter  - This UserOp is valid only after this timestamp.\r\n * @param validaUntil - This UserOp is valid only up to this timestamp.\r\n */\r\nstruct ValidationData {\r\n    address aggregator;\r\n    uint48 validAfter;\r\n    uint48 validUntil;\r\n}\r\n\r\n/**\r\n * Extract sigFailed, validAfter, validUntil.\r\n * Also convert zero validUntil to type(uint48).max.\r\n * @param validationData - The packed validation data.\r\n */\r\nfunction _parseValidationData(\r\n    uint validationData\r\n) pure returns (ValidationData memory data) {\r\n    address aggregator = address(uint160(validationData));\r\n    uint48 validUntil = uint48(validationData >> 160);\r\n    if (validUntil == 0) {\r\n        validUntil = type(uint48).max;\r\n    }\r\n    uint48 validAfter = uint48(validationData >> (48 + 160));\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Intersect account and paymaster ranges.\r\n * @param validationData          - The packed validation data of the account.\r\n * @param paymasterValidationData - The packed validation data of the paymaster.\r\n */\r\nfunction _intersectTimeRange(\r\n    uint256 validationData,\r\n    uint256 paymasterValidationData\r\n) pure returns (ValidationData memory) {\r\n    ValidationData memory accountValidationData = _parseValidationData(\r\n        validationData\r\n    );\r\n    ValidationData memory pmValidationData = _parseValidationData(\r\n        paymasterValidationData\r\n    );\r\n    address aggregator = accountValidationData.aggregator;\r\n    if (aggregator == address(0)) {\r\n        aggregator = pmValidationData.aggregator;\r\n    }\r\n    uint48 validAfter = accountValidationData.validAfter;\r\n    uint48 validUntil = accountValidationData.validUntil;\r\n    uint48 pmValidAfter = pmValidationData.validAfter;\r\n    uint48 pmValidUntil = pmValidationData.validUntil;\r\n\r\n    if (validAfter < pmValidAfter) validAfter = pmValidAfter;\r\n    if (validUntil > pmValidUntil) validUntil = pmValidUntil;\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp.\r\n * @param data - The ValidationData to pack.\r\n */\r\nfunction _packValidationData(\r\n    ValidationData memory data\r\n) pure returns (uint256) {\r\n    return\r\n        uint160(data.aggregator) |\r\n        (uint256(data.validUntil) << 160) |\r\n        (uint256(data.validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\r\n * @param sigFailed  - True for signature failure, false for success.\r\n * @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\r\n * @param validAfter - First timestamp this UserOperation is valid.\r\n */\r\nfunction _packValidationData(\r\n    bool sigFailed,\r\n    uint48 validUntil,\r\n    uint48 validAfter\r\n) pure returns (uint256) {\r\n    return\r\n        (sigFailed ? 1 : 0) |\r\n        (uint256(validUntil) << 160) |\r\n        (uint256(validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * keccak function over calldata.\r\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\r\n */\r\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\r\n        assembly {\r\n            let mem := mload(0x40)\r\n            let len := data.length\r\n            calldatacopy(mem, data.offset, len)\r\n            ret := keccak256(mem, len)\r\n        }\r\n    }"},"contracts/core/UserOperationLib.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.20;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\nimport {calldataKeccak} from \"./Helpers.sol\";\r\nimport \"../interfaces/UserOperation.sol\";\r\n\r\n/**\r\n * Utility functions helpful when working with UserOperation structs.\r\n */\r\nlibrary UserOperationLib {\r\n    /**\r\n     * Get sender from user operation data.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function getSender(\r\n        UserOperation calldata userOp\r\n    ) internal pure returns (address) {\r\n        address data;\r\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\r\n        assembly {\r\n            data := calldataload(userOp)\r\n        }\r\n        return address(uint160(data));\r\n    }\r\n\r\n    /**\r\n     * Relayer/block builder might submit the TX with higher priorityFee,\r\n     * but the user should not pay above what he signed for.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function gasPrice(\r\n        UserOperation calldata userOp\r\n    ) internal view returns (uint256) {\r\n        unchecked {\r\n            uint256 maxFeePerGas = userOp.maxFeePerGas;\r\n            uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\r\n            if (maxFeePerGas == maxPriorityFeePerGas) {\r\n                //legacy mode (for networks that don't support basefee opcode)\r\n                return maxFeePerGas;\r\n            }\r\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pack the user operation data into bytes for hashing.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function pack(\r\n        UserOperation calldata userOp\r\n    ) internal pure returns (bytes memory ret) {\r\n        address sender = getSender(userOp);\r\n        uint256 nonce = userOp.nonce;\r\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\r\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\r\n        uint256 callGasLimit = userOp.callGasLimit;\r\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\r\n        uint256 preVerificationGas = userOp.preVerificationGas;\r\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\r\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\r\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\r\n\r\n        return abi.encode(\r\n            sender, nonce,\r\n            hashInitCode, hashCallData,\r\n            callGasLimit, verificationGasLimit, preVerificationGas,\r\n            maxFeePerGas, maxPriorityFeePerGas,\r\n            hashPaymasterAndData\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Hash the user operation data.\r\n     * @param userOp - The user operation data.\r\n     */\r\n    function hash(\r\n        UserOperation calldata userOp\r\n    ) internal pure returns (bytes32) {\r\n        return keccak256(pack(userOp));\r\n    }\r\n\r\n    /**\r\n     * The minimum of two numbers.\r\n     * @param a - First number.\r\n     * @param b - Second number.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}"},"contracts/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\ninterface IAccount {\r\n    /**\r\n     * Validate user's signature and nonce\r\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\r\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\r\n     * This allows making a \"simulation call\" without a valid signature\r\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\r\n     *\r\n     * @dev Must validate caller is the entryPoint.\r\n     *      Must validate the signature and nonce\r\n     * @param userOp              - The operation that is about to be executed.\r\n     * @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\r\n     * @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\r\n     *                              This is the minimum amount to transfer to the sender(entryPoint) to be\r\n     *                              able to make the call. The excess is left as a deposit in the entrypoint\r\n     *                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\r\n     *                              In case there is a paymaster in the request (or the current deposit is high\r\n     *                              enough), this value will be zero.\r\n     * @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\r\n     *                              `_unpackValidationData` to encode and decode.\r\n     *                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\r\n     *                                 otherwise, an address of an \"authorizer\" contract.\r\n     *                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"\r\n     *                              <6-byte> validAfter - First timestamp this operation is valid\r\n     *                                                    If an account doesn't use time-range, it is enough to\r\n     *                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\r\n     *                              Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function validateUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 missingAccountFunds\r\n    ) external returns (uint256 validationData);\r\n}\r\n"},"contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\n/**\r\n * Aggregated Signatures validator.\r\n */\r\ninterface IAggregator {\r\n    /**\r\n     * Validate aggregated signature.\r\n     * Revert if the aggregated signature does not match the given list of operations.\r\n     * @param userOps   - Array of UserOperations to validate the signature for.\r\n     * @param signature - The aggregated signature.\r\n     */\r\n    function validateSignatures(\r\n        UserOperation[] calldata userOps,\r\n        bytes calldata signature\r\n    ) external view;\r\n\r\n    /**\r\n     * Validate signature of a single userOp.\r\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\r\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\r\n     * @param userOp        - The userOperation received from the user.\r\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\r\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\r\n     */\r\n    function validateUserOpSignature(\r\n        UserOperation calldata userOp\r\n    ) external view returns (bytes memory sigForUserOp);\r\n\r\n    /**\r\n     * Aggregate multiple signatures into a single value.\r\n     * This method is called off-chain to calculate the signature to pass with handleOps()\r\n     * bundler MAY use optimized custom code perform this aggregation.\r\n     * @param userOps              - Array of UserOperations to collect the signatures from.\r\n     * @return aggregatedSignature - The aggregated signature.\r\n     */\r\n    function aggregateSignatures(\r\n        UserOperation[] calldata userOps\r\n    ) external view returns (bytes memory aggregatedSignature);\r\n}\r\n"},"contracts/interfaces/IEntryPoint.sol":{"content":"/**\r\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\r\n ** Only one instance required on each chain.\r\n **/\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable reason-string */\r\n\r\nimport \"./UserOperation.sol\";\r\nimport \"./IStakeManager.sol\";\r\nimport \"./IAggregator.sol\";\r\nimport \"./INonceManager.sol\";\r\n\r\ninterface IEntryPoint is IStakeManager, INonceManager {\r\n    /***\r\n     * An event emitted after each successful request.\r\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\r\n     * @param sender        - The account that generates this request.\r\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\r\n     * @param nonce         - The nonce value from the request.\r\n     * @param success       - True if the sender transaction succeeded, false if reverted.\r\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\r\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\r\n     *                        validation and execution).\r\n     */\r\n    event UserOperationEvent(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address indexed paymaster,\r\n        uint256 nonce,\r\n        bool success,\r\n        uint256 actualGasCost,\r\n        uint256 actualGasUsed\r\n    );\r\n\r\n    /**\r\n     * Account \"sender\" was deployed.\r\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\r\n     * @param sender     - The account that is deployed\r\n     * @param factory    - The factory used to deploy this account (in the initCode)\r\n     * @param paymaster  - The paymaster used by this UserOp\r\n     */\r\n    event AccountDeployed(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address factory,\r\n        address paymaster\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event UserOperationRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event PostOpRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted by handleOps(), before starting the execution loop.\r\n     * Any event emitted before this event, is part of the validation.\r\n     */\r\n    event BeforeExecution();\r\n\r\n    /**\r\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\r\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\r\n     */\r\n    event SignatureAggregatorChanged(address indexed aggregator);\r\n\r\n    /**\r\n     * A custom revert error of handleOps, to identify the offending op.\r\n     * Should be caught in off-chain handleOps simulation and not happen on-chain.\r\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\r\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\r\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\r\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\r\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\r\n     *                  so a failure can be attributed to the correct entity.\r\n     */\r\n    error FailedOp(uint256 opIndex, string reason);\r\n\r\n    error PostOpReverted(bytes returnData);\r\n\r\n    /**\r\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\r\n     * @param aggregator The aggregator that failed to verify the signature\r\n     */\r\n    error SignatureValidationFailed(address aggregator);\r\n\r\n    // Return value of getSenderAddress.\r\n    error SenderAddressResult(address sender);\r\n\r\n    // UserOps handled, per aggregator.\r\n    struct UserOpsPerAggregator {\r\n        UserOperation[] userOps;\r\n        // Aggregator address\r\n        IAggregator aggregator;\r\n        // Aggregated signature\r\n        bytes signature;\r\n    }\r\n\r\n    /**\r\n     * Execute a batch of UserOperations.\r\n     * No signature aggregator is used.\r\n     * If any account requires an aggregator (that is, it returned an aggregator when\r\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\r\n     * @param ops         - The operations to execute.\r\n     * @param beneficiary - The address to receive the fees.\r\n     */\r\n    function handleOps(\r\n        UserOperation[] calldata ops,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Execute a batch of UserOperation with Aggregators\r\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\r\n     * @param beneficiary      - The address to receive the fees.\r\n     */\r\n    function handleAggregatedOps(\r\n        UserOpsPerAggregator[] calldata opsPerAggregator,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Generate a request Id - unique identifier for this request.\r\n     * The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\r\n     * @param userOp - The user operation to generate the request ID for.\r\n     */\r\n    function getUserOpHash(\r\n        UserOperation calldata userOp\r\n    ) external view returns (bytes32);\r\n\r\n    /**\r\n     * Gas and return values during simulation.\r\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\r\n     * @param prefund          - The required prefund for this operation\r\n     * @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\r\n     * @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\r\n     */\r\n    struct ReturnInfo {\r\n        uint256 preOpGas;\r\n        uint256 prefund;\r\n        bool sigFailed;\r\n        uint48 validAfter;\r\n        uint48 validUntil;\r\n        bytes paymasterContext;\r\n    }\r\n\r\n    /**\r\n     * Returned aggregated signature info:\r\n     * The aggregator returned by the account, and its current stake.\r\n     */\r\n    struct AggregatorStakeInfo {\r\n        address aggregator;\r\n        StakeInfo stakeInfo;\r\n    }\r\n\r\n    /**\r\n     * Get counterfactual sender address.\r\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\r\n     * This method always revert, and returns the address in SenderAddressResult error\r\n     * @param initCode - The constructor code to be passed into the UserOperation.\r\n     */\r\n    function getSenderAddress(bytes memory initCode) external;\r\n\r\n}\r\n"},"contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\ninterface INonceManager {\r\n\r\n    /**\r\n     * Return the next nonce for this sender.\r\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\r\n     * But UserOp with different keys can come with arbitrary order.\r\n     *\r\n     * @param sender the account address\r\n     * @param key the high 192 bit of the nonce\r\n     * @return nonce a full nonce to pass for next UserOp with this sender.\r\n     */\r\n    function getNonce(address sender, uint192 key)\r\n    external view returns (uint256 nonce);\r\n\r\n    /**\r\n     * Manually increment the nonce of the sender.\r\n     * This method is exposed just for completeness..\r\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\r\n     * as the EntryPoint will update the nonce regardless.\r\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\r\n     * UserOperations will not pay extra for the first transaction with a given key.\r\n     */\r\n    function incrementNonce(uint192 key) external;\r\n}\r\n"},"contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./UserOperation.sol\";\r\n\r\n/**\r\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\r\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\r\n */\r\ninterface IPaymaster {\r\n    enum PostOpMode {\r\n        // User op succeeded.\r\n        opSucceeded,\r\n        // User op reverted. Still has to pay for gas.\r\n        opReverted,\r\n        // User op succeeded, but caused postOp to revert.\r\n        // Only used internally in the EntryPoint - Paymasters will not be called again.\r\n        postOpReverted\r\n    }\r\n\r\n    /**\r\n     * Payment validation: check if paymaster agrees to pay.\r\n     * Must verify sender is the entryPoint.\r\n     * Revert to reject this request.\r\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\r\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\r\n     * @param userOp          - The user operation.\r\n     * @param userOpHash      - Hash of the user's request data.\r\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\r\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\r\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\r\n     *                          value of validateUserOperation.\r\n     *                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\r\n     *                                                    otherwise, an address of an \"authorizer\" contract.\r\n     *                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\r\n     *                          <6-byte> validAfter - first timestamp this operation is valid\r\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function validatePaymasterUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external returns (bytes memory context, uint256 validationData);\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * Must verify sender is the entryPoint.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. still has to pay for gas.\r\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\r\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\r\n     */\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * Manage deposits and stakes.\r\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\r\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\r\n */\r\ninterface IStakeManager {\r\n    event Deposited(address indexed account, uint256 totalDeposit);\r\n\r\n    event Withdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    // Emitted when stake or unstake delay are modified.\r\n    event StakeLocked(\r\n        address indexed account,\r\n        uint256 totalStaked,\r\n        uint256 unstakeDelaySec\r\n    );\r\n\r\n    // Emitted once a stake is scheduled for withdrawal.\r\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\r\n\r\n    event StakeWithdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @param deposit         - The entity's deposit.\r\n     * @param staked          - True if this entity is staked.\r\n     * @param stake           - Actual amount of ether staked for this entity.\r\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\r\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\r\n     * @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\r\n     *      and the rest fit into a 2nd cell.\r\n     *      - 112 bit allows for 10^15 eth\r\n     *      - 48 bit for full timestamp\r\n     *      - 32 bit allows 150 years for unstake delay\r\n     */\r\n    struct DepositInfo {\r\n        uint112 deposit;\r\n        bool staked;\r\n        uint112 stake;\r\n        uint32 unstakeDelaySec;\r\n        uint48 withdrawTime;\r\n    }\r\n\r\n    // API struct used by getStakeInfo and simulateValidation.\r\n    struct StakeInfo {\r\n        uint256 stake;\r\n        uint256 unstakeDelaySec;\r\n    }\r\n\r\n    /**\r\n     * Get deposit info.\r\n     * @param account - The account to query.\r\n     * @return info   - Full deposit information of given account.\r\n     */\r\n    function getDepositInfo(\r\n        address account\r\n    ) external view returns (DepositInfo memory info);\r\n\r\n    /**\r\n     * Get account balance.\r\n     * @param account - The account to query.\r\n     * @return        - The deposit (for gas payment) of the account.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * Add to the deposit of the given account.\r\n     * @param account - The account to add to.\r\n     */\r\n    function depositTo(address account) external payable;\r\n\r\n    /**\r\n     * Add to the account's stake - amount and delay\r\n     * any pending unstake is first cancelled.\r\n     * @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\r\n     */\r\n    function addStake(uint32 _unstakeDelaySec) external payable;\r\n\r\n    /**\r\n     * Attempt to unlock the stake.\r\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\r\n     */\r\n    function unlockStake() external;\r\n\r\n    /**\r\n     * Withdraw from the (unlocked) stake.\r\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external;\r\n\r\n    /**\r\n     * Withdraw from the deposit.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     * @param withdrawAmount  - The amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 withdrawAmount\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * User Operation struct\r\n * @param sender                - The sender account of this request.\r\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\r\n * @param initCode              - If set, the account contract will be created by this constructor/\r\n * @param callData              - The method call to execute on this account.\r\n * @param callGasLimit          - The gas limit passed to the callData method call.\r\n * @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\r\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\r\n *                                Covers batch overhead.\r\n * @param maxFeePerGas          - Same as EIP-1559 gas parameter.\r\n * @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\r\n * @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\r\n *                                The paymaster will pay for the transaction instead of the sender.\r\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\r\n */\r\nstruct UserOperation {\r\n    address sender;\r\n    uint256 nonce;\r\n    bytes initCode;\r\n    bytes callData;\r\n    uint256 callGasLimit;\r\n    uint256 verificationGasLimit;\r\n    uint256 preVerificationGas;\r\n    uint256 maxFeePerGas;\r\n    uint256 maxPriorityFeePerGas;\r\n    bytes paymasterAndData;\r\n    bytes signature;\r\n}\r\n"},"contracts/utils/SimpleAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.20;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable reason-string */\r\n\r\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\n\r\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\";\r\n\r\nimport \"../core/BaseAccount.sol\";\r\nimport \"../callback/TokenCallbackHandler.sol\";\r\n\r\n/**\r\n  * minimal account.\r\n  *  this is sample minimal account.\r\n  *  has execute, eth handling methods\r\n  *  has a single signer that can send requests through the entryPoint.\r\n  */\r\ncontract SimpleAccount is BaseAccount, TokenCallbackHandler, UUPSUpgradeable, Initializable {\r\n\r\n    using MessageHashUtils for bytes32;\r\n    using ECDSA for bytes32;\r\n\r\n    address public owner;\r\n\r\n    IEntryPoint private immutable _entryPoint;\r\n\r\n    event SimpleAccountInitialized(IEntryPoint indexed entryPoint, address indexed owner);\r\n\r\n    modifier onlyOwner() {\r\n        _onlyOwner();\r\n        _;\r\n    }\r\n\r\n    /// @inheritdoc BaseAccount\r\n    function entryPoint() public view virtual override returns (IEntryPoint) {\r\n        return _entryPoint;\r\n    }\r\n\r\n\r\n    // solhint-disable-next-line no-empty-blocks\r\n    receive() external payable {}\r\n\r\n    constructor(IEntryPoint anEntryPoint) {\r\n        _entryPoint = anEntryPoint;\r\n        _disableInitializers();\r\n    }\r\n\r\n    function _onlyOwner() internal view {\r\n        //directly from EOA owner, or through the account itself (which gets redirected through execute())\r\n        require(msg.sender == owner || msg.sender == address(this), \"only owner\");\r\n    }\r\n\r\n    /**\r\n     * execute a transaction (called directly from owner, or by entryPoint)\r\n     */\r\n    function execute(address dest, uint256 value, bytes calldata func) external {\r\n        _requireFromEntryPointOrOwner();\r\n        _call(dest, value, func);\r\n    }\r\n\r\n    /**\r\n     * execute a sequence of transactions\r\n     * @dev to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value\r\n     */\r\n    function executeBatch(address[] calldata dest, uint256[] calldata value, bytes[] calldata func) external {\r\n        _requireFromEntryPointOrOwner();\r\n        require(dest.length == func.length && (value.length == 0 || value.length == func.length), \"wrong array lengths\");\r\n        if (value.length == 0) {\r\n            for (uint256 i = 0; i < dest.length; i++) {\r\n                _call(dest[i], 0, func[i]);\r\n            }\r\n        } else {\r\n            for (uint256 i = 0; i < dest.length; i++) {\r\n                _call(dest[i], value[i], func[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint,\r\n     * a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading\r\n      * the implementation by calling `upgradeTo()`\r\n     */\r\n    function initialize(address anOwner) public virtual initializer {\r\n        _initialize(anOwner);\r\n    }\r\n\r\n    function _initialize(address anOwner) internal virtual {\r\n        owner = anOwner;\r\n        emit SimpleAccountInitialized(_entryPoint, owner);\r\n    }\r\n\r\n    // Require the function call went through EntryPoint or owner\r\n    function _requireFromEntryPointOrOwner() internal view {\r\n        require(msg.sender == address(entryPoint()) || msg.sender == owner, \"account: not Owner or EntryPoint\");\r\n    }\r\n    \r\n    /// implement template method of BaseAccount\r\n    function _validateSignature(UserOperation calldata userOp,bytes32 userOpHash)\r\n    internal override virtual returns (uint256 validationData) {\r\n        bytes32 hash = userOpHash.toEthSignedMessageHash();\r\n        if (owner != hash.recover(userOp.signature))\r\n            return SIG_VALIDATION_FAILED;\r\n        return 0;\r\n    }\r\n\r\n    function _call(address target, uint256 value, bytes memory data) internal {\r\n        (bool success, bytes memory result) = target.call{value : value}(data);\r\n        if (!success) {\r\n            assembly {\r\n                revert(add(result, 32), mload(result))\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * check current account deposit in the entryPoint\r\n     */\r\n    function getDeposit() public view returns (uint256) {\r\n        return entryPoint().balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * deposit more funds for this account in the entryPoint\r\n     */\r\n    function addDeposit() public payable {\r\n        entryPoint().depositTo{value : msg.value}(address(this));\r\n    }\r\n\r\n    /**\r\n     * withdraw value from the account's deposit\r\n     * @param withdrawAddress target to send to\r\n     * @param amount to withdraw\r\n     */\r\n    function withdrawDepositTo(address payable withdrawAddress, uint256 amount) public onlyOwner {\r\n        entryPoint().withdrawTo(withdrawAddress, amount);\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation) internal view override {\r\n        (newImplementation);\r\n        _onlyOwner();\r\n    }\r\n}"},"contracts/utils/SimpleAccountFactory.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\r\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\r\n\r\nimport \"./SimpleAccount.sol\";\r\n\r\n/**\r\n * A sample factory contract for SimpleAccount\r\n * A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\r\n * The factory's createAccount returns the target account address even if it is already installed.\r\n * This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\r\n */\r\ncontract SimpleAccountFactory {\r\n    SimpleAccount public immutable accountImplementation;\r\n\r\n    constructor(IEntryPoint _entryPoint) {\r\n        accountImplementation = new SimpleAccount(_entryPoint);\r\n    }\r\n\r\n    // Mapping to store the created facutal address temperorly...\r\n\r\n    mapping(address=>mapping(uint256=>address)) public createdAccounts;\r\n    mapping(address=>mapping(uint256=>address)) public checkAddress;\r\n\r\n    /**\r\n     * create an account, and return its address.\r\n     * returns the address even if the account is already deployed.\r\n     * Note that during UserOperation execution, this method is called only if the account is not deployed.\r\n     * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\r\n     */\r\n    function createAccount(address owner,uint256 salt) public returns (SimpleAccount ret) {\r\n        address addr = getAddress(owner, salt);\r\n        checkAddress[owner][salt] = addr;\r\n        uint codeSize = addr.code.length;\r\n        if (codeSize > 0) {\r\n            return (SimpleAccount(payable(addr)));\r\n        }\r\n        ret = SimpleAccount(payable(new ERC1967Proxy{salt : bytes32(salt)}(\r\n                address(accountImplementation),\r\n                abi.encodeCall(SimpleAccount.initialize, (owner))\r\n            )));\r\n        createdAccounts[owner][salt] = address(ret);\r\n    }\r\n\r\n    /**\r\n     * calculate the counterfactual address of this account as it would be returned by createAccount()\r\n     */\r\n    function getAddress(address owner,uint256 salt) public view returns (address) {\r\n    return Create2.computeAddress(bytes32(salt), keccak256(abi.encodePacked(\r\n           type(ERC1967Proxy).creationCode,\r\n           abi.encode(\r\n               address(accountImplementation),\r\n               abi.encodeCall(SimpleAccount.initialize, (owner))\r\n           )\r\n       )));\r\n\r\n    \r\n}\r\n\r\n} "},"contracts/utils/VerifyingPaymaster.sol":{"content":"// // SPDX-License-Identifier: GPL-3.0\r\n// pragma solidity ^0.8.20;\r\n\r\n// /* solhint-disable reason-string */\r\n// /* solhint-disable no-inline-assembly */\r\n\r\n// import \"../core/BasePaymaster.sol\";\r\n// import \"../core/UserOperationLib.sol\";\r\n// import \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\n// import \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\r\n\r\n// /**\r\n//  * A sample paymaster that uses external service to decide whether to pay for the UserOp.\r\n//  * The paymaster trusts an external signer to sign the transaction.\r\n//  * The calling user must pass the UserOp to that external signer first, which performs\r\n//  * whatever off-chain verification before signing the UserOp.\r\n//  * Note that this signature is NOT a replacement for the account-specific signature:\r\n//  * - the paymaster checks a signature to agree to PAY for GAS.\r\n//  * - the account checks a signature to prove identity and account ownership.\r\n//  */\r\n \r\n// contract VerifyingPaymaster is BasePaymaster {\r\n\r\n//     using ECDSA for bytes32;\r\n//     using UserOperationLib for UserOperation;\r\n\r\n//     address public immutable verifyingSigner;\r\n\r\n//     uint256 private constant VALID_TIMESTAMP_OFFSET = 20;\r\n\r\n//     uint256 private constant SIGNATURE_OFFSET = 84;\r\n\r\n//     constructor(IEntryPoint _entryPoint, address _verifyingSigner) BasePaymaster(_entryPoint) {\r\n//         verifyingSigner = _verifyingSigner;\r\n//     }\r\n\r\n\r\n//     /**\r\n//      * return the hash we're going to sign off-chain (and validate on-chain)\r\n//      * this method is called by the off-chain service, to sign the request.\r\n//      * it is called on-chain from the validatePaymasterUserOp, to validate the signature.\r\n//      * note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\",\r\n//      * which will carry the signature itself.\r\n//      */\r\n//     function getHash(UserOperation calldata userOp, uint48 validUntil, uint48 validAfter)\r\n//     public view returns (bytes32) {\r\n//         //can't use userOp.hash(), since it contains also the paymasterAndData itself.\r\n//         address sender = userOp.getSender();\r\n//         return\r\n//             keccak256(\r\n//                 abi.encode(\r\n//                     sender,\r\n//                     userOp.nonce,\r\n//                     keccak256(userOp.initCode),\r\n//                     keccak256(userOp.callData),\r\n//                     userOp.callGasLimit,\r\n//                     userOp.verificationGasLimit,\r\n//                     userOp.preVerificationGas,\r\n//                     userOp.maxFeePerGas,\r\n//                     userOp.maxPriorityFeePerGas,\r\n//                     block.chainid,\r\n//                     address(this),\r\n//                     validUntil,\r\n//                     validAfter\r\n//                 )\r\n//             );\r\n//     }\r\n\r\n//     /**\r\n//      * verify our external signer signed this request.\r\n//      * the \"paymasterAndData\" is expected to be the paymaster and a signature over the entire request params\r\n//      * paymasterAndData[:20] : address(this)\r\n//      * paymasterAndData[20:84] : abi.encode(validUntil, validAfter)\r\n//      * paymasterAndData[84:] : signature\r\n//      */\r\n//     function _validatePaymasterUserOp(UserOperation calldata userOp, bytes32 /*userOpHash*/, uint256 requiredPreFund)\r\n//     internal view override returns (bytes memory context, uint256 validationData) {\r\n//         (requiredPreFund);\r\n\r\n//         (uint48 validUntil, uint48 validAfter, bytes calldata signature) = parsePaymasterAndData(userOp.paymasterAndData);\r\n//         //ECDSA library supports both 64 and 65-byte long signatures.\r\n//         // we only \"require\" it here so that the revert reason on invalid signature will be of \"VerifyingPaymaster\", and not \"ECDSA\"\r\n//         require(signature.length == 64 || signature.length == 65, \"VerifyingPaymaster: invalid signature length in paymasterAndData\");\r\n//         bytes32 hash = MessageHashUtils.toEthSignedMessageHash(getHash(userOp, validUntil, validAfter));\r\n\r\n//         //don't revert on signature failure: return SIG_VALIDATION_FAILED\r\n//         if (verifyingSigner != ECDSA.recover(hash, signature)) {\r\n//             return (\"\",_packValidationData(true,validUntil,validAfter));\r\n//         }\r\n\r\n//         //no need for other on-chain validation: entire UserOp should have been checked\r\n//         // by the external service prior to signing it.\r\n//         return (\"\",_packValidationData(false,validUntil,validAfter));\r\n//     }\r\n\r\n//     function parsePaymasterAndData(bytes calldata paymasterAndData) public pure returns(uint48 validUntil, uint48 validAfter, bytes calldata signature) {\r\n//         (validUntil, validAfter) = abi.decode(paymasterAndData[VALID_TIMESTAMP_OFFSET:SIGNATURE_OFFSET],(uint48, uint48));\r\n//         signature = paymasterAndData[SIGNATURE_OFFSET:];\r\n//     }\r\n// }"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.20;\"\n--> contracts/utils/VerifyingPaymaster.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.20;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/utils/VerifyingPaymaster.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1299],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1300,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1299,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1299],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[157]},"id":158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"139:203:1","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":157,"linearizedBaseContracts":[157],"name":"IERC1822Proxiable","nameLocation":"353:17:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"377:438:1","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":156,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:1","nodeType":"FunctionDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[],"src":"842:2:1"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":156,"src":"868:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:1"},"scope":157,"src":"820:57:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":158,"src":"343:536:1","usedErrors":[],"usedEvents":[]}],"src":"113:767:1"},"id":1},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","exportedSymbols":{"ERC1967Proxy":[195],"ERC1967Utils":[498],"Proxy":[534]},"id":196,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":159,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:2"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":196,"sourceUnit":535,"src":"140:35:2","symbolAliases":[{"foreign":{"id":160,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"148:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"./ERC1967Utils.sol","id":163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":196,"sourceUnit":499,"src":"176:48:2","symbolAliases":[{"foreign":{"id":162,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"184:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":165,"name":"Proxy","nameLocations":["624:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":534,"src":"624:5:2"},"id":166,"nodeType":"InheritanceSpecifier","src":"624:5:2"}],"canonicalName":"ERC1967Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"226:372:2","text":" @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."},"fullyImplemented":true,"id":195,"linearizedBaseContracts":[195,534],"name":"ERC1967Proxy","nameLocation":"608:12:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":181,"nodeType":"Block","src":"1144:69:2","statements":[{"expression":{"arguments":[{"id":177,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1184:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":178,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1200:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":174,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"1154:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$498_$","typeString":"type(library ERC1967Utils)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1167:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":317,"src":"1154:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1154:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"ExpressionStatement","src":"1154:52:2"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"636:439:2","text":" @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."},"id":182,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"implementation","nameLocation":"1100:14:2","nodeType":"VariableDeclaration","scope":182,"src":"1092:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"1092:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"_data","nameLocation":"1129:5:2","nodeType":"VariableDeclaration","scope":182,"src":"1116:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":170,"name":"bytes","nodeType":"ElementaryTypeName","src":"1116:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1091:44:2"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"1144:0:2"},"scope":195,"src":"1080:133:2","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[515],"body":{"id":193,"nodeType":"Block","src":"1657:56:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":189,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"1674:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$498_$","typeString":"type(library ERC1967Utils)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1687:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":256,"src":"1674:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1674:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":188,"id":192,"nodeType":"Return","src":"1667:39:2"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"1219:357:2","text":" @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"id":194,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1590:15:2","nodeType":"FunctionDefinition","overrides":{"id":185,"nodeType":"OverrideSpecifier","overrides":[],"src":"1630:8:2"},"parameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"1605:2:2"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":194,"src":"1648:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1647:9:2"},"scope":195,"src":"1581:132:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":196,"src":"599:1116:2","usedErrors":[230,243,1037,1040],"usedEvents":[209]}],"src":"114:1602:2"},"id":2},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[1277],"ERC1967Utils":[498],"IBeacon":[544],"StorageSlot":[1512]},"id":499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":197,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:3"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":199,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":499,"sourceUnit":545,"src":"140:46:3","symbolAliases":[{"foreign":{"id":198,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"148:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":201,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":499,"sourceUnit":1278,"src":"187:48:3","symbolAliases":[{"foreign":{"id":200,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"195:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":499,"sourceUnit":1513,"src":"236:56:3","symbolAliases":[{"foreign":{"id":202,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"244:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"294:154:3","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":498,"linearizedBaseContracts":[498],"name":"ERC1967Utils","nameLocation":"457:12:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"660:68:3","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":209,"name":"Upgraded","nameLocation":"739:8:3","nodeType":"EventDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:3","nodeType":"VariableDeclaration","scope":209,"src":"748:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:3"},"src":"733:47:3"},{"anonymous":false,"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"786:67:3","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":216,"name":"AdminChanged","nameLocation":"864:12:3","nodeType":"EventDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:3","nodeType":"VariableDeclaration","scope":216,"src":"877:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":214,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:3","nodeType":"VariableDeclaration","scope":216,"src":"900:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:3"},"src":"858:60:3"},{"anonymous":false,"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"924:59:3","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":221,"name":"BeaconUpgraded","nameLocation":"994:14:3","nodeType":"EventDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:3","nodeType":"VariableDeclaration","scope":221,"src":"1009:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:3"},"src":"988:45:3"},{"constant":true,"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"1039:170:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":225,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:3","nodeType":"VariableDeclaration","scope":498,"src":"1279:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"1400:69:3","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":230,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:3","nodeType":"ErrorDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:3","nodeType":"VariableDeclaration","scope":230,"src":"1509:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:3"},"src":"1474:59:3"},{"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"1539:60:3","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":235,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:3","nodeType":"ErrorDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"admin","nameLocation":"1638:5:3","nodeType":"VariableDeclaration","scope":235,"src":"1630:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:3"},"src":"1604:41:3"},{"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"1651:61:3","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":240,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:3","nodeType":"ErrorDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:3","nodeType":"VariableDeclaration","scope":240,"src":"1744:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:3"},"src":"1717:43:3"},{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"1766:82:3","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":243,"name":"ERC1967NonPayable","nameLocation":"1859:17:3","nodeType":"ErrorDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"1876:2:3"},"src":"1853:26:3"},{"body":{"id":255,"nodeType":"Block","src":"2018:77:3","statements":[{"expression":{"expression":{"arguments":[{"id":251,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2062:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":249,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2035:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1512_$","typeString":"type(library StorageSlot)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"2035:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1408_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1408_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"2035:53:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":248,"id":254,"nodeType":"Return","src":"2028:60:3"}]},"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"1885:67:3","text":" @dev Returns the current implementation address."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:3","nodeType":"FunctionDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"1983:2:3"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"2009:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:3"},"scope":498,"src":"1957:138:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"2249:218:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":262,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2263:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:3","memberName":"code","nodeType":"MemberAccess","src":"2263:22:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:3","memberName":"length","nodeType":"MemberAccess","src":"2263:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"IfStatement","src":"2259:119:3","trueBody":{"id":271,"nodeType":"Block","src":"2299:79:3","statements":[{"errorCall":{"arguments":[{"id":268,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2349:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"2320:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":270,"nodeType":"RevertStatement","src":"2313:54:3"}]}},{"expression":{"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":276,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2414:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":273,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2387:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1512_$","typeString":"type(library StorageSlot)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"2387:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1408_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1408_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"2387:53:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":279,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2443:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":281,"nodeType":"ExpressionStatement","src":"2387:73:3"}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"2101:80:3","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:3","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:3","nodeType":"VariableDeclaration","scope":283,"src":"2214:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:3"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"2249:0:3"},"scope":498,"src":"2186:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":316,"nodeType":"Block","src":"2860:254:3","statements":[{"expression":{"arguments":[{"id":292,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"2889:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2870:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"ExpressionStatement","src":"2870:37:3"},{"eventCall":{"arguments":[{"id":296,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"2931:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":295,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"2922:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"2917:32:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":299,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2964:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:3","memberName":"length","nodeType":"MemberAccess","src":"2964:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":314,"nodeType":"Block","src":"3065:43:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3079:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"ExpressionStatement","src":"3079:18:3"}]},"id":315,"nodeType":"IfStatement","src":"2960:148:3","trueBody":{"id":310,"nodeType":"Block","src":"2981:78:3","statements":[{"expression":{"arguments":[{"id":306,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3024:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":307,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3043:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":303,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"2995:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1277_$","typeString":"type(library Address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1196,"src":"2995:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":309,"nodeType":"ExpressionStatement","src":"2995:53:3"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"2473:301:3","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":317,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:3","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:3","nodeType":"VariableDeclaration","scope":317,"src":"2805:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"data","nameLocation":"2845:4:3","nodeType":"VariableDeclaration","scope":317,"src":"2832:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":287,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:3"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"2860:0:3"},"scope":498,"src":"2779:335:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"3120:145:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":321,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:3","nodeType":"VariableDeclaration","scope":498,"src":"3335:105:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":333,"nodeType":"Block","src":"3844:68:3","statements":[{"expression":{"expression":{"arguments":[{"id":329,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"3888:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":327,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"3861:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1512_$","typeString":"type(library StorageSlot)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"3861:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1408_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1408_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"3861:44:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":326,"id":332,"nodeType":"Return","src":"3854:51:3"}]},"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"3447:340:3","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":334,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:3","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"3809:2:3"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"3835:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:3"},"scope":498,"src":"3792:120:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":364,"nodeType":"Block","src":"4039:172:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":340,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4053:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:3","typeDescriptions":{}}},"id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":354,"nodeType":"IfStatement","src":"4049:91:3","trueBody":{"id":353,"nodeType":"Block","src":"4077:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:3","typeDescriptions":{}}},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4098:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"RevertStatement","src":"4091:38:3"}]}},{"expression":{"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":358,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4176:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":355,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"4149:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1512_$","typeString":"type(library StorageSlot)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"4149:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1408_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1408_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"4149:44:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":361,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4196:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":363,"nodeType":"ExpressionStatement","src":"4149:55:3"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3918:71:3","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":365,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:3","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:3","nodeType":"VariableDeclaration","scope":365,"src":"4013:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:3"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"4039:0:3"},"scope":498,"src":"3994:217:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":381,"nodeType":"Block","src":"4379:85:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":372,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"4407:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":374,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4419:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":371,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4394:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"EmitStatement","src":"4389:39:3"},{"expression":{"arguments":[{"id":378,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4448:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":377,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4438:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"ExpressionStatement","src":"4438:19:3"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"4217:109:3","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":382,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:3","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:3","nodeType":"VariableDeclaration","scope":382,"src":"4352:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:3"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"4379:0:3"},"scope":498,"src":"4331:133:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"4470:201:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":386,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:3","nodeType":"VariableDeclaration","scope":498,"src":"4741:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":398,"nodeType":"Block","src":"4963:69:3","statements":[{"expression":{"expression":{"arguments":[{"id":394,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5007:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":392,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"4980:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1512_$","typeString":"type(library StorageSlot)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"4980:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1408_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1408_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"4980:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":391,"id":397,"nodeType":"Return","src":"4973:52:3"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"4854:51:3","text":" @dev Returns the current beacon."},"id":399,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:3","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"4928:2:3"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":399,"src":"4954:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:3"},"scope":498,"src":"4910:122:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":444,"nodeType":"Block","src":"5161:390:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":405,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"5175:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:3","memberName":"code","nodeType":"MemberAccess","src":"5175:14:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:3","memberName":"length","nodeType":"MemberAccess","src":"5175:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":415,"nodeType":"IfStatement","src":"5171:95:3","trueBody":{"id":414,"nodeType":"Block","src":"5203:63:3","statements":[{"errorCall":{"arguments":[{"id":411,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"5245:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":410,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"5224:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":413,"nodeType":"RevertStatement","src":"5217:38:3"}]}},{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":419,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5303:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":416,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"5276:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1512_$","typeString":"type(library StorageSlot)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"5276:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1408_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1408_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"5276:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":422,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"5324:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"nodeType":"ExpressionStatement","src":"5276:57:3"},{"assignments":[426],"declarations":[{"constant":false,"id":426,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:3","nodeType":"VariableDeclaration","scope":444,"src":"5344:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":432,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":428,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"5383:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":427,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5375:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$544_$","typeString":"type(contract IBeacon)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$544","typeString":"contract IBeacon"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":543,"src":"5375:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":433,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"5424:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:3","memberName":"code","nodeType":"MemberAccess","src":"5424:25:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:3","memberName":"length","nodeType":"MemberAccess","src":"5424:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":443,"nodeType":"IfStatement","src":"5420:125:3","trueBody":{"id":442,"nodeType":"Block","src":"5463:82:3","statements":[{"errorCall":{"arguments":[{"id":439,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"5513:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":438,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5484:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"RevertStatement","src":"5477:57:3"}]}}]},"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"5038:71:3","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":445,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:3","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:3","nodeType":"VariableDeclaration","scope":445,"src":"5134:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"5161:0:3"},"scope":498,"src":"5114:437:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":482,"nodeType":"Block","src":"6155:254:3","statements":[{"expression":{"arguments":[{"id":454,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6176:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":453,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6165:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"ExpressionStatement","src":"6165:21:3"},{"eventCall":{"arguments":[{"id":458,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6216:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":457,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6201:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"EmitStatement","src":"6196:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":461,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6241:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:3","memberName":"length","nodeType":"MemberAccess","src":"6241:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":480,"nodeType":"Block","src":"6360:43:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":477,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"6374:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"6374:18:3"}]},"id":481,"nodeType":"IfStatement","src":"6237:166:3","trueBody":{"id":476,"nodeType":"Block","src":"6258:96:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":469,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6309:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":468,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"6301:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$544_$","typeString":"type(contract IBeacon)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$544","typeString":"contract IBeacon"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":543,"src":"6301:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":473,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":465,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"6272:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1277_$","typeString":"type(library Address)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1196,"src":"6272:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":475,"nodeType":"ExpressionStatement","src":"6272:71:3"}]}}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"5557:514:3","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":483,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:3","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:3","nodeType":"VariableDeclaration","scope":483,"src":"6108:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"data","nameLocation":"6140:4:3","nodeType":"VariableDeclaration","scope":483,"src":"6127:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":449,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:3"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"6155:0:3"},"scope":498,"src":"6076:333:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":496,"nodeType":"Block","src":"6634:86:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":487,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:3","memberName":"value","nodeType":"MemberAccess","src":"6648:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":495,"nodeType":"IfStatement","src":"6644:70:3","trueBody":{"id":494,"nodeType":"Block","src":"6663:51:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"6684:17:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"RevertStatement","src":"6677:26:3"}]}}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"6415:178:3","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":497,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:3","nodeType":"FunctionDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"6623:2:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[],"src":"6634:0:3"},"scope":498,"src":"6598:122:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":499,"src":"449:6273:3","usedErrors":[230,235,240,243],"usedEvents":[209,216,221]}],"src":"114:6609:3"},"id":3},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[534]},"id":535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":500,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"125:598:4","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":534,"linearizedBaseContracts":[534],"name":"Proxy","nameLocation":"742:5:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":508,"nodeType":"Block","src":"1009:835:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1028:810:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1281:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1284:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1287:12:4"},"nodeType":"YulFunctionCall","src":"1287:14:4"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1268:12:4"},"nodeType":"YulFunctionCall","src":"1268:34:4"},"nodeType":"YulExpressionStatement","src":"1268:34:4"},{"nodeType":"YulVariableDeclaration","src":"1429:74:4","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1456:3:4"},"nodeType":"YulFunctionCall","src":"1456:5:4"},{"name":"implementation","nodeType":"YulIdentifier","src":"1463:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1479:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1482:12:4"},"nodeType":"YulFunctionCall","src":"1482:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1501:1:4","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1443:12:4"},"nodeType":"YulFunctionCall","src":"1443:60:4"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1433:6:4","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1571:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1574:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1577:14:4"},"nodeType":"YulFunctionCall","src":"1577:16:4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1556:14:4"},"nodeType":"YulFunctionCall","src":"1556:38:4"},"nodeType":"YulExpressionStatement","src":"1556:38:4"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1689:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1714:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1717:14:4"},"nodeType":"YulFunctionCall","src":"1717:16:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1707:6:4"},"nodeType":"YulFunctionCall","src":"1707:27:4"},"nodeType":"YulExpressionStatement","src":"1707:27:4"}]},"nodeType":"YulCase","src":"1682:66:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1687:1:4","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1769:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1794:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1797:14:4"},"nodeType":"YulFunctionCall","src":"1797:16:4"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1787:6:4"},"nodeType":"YulFunctionCall","src":"1787:27:4"},"nodeType":"YulExpressionStatement","src":"1787:27:4"}]},"nodeType":"YulCase","src":"1761:67:4","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1615:6:4"},"nodeType":"YulSwitch","src":"1608:220:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":504,"isOffset":false,"isSlot":false,"src":"1463:14:4","valueSize":1}],"id":507,"nodeType":"InlineAssembly","src":"1019:819:4"}]},"documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"754:190:4","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":509,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:4","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"implementation","nameLocation":"976:14:4","nodeType":"VariableDeclaration","scope":509,"src":"968:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:4"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"1009:0:4"},"scope":534,"src":"949:895:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"1850:173:4","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"id":515,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:4","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2052:2:4"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":515,"src":"2086:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:4"},"scope":534,"src":"2028:67:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"2361:45:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"2381:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2371:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"ExpressionStatement","src":"2371:28:4"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"2101:217:4","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:4","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"2341:2:4"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"2361:0:4"},"scope":534,"src":"2323:83:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":532,"nodeType":"Block","src":"2639:28:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":529,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2649:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":531,"nodeType":"ExpressionStatement","src":"2649:11:4"}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"2412:186:4","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":533,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"2611:2:4"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"2639:0:4"},"scope":534,"src":"2603:64:4","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":535,"src":"724:1945:4","usedErrors":[],"usedEvents":[]}],"src":"99:2571:4"},"id":4},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[544]},"id":545,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":536,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":537,"nodeType":"StructuredDocumentation","src":"134:79:5","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":544,"linearizedBaseContracts":[544],"name":"IBeacon","nameLocation":"224:7:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"238:168:5","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":543,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:5","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"434:2:5"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"460:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:5"},"scope":544,"src":"411:58:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":545,"src":"214:257:5","usedErrors":[],"usedEvents":[]}],"src":"108:364:5"},"id":5},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[798]},"id":799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":546,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"139:2209:6","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":798,"linearizedBaseContracts":[798],"name":"Initializable","nameLocation":"2367:13:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"2387:293:6","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":555,"members":[{"constant":false,"id":551,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:6","nodeType":"VariableDeclaration","scope":555,"src":"2813:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":550,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:6","nodeType":"VariableDeclaration","scope":555,"src":"2950:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":553,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:6","nodeType":"StructDefinition","scope":798,"src":"2685:290:6","visibility":"public"},{"constant":true,"id":558,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:6","nodeType":"VariableDeclaration","scope":798,"src":"3098:115:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:6","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"3220:60:6","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":561,"name":"InvalidInitialization","nameLocation":"3291:21:6","nodeType":"ErrorDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"3312:2:6"},"src":"3285:30:6"},{"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"3321:57:6","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":564,"name":"NotInitializing","nameLocation":"3389:15:6","nodeType":"ErrorDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"3404:2:6"},"src":"3383:24:6"},{"anonymous":false,"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"3413:90:6","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":569,"name":"Initialized","nameLocation":"3514:11:6","nodeType":"EventDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:6","nodeType":"VariableDeclaration","scope":569,"src":"3526:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":566,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:6"},"src":"3508:34:6"},{"body":{"id":651,"nodeType":"Block","src":"4092:1081:6","statements":[{"assignments":[574],"declarations":[{"constant":false,"id":574,"mutability":"mutable","name":"$","nameLocation":"4187:1:6","nodeType":"VariableDeclaration","scope":651,"src":"4158:30:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":573,"nodeType":"UserDefinedTypeName","pathNode":{"id":572,"name":"InitializableStorage","nameLocations":["4158:20:6"],"nodeType":"IdentifierPath","referencedDeclaration":555,"src":"4158:20:6"},"referencedDeclaration":555,"src":"4158:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":577,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":575,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"4191:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$555_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:6"},{"assignments":[579],"declarations":[{"constant":false,"id":579,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:6","nodeType":"VariableDeclaration","scope":651,"src":"4279:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":578,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":583,"initialValue":{"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:6","subExpression":{"expression":{"id":580,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4302:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:6","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":554,"src":"4302:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:6"},{"assignments":[585],"declarations":[{"constant":false,"id":585,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:6","nodeType":"VariableDeclaration","scope":651,"src":"4327:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":584,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":588,"initialValue":{"expression":{"id":586,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4348:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:6","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":551,"src":"4348:14:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:6"},{"assignments":[590],"declarations":[{"constant":false,"id":590,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:6","nodeType":"VariableDeclaration","scope":651,"src":"4706:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":589,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":596,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":591,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4726:11:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":594,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4746:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:6"},{"assignments":[598],"declarations":[{"constant":false,"id":598,"mutability":"mutable","name":"construction","nameLocation":"4775:12:6","nodeType":"VariableDeclaration","scope":651,"src":"4770:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":597,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":611,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4790:11:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":604,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$798","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$798","typeString":"contract Initializable"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:6","typeDescriptions":{}}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:6","memberName":"code","nodeType":"MemberAccess","src":"4810:18:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:6","memberName":"length","nodeType":"MemberAccess","src":"4810:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:6","subExpression":{"id":612,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"4856:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:6","subExpression":{"id":614,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4873:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":621,"nodeType":"IfStatement","src":"4851:91:6","trueBody":{"id":620,"nodeType":"Block","src":"4887:55:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":617,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"4908:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"RevertStatement","src":"4901:30:6"}]}},{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":622,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4951:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:6","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":551,"src":"4951:14:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":627,"nodeType":"ExpressionStatement","src":"4951:18:6"},{"condition":{"id":628,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4983:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"4979:67:6","trueBody":{"id":635,"nodeType":"Block","src":"4999:47:6","statements":[{"expression":{"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":629,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"5013:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:6","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":554,"src":"5013:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":634,"nodeType":"ExpressionStatement","src":"5013:22:6"}]}},{"id":637,"nodeType":"PlaceholderStatement","src":"5055:1:6"},{"condition":{"id":638,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"5070:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":650,"nodeType":"IfStatement","src":"5066:101:6","trueBody":{"id":649,"nodeType":"Block","src":"5086:81:6","statements":[{"expression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":639,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"5100:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:6","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":554,"src":"5100:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":644,"nodeType":"ExpressionStatement","src":"5100:23:6"},{"eventCall":{"arguments":[{"hexValue":"31","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":645,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5142:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"EmitStatement","src":"5137:19:6"}]}}]},"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"3548:516:6","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":652,"name":"initializer","nameLocation":"4078:11:6","nodeType":"ModifierDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[],"src":"4089:2:6"},"src":"4069:1104:6","virtual":false,"visibility":"internal"},{"body":{"id":698,"nodeType":"Block","src":"6291:392:6","statements":[{"assignments":[659],"declarations":[{"constant":false,"id":659,"mutability":"mutable","name":"$","nameLocation":"6386:1:6","nodeType":"VariableDeclaration","scope":698,"src":"6357:30:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":658,"nodeType":"UserDefinedTypeName","pathNode":{"id":657,"name":"InitializableStorage","nameLocations":["6357:20:6"],"nodeType":"IdentifierPath","referencedDeclaration":555,"src":"6357:20:6"},"referencedDeclaration":555,"src":"6357:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":662,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":660,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"6390:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$555_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":663,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6431:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:6","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":554,"src":"6431:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":665,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6450:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:6","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":551,"src":"6450:14:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":667,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6468:7:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":674,"nodeType":"IfStatement","src":"6427:105:6","trueBody":{"id":673,"nodeType":"Block","src":"6477:55:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":670,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6498:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":672,"nodeType":"RevertStatement","src":"6491:30:6"}]}},{"expression":{"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":675,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6541:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:6","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":551,"src":"6541:14:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":678,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6558:7:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":680,"nodeType":"ExpressionStatement","src":"6541:24:6"},{"expression":{"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":681,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6575:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:6","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":554,"src":"6575:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"ExpressionStatement","src":"6575:22:6"},{"id":687,"nodeType":"PlaceholderStatement","src":"6607:1:6"},{"expression":{"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":688,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6618:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:6","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":554,"src":"6618:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"ExpressionStatement","src":"6618:23:6"},{"eventCall":{"arguments":[{"id":695,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6668:7:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":694,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"6656:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":697,"nodeType":"EmitStatement","src":"6651:25:6"}]},"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"5179:1068:6","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":699,"name":"reinitializer","nameLocation":"6261:13:6","nodeType":"ModifierDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"version","nameLocation":"6282:7:6","nodeType":"VariableDeclaration","scope":699,"src":"6275:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":654,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:6"},"src":"6252:431:6","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"6921:48:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":702,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6931:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"ExpressionStatement","src":"6931:20:6"},{"id":705,"nodeType":"PlaceholderStatement","src":"6961:1:6"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"6689:199:6","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":707,"name":"onlyInitializing","nameLocation":"6902:16:6","nodeType":"ModifierDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"6918:2:6"},"src":"6893:76:6","virtual":false,"visibility":"internal"},{"body":{"id":719,"nodeType":"Block","src":"7136:89:6","statements":[{"condition":{"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:6","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":711,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7151:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":718,"nodeType":"IfStatement","src":"7146:73:6","trueBody":{"id":717,"nodeType":"Block","src":"7170:49:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":714,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"7191:15:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"RevertStatement","src":"7184:24:6"}]}}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"6975:104:6","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":720,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:6","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"7111:2:6"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"7136:0:6"},"scope":798,"src":"7084:141:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":765,"nodeType":"Block","src":"7760:373:6","statements":[{"assignments":[726],"declarations":[{"constant":false,"id":726,"mutability":"mutable","name":"$","nameLocation":"7855:1:6","nodeType":"VariableDeclaration","scope":765,"src":"7826:30:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":725,"nodeType":"UserDefinedTypeName","pathNode":{"id":724,"name":"InitializableStorage","nameLocations":["7826:20:6"],"nodeType":"IdentifierPath","referencedDeclaration":555,"src":"7826:20:6"},"referencedDeclaration":555,"src":"7826:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":727,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"7859:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$555_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:6"},{"condition":{"expression":{"id":730,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7900:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:6","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":554,"src":"7900:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":736,"nodeType":"IfStatement","src":"7896:76:6","trueBody":{"id":735,"nodeType":"Block","src":"7917:55:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":732,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7938:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"RevertStatement","src":"7931:30:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":737,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7985:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:6","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":551,"src":"7985:14:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":740,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":739,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:6","memberName":"max","nodeType":"MemberAccess","src":"8003:16:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"IfStatement","src":"7981:146:6","trueBody":{"id":763,"nodeType":"Block","src":"8021:106:6","statements":[{"expression":{"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":745,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"8035:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:6","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":551,"src":"8035:14:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":749,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:6","memberName":"max","nodeType":"MemberAccess","src":"8052:16:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":754,"nodeType":"ExpressionStatement","src":"8035:33:6"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":757,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":756,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:6","memberName":"max","nodeType":"MemberAccess","src":"8099:16:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":755,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"8087:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"EmitStatement","src":"8082:34:6"}]}}]},"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"7231:475:6","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:6","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"7740:2:6"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[],"src":"7760:0:6"},"scope":798,"src":"7711:422:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":776,"nodeType":"Block","src":"8308:63:6","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":772,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8325:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$555_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:6","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":551,"src":"8325:39:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":771,"id":775,"nodeType":"Return","src":"8318:46:6"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"8139:99:6","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":777,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:6","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"8274:2:6"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":777,"src":"8300:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":769,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:6"},"scope":798,"src":"8243:128:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":787,"nodeType":"Block","src":"8543:64:6","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":783,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8560:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$555_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:6","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":554,"src":"8560:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":782,"id":786,"nodeType":"Return","src":"8553:47:6"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"8377:105:6","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":788,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:6","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[],"src":"8511:2:6"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"8537:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":780,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:6"},"scope":798,"src":"8487:120:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":796,"nodeType":"Block","src":"8827:80:6","statements":[{"AST":{"nodeType":"YulBlock","src":"8846:55:6","statements":[{"nodeType":"YulAssignment","src":"8860:31:6","value":{"name":"INITIALIZABLE_STORAGE","nodeType":"YulIdentifier","src":"8870:21:6"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"8860:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":793,"isOffset":false,"isSlot":true,"src":"8860:6:6","suffix":"slot","valueSize":1},{"declaration":558,"isOffset":false,"isSlot":false,"src":"8870:21:6","valueSize":1}],"id":795,"nodeType":"InlineAssembly","src":"8837:64:6"}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"8613:67:6","text":" @dev Returns a pointer to the storage namespace."},"id":797,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:6","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"8770:2:6"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"$","nameLocation":"8824:1:6","nodeType":"VariableDeclaration","scope":797,"src":"8795:30:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":792,"nodeType":"UserDefinedTypeName","pathNode":{"id":791,"name":"InitializableStorage","nameLocations":["8795:20:6"],"nodeType":"IdentifierPath","referencedDeclaration":555,"src":"8795:20:6"},"referencedDeclaration":555,"src":"8795:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$555_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:6"},"scope":798,"src":"8737:170:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":799,"src":"2349:6560:6","usedErrors":[561,564],"usedEvents":[569]}],"src":"113:8797:6"},"id":6},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[498],"IERC1822Proxiable":[157],"UUPSUpgradeable":[964]},"id":965,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:7"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":965,"sourceUnit":158,"src":"141:70:7","symbolAliases":[{"foreign":{"id":801,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"149:17:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"../ERC1967/ERC1967Utils.sol","id":804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":965,"sourceUnit":499,"src":"212:57:7","symbolAliases":[{"foreign":{"id":803,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"220:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":806,"name":"IERC1822Proxiable","nameLocations":["927:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":157,"src":"927:17:7"},"id":807,"nodeType":"InheritanceSpecifier","src":"927:17:7"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"271:618:7","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":964,"linearizedBaseContracts":[964,157],"name":"UUPSUpgradeable","nameLocation":"908:15:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"951:61:7","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":814,"mutability":"immutable","name":"__self","nameLocation":"1043:6:7","nodeType":"VariableDeclaration","scope":964,"src":"1017:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"1017:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":812,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1060:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$964","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$964","typeString":"contract UUPSUpgradeable"}],"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1052:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"1052:7:7","typeDescriptions":{}}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1052:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"1072:631:7","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":818,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1731:25:7","nodeType":"VariableDeclaration","scope":964,"src":"1708:58:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":816,"name":"string","nodeType":"ElementaryTypeName","src":"1708:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1759:7:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"1773:65:7","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":821,"name":"UUPSUnauthorizedCallContext","nameLocation":"1849:27:7","nodeType":"ErrorDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[],"src":"1876:2:7"},"src":"1843:36:7"},{"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"1885:68:7","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":826,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"1964:28:7","nodeType":"ErrorDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"slot","nameLocation":"2001:4:7","nodeType":"VariableDeclaration","scope":826,"src":"1993:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1993:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1992:14:7"},"src":"1958:49:7"},{"body":{"id":833,"nodeType":"Block","src":"2532:41:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":829,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2542:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":831,"nodeType":"ExpressionStatement","src":"2542:13:7"},{"id":832,"nodeType":"PlaceholderStatement","src":"2565:1:7"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"2013:493:7","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":834,"name":"onlyProxy","nameLocation":"2520:9:7","nodeType":"ModifierDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"2529:2:7"},"src":"2511:62:7","virtual":false,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"2803:48:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":837,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"2813:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2813:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"ExpressionStatement","src":"2813:20:7"},{"id":840,"nodeType":"PlaceholderStatement","src":"2843:1:7"}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"2579:195:7","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":842,"name":"notDelegated","nameLocation":"2788:12:7","nodeType":"ModifierDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"2800:2:7"},"src":"2779:72:7","virtual":false,"visibility":"internal"},{"baseFunctions":[156],"body":{"id":853,"nodeType":"Block","src":"3517:56:7","statements":[{"expression":{"expression":{"id":850,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"3534:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$498_$","typeString":"type(library ERC1967Utils)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3547:19:7","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":225,"src":"3534:32:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":849,"id":852,"nodeType":"Return","src":"3527:39:7"}]},"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"2857:577:7","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":854,"implemented":true,"kind":"function","modifiers":[{"id":846,"kind":"modifierInvocation","modifierName":{"id":845,"name":"notDelegated","nameLocations":["3486:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"3486:12:7"},"nodeType":"ModifierInvocation","src":"3486:12:7"}],"name":"proxiableUUID","nameLocation":"3448:13:7","nodeType":"FunctionDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"3461:2:7"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"3508:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3508:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3507:9:7"},"scope":964,"src":"3439:134:7","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":873,"nodeType":"Block","src":"3997:109:7","statements":[{"expression":{"arguments":[{"id":865,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"4025:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":864,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"4007:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"ExpressionStatement","src":"4007:36:7"},{"expression":{"arguments":[{"id":869,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"4075:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":870,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"4094:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":868,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"4053:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4053:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":872,"nodeType":"ExpressionStatement","src":"4053:46:7"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"3579:308:7","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":874,"implemented":true,"kind":"function","modifiers":[{"id":862,"kind":"modifierInvocation","modifierName":{"id":861,"name":"onlyProxy","nameLocations":["3987:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":834,"src":"3987:9:7"},"nodeType":"ModifierInvocation","src":"3987:9:7"}],"name":"upgradeToAndCall","nameLocation":"3901:16:7","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"newImplementation","nameLocation":"3926:17:7","nodeType":"VariableDeclaration","scope":874,"src":"3918:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"3918:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"data","nameLocation":"3958:4:7","nodeType":"VariableDeclaration","scope":874,"src":"3945:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":858,"name":"bytes","nodeType":"ElementaryTypeName","src":"3945:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3917:46:7"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[],"src":"3997:0:7"},"scope":964,"src":"3892:214:7","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":895,"nodeType":"Block","src":"4378:267:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":880,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4413:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$964","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$964","typeString":"contract UUPSUpgradeable"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4405:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"4405:7:7","typeDescriptions":{}}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4405:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":882,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4422:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4405:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":884,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"4483:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$498_$","typeString":"type(library ERC1967Utils)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4496:17:7","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":256,"src":"4483:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4483:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":887,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4519:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4483:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4405:120:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":894,"nodeType":"IfStatement","src":"4388:251:7","trueBody":{"id":893,"nodeType":"Block","src":"4578:61:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":890,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"4599:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4599:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"RevertStatement","src":"4592:36:7"}]}}]},"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"4112:216:7","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4342:11:7","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"4353:2:7"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"4378:0:7"},"scope":964,"src":"4333:312:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"4814:161:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":902,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4836:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$964","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$964","typeString":"contract UUPSUpgradeable"}],"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4828:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"4828:7:7","typeDescriptions":{}}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4828:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":904,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4845:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4828:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":910,"nodeType":"IfStatement","src":"4824:145:7","trueBody":{"id":909,"nodeType":"Block","src":"4853:116:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":906,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"4929:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4929:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"RevertStatement","src":"4922:36:7"}]}}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"4651:106:7","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"4771:18:7","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"4789:2:7"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"4814:0:7"},"scope":964,"src":"4762:213:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"4981:372:7","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":918,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5367:17:7","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"newImplementation","nameLocation":"5393:17:7","nodeType":"VariableDeclaration","scope":918,"src":"5385:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"5385:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5384:27:7"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"5428:0:7"},"scope":964,"src":"5358:71:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":962,"nodeType":"Block","src":"5871:453:7","statements":[{"clauses":[{"block":{"id":951,"nodeType":"Block","src":"5961:212:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":934,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"5979:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":935,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"5987:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$498_$","typeString":"type(library ERC1967Utils)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6000:19:7","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":225,"src":"5987:32:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5979:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":943,"nodeType":"IfStatement","src":"5975:120:7","trueBody":{"id":942,"nodeType":"Block","src":"6021:74:7","statements":[{"errorCall":{"arguments":[{"id":939,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6075:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":938,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"6046:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"RevertStatement","src":"6039:41:7"}]}},{"expression":{"arguments":[{"id":947,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"6138:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":948,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"6157:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":944,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"6108:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$498_$","typeString":"type(library ERC1967Utils)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6121:16:7","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":317,"src":"6108:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6108:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":950,"nodeType":"ExpressionStatement","src":"6108:54:7"}]},"errorName":"","id":952,"nodeType":"TryCatchClause","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"slot","nameLocation":"5955:4:7","nodeType":"VariableDeclaration","scope":952,"src":"5947:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5947:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5946:14:7"},"src":"5938:235:7"},{"block":{"id":959,"nodeType":"Block","src":"6180:138:7","statements":[{"errorCall":{"arguments":[{"id":956,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"6289:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":953,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"6247:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$498_$","typeString":"type(library ERC1967Utils)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:28:7","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":230,"src":"6247:41:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6247:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"RevertStatement","src":"6240:67:7"}]},"errorName":"","id":960,"nodeType":"TryCatchClause","src":"6174:144:7"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":927,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"5903:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":926,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"5885:17:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$157_$","typeString":"type(contract IERC1822Proxiable)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5885:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$157","typeString":"contract IERC1822Proxiable"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5922:13:7","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":156,"src":"5885:50:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5885:52:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":961,"nodeType":"TryStatement","src":"5881:437:7"}]},"documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"5435:346:7","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":963,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"5795:21:7","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"newImplementation","nameLocation":"5825:17:7","nodeType":"VariableDeclaration","scope":963,"src":"5817:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"5817:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"data","nameLocation":"5857:4:7","nodeType":"VariableDeclaration","scope":963,"src":"5844:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":922,"name":"bytes","nodeType":"ElementaryTypeName","src":"5844:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5816:46:7"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"5871:0:7"},"scope":964,"src":"5786:538:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":965,"src":"890:5436:7","usedErrors":[230,243,821,826,1037,1040],"usedEvents":[209]}],"src":"115:6212:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1006],"IERC165":[2201]},"id":1007,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":966,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":968,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1007,"sourceUnit":2202,"src":"144:62:8","symbolAliases":[{"foreign":{"id":967,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"152:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":970,"name":"IERC165","nameLocations":["357:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2201,"src":"357:7:8"},"id":971,"nodeType":"InheritanceSpecifier","src":"357:7:8"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"208:118:8","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1006,"linearizedBaseContracts":[1006,2201],"name":"IERC1155Receiver","nameLocation":"337:16:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"371:826:8","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":987,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1211:17:8","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"operator","nameLocation":"1246:8:8","nodeType":"VariableDeclaration","scope":987,"src":"1238:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"from","nameLocation":"1272:4:8","nodeType":"VariableDeclaration","scope":987,"src":"1264:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"id","nameLocation":"1294:2:8","nodeType":"VariableDeclaration","scope":987,"src":"1286:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"value","nameLocation":"1314:5:8","nodeType":"VariableDeclaration","scope":987,"src":"1306:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"data","nameLocation":"1344:4:8","nodeType":"VariableDeclaration","scope":987,"src":"1329:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":981,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1228:126:8"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":987,"src":"1373:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":984,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1373:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1372:8:8"},"scope":1006,"src":"1202:179:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"1387:994:8","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1005,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2395:22:8","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"operator","nameLocation":"2435:8:8","nodeType":"VariableDeclaration","scope":1005,"src":"2427:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"from","nameLocation":"2461:4:8","nodeType":"VariableDeclaration","scope":1005,"src":"2453:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"2453:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"ids","nameLocation":"2494:3:8","nodeType":"VariableDeclaration","scope":1005,"src":"2475:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":994,"nodeType":"ArrayTypeName","src":"2475:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"values","nameLocation":"2526:6:8","nodeType":"VariableDeclaration","scope":1005,"src":"2507:25:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":997,"nodeType":"ArrayTypeName","src":"2507:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"data","nameLocation":"2557:4:8","nodeType":"VariableDeclaration","scope":1005,"src":"2542:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":999,"name":"bytes","nodeType":"ElementaryTypeName","src":"2542:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2417:150:8"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1005,"src":"2586:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1002,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2586:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2585:8:8"},"scope":1006,"src":"2386:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1007,"src":"327:2269:8","usedErrors":[],"usedEvents":[]}],"src":"118:2479:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1024]},"id":1025,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1008,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"142:152:9","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1024,"linearizedBaseContracts":[1024],"name":"IERC721Receiver","nameLocation":"305:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"327:500:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1023,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"841:16:9","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"operator","nameLocation":"875:8:9","nodeType":"VariableDeclaration","scope":1023,"src":"867:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"from","nameLocation":"901:4:9","nodeType":"VariableDeclaration","scope":1023,"src":"893:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"tokenId","nameLocation":"923:7:9","nodeType":"VariableDeclaration","scope":1023,"src":"915:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"data","nameLocation":"955:4:9","nodeType":"VariableDeclaration","scope":1023,"src":"940:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1017,"name":"bytes","nodeType":"ElementaryTypeName","src":"940:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"857:108:9"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1023,"src":"984:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1020,"name":"bytes4","nodeType":"ElementaryTypeName","src":"984:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"983:8:9"},"scope":1024,"src":"832:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1025,"src":"295:699:9","usedErrors":[],"usedEvents":[]}],"src":"116:879:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1277]},"id":1278,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1026,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"127:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1277,"linearizedBaseContracts":[1277],"name":"Address","nameLocation":"203:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"217:94:10","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1032,"name":"AddressInsufficientBalance","nameLocation":"322:26:10","nodeType":"ErrorDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"account","nameLocation":"357:7:10","nodeType":"VariableDeclaration","scope":1032,"src":"349:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:10"},"src":"316:50:10"},{"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"372:75:10","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1037,"name":"AddressEmptyCode","nameLocation":"458:16:10","nodeType":"ErrorDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"target","nameLocation":"483:6:10","nodeType":"VariableDeclaration","scope":1037,"src":"475:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:10"},"src":"452:39:10"},{"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"497:89:10","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1040,"name":"FailedInnerCall","nameLocation":"597:15:10","nodeType":"ErrorDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"612:2:10"},"src":"591:24:10"},{"body":{"id":1080,"nodeType":"Block","src":"1602:260:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1050,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1277","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1277","typeString":"library Address"}],"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:10","typeDescriptions":{}}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:10","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1053,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1640:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1063,"nodeType":"IfStatement","src":"1612:109:10","trueBody":{"id":1062,"nodeType":"Block","src":"1648:73:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1058,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1277","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1277","typeString":"library Address"}],"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:10","typeDescriptions":{}}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1669:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"RevertStatement","src":"1662:48:10"}]}},{"assignments":[1065,null],"declarations":[{"constant":false,"id":1065,"mutability":"mutable","name":"success","nameLocation":"1737:7:10","nodeType":"VariableDeclaration","scope":1080,"src":"1732:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1064,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1072,"initialValue":{"arguments":[{"hexValue":"","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1066,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"1750:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:10","memberName":"call","nodeType":"MemberAccess","src":"1750:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1068,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1772:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:10"},{"condition":{"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:10","subExpression":{"id":1073,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"1798:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"1793:63:10","trueBody":{"id":1078,"nodeType":"Block","src":"1807:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1075,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"1828:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"RevertStatement","src":"1821:24:10"}]}}]},"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"621:905:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1081,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:10","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:10","nodeType":"VariableDeclaration","scope":1081,"src":"1550:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"amount","nameLocation":"1585:6:10","nodeType":"VariableDeclaration","scope":1081,"src":"1577:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:10"},"returnParameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"1602:0:10"},"scope":1277,"src":"1531:331:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1097,"nodeType":"Block","src":"2794:62:10","statements":[{"expression":{"arguments":[{"id":1092,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"2833:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1093,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2841:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1091,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"2811:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1090,"id":1096,"nodeType":"Return","src":"2804:45:10"}]},"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"1868:832:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:10","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"target","nameLocation":"2735:6:10","nodeType":"VariableDeclaration","scope":1098,"src":"2727:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"data","nameLocation":"2756:4:10","nodeType":"VariableDeclaration","scope":1098,"src":"2743:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1085,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:10"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1098,"src":"2780:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1088,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:10"},"scope":1277,"src":"2705:151:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"3293:279:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1112,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1277","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1277","typeString":"library Address"}],"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:10","typeDescriptions":{}}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:10","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"3331:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1125,"nodeType":"IfStatement","src":"3303:108:10","trueBody":{"id":1124,"nodeType":"Block","src":"3338:73:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1120,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1277","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1277","typeString":"library Address"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:10","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1117,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"3359:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"RevertStatement","src":"3352:48:10"}]}},{"assignments":[1127,1129],"declarations":[{"constant":false,"id":1127,"mutability":"mutable","name":"success","nameLocation":"3426:7:10","nodeType":"VariableDeclaration","scope":1143,"src":"3421:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1126,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:10","nodeType":"VariableDeclaration","scope":1143,"src":"3435:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1128,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1136,"initialValue":{"arguments":[{"id":1134,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"3488:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1130,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"3462:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:10","memberName":"call","nodeType":"MemberAccess","src":"3462:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"3481:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:10"},{"expression":{"arguments":[{"id":1138,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"3537:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1139,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"3545:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1140,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"3554:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1137,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"3510:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1109,"id":1142,"nodeType":"Return","src":"3503:62:10"}]},"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"2862:313:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:10","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"target","nameLocation":"3219:6:10","nodeType":"VariableDeclaration","scope":1144,"src":"3211:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"data","nameLocation":"3240:4:10","nodeType":"VariableDeclaration","scope":1144,"src":"3227:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1102,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"value","nameLocation":"3254:5:10","nodeType":"VariableDeclaration","scope":1144,"src":"3246:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:10"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1144,"src":"3279:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1107,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:10"},"scope":1277,"src":"3180:392:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1169,"nodeType":"Block","src":"3811:154:10","statements":[{"assignments":[1155,1157],"declarations":[{"constant":false,"id":1155,"mutability":"mutable","name":"success","nameLocation":"3827:7:10","nodeType":"VariableDeclaration","scope":1169,"src":"3822:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1154,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:10","nodeType":"VariableDeclaration","scope":1169,"src":"3836:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1156,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1162,"initialValue":{"arguments":[{"id":1160,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3881:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1158,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3863:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:10"},{"expression":{"arguments":[{"id":1164,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3930:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1165,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3938:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1166,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3947:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1163,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"3903:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1153,"id":1168,"nodeType":"Return","src":"3896:62:10"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"3578:128:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1170,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:10","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"target","nameLocation":"3747:6:10","nodeType":"VariableDeclaration","scope":1170,"src":"3739:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"data","nameLocation":"3768:4:10","nodeType":"VariableDeclaration","scope":1170,"src":"3755:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1148,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:10"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1170,"src":"3797:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1151,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:10"},"scope":1277,"src":"3711:254:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1195,"nodeType":"Block","src":"4203:156:10","statements":[{"assignments":[1181,1183],"declarations":[{"constant":false,"id":1181,"mutability":"mutable","name":"success","nameLocation":"4219:7:10","nodeType":"VariableDeclaration","scope":1195,"src":"4214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1180,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:10","nodeType":"VariableDeclaration","scope":1195,"src":"4228:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1182,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1188,"initialValue":{"arguments":[{"id":1186,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"4275:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1184,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4255:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:10"},{"expression":{"arguments":[{"id":1190,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4324:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"4332:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1192,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"4341:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1189,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"4297:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1179,"id":1194,"nodeType":"Return","src":"4290:62:10"}]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"3971:130:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1196,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:10","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"target","nameLocation":"4144:6:10","nodeType":"VariableDeclaration","scope":1196,"src":"4136:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"data","nameLocation":"4165:4:10","nodeType":"VariableDeclaration","scope":1196,"src":"4152:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1174,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:10"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1196,"src":"4189:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1177,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:10"},"scope":1277,"src":"4106:253:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1235,"nodeType":"Block","src":"4783:424:10","statements":[{"condition":{"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:10","subExpression":{"id":1208,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"4798:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1233,"nodeType":"Block","src":"4857:344:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1215,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5045:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:10","memberName":"length","nodeType":"MemberAccess","src":"5045:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1219,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"5071:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:10","memberName":"code","nodeType":"MemberAccess","src":"5071:11:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:10","memberName":"length","nodeType":"MemberAccess","src":"5071:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1230,"nodeType":"IfStatement","src":"5041:119:10","trueBody":{"id":1229,"nodeType":"Block","src":"5096:64:10","statements":[{"errorCall":{"arguments":[{"id":1226,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"5138:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1225,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"5121:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"RevertStatement","src":"5114:31:10"}]}},{"expression":{"id":1231,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5180:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1207,"id":1232,"nodeType":"Return","src":"5173:17:10"}]},"id":1234,"nodeType":"IfStatement","src":"4793:408:10","trueBody":{"id":1214,"nodeType":"Block","src":"4807:44:10","statements":[{"expression":{"arguments":[{"id":1211,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4829:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1210,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"4821:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1213,"nodeType":"ExpressionStatement","src":"4821:19:10"}]}}]},"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"4365:255:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:10","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"target","nameLocation":"4678:6:10","nodeType":"VariableDeclaration","scope":1236,"src":"4670:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"success","nameLocation":"4699:7:10","nodeType":"VariableDeclaration","scope":1236,"src":"4694:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1200,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:10","nodeType":"VariableDeclaration","scope":1236,"src":"4716:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1202,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:10"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1236,"src":"4769:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1205,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:10"},"scope":1277,"src":"4625:582:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1257,"nodeType":"Block","src":"5509:122:10","statements":[{"condition":{"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:10","subExpression":{"id":1246,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"5524:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1255,"nodeType":"Block","src":"5583:42:10","statements":[{"expression":{"id":1253,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5604:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1245,"id":1254,"nodeType":"Return","src":"5597:17:10"}]},"id":1256,"nodeType":"IfStatement","src":"5519:106:10","trueBody":{"id":1252,"nodeType":"Block","src":"5533:44:10","statements":[{"expression":{"arguments":[{"id":1249,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5555:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1248,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5547:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1251,"nodeType":"ExpressionStatement","src":"5547:19:10"}]}}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"5213:189:10","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1258,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:10","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"success","nameLocation":"5438:7:10","nodeType":"VariableDeclaration","scope":1258,"src":"5433:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1238,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:10","nodeType":"VariableDeclaration","scope":1258,"src":"5447:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1240,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:10"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1258,"src":"5495:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1243,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:10"},"scope":1277,"src":"5407:224:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"5798:461:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1264,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"5874:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:10","memberName":"length","nodeType":"MemberAccess","src":"5874:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1273,"nodeType":"Block","src":"6204:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1270,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"6225:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1272,"nodeType":"RevertStatement","src":"6218:24:10"}]},"id":1274,"nodeType":"IfStatement","src":"5870:383:10","trueBody":{"id":1269,"nodeType":"Block","src":"5897:301:10","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:10"},"nodeType":"YulFunctionCall","src":"6096:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:10"},"nodeType":"YulFunctionCall","src":"6137:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:10"},"nodeType":"YulFunctionCall","src":"6130:44:10"},"nodeType":"YulExpressionStatement","src":"6130:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1261,"isOffset":false,"isSlot":false,"src":"6102:10:10","valueSize":1},{"declaration":1261,"isOffset":false,"isSlot":false,"src":"6145:10:10","valueSize":1}],"id":1268,"nodeType":"InlineAssembly","src":"6046:142:10"}]}}]},"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"5637:101:10","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:10","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:10","nodeType":"VariableDeclaration","scope":1276,"src":"5760:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1260,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:10"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[],"src":"5798:0:10"},"scope":1277,"src":"5743:516:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1278,"src":"195:6066:10","usedErrors":[1032,1037,1040],"usedEvents":[]}],"src":"101:6161:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1299]},"id":1300,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1279,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"127:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1299,"linearizedBaseContracts":[1299],"name":"Context","nameLocation":"642:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1288,"nodeType":"Block","src":"718:34:11","statements":[{"expression":{"expression":{"id":1285,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:11","memberName":"sender","nodeType":"MemberAccess","src":"735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1284,"id":1287,"nodeType":"Return","src":"728:17:11"}]},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:11","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[],"src":"675:2:11"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1289,"src":"709:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:11"},"scope":1299,"src":"656:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1297,"nodeType":"Block","src":"825:32:11","statements":[{"expression":{"expression":{"id":1294,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:11","memberName":"data","nodeType":"MemberAccess","src":"842:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1293,"id":1296,"nodeType":"Return","src":"835:15:11"}]},"id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:11","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[],"src":"775:2:11"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1298,"src":"809:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1291,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:11"},"scope":1299,"src":"758:99:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1300,"src":"624:235:11","usedErrors":[],"usedEvents":[]}],"src":"101:759:11"},"id":11},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[1402]},"id":1403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1301,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"127:367:12","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":1402,"linearizedBaseContracts":[1402],"name":"Create2","nameLocation":"503:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"517:75:12","text":" @dev Not enough balance for performing a CREATE2 deploy."},"errorSelector":"e4bbecac","id":1309,"name":"Create2InsufficientBalance","nameLocation":"603:26:12","nodeType":"ErrorDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"balance","nameLocation":"638:7:12","nodeType":"VariableDeclaration","scope":1309,"src":"630:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"630:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"needed","nameLocation":"655:6:12","nodeType":"VariableDeclaration","scope":1309,"src":"647:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"629:33:12"},"src":"597:66:12"},{"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"669:50:12","text":" @dev There's no code to deploy."},"errorSelector":"4ca249dc","id":1312,"name":"Create2EmptyBytecode","nameLocation":"730:20:12","nodeType":"ErrorDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[],"src":"750:2:12"},"src":"724:29:12"},{"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"759:46:12","text":" @dev The deployment failed."},"errorSelector":"741752c2","id":1315,"name":"Create2FailedDeployment","nameLocation":"816:23:12","nodeType":"ErrorDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"839:2:12"},"src":"810:32:12"},{"body":{"id":1366,"nodeType":"Block","src":"1514:472:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1329,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1536:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$1402","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$1402","typeString":"library Create2"}],"id":1328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:12","typeDescriptions":{}}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1542:7:12","memberName":"balance","nodeType":"MemberAccess","src":"1528:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1332,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"1552:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1528:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1344,"nodeType":"IfStatement","src":"1524:125:12","trueBody":{"id":1343,"nodeType":"Block","src":"1560:89:12","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1337,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1616:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$1402","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$1402","typeString":"library Create2"}],"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1608:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"1608:7:12","typeDescriptions":{}}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1608:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1622:7:12","memberName":"balance","nodeType":"MemberAccess","src":"1608:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1340,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"1631:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1334,"name":"Create2InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"1581:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1342,"nodeType":"RevertStatement","src":"1574:64:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1345,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"1662:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1671:6:12","memberName":"length","nodeType":"MemberAccess","src":"1662:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1662:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1353,"nodeType":"IfStatement","src":"1658:80:12","trueBody":{"id":1352,"nodeType":"Block","src":"1684:54:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1349,"name":"Create2EmptyBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"1705:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1705:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"RevertStatement","src":"1698:29:12"}]}},{"AST":{"nodeType":"YulBlock","src":"1799:91:12","statements":[{"nodeType":"YulAssignment","src":"1813:67:12","value":{"arguments":[{"name":"amount","nodeType":"YulIdentifier","src":"1829:6:12"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1841:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"1851:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1837:3:12"},"nodeType":"YulFunctionCall","src":"1837:19:12"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1864:8:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1858:5:12"},"nodeType":"YulFunctionCall","src":"1858:15:12"},{"name":"salt","nodeType":"YulIdentifier","src":"1875:4:12"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1821:7:12"},"nodeType":"YulFunctionCall","src":"1821:59:12"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"1813:4:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1325,"isOffset":false,"isSlot":false,"src":"1813:4:12","valueSize":1},{"declaration":1318,"isOffset":false,"isSlot":false,"src":"1829:6:12","valueSize":1},{"declaration":1322,"isOffset":false,"isSlot":false,"src":"1841:8:12","valueSize":1},{"declaration":1322,"isOffset":false,"isSlot":false,"src":"1864:8:12","valueSize":1},{"declaration":1320,"isOffset":false,"isSlot":false,"src":"1875:4:12","valueSize":1}],"id":1354,"nodeType":"InlineAssembly","src":"1790:100:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"1903:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1919:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1911:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"1911:7:12","typeDescriptions":{}}},"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1903:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1365,"nodeType":"IfStatement","src":"1899:81:12","trueBody":{"id":1364,"nodeType":"Block","src":"1923:57:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1361,"name":"Create2FailedDeployment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"1944:23:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1363,"nodeType":"RevertStatement","src":"1937:32:12"}]}}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"848:560:12","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1422:6:12","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"amount","nameLocation":"1437:6:12","nodeType":"VariableDeclaration","scope":1367,"src":"1429:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"salt","nameLocation":"1453:4:12","nodeType":"VariableDeclaration","scope":1367,"src":"1445:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1445:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"bytecode","nameLocation":"1472:8:12","nodeType":"VariableDeclaration","scope":1367,"src":"1459:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1321,"name":"bytes","nodeType":"ElementaryTypeName","src":"1459:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1428:53:12"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"addr","nameLocation":"1508:4:12","nodeType":"VariableDeclaration","scope":1367,"src":"1500:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1499:14:12"},"scope":1402,"src":"1413:573:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1386,"nodeType":"Block","src":"2282:73:12","statements":[{"expression":{"arguments":[{"id":1378,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2314:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1379,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"2320:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1382,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2342:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$1402","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$1402","typeString":"library Create2"}],"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2334:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"2334:7:12","typeDescriptions":{}}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1377,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[1387,1401],"referencedDeclaration":1401,"src":"2299:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1376,"id":1385,"nodeType":"Return","src":"2292:56:12"}]},"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"1992:193:12","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":1387,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2199:14:12","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"salt","nameLocation":"2222:4:12","nodeType":"VariableDeclaration","scope":1387,"src":"2214:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2236:12:12","nodeType":"VariableDeclaration","scope":1387,"src":"2228:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2228:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2213:36:12"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1387,"src":"2273:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"2273:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2272:9:12"},"scope":1402,"src":"2190:165:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1400,"nodeType":"Block","src":"2713:1657:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2775:1589:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2789:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2806:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2800:5:12"},"nodeType":"YulFunctionCall","src":"2800:11:12"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2793:3:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4013:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"4018:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:12"},"nodeType":"YulFunctionCall","src":"4009:14:12"},{"name":"bytecodeHash","nodeType":"YulIdentifier","src":"4025:12:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4002:6:12"},"nodeType":"YulFunctionCall","src":"4002:36:12"},"nodeType":"YulExpressionStatement","src":"4002:36:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4062:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"4067:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4058:3:12"},"nodeType":"YulFunctionCall","src":"4058:14:12"},{"name":"salt","nodeType":"YulIdentifier","src":"4074:4:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4051:6:12"},"nodeType":"YulFunctionCall","src":"4051:28:12"},"nodeType":"YulExpressionStatement","src":"4051:28:12"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4099:3:12"},{"name":"deployer","nodeType":"YulIdentifier","src":"4104:8:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4092:6:12"},"nodeType":"YulFunctionCall","src":"4092:21:12"},"nodeType":"YulExpressionStatement","src":"4092:21:12"},{"nodeType":"YulVariableDeclaration","src":"4175:27:12","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4192:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"4197:4:12","type":"","value":"0x0b"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4188:3:12"},"nodeType":"YulFunctionCall","src":"4188:14:12"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"4179:5:12","type":""}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4301:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"4308:4:12","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"4293:7:12"},"nodeType":"YulFunctionCall","src":"4293:20:12"},"nodeType":"YulExpressionStatement","src":"4293:20:12"},{"nodeType":"YulAssignment","src":"4326:28:12","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4344:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"4351:2:12","type":"","value":"85"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4334:9:12"},"nodeType":"YulFunctionCall","src":"4334:20:12"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"4326:4:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1397,"isOffset":false,"isSlot":false,"src":"4326:4:12","valueSize":1},{"declaration":1392,"isOffset":false,"isSlot":false,"src":"4025:12:12","valueSize":1},{"declaration":1394,"isOffset":false,"isSlot":false,"src":"4104:8:12","valueSize":1},{"declaration":1390,"isOffset":false,"isSlot":false,"src":"4074:4:12","valueSize":1}],"id":1399,"nodeType":"InlineAssembly","src":"2766:1598:12"}]},"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"2361:232:12","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2607:14:12","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"salt","nameLocation":"2630:4:12","nodeType":"VariableDeclaration","scope":1401,"src":"2622:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2622:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2644:12:12","nodeType":"VariableDeclaration","scope":1401,"src":"2636:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2636:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"deployer","nameLocation":"2666:8:12","nodeType":"VariableDeclaration","scope":1401,"src":"2658:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"2658:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2621:54:12"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"addr","nameLocation":"2707:4:12","nodeType":"VariableDeclaration","scope":1401,"src":"2699:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2698:14:12"},"scope":1402,"src":"2598:1772:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1403,"src":"495:3877:12","usedErrors":[1309,1312,1315],"usedEvents":[]}],"src":"101:4272:12"},"id":12},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1512]},"id":1513,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1404,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"219:1025:13","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1512,"linearizedBaseContracts":[1512],"name":"StorageSlot","nameLocation":"1253:11:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1408,"members":[{"constant":false,"id":1407,"mutability":"mutable","name":"value","nameLocation":"1308:5:13","nodeType":"VariableDeclaration","scope":1408,"src":"1300:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:13","nodeType":"StructDefinition","scope":1512,"src":"1271:49:13","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1411,"members":[{"constant":false,"id":1410,"mutability":"mutable","name":"value","nameLocation":"1360:5:13","nodeType":"VariableDeclaration","scope":1411,"src":"1355:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1409,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:13","nodeType":"StructDefinition","scope":1512,"src":"1326:46:13","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1414,"members":[{"constant":false,"id":1413,"mutability":"mutable","name":"value","nameLocation":"1415:5:13","nodeType":"VariableDeclaration","scope":1414,"src":"1407:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:13","nodeType":"StructDefinition","scope":1512,"src":"1378:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1417,"members":[{"constant":false,"id":1416,"mutability":"mutable","name":"value","nameLocation":"1470:5:13","nodeType":"VariableDeclaration","scope":1417,"src":"1462:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:13","nodeType":"StructDefinition","scope":1512,"src":"1433:49:13","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1420,"members":[{"constant":false,"id":1419,"mutability":"mutable","name":"value","nameLocation":"1523:5:13","nodeType":"VariableDeclaration","scope":1420,"src":"1516:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1418,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:13","nodeType":"StructDefinition","scope":1512,"src":"1488:47:13","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1423,"members":[{"constant":false,"id":1422,"mutability":"mutable","name":"value","nameLocation":"1574:5:13","nodeType":"VariableDeclaration","scope":1423,"src":"1568:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:13","nodeType":"StructDefinition","scope":1512,"src":"1541:45:13","visibility":"public"},{"body":{"id":1433,"nodeType":"Block","src":"1768:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1830:38:13","statements":[{"nodeType":"YulAssignment","src":"1844:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"1854:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1844:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1430,"isOffset":false,"isSlot":true,"src":"1844:6:13","suffix":"slot","valueSize":1},{"declaration":1426,"isOffset":false,"isSlot":false,"src":"1854:4:13","valueSize":1}],"id":1432,"nodeType":"InlineAssembly","src":"1821:47:13"}]},"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"1592:87:13","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:13","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"slot","nameLocation":"1716:4:13","nodeType":"VariableDeclaration","scope":1434,"src":"1708:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:13"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"r","nameLocation":"1765:1:13","nodeType":"VariableDeclaration","scope":1434,"src":"1745:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1408_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1429,"nodeType":"UserDefinedTypeName","pathNode":{"id":1428,"name":"AddressSlot","nameLocations":["1745:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1408,"src":"1745:11:13"},"referencedDeclaration":1408,"src":"1745:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1408_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:13"},"scope":1512,"src":"1684:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1444,"nodeType":"Block","src":"2056:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2118:38:13","statements":[{"nodeType":"YulAssignment","src":"2132:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"2142:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2132:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1441,"isOffset":false,"isSlot":true,"src":"2132:6:13","suffix":"slot","valueSize":1},{"declaration":1437,"isOffset":false,"isSlot":false,"src":"2142:4:13","valueSize":1}],"id":1443,"nodeType":"InlineAssembly","src":"2109:47:13"}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"1880:87:13","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1445,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:13","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"slot","nameLocation":"2004:4:13","nodeType":"VariableDeclaration","scope":1445,"src":"1996:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:13"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"r","nameLocation":"2053:1:13","nodeType":"VariableDeclaration","scope":1445,"src":"2033:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1411_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1440,"nodeType":"UserDefinedTypeName","pathNode":{"id":1439,"name":"BooleanSlot","nameLocations":["2033:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1411,"src":"2033:11:13"},"referencedDeclaration":1411,"src":"2033:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1411_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:13"},"scope":1512,"src":"1972:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1455,"nodeType":"Block","src":"2344:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2406:38:13","statements":[{"nodeType":"YulAssignment","src":"2420:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"2430:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2420:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1452,"isOffset":false,"isSlot":true,"src":"2420:6:13","suffix":"slot","valueSize":1},{"declaration":1448,"isOffset":false,"isSlot":false,"src":"2430:4:13","valueSize":1}],"id":1454,"nodeType":"InlineAssembly","src":"2397:47:13"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"2168:87:13","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:13","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"slot","nameLocation":"2292:4:13","nodeType":"VariableDeclaration","scope":1456,"src":"2284:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:13"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"r","nameLocation":"2341:1:13","nodeType":"VariableDeclaration","scope":1456,"src":"2321:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1414_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1451,"nodeType":"UserDefinedTypeName","pathNode":{"id":1450,"name":"Bytes32Slot","nameLocations":["2321:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1414,"src":"2321:11:13"},"referencedDeclaration":1414,"src":"2321:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1414_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:13"},"scope":1512,"src":"2260:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1466,"nodeType":"Block","src":"2632:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2694:38:13","statements":[{"nodeType":"YulAssignment","src":"2708:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"2718:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2708:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1463,"isOffset":false,"isSlot":true,"src":"2708:6:13","suffix":"slot","valueSize":1},{"declaration":1459,"isOffset":false,"isSlot":false,"src":"2718:4:13","valueSize":1}],"id":1465,"nodeType":"InlineAssembly","src":"2685:47:13"}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"2456:87:13","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:13","nodeType":"FunctionDefinition","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"slot","nameLocation":"2580:4:13","nodeType":"VariableDeclaration","scope":1467,"src":"2572:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:13"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"r","nameLocation":"2629:1:13","nodeType":"VariableDeclaration","scope":1467,"src":"2609:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1417_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1462,"nodeType":"UserDefinedTypeName","pathNode":{"id":1461,"name":"Uint256Slot","nameLocations":["2609:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1417,"src":"2609:11:13"},"referencedDeclaration":1417,"src":"2609:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1417_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:13"},"scope":1512,"src":"2548:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1477,"nodeType":"Block","src":"2917:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2979:38:13","statements":[{"nodeType":"YulAssignment","src":"2993:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"3003:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2993:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1474,"isOffset":false,"isSlot":true,"src":"2993:6:13","suffix":"slot","valueSize":1},{"declaration":1470,"isOffset":false,"isSlot":false,"src":"3003:4:13","valueSize":1}],"id":1476,"nodeType":"InlineAssembly","src":"2970:47:13"}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"2744:86:13","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:13","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"slot","nameLocation":"2866:4:13","nodeType":"VariableDeclaration","scope":1478,"src":"2858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:13"},"returnParameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"r","nameLocation":"2914:1:13","nodeType":"VariableDeclaration","scope":1478,"src":"2895:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1420_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1473,"nodeType":"UserDefinedTypeName","pathNode":{"id":1472,"name":"StringSlot","nameLocations":["2895:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1420,"src":"2895:10:13"},"referencedDeclaration":1420,"src":"2895:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1420_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:13"},"scope":1512,"src":"2835:188:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1488,"nodeType":"Block","src":"3225:112:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3287:44:13","statements":[{"nodeType":"YulAssignment","src":"3301:20:13","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3311:10:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3301:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1485,"isOffset":false,"isSlot":true,"src":"3301:6:13","suffix":"slot","valueSize":1},{"declaration":1481,"isOffset":false,"isSlot":true,"src":"3311:10:13","suffix":"slot","valueSize":1}],"id":1487,"nodeType":"InlineAssembly","src":"3278:53:13"}]},"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"3029:101:13","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1489,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:13","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"store","nameLocation":"3173:5:13","nodeType":"VariableDeclaration","scope":1489,"src":"3158:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1480,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:13"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"r","nameLocation":"3222:1:13","nodeType":"VariableDeclaration","scope":1489,"src":"3203:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1420_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1484,"nodeType":"UserDefinedTypeName","pathNode":{"id":1483,"name":"StringSlot","nameLocations":["3203:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1420,"src":"3203:10:13"},"referencedDeclaration":1420,"src":"3203:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1420_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:13"},"scope":1512,"src":"3135:202:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1499,"nodeType":"Block","src":"3513:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3575:38:13","statements":[{"nodeType":"YulAssignment","src":"3589:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"3599:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3589:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1496,"isOffset":false,"isSlot":true,"src":"3589:6:13","suffix":"slot","valueSize":1},{"declaration":1492,"isOffset":false,"isSlot":false,"src":"3599:4:13","valueSize":1}],"id":1498,"nodeType":"InlineAssembly","src":"3566:47:13"}]},"documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"3343:85:13","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1500,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:13","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"slot","nameLocation":"3463:4:13","nodeType":"VariableDeclaration","scope":1500,"src":"3455:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:13"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"r","nameLocation":"3510:1:13","nodeType":"VariableDeclaration","scope":1500,"src":"3492:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1423_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1495,"nodeType":"UserDefinedTypeName","pathNode":{"id":1494,"name":"BytesSlot","nameLocations":["3492:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1423,"src":"3492:9:13"},"referencedDeclaration":1423,"src":"3492:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1423_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:13"},"scope":1512,"src":"3433:186:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1510,"nodeType":"Block","src":"3816:112:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3878:44:13","statements":[{"nodeType":"YulAssignment","src":"3892:20:13","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3902:10:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3892:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1507,"isOffset":false,"isSlot":true,"src":"3892:6:13","suffix":"slot","valueSize":1},{"declaration":1503,"isOffset":false,"isSlot":true,"src":"3902:10:13","suffix":"slot","valueSize":1}],"id":1509,"nodeType":"InlineAssembly","src":"3869:53:13"}]},"documentation":{"id":1501,"nodeType":"StructuredDocumentation","src":"3625:99:13","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:13","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"store","nameLocation":"3765:5:13","nodeType":"VariableDeclaration","scope":1511,"src":"3751:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1502,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:13"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"r","nameLocation":"3813:1:13","nodeType":"VariableDeclaration","scope":1511,"src":"3795:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1423_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1506,"nodeType":"UserDefinedTypeName","pathNode":{"id":1505,"name":"BytesSlot","nameLocations":["3795:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1423,"src":"3795:9:13"},"referencedDeclaration":1423,"src":"3795:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1423_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:13"},"scope":1512,"src":"3729:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1513,"src":"1245:2685:13","usedErrors":[],"usedEvents":[]}],"src":"193:3738:13"},"id":13},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3255],"SignedMath":[3360],"Strings":[1767]},"id":1768,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1514,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1768,"sourceUnit":3256,"src":"127:37:14","symbolAliases":[{"foreign":{"id":1515,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"135:4:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1768,"sourceUnit":3361,"src":"165:49:14","symbolAliases":[{"foreign":{"id":1517,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"173:10:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"216:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":1767,"linearizedBaseContracts":[1767],"name":"Strings","nameLocation":"259:7:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1522,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:14","nodeType":"VariableDeclaration","scope":1767,"src":"273:56:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1520,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1525,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:14","nodeType":"VariableDeclaration","scope":1767,"src":"335:42:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1523,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"384:81:14","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1532,"name":"StringsInsufficientHexLength","nameLocation":"476:28:14","nodeType":"ErrorDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"value","nameLocation":"513:5:14","nodeType":"VariableDeclaration","scope":1532,"src":"505:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"length","nameLocation":"528:6:14","nodeType":"VariableDeclaration","scope":1532,"src":"520:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:14"},"src":"470:66:14"},{"body":{"id":1579,"nodeType":"Block","src":"708:627:14","statements":[{"id":1578,"nodeType":"UncheckedBlock","src":"718:611:14","statements":[{"assignments":[1541],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"length","nameLocation":"750:6:14","nodeType":"VariableDeclaration","scope":1578,"src":"742:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1548,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"770:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1542,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"759:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3255_$","typeString":"type(library Math)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:14","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3075,"src":"759:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:14"},{"assignments":[1550],"declarations":[{"constant":false,"id":1550,"mutability":"mutable","name":"buffer","nameLocation":"808:6:14","nodeType":"VariableDeclaration","scope":1578,"src":"794:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1549,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1555,"initialValue":{"arguments":[{"id":1553,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"828:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1551,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:14"},{"assignments":[1557],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"ptr","nameLocation":"857:3:14","nodeType":"VariableDeclaration","scope":1578,"src":"849:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1558,"nodeType":"VariableDeclarationStatement","src":"849:11:14"},{"AST":{"nodeType":"YulBlock","src":"930:67:14","statements":[{"nodeType":"YulAssignment","src":"948:35:14","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:14","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:14"},"nodeType":"YulFunctionCall","src":"967:15:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:14"},"nodeType":"YulFunctionCall","src":"955:28:14"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1550,"isOffset":false,"isSlot":false,"src":"959:6:14","valueSize":1},{"declaration":1541,"isOffset":false,"isSlot":false,"src":"975:6:14","valueSize":1},{"declaration":1557,"isOffset":false,"isSlot":false,"src":"948:3:14","valueSize":1}],"id":1559,"nodeType":"InlineAssembly","src":"921:76:14"},{"body":{"id":1574,"nodeType":"Block","src":"1023:269:14","statements":[{"expression":{"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:14","subExpression":{"id":1561,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1041:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1563,"nodeType":"ExpressionStatement","src":"1041:5:14"},{"AST":{"nodeType":"YulBlock","src":"1124:86:14","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:14"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:14","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:14"},"nodeType":"YulFunctionCall","src":"1164:14:14"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:14"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:14"},"nodeType":"YulFunctionCall","src":"1159:32:14"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:14"},"nodeType":"YulFunctionCall","src":"1146:46:14"},"nodeType":"YulExpressionStatement","src":"1146:46:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1522,"isOffset":false,"isSlot":false,"src":"1180:10:14","valueSize":1},{"declaration":1557,"isOffset":false,"isSlot":false,"src":"1154:3:14","valueSize":1},{"declaration":1535,"isOffset":false,"isSlot":false,"src":"1168:5:14","valueSize":1}],"id":1564,"nodeType":"InlineAssembly","src":"1115:95:14"},{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"1227:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1568,"nodeType":"ExpressionStatement","src":"1227:11:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"1260:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"IfStatement","src":"1256:21:14","trueBody":{"id":1572,"nodeType":"Break","src":"1272:5:14"}}]},"condition":{"hexValue":"74727565","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1575,"nodeType":"WhileStatement","src":"1010:282:14"},{"expression":{"id":1576,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"1312:6:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1539,"id":1577,"nodeType":"Return","src":"1305:13:14"}]}]},"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"542:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1580,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:14","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"value","nameLocation":"663:5:14","nodeType":"VariableDeclaration","scope":1580,"src":"655:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:14"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1580,"src":"693:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1537,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:14"},"scope":1767,"src":"637:698:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"1511:92:14","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"1542:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:14","trueExpression":{"hexValue":"2d","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"1588:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1598,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"1573:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3360_$","typeString":"type(library SignedMath)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:14","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3359,"src":"1573:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1597,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"1564:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1588,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:14","typeDescriptions":{}}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:14","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:14","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1587,"id":1604,"nodeType":"Return","src":"1521:75:14"}]},"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"1341:89:14","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:14","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"value","nameLocation":"1466:5:14","nodeType":"VariableDeclaration","scope":1606,"src":"1459:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1582,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:14"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"1496:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1585,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:14"},"scope":1767,"src":"1435:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1625,"nodeType":"Block","src":"1782:100:14","statements":[{"id":1624,"nodeType":"UncheckedBlock","src":"1792:84:14","statements":[{"expression":{"arguments":[{"id":1615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1835:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1854:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1616,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"1842:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3255_$","typeString":"type(library Math)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:14","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3197,"src":"1842:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1614,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1626,1709,1729],"referencedDeclaration":1709,"src":"1823:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1613,"id":1623,"nodeType":"Return","src":"1816:49:14"}]}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"1609:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:14","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"1737:5:14","nodeType":"VariableDeclaration","scope":1626,"src":"1729:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:14"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1626,"src":"1767:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1611,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:14"},"scope":1767,"src":"1708:174:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1708,"nodeType":"Block","src":"2095:435:14","statements":[{"assignments":[1637],"declarations":[{"constant":false,"id":1637,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:14","nodeType":"VariableDeclaration","scope":1708,"src":"2105:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1639,"initialValue":{"id":1638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"2126:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:14"},{"assignments":[1641],"declarations":[{"constant":false,"id":1641,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:14","nodeType":"VariableDeclaration","scope":1708,"src":"2141:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1640,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1650,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1645,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"2177:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1642,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:14"},{"expression":{"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1651,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2198:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1653,"indexExpression":{"hexValue":"30","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1656,"nodeType":"ExpressionStatement","src":"2198:15:14"},{"expression":{"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1657,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2223:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1659,"indexExpression":{"hexValue":"31","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1662,"nodeType":"ExpressionStatement","src":"2223:15:14"},{"body":{"id":1691,"nodeType":"Block","src":"2293:95:14","statements":[{"expression":{"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1677,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2307:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1679,"indexExpression":{"id":1678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"2314:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1680,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"2319:10:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1684,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"2330:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1686,"nodeType":"ExpressionStatement","src":"2307:40:14"},{"expression":{"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1687,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"2361:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1690,"nodeType":"ExpressionStatement","src":"2361:16:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"2281:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1692,"initializationExpression":{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"i","nameLocation":"2261:1:14","nodeType":"VariableDeclaration","scope":1692,"src":"2253:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1670,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1666,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"2269:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:14"},"loopExpression":{"expression":{"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:14","subExpression":{"id":1674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"2290:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1676,"nodeType":"ExpressionStatement","src":"2288:3:14"},"nodeType":"ForStatement","src":"2248:140:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1693,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"2401:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1702,"nodeType":"IfStatement","src":"2397:96:14","trueBody":{"id":1701,"nodeType":"Block","src":"2418:75:14","statements":[{"errorCall":{"arguments":[{"id":1697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"2468:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1698,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"2475:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1696,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2439:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1700,"nodeType":"RevertStatement","src":"2432:50:14"}]}},{"expression":{"arguments":[{"id":1705,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2516:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1703,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:14","typeDescriptions":{}}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1635,"id":1707,"nodeType":"Return","src":"2502:21:14"}]},"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"1888:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:14","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"value","nameLocation":"2034:5:14","nodeType":"VariableDeclaration","scope":1709,"src":"2026:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"length","nameLocation":"2049:6:14","nodeType":"VariableDeclaration","scope":1709,"src":"2041:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:14"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"2080:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1633,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:14"},"scope":1767,"src":"2005:525:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1728,"nodeType":"Block","src":"2762:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1722,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"2807:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1720,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:14","typeDescriptions":{}}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:14","typeDescriptions":{}}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1725,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"2815:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1717,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1626,1709,1729],"referencedDeclaration":1709,"src":"2779:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1716,"id":1727,"nodeType":"Return","src":"2772:58:14"}]},"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"2536:148:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1729,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:14","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"addr","nameLocation":"2718:4:14","nodeType":"VariableDeclaration","scope":1729,"src":"2710:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:14"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1729,"src":"2747:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1714,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:14"},"scope":1767,"src":"2689:148:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"2992:104:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1741,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"3015:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1739,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:14","typeDescriptions":{}}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:14","memberName":"length","nodeType":"MemberAccess","src":"3009:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1746,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"3034:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1744,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:14","typeDescriptions":{}}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:14","memberName":"length","nodeType":"MemberAccess","src":"3028:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"3063:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1751,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:14","typeDescriptions":{}}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1750,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1759,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"3086:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1757,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:14","typeDescriptions":{}}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1756,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1738,"id":1764,"nodeType":"Return","src":"3002:87:14"}]},"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"2843:66:14","text":" @dev Returns true if the two strings are equal."},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:14","nodeType":"FunctionDefinition","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"a","nameLocation":"2943:1:14","nodeType":"VariableDeclaration","scope":1766,"src":"2929:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1731,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"b","nameLocation":"2960:1:14","nodeType":"VariableDeclaration","scope":1766,"src":"2946:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1733,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:14"},"returnParameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"2986:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1736,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:14"},"scope":1767,"src":"2914:182:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1768,"src":"251:2847:14","usedErrors":[1532],"usedEvents":[]}],"src":"101:2998:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2115]},"id":2116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1769,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1770,"nodeType":"StructuredDocumentation","src":"138:205:15","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2115,"linearizedBaseContracts":[2115],"name":"ECDSA","nameLocation":"352:5:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1775,"members":[{"id":1771,"name":"NoError","nameLocation":"392:7:15","nodeType":"EnumValue","src":"392:7:15"},{"id":1772,"name":"InvalidSignature","nameLocation":"409:16:15","nodeType":"EnumValue","src":"409:16:15"},{"id":1773,"name":"InvalidSignatureLength","nameLocation":"435:22:15","nodeType":"EnumValue","src":"435:22:15"},{"id":1774,"name":"InvalidSignatureS","nameLocation":"467:17:15","nodeType":"EnumValue","src":"467:17:15"}],"name":"RecoverError","nameLocation":"369:12:15","nodeType":"EnumDefinition","src":"364:126:15"},{"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"496:63:15","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1778,"name":"ECDSAInvalidSignature","nameLocation":"570:21:15","nodeType":"ErrorDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[],"src":"591:2:15"},"src":"564:30:15"},{"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"600:60:15","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1783,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:15","nodeType":"ErrorDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"length","nameLocation":"707:6:15","nodeType":"VariableDeclaration","scope":1783,"src":"699:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:15"},"src":"665:50:15"},{"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"721:85:15","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1788,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:15","nodeType":"ErrorDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"s","nameLocation":"848:1:15","nodeType":"VariableDeclaration","scope":1788,"src":"840:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:15"},"src":"811:40:15"},{"body":{"id":1840,"nodeType":"Block","src":"2242:653:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1803,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"2256:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:15","memberName":"length","nodeType":"MemberAccess","src":"2256:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1838,"nodeType":"Block","src":"2781:108:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:15","typeDescriptions":{}}},"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1829,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"2815:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1775_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1773,"src":"2815:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1833,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"2860:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:15","memberName":"length","nodeType":"MemberAccess","src":"2860:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:15","typeDescriptions":{}}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1802,"id":1837,"nodeType":"Return","src":"2795:83:15"}]},"id":1839,"nodeType":"IfStatement","src":"2252:637:15","trueBody":{"id":1824,"nodeType":"Block","src":"2280:495:15","statements":[{"assignments":[1808],"declarations":[{"constant":false,"id":1808,"mutability":"mutable","name":"r","nameLocation":"2302:1:15","nodeType":"VariableDeclaration","scope":1824,"src":"2294:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1809,"nodeType":"VariableDeclarationStatement","src":"2294:9:15"},{"assignments":[1811],"declarations":[{"constant":false,"id":1811,"mutability":"mutable","name":"s","nameLocation":"2325:1:15","nodeType":"VariableDeclaration","scope":1824,"src":"2317:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1812,"nodeType":"VariableDeclarationStatement","src":"2317:9:15"},{"assignments":[1814],"declarations":[{"constant":false,"id":1814,"mutability":"mutable","name":"v","nameLocation":"2346:1:15","nodeType":"VariableDeclaration","scope":1824,"src":"2340:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1813,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1815,"nodeType":"VariableDeclarationStatement","src":"2340:7:15"},{"AST":{"nodeType":"YulBlock","src":"2548:171:15","statements":[{"nodeType":"YulAssignment","src":"2566:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:15"},"nodeType":"YulFunctionCall","src":"2577:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:15"},"nodeType":"YulFunctionCall","src":"2571:27:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:15"}]},{"nodeType":"YulAssignment","src":"2615:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:15"},"nodeType":"YulFunctionCall","src":"2626:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:15"},"nodeType":"YulFunctionCall","src":"2620:27:15"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:15"}]},{"nodeType":"YulAssignment","src":"2664:41:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:15","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:15"},"nodeType":"YulFunctionCall","src":"2683:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:15"},"nodeType":"YulFunctionCall","src":"2677:27:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:15"},"nodeType":"YulFunctionCall","src":"2669:36:15"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1808,"isOffset":false,"isSlot":false,"src":"2566:1:15","valueSize":1},{"declaration":1811,"isOffset":false,"isSlot":false,"src":"2615:1:15","valueSize":1},{"declaration":1793,"isOffset":false,"isSlot":false,"src":"2581:9:15","valueSize":1},{"declaration":1793,"isOffset":false,"isSlot":false,"src":"2630:9:15","valueSize":1},{"declaration":1793,"isOffset":false,"isSlot":false,"src":"2687:9:15","valueSize":1},{"declaration":1814,"isOffset":false,"isSlot":false,"src":"2664:1:15","valueSize":1}],"id":1816,"nodeType":"InlineAssembly","src":"2539:180:15"},{"expression":{"arguments":[{"id":1818,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"2750:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1819,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"2756:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1820,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"2759:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1821,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"2762:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1817,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1841,1921,2029],"referencedDeclaration":2029,"src":"2739:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1802,"id":1823,"nodeType":"Return","src":"2732:32:15"}]}}]},"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"857:1267:15","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1841,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:15","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"hash","nameLocation":"2157:4:15","nodeType":"VariableDeclaration","scope":1841,"src":"2149:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"signature","nameLocation":"2176:9:15","nodeType":"VariableDeclaration","scope":1841,"src":"2163:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1792,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:15"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"2210:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"2219:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1798,"nodeType":"UserDefinedTypeName","pathNode":{"id":1797,"name":"RecoverError","nameLocations":["2219:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1775,"src":"2219:12:15"},"referencedDeclaration":1775,"src":"2219:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"2233:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:15"},"scope":2115,"src":"2129:766:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1870,"nodeType":"Block","src":"3789:168:15","statements":[{"assignments":[1852,1855,1857],"declarations":[{"constant":false,"id":1852,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:15","nodeType":"VariableDeclaration","scope":1870,"src":"3800:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"error","nameLocation":"3832:5:15","nodeType":"VariableDeclaration","scope":1870,"src":"3819:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1854,"nodeType":"UserDefinedTypeName","pathNode":{"id":1853,"name":"RecoverError","nameLocations":["3819:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1775,"src":"3819:12:15"},"referencedDeclaration":1775,"src":"3819:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:15","nodeType":"VariableDeclaration","scope":1870,"src":"3839:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1862,"initialValue":{"arguments":[{"id":1859,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"3870:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1860,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"3876:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1858,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1841,1921,2029],"referencedDeclaration":1841,"src":"3859:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:15"},{"expression":{"arguments":[{"id":1864,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"3908:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},{"id":1865,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"3915:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1863,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3896:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1775_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1867,"nodeType":"ExpressionStatement","src":"3896:28:15"},{"expression":{"id":1868,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"3941:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1850,"id":1869,"nodeType":"Return","src":"3934:16:15"}]},"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"2901:796:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:15","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"hash","nameLocation":"3727:4:15","nodeType":"VariableDeclaration","scope":1871,"src":"3719:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"signature","nameLocation":"3746:9:15","nodeType":"VariableDeclaration","scope":1871,"src":"3733:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1845,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:15"},"returnParameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"3780:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:15"},"scope":2115,"src":"3702:255:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1920,"nodeType":"Block","src":"4285:342:15","statements":[{"id":1919,"nodeType":"UncheckedBlock","src":"4295:326:15","statements":[{"assignments":[1889],"declarations":[{"constant":false,"id":1889,"mutability":"mutable","name":"s","nameLocation":"4327:1:15","nodeType":"VariableDeclaration","scope":1919,"src":"4319:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1896,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4331:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:15","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:15"},{"assignments":[1898],"declarations":[{"constant":false,"id":1898,"mutability":"mutable","name":"v","nameLocation":"4528:1:15","nodeType":"VariableDeclaration","scope":1919,"src":"4522:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1897,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1911,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1903,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4547:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:15","typeDescriptions":{}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1899,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:15","typeDescriptions":{}}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:15"},{"expression":{"arguments":[{"id":1913,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"4596:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1914,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"4602:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1915,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4605:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1916,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"4608:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1912,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1841,1921,2029],"referencedDeclaration":2029,"src":"4585:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1887,"id":1918,"nodeType":"Return","src":"4578:32:15"}]}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"3963:205:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":1921,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:15","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"hash","nameLocation":"4201:4:15","nodeType":"VariableDeclaration","scope":1921,"src":"4193:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"r","nameLocation":"4215:1:15","nodeType":"VariableDeclaration","scope":1921,"src":"4207:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"vs","nameLocation":"4226:2:15","nodeType":"VariableDeclaration","scope":1921,"src":"4218:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:15"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"4253:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"4262:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1883,"nodeType":"UserDefinedTypeName","pathNode":{"id":1882,"name":"RecoverError","nameLocations":["4262:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1775,"src":"4262:12:15"},"referencedDeclaration":1775,"src":"4262:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"4276:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:15"},"scope":2115,"src":"4173:454:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"4840:164:15","statements":[{"assignments":[1934,1937,1939],"declarations":[{"constant":false,"id":1934,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:15","nodeType":"VariableDeclaration","scope":1953,"src":"4851:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1933,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"error","nameLocation":"4883:5:15","nodeType":"VariableDeclaration","scope":1953,"src":"4870:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1936,"nodeType":"UserDefinedTypeName","pathNode":{"id":1935,"name":"RecoverError","nameLocations":["4870:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1775,"src":"4870:12:15"},"referencedDeclaration":1775,"src":"4870:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:15","nodeType":"VariableDeclaration","scope":1953,"src":"4890:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1945,"initialValue":{"arguments":[{"id":1941,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"4921:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1942,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"4927:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1943,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"4930:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1940,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1841,1921,2029],"referencedDeclaration":1921,"src":"4910:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:15"},{"expression":{"arguments":[{"id":1947,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"4955:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},{"id":1948,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"4962:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1946,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"4943:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1775_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1950,"nodeType":"ExpressionStatement","src":"4943:28:15"},{"expression":{"id":1951,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4988:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1932,"id":1952,"nodeType":"Return","src":"4981:16:15"}]},"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"4633:116:15","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:15","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"hash","nameLocation":"4779:4:15","nodeType":"VariableDeclaration","scope":1954,"src":"4771:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"r","nameLocation":"4793:1:15","nodeType":"VariableDeclaration","scope":1954,"src":"4785:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"vs","nameLocation":"4804:2:15","nodeType":"VariableDeclaration","scope":1954,"src":"4796:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:15"},"returnParameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1954,"src":"4831:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:15"},"scope":2115,"src":"4754:250:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"5298:1372:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1975,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6194:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:15","typeDescriptions":{}}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1989,"nodeType":"IfStatement","src":"6182:164:15","trueBody":{"id":1988,"nodeType":"Block","src":"6267:79:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:15","typeDescriptions":{}}},"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1983,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"6301:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1775_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"6301:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},{"id":1985,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6333:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1972,"id":1987,"nodeType":"Return","src":"6281:54:15"}]}},{"assignments":[1991],"declarations":[{"constant":false,"id":1991,"mutability":"mutable","name":"signer","nameLocation":"6448:6:15","nodeType":"VariableDeclaration","scope":2028,"src":"6440:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1998,"initialValue":{"arguments":[{"id":1993,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"6467:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1994,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"6473:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1995,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"6476:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1996,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6479:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1992,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:15","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"6495:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2000,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:15","typeDescriptions":{}}},"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2018,"nodeType":"IfStatement","src":"6491:113:15","trueBody":{"id":2017,"nodeType":"Block","src":"6517:87:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2005,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:15","typeDescriptions":{}}},"id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2009,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"6551:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1775_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"6551:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:15","typeDescriptions":{}}},"id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1972,"id":2016,"nodeType":"Return","src":"6531:62:15"}]}},{"expression":{"components":[{"id":2019,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"6622:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2020,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"6630:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1775_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"6630:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:15","typeDescriptions":{}}},"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1972,"id":2027,"nodeType":"Return","src":"6614:49:15"}]},"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"5010:125:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:15","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"hash","nameLocation":"5177:4:15","nodeType":"VariableDeclaration","scope":2029,"src":"5169:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"v","nameLocation":"5197:1:15","nodeType":"VariableDeclaration","scope":2029,"src":"5191:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1958,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"r","nameLocation":"5216:1:15","nodeType":"VariableDeclaration","scope":2029,"src":"5208:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"s","nameLocation":"5235:1:15","nodeType":"VariableDeclaration","scope":2029,"src":"5227:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:15"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"5266:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"5275:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1968,"nodeType":"UserDefinedTypeName","pathNode":{"id":1967,"name":"RecoverError","nameLocations":["5275:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1775,"src":"5275:12:15"},"referencedDeclaration":1775,"src":"5275:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"5289:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:15"},"scope":2115,"src":"5140:1530:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2064,"nodeType":"Block","src":"6897:166:15","statements":[{"assignments":[2044,2047,2049],"declarations":[{"constant":false,"id":2044,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:15","nodeType":"VariableDeclaration","scope":2064,"src":"6908:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"error","nameLocation":"6940:5:15","nodeType":"VariableDeclaration","scope":2064,"src":"6927:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2046,"nodeType":"UserDefinedTypeName","pathNode":{"id":2045,"name":"RecoverError","nameLocations":["6927:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1775,"src":"6927:12:15"},"referencedDeclaration":1775,"src":"6927:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:15","nodeType":"VariableDeclaration","scope":2064,"src":"6947:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2056,"initialValue":{"arguments":[{"id":2051,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"6978:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2052,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"6984:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2053,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"6987:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2054,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"6990:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2050,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1841,1921,2029],"referencedDeclaration":2029,"src":"6967:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1775_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:15"},{"expression":{"arguments":[{"id":2058,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"7014:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},{"id":2059,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"7021:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2057,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"7002:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1775_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2061,"nodeType":"ExpressionStatement","src":"7002:28:15"},{"expression":{"id":2062,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"7047:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2042,"id":2063,"nodeType":"Return","src":"7040:16:15"}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"6676:122:15","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:15","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"hash","nameLocation":"6828:4:15","nodeType":"VariableDeclaration","scope":2065,"src":"6820:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"v","nameLocation":"6840:1:15","nodeType":"VariableDeclaration","scope":2065,"src":"6834:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2033,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"r","nameLocation":"6851:1:15","nodeType":"VariableDeclaration","scope":2065,"src":"6843:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"s","nameLocation":"6862:1:15","nodeType":"VariableDeclaration","scope":2065,"src":"6854:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:15"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"6888:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:15"},"scope":2115,"src":"6803:260:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2113,"nodeType":"Block","src":"7268:460:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"7282:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2075,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7291:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1775_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"7291:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"7378:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2081,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7387:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1775_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"7387:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2088,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"7483:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2089,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7492:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1775_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1773,"src":"7492:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"7617:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2101,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7626:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1775_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"7626:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2109,"nodeType":"IfStatement","src":"7613:109:15","trueBody":{"id":2108,"nodeType":"Block","src":"7658:64:15","statements":[{"errorCall":{"arguments":[{"id":2105,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"7702:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2104,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"7679:22:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2107,"nodeType":"RevertStatement","src":"7672:39:15"}]}},"id":2110,"nodeType":"IfStatement","src":"7479:243:15","trueBody":{"id":2099,"nodeType":"Block","src":"7529:78:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2095,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"7586:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:15","typeDescriptions":{}}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2092,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7550:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2098,"nodeType":"RevertStatement","src":"7543:53:15"}]}},"id":2111,"nodeType":"IfStatement","src":"7374:348:15","trueBody":{"id":2087,"nodeType":"Block","src":"7418:55:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2084,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"7439:21:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"RevertStatement","src":"7432:30:15"}]}},"id":2112,"nodeType":"IfStatement","src":"7278:444:15","trueBody":{"id":2079,"nodeType":"Block","src":"7313:55:15","statements":[{"functionReturnParameters":2073,"id":2078,"nodeType":"Return","src":"7327:7:15"}]}}]},"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"7069:122:15","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2114,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:15","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"error","nameLocation":"7230:5:15","nodeType":"VariableDeclaration","scope":2114,"src":"7217:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2068,"nodeType":"UserDefinedTypeName","pathNode":{"id":2067,"name":"RecoverError","nameLocations":["7217:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1775,"src":"7217:12:15"},"referencedDeclaration":1775,"src":"7217:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1775","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:15","nodeType":"VariableDeclaration","scope":2114,"src":"7237:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:15"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"7268:0:15"},"scope":2115,"src":"7196:532:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2116,"src":"344:7386:15","usedErrors":[1778,1783,1788],"usedEvents":[]}],"src":"112:7619:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2189],"Strings":[1767]},"id":2190,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2117,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2190,"sourceUnit":1768,"src":"149:39:16","symbolAliases":[{"foreign":{"id":2118,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"157:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"190:330:16","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2189,"linearizedBaseContracts":[2189],"name":"MessageHashUtils","nameLocation":"529:16:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2129,"nodeType":"Block","src":"1314:368:16","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:16","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:16","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:16"},"nodeType":"YulFunctionCall","src":"1390:48:16"},"nodeType":"YulExpressionStatement","src":"1390:48:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:16","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:16"},"nodeType":"YulFunctionCall","src":"1492:25:16"},"nodeType":"YulExpressionStatement","src":"1492:25:16"},{"nodeType":"YulAssignment","src":"1571:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:16","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:16"},"nodeType":"YulFunctionCall","src":"1581:21:16"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2126,"isOffset":false,"isSlot":false,"src":"1571:6:16","valueSize":1},{"declaration":2123,"isOffset":false,"isSlot":false,"src":"1505:11:16","valueSize":1}],"id":2128,"nodeType":"InlineAssembly","src":"1367:309:16"}]},"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"552:665:16","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2130,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:16","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:16","nodeType":"VariableDeclaration","scope":2130,"src":"1254:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:16"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"digest","nameLocation":"1306:6:16","nodeType":"VariableDeclaration","scope":2130,"src":"1298:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:16"},"scope":2189,"src":"1222:460:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"2234:143:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2147,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"2343:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:16","memberName":"length","nodeType":"MemberAccess","src":"2343:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2145,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2326:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1767_$","typeString":"type(library Strings)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1580,"src":"2326:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2143,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:16","typeDescriptions":{}}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2151,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"2361:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2139,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:16","typeDescriptions":{}}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:16","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2138,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2137,"id":2154,"nodeType":"Return","src":"2244:126:16"}]},"documentation":{"id":2131,"nodeType":"StructuredDocumentation","src":"1688:455:16","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:16","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"message","nameLocation":"2193:7:16","nodeType":"VariableDeclaration","scope":2156,"src":"2180:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2132,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:16"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2156,"src":"2225:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:16"},"scope":2189,"src":"2148:229:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2175,"nodeType":"Block","src":"2831:80:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2170,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"2887:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2171,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2898:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2167,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2166,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2165,"id":2174,"nodeType":"Return","src":"2841:63:16"}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"2383:332:16","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2176,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:16","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"validator","nameLocation":"2769:9:16","nodeType":"VariableDeclaration","scope":2176,"src":"2761:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2158,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"data","nameLocation":"2793:4:16","nodeType":"VariableDeclaration","scope":2176,"src":"2780:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2160,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:16"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2176,"src":"2822:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:16"},"scope":2189,"src":"2720:191:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2187,"nodeType":"Block","src":"3462:292:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:16"},"nodeType":"YulFunctionCall","src":"3549:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:16"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:16","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:16"},"nodeType":"YulFunctionCall","src":"3573:23:16"},"nodeType":"YulExpressionStatement","src":"3573:23:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:16","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:16"},"nodeType":"YulFunctionCall","src":"3616:14:16"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:16"},"nodeType":"YulFunctionCall","src":"3609:39:16"},"nodeType":"YulExpressionStatement","src":"3609:39:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:16"},"nodeType":"YulFunctionCall","src":"3668:14:16"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:16"},"nodeType":"YulFunctionCall","src":"3661:34:16"},"nodeType":"YulExpressionStatement","src":"3661:34:16"},{"nodeType":"YulAssignment","src":"3708:30:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:16","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:16"},"nodeType":"YulFunctionCall","src":"3718:20:16"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2184,"isOffset":false,"isSlot":false,"src":"3708:6:16","valueSize":1},{"declaration":2179,"isOffset":false,"isSlot":false,"src":"3632:15:16","valueSize":1},{"declaration":2181,"isOffset":false,"isSlot":false,"src":"3684:10:16","valueSize":1}],"id":2186,"nodeType":"InlineAssembly","src":"3515:233:16"}]},"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"2917:431:16","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2188,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:16","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:16","nodeType":"VariableDeclaration","scope":2188,"src":"3378:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:16","nodeType":"VariableDeclaration","scope":2188,"src":"3403:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:16"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"digest","nameLocation":"3454:6:16","nodeType":"VariableDeclaration","scope":2188,"src":"3446:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:16"},"scope":2189,"src":"3353:401:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2190,"src":"521:3235:16","usedErrors":[],"usedEvents":[]}],"src":"123:3634:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2201]},"id":2202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2191,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"141:279:17","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2201,"linearizedBaseContracts":[2201],"name":"IERC165","nameLocation":"431:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"445:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2200,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:17","nodeType":"FunctionDefinition","parameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:17","nodeType":"VariableDeclaration","scope":2200,"src":"817:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2194,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:17"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"860:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2197,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:17"},"scope":2201,"src":"790:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2202,"src":"421:447:17","usedErrors":[],"usedEvents":[]}],"src":"115:754:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3255]},"id":3256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"129:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3255,"linearizedBaseContracts":[3255],"name":"Math","nameLocation":"211:4:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"222:50:18","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2207,"name":"MathOverflowedMulDiv","nameLocation":"283:20:18","nodeType":"ErrorDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"303:2:18"},"src":"277:29:18"},{"canonicalName":"Math.Rounding","id":2212,"members":[{"id":2208,"name":"Floor","nameLocation":"336:5:18","nodeType":"EnumValue","src":"336:5:18"},{"id":2209,"name":"Ceil","nameLocation":"379:4:18","nodeType":"EnumValue","src":"379:4:18"},{"id":2210,"name":"Trunc","nameLocation":"421:5:18","nodeType":"EnumValue","src":"421:5:18"},{"id":2211,"name":"Expand","nameLocation":"451:6:18","nodeType":"EnumValue","src":"451:6:18"}],"name":"Rounding","nameLocation":"317:8:18","nodeType":"EnumDefinition","src":"312:169:18"},{"body":{"id":2243,"nodeType":"Block","src":"661:140:18","statements":[{"id":2242,"nodeType":"UncheckedBlock","src":"671:124:18","statements":[{"assignments":[2225],"declarations":[{"constant":false,"id":2225,"mutability":"mutable","name":"c","nameLocation":"703:1:18","nodeType":"VariableDeclaration","scope":2242,"src":"695:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2229,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"707:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"711:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"730:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"734:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2237,"nodeType":"IfStatement","src":"726:28:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2223,"id":2236,"nodeType":"Return","src":"737:17:18"}},{"expression":{"components":[{"hexValue":"74727565","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2239,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"782:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2223,"id":2241,"nodeType":"Return","src":"768:16:18"}]}]},"documentation":{"id":2213,"nodeType":"StructuredDocumentation","src":"487:93:18","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2244,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:18","nodeType":"FunctionDefinition","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"a","nameLocation":"609:1:18","nodeType":"VariableDeclaration","scope":2244,"src":"601:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2217,"mutability":"mutable","name":"b","nameLocation":"620:1:18","nodeType":"VariableDeclaration","scope":2244,"src":"612:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:18"},"returnParameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2244,"src":"646:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2219,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2244,"src":"652:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:18"},"scope":3255,"src":"585:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2271,"nodeType":"Block","src":"984:113:18","statements":[{"id":2270,"nodeType":"UncheckedBlock","src":"994:97:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"1022:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2257,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1026:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2263,"nodeType":"IfStatement","src":"1018:28:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2255,"id":2262,"nodeType":"Return","src":"1029:17:18"}},{"expression":{"components":[{"hexValue":"74727565","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1074:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2266,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"1078:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2255,"id":2269,"nodeType":"Return","src":"1060:20:18"}]}]},"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"807:96:18","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:18","nodeType":"FunctionDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"a","nameLocation":"932:1:18","nodeType":"VariableDeclaration","scope":2272,"src":"924:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"b","nameLocation":"943:1:18","nodeType":"VariableDeclaration","scope":2272,"src":"935:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:18"},"returnParameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"969:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2251,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"975:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:18"},"scope":3255,"src":"908:189:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2313,"nodeType":"Block","src":"1283:417:18","statements":[{"id":2312,"nodeType":"UncheckedBlock","src":"1293:401:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1551:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2291,"nodeType":"IfStatement","src":"1547:28:18","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2283,"id":2290,"nodeType":"Return","src":"1559:16:18"}},{"assignments":[2293],"declarations":[{"constant":false,"id":2293,"mutability":"mutable","name":"c","nameLocation":"1597:1:18","nodeType":"VariableDeclaration","scope":2312,"src":"1589:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2297,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1601:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"1605:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2298,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"1624:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1628:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"1633:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2307,"nodeType":"IfStatement","src":"1620:33:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2283,"id":2306,"nodeType":"Return","src":"1636:17:18"}},{"expression":{"components":[{"hexValue":"74727565","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2309,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"1681:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2283,"id":2311,"nodeType":"Return","src":"1667:16:18"}]}]},"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"1103:99:18","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2314,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:18","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"a","nameLocation":"1231:1:18","nodeType":"VariableDeclaration","scope":2314,"src":"1223:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"b","nameLocation":"1242:1:18","nodeType":"VariableDeclaration","scope":2314,"src":"1234:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:18"},"returnParameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2314,"src":"1268:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2279,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2314,"src":"1274:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:18"},"scope":3255,"src":"1207:493:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2341,"nodeType":"Block","src":"1887:114:18","statements":[{"id":2340,"nodeType":"UncheckedBlock","src":"1897:98:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2326,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"1925:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2333,"nodeType":"IfStatement","src":"1921:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2325,"id":2332,"nodeType":"Return","src":"1933:17:18"}},{"expression":{"components":[{"hexValue":"74727565","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"1978:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2336,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"1982:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2325,"id":2339,"nodeType":"Return","src":"1964:20:18"}]}]},"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"1706:100:18","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2342,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:18","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"a","nameLocation":"1835:1:18","nodeType":"VariableDeclaration","scope":2342,"src":"1827:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"b","nameLocation":"1846:1:18","nodeType":"VariableDeclaration","scope":2342,"src":"1838:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:18"},"returnParameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2342,"src":"1872:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2321,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2342,"src":"1878:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:18"},"scope":3255,"src":"1811:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2369,"nodeType":"Block","src":"2198:114:18","statements":[{"id":2368,"nodeType":"UncheckedBlock","src":"2208:98:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2354,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2236:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2361,"nodeType":"IfStatement","src":"2232:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2353,"id":2360,"nodeType":"Return","src":"2244:17:18"}},{"expression":{"components":[{"hexValue":"74727565","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"2289:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2364,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2293:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2353,"id":2367,"nodeType":"Return","src":"2275:20:18"}]}]},"documentation":{"id":2343,"nodeType":"StructuredDocumentation","src":"2007:110:18","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2370,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:18","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"a","nameLocation":"2146:1:18","nodeType":"VariableDeclaration","scope":2370,"src":"2138:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"b","nameLocation":"2157:1:18","nodeType":"VariableDeclaration","scope":2370,"src":"2149:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:18"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"2183:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2349,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"2189:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:18"},"scope":3255,"src":"2122:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2387,"nodeType":"Block","src":"2449:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"2466:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2381,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2470:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2384,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2478:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:18","trueExpression":{"id":2383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"2474:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2379,"id":2386,"nodeType":"Return","src":"2459:20:18"}]},"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"2318:59:18","text":" @dev Returns the largest of two numbers."},"id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:18","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"a","nameLocation":"2403:1:18","nodeType":"VariableDeclaration","scope":2388,"src":"2395:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"b","nameLocation":"2414:1:18","nodeType":"VariableDeclaration","scope":2388,"src":"2406:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:18"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2388,"src":"2440:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:18"},"scope":3255,"src":"2382:104:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2405,"nodeType":"Block","src":"2624:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2641:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"2645:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"2653:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:18","trueExpression":{"id":2401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2649:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2397,"id":2404,"nodeType":"Return","src":"2634:20:18"}]},"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"2492:60:18","text":" @dev Returns the smallest of two numbers."},"id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:18","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"a","nameLocation":"2578:1:18","nodeType":"VariableDeclaration","scope":2406,"src":"2570:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"b","nameLocation":"2589:1:18","nodeType":"VariableDeclaration","scope":2406,"src":"2581:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:18"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2406,"src":"2615:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:18"},"scope":3255,"src":"2557:104:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"2845:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2900:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"2904:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2420,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2910:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2421,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"2914:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2415,"id":2427,"nodeType":"Return","src":"2892:28:18"}]},"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"2667:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:18","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"a","nameLocation":"2799:1:18","nodeType":"VariableDeclaration","scope":2429,"src":"2791:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"b","nameLocation":"2810:1:18","nodeType":"VariableDeclaration","scope":2429,"src":"2802:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:18"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"2836:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:18"},"scope":3255,"src":"2774:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2462,"nodeType":"Block","src":"3219:260:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"3233:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2447,"nodeType":"IfStatement","src":"3229:127:18","trueBody":{"id":2446,"nodeType":"Block","src":"3241:115:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"3340:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2443,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"3344:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2438,"id":2445,"nodeType":"Return","src":"3333:12:18"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"3444:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"3458:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2456,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"3467:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:18","trueExpression":{"hexValue":"30","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2438,"id":2461,"nodeType":"Return","src":"3437:35:18"}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"2933:210:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2463,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:18","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"a","nameLocation":"3173:1:18","nodeType":"VariableDeclaration","scope":2463,"src":"3165:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"b","nameLocation":"3184:1:18","nodeType":"VariableDeclaration","scope":2463,"src":"3176:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:18"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2463,"src":"3210:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:18"},"scope":3255,"src":"3148:331:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2588,"nodeType":"Block","src":"3901:4018:18","statements":[{"id":2587,"nodeType":"UncheckedBlock","src":"3911:4002:18","statements":[{"assignments":[2476],"declarations":[{"constant":false,"id":2476,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:18","nodeType":"VariableDeclaration","scope":2587,"src":"4232:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2480,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2477,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"4248:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2478,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4252:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:18"},{"assignments":[2482],"declarations":[{"constant":false,"id":2482,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:18","nodeType":"VariableDeclaration","scope":2587,"src":"4312:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2483,"nodeType":"VariableDeclarationStatement","src":"4312:13:18"},{"AST":{"nodeType":"YulBlock","src":"4392:122:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:18"},"nodeType":"YulFunctionCall","src":"4433:6:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:18"},"nodeType":"YulFunctionCall","src":"4420:20:18"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:18","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:18","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:18"},"nodeType":"YulFunctionCall","src":"4470:14:18"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:18"},"nodeType":"YulFunctionCall","src":"4486:13:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:18"},"nodeType":"YulFunctionCall","src":"4466:34:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2476,"isOffset":false,"isSlot":false,"src":"4478:5:18","valueSize":1},{"declaration":2476,"isOffset":false,"isSlot":false,"src":"4493:5:18","valueSize":1},{"declaration":2482,"isOffset":false,"isSlot":false,"src":"4457:5:18","valueSize":1},{"declaration":2466,"isOffset":false,"isSlot":false,"src":"4427:1:18","valueSize":1},{"declaration":2468,"isOffset":false,"isSlot":false,"src":"4430:1:18","valueSize":1}],"id":2484,"nodeType":"InlineAssembly","src":"4383:131:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"4595:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2493,"nodeType":"IfStatement","src":"4591:368:18","trueBody":{"id":2492,"nodeType":"Block","src":"4607:352:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"4925:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2489,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"4933:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2474,"id":2491,"nodeType":"Return","src":"4918:26:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"5065:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2495,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"5080:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2501,"nodeType":"IfStatement","src":"5061:88:18","trueBody":{"id":2500,"nodeType":"Block","src":"5087:62:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2497,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"5112:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2499,"nodeType":"RevertStatement","src":"5105:29:18"}]}},{"assignments":[2503],"declarations":[{"constant":false,"id":2503,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:18","nodeType":"VariableDeclaration","scope":2587,"src":"5404:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2504,"nodeType":"VariableDeclarationStatement","src":"5404:17:18"},{"AST":{"nodeType":"YulBlock","src":"5444:291:18","statements":[{"nodeType":"YulAssignment","src":"5513:38:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:18"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:18"},"nodeType":"YulFunctionCall","src":"5526:25:18"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:18"}]},{"nodeType":"YulAssignment","src":"5633:41:18","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:18"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:18"},"nodeType":"YulFunctionCall","src":"5653:20:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:18"},"nodeType":"YulFunctionCall","src":"5642:32:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:18"}]},{"nodeType":"YulAssignment","src":"5691:30:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:18"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:18"},"nodeType":"YulFunctionCall","src":"5700:21:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2470,"isOffset":false,"isSlot":false,"src":"5539:11:18","valueSize":1},{"declaration":2476,"isOffset":false,"isSlot":false,"src":"5667:5:18","valueSize":1},{"declaration":2476,"isOffset":false,"isSlot":false,"src":"5691:5:18","valueSize":1},{"declaration":2476,"isOffset":false,"isSlot":false,"src":"5704:5:18","valueSize":1},{"declaration":2482,"isOffset":false,"isSlot":false,"src":"5633:5:18","valueSize":1},{"declaration":2482,"isOffset":false,"isSlot":false,"src":"5646:5:18","valueSize":1},{"declaration":2503,"isOffset":false,"isSlot":false,"src":"5513:9:18","valueSize":1},{"declaration":2503,"isOffset":false,"isSlot":false,"src":"5656:9:18","valueSize":1},{"declaration":2503,"isOffset":false,"isSlot":false,"src":"5711:9:18","valueSize":1},{"declaration":2466,"isOffset":false,"isSlot":false,"src":"5533:1:18","valueSize":1},{"declaration":2468,"isOffset":false,"isSlot":false,"src":"5536:1:18","valueSize":1}],"id":2505,"nodeType":"InlineAssembly","src":"5435:300:18"},{"assignments":[2507],"declarations":[{"constant":false,"id":2507,"mutability":"mutable","name":"twos","nameLocation":"5947:4:18","nodeType":"VariableDeclaration","scope":2587,"src":"5939:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2514,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2508,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"5954:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2510,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"5973:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:18"},{"AST":{"nodeType":"YulBlock","src":"6008:362:18","statements":[{"nodeType":"YulAssignment","src":"6073:37:18","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:18"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:18"},"nodeType":"YulFunctionCall","src":"6088:22:18"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:18"}]},{"nodeType":"YulAssignment","src":"6177:25:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:18"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:18"},"nodeType":"YulFunctionCall","src":"6186:16:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:18"}]},{"nodeType":"YulAssignment","src":"6317:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:18","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:18"},"nodeType":"YulFunctionCall","src":"6333:12:18"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:18"},"nodeType":"YulFunctionCall","src":"6329:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:18"},"nodeType":"YulFunctionCall","src":"6325:31:18"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2470,"isOffset":false,"isSlot":false,"src":"6073:11:18","valueSize":1},{"declaration":2470,"isOffset":false,"isSlot":false,"src":"6092:11:18","valueSize":1},{"declaration":2476,"isOffset":false,"isSlot":false,"src":"6177:5:18","valueSize":1},{"declaration":2476,"isOffset":false,"isSlot":false,"src":"6190:5:18","valueSize":1},{"declaration":2507,"isOffset":false,"isSlot":false,"src":"6105:4:18","valueSize":1},{"declaration":2507,"isOffset":false,"isSlot":false,"src":"6197:4:18","valueSize":1},{"declaration":2507,"isOffset":false,"isSlot":false,"src":"6317:4:18","valueSize":1},{"declaration":2507,"isOffset":false,"isSlot":false,"src":"6340:4:18","valueSize":1},{"declaration":2507,"isOffset":false,"isSlot":false,"src":"6347:4:18","valueSize":1}],"id":2515,"nodeType":"InlineAssembly","src":"5999:371:18"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2516,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"6436:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"6445:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2518,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6453:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2521,"nodeType":"ExpressionStatement","src":"6436:21:18"},{"assignments":[2523],"declarations":[{"constant":false,"id":2523,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:18","nodeType":"VariableDeclaration","scope":2587,"src":"6775:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2530,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2525,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"6798:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:18"},{"expression":{"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2531,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7031:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2533,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7046:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2534,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7060:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2538,"nodeType":"ExpressionStatement","src":"7031:36:18"},{"expression":{"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2539,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7100:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2541,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7115:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2542,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7129:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2546,"nodeType":"ExpressionStatement","src":"7100:36:18"},{"expression":{"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2547,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7170:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7185:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2550,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7199:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2554,"nodeType":"ExpressionStatement","src":"7170:36:18"},{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2555,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7240:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2557,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7255:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2558,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7269:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2562,"nodeType":"ExpressionStatement","src":"7240:36:18"},{"expression":{"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2563,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7310:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7325:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2566,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2570,"nodeType":"ExpressionStatement","src":"7310:36:18"},{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2571,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7381:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7396:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2574,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7410:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2578,"nodeType":"ExpressionStatement","src":"7381:36:18"},{"expression":{"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"7851:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2580,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7860:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2581,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7868:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2584,"nodeType":"ExpressionStatement","src":"7851:24:18"},{"expression":{"id":2585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"7896:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2474,"id":2586,"nodeType":"Return","src":"7889:13:18"}]}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"3485:313:18","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2589,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:18","nodeType":"FunctionDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"x","nameLocation":"3827:1:18","nodeType":"VariableDeclaration","scope":2589,"src":"3819:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"y","nameLocation":"3838:1:18","nodeType":"VariableDeclaration","scope":2589,"src":"3830:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:18","nodeType":"VariableDeclaration","scope":2589,"src":"3841:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:18"},"returnParameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"result","nameLocation":"3893:6:18","nodeType":"VariableDeclaration","scope":2589,"src":"3885:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:18"},"scope":3255,"src":"3803:4116:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"8161:192:18","statements":[{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"result","nameLocation":"8179:6:18","nodeType":"VariableDeclaration","scope":2631,"src":"8171:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2611,"initialValue":{"arguments":[{"id":2607,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"8195:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2608,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"8198:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2609,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"8201:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2606,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2589,2632],"referencedDeclaration":2589,"src":"8188:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2613,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"8244:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}],"id":2612,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"8227:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2212_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2616,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"8264:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2617,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"8267:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2618,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"8270:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2615,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2628,"nodeType":"IfStatement","src":"8223:101:18","trueBody":{"id":2627,"nodeType":"Block","src":"8288:36:18","statements":[{"expression":{"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"8302:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2626,"nodeType":"ExpressionStatement","src":"8302:11:18"}]}},{"expression":{"id":2629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"8340:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2603,"id":2630,"nodeType":"Return","src":"8333:13:18"}]},"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"7925:121:18","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:18","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"x","nameLocation":"8075:1:18","nodeType":"VariableDeclaration","scope":2632,"src":"8067:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2594,"mutability":"mutable","name":"y","nameLocation":"8086:1:18","nodeType":"VariableDeclaration","scope":2632,"src":"8078:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:18","nodeType":"VariableDeclaration","scope":2632,"src":"8089:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:18","nodeType":"VariableDeclaration","scope":2632,"src":"8110:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"},"typeName":{"id":2598,"nodeType":"UserDefinedTypeName","pathNode":{"id":2597,"name":"Rounding","nameLocations":["8110:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2212,"src":"8110:8:18"},"referencedDeclaration":2212,"src":"8110:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:18"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2632,"src":"8152:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:18"},"scope":3255,"src":"8051:302:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2743,"nodeType":"Block","src":"8644:1585:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"8658:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2646,"nodeType":"IfStatement","src":"8654:45:18","trueBody":{"id":2645,"nodeType":"Block","src":"8666:33:18","statements":[{"expression":{"hexValue":"30","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2639,"id":2644,"nodeType":"Return","src":"8680:8:18"}]}},{"assignments":[2648],"declarations":[{"constant":false,"id":2648,"mutability":"mutable","name":"result","nameLocation":"9386:6:18","nodeType":"VariableDeclaration","scope":2743,"src":"9378:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2657,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9406:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2650,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2911,2946],"referencedDeclaration":2911,"src":"9401:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:18"},{"id":2742,"nodeType":"UncheckedBlock","src":"9815:408:18","statements":[{"expression":{"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9839:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9849:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9858:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9862:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2668,"nodeType":"ExpressionStatement","src":"9839:35:18"},{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9888:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9898:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2671,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9907:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9911:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2679,"nodeType":"ExpressionStatement","src":"9888:35:18"},{"expression":{"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9937:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9947:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"9956:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9960:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2690,"nodeType":"ExpressionStatement","src":"9937:35:18"},{"expression":{"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9986:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9996:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2693,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"10005:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10009:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2701,"nodeType":"ExpressionStatement","src":"9986:35:18"},{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10035:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10045:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"10054:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10058:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2712,"nodeType":"ExpressionStatement","src":"10035:35:18"},{"expression":{"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10084:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10094:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"10103:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10107:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2723,"nodeType":"ExpressionStatement","src":"10084:35:18"},{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10133:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10143:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"10152:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10156:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2734,"nodeType":"ExpressionStatement","src":"10133:35:18"},{"expression":{"arguments":[{"id":2736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10193:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"10201:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10205:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2735,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10189:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2639,"id":2741,"nodeType":"Return","src":"10182:30:18"}]}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"8359:223:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2744,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:18","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"a","nameLocation":"8609:1:18","nodeType":"VariableDeclaration","scope":2744,"src":"8601:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:18"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2744,"src":"8635:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:18"},"scope":3255,"src":"8587:1642:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2778,"nodeType":"Block","src":"10405:164:18","statements":[{"id":2777,"nodeType":"UncheckedBlock","src":"10415:148:18","statements":[{"assignments":[2756],"declarations":[{"constant":false,"id":2756,"mutability":"mutable","name":"result","nameLocation":"10447:6:18","nodeType":"VariableDeclaration","scope":2777,"src":"10439:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2760,"initialValue":{"arguments":[{"id":2758,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"10461:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2757,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2744,2779],"referencedDeclaration":2744,"src":"10456:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10484:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2763,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"10511:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}],"id":2762,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"10494:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2212_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10524:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"10533:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2768,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"10542:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:18","trueExpression":{"hexValue":"31","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2754,"id":2776,"nodeType":"Return","src":"10477:75:18"}]}]},"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"10235:89:18","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:18","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"a","nameLocation":"10351:1:18","nodeType":"VariableDeclaration","scope":2779,"src":"10343:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:18","nodeType":"VariableDeclaration","scope":2779,"src":"10354:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"},"typeName":{"id":2749,"nodeType":"UserDefinedTypeName","pathNode":{"id":2748,"name":"Rounding","nameLocations":["10354:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2212,"src":"10354:8:18"},"referencedDeclaration":2212,"src":"10354:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:18"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2779,"src":"10396:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:18"},"scope":3255,"src":"10329:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2910,"nodeType":"Block","src":"10760:922:18","statements":[{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"result","nameLocation":"10778:6:18","nodeType":"VariableDeclaration","scope":2910,"src":"10770:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2790,"initialValue":{"hexValue":"30","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:18"},{"id":2907,"nodeType":"UncheckedBlock","src":"10798:855:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"10826:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2805,"nodeType":"IfStatement","src":"10822:99:18","trueBody":{"id":2804,"nodeType":"Block","src":"10844:77:18","statements":[{"expression":{"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"10862:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2799,"nodeType":"ExpressionStatement","src":"10862:13:18"},{"expression":{"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"10893:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2803,"nodeType":"ExpressionStatement","src":"10893:13:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"10938:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2820,"nodeType":"IfStatement","src":"10934:96:18","trueBody":{"id":2819,"nodeType":"Block","src":"10955:75:18","statements":[{"expression":{"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"10973:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2814,"nodeType":"ExpressionStatement","src":"10973:12:18"},{"expression":{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"11003:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2818,"nodeType":"ExpressionStatement","src":"11003:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11047:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2835,"nodeType":"IfStatement","src":"11043:96:18","trueBody":{"id":2834,"nodeType":"Block","src":"11064:75:18","statements":[{"expression":{"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11082:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2829,"nodeType":"ExpressionStatement","src":"11082:12:18"},{"expression":{"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"11112:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2833,"nodeType":"ExpressionStatement","src":"11112:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11156:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2850,"nodeType":"IfStatement","src":"11152:96:18","trueBody":{"id":2849,"nodeType":"Block","src":"11173:75:18","statements":[{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11191:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ExpressionStatement","src":"11191:12:18"},{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"11221:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"11221:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11265:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2865,"nodeType":"IfStatement","src":"11261:93:18","trueBody":{"id":2864,"nodeType":"Block","src":"11281:73:18","statements":[{"expression":{"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11299:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2859,"nodeType":"ExpressionStatement","src":"11299:11:18"},{"expression":{"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"11328:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2863,"nodeType":"ExpressionStatement","src":"11328:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11371:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2880,"nodeType":"IfStatement","src":"11367:93:18","trueBody":{"id":2879,"nodeType":"Block","src":"11387:73:18","statements":[{"expression":{"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11405:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2874,"nodeType":"ExpressionStatement","src":"11405:11:18"},{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"11434:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2878,"nodeType":"ExpressionStatement","src":"11434:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11477:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2895,"nodeType":"IfStatement","src":"11473:93:18","trueBody":{"id":2894,"nodeType":"Block","src":"11493:73:18","statements":[{"expression":{"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11511:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2889,"nodeType":"ExpressionStatement","src":"11511:11:18"},{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"11540:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"11540:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"11583:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2906,"nodeType":"IfStatement","src":"11579:64:18","trueBody":{"id":2905,"nodeType":"Block","src":"11599:44:18","statements":[{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"11617:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2904,"nodeType":"ExpressionStatement","src":"11617:11:18"}]}}]},{"expression":{"id":2908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"11669:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2786,"id":2909,"nodeType":"Return","src":"11662:13:18"}]},"documentation":{"id":2780,"nodeType":"StructuredDocumentation","src":"10575:119:18","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2911,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:18","nodeType":"FunctionDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"value","nameLocation":"10721:5:18","nodeType":"VariableDeclaration","scope":2911,"src":"10713:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:18"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2911,"src":"10751:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:18"},"scope":3255,"src":"10699:983:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2945,"nodeType":"Block","src":"11915:168:18","statements":[{"id":2944,"nodeType":"UncheckedBlock","src":"11925:152:18","statements":[{"assignments":[2923],"declarations":[{"constant":false,"id":2923,"mutability":"mutable","name":"result","nameLocation":"11957:6:18","nodeType":"VariableDeclaration","scope":2944,"src":"11949:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2927,"initialValue":{"arguments":[{"id":2925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"11971:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2924,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2911,2946],"referencedDeclaration":2911,"src":"11966:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"11998:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2930,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"12025:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}],"id":2929,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"12008:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2212_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"12043:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"12052:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:18","trueExpression":{"hexValue":"31","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2921,"id":2943,"nodeType":"Return","src":"11991:75:18"}]}]},"documentation":{"id":2912,"nodeType":"StructuredDocumentation","src":"11688:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2946,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:18","nodeType":"FunctionDefinition","parameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"value","nameLocation":"11857:5:18","nodeType":"VariableDeclaration","scope":2946,"src":"11849:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:18","nodeType":"VariableDeclaration","scope":2946,"src":"11864:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"},"typeName":{"id":2916,"nodeType":"UserDefinedTypeName","pathNode":{"id":2915,"name":"Rounding","nameLocations":["11864:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2212,"src":"11864:8:18"},"referencedDeclaration":2212,"src":"11864:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:18"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2946,"src":"11906:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:18"},"scope":3255,"src":"11835:248:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3074,"nodeType":"Block","src":"12276:854:18","statements":[{"assignments":[2955],"declarations":[{"constant":false,"id":2955,"mutability":"mutable","name":"result","nameLocation":"12294:6:18","nodeType":"VariableDeclaration","scope":3074,"src":"12286:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2957,"initialValue":{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:18"},{"id":3071,"nodeType":"UncheckedBlock","src":"12314:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12342:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"nodeType":"IfStatement","src":"12338:103:18","trueBody":{"id":2973,"nodeType":"Block","src":"12361:80:18","statements":[{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12379:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2968,"nodeType":"ExpressionStatement","src":"12379:17:18"},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"12414:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"12414:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12458:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2991,"nodeType":"IfStatement","src":"12454:103:18","trueBody":{"id":2990,"nodeType":"Block","src":"12477:80:18","statements":[{"expression":{"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12495:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2985,"nodeType":"ExpressionStatement","src":"12495:17:18"},{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"12530:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2989,"nodeType":"ExpressionStatement","src":"12530:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12574:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3008,"nodeType":"IfStatement","src":"12570:103:18","trueBody":{"id":3007,"nodeType":"Block","src":"12593:80:18","statements":[{"expression":{"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12611:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3002,"nodeType":"ExpressionStatement","src":"12611:17:18"},{"expression":{"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"12646:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3006,"nodeType":"ExpressionStatement","src":"12646:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12690:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3025,"nodeType":"IfStatement","src":"12686:100:18","trueBody":{"id":3024,"nodeType":"Block","src":"12708:78:18","statements":[{"expression":{"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12726:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3019,"nodeType":"ExpressionStatement","src":"12726:16:18"},{"expression":{"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"12760:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3023,"nodeType":"ExpressionStatement","src":"12760:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12803:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3042,"nodeType":"IfStatement","src":"12799:100:18","trueBody":{"id":3041,"nodeType":"Block","src":"12821:78:18","statements":[{"expression":{"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12839:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3036,"nodeType":"ExpressionStatement","src":"12839:16:18"},{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"12873:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3040,"nodeType":"ExpressionStatement","src":"12873:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12916:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3059,"nodeType":"IfStatement","src":"12912:100:18","trueBody":{"id":3058,"nodeType":"Block","src":"12934:78:18","statements":[{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"12952:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3053,"nodeType":"ExpressionStatement","src":"12952:16:18"},{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"12986:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ExpressionStatement","src":"12986:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"13029:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3070,"nodeType":"IfStatement","src":"13025:66:18","trueBody":{"id":3069,"nodeType":"Block","src":"13047:44:18","statements":[{"expression":{"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"13065:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3068,"nodeType":"ExpressionStatement","src":"13065:11:18"}]}}]},{"expression":{"id":3072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"13117:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2953,"id":3073,"nodeType":"Return","src":"13110:13:18"}]},"documentation":{"id":2947,"nodeType":"StructuredDocumentation","src":"12089:120:18","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3075,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:18","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"value","nameLocation":"12237:5:18","nodeType":"VariableDeclaration","scope":3075,"src":"12229:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:18"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3075,"src":"12267:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:18"},"scope":3255,"src":"12214:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3109,"nodeType":"Block","src":"13365:170:18","statements":[{"id":3108,"nodeType":"UncheckedBlock","src":"13375:154:18","statements":[{"assignments":[3087],"declarations":[{"constant":false,"id":3087,"mutability":"mutable","name":"result","nameLocation":"13407:6:18","nodeType":"VariableDeclaration","scope":3108,"src":"13399:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3091,"initialValue":{"arguments":[{"id":3089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"13422:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3088,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3075,3110],"referencedDeclaration":3075,"src":"13416:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"13449:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3094,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"13476:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}],"id":3093,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"13459:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2212_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"13495:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"13504:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:18","trueExpression":{"hexValue":"31","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3085,"id":3107,"nodeType":"Return","src":"13442:76:18"}]}]},"documentation":{"id":3076,"nodeType":"StructuredDocumentation","src":"13136:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:18","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3078,"mutability":"mutable","name":"value","nameLocation":"13307:5:18","nodeType":"VariableDeclaration","scope":3110,"src":"13299:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3077,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:18","nodeType":"VariableDeclaration","scope":3110,"src":"13314:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"},"typeName":{"id":3080,"nodeType":"UserDefinedTypeName","pathNode":{"id":3079,"name":"Rounding","nameLocations":["13314:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2212,"src":"13314:8:18"},"referencedDeclaration":2212,"src":"13314:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:18"},"returnParameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3110,"src":"13356:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3083,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:18"},"scope":3255,"src":"13284:251:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3196,"nodeType":"Block","src":"13855:600:18","statements":[{"assignments":[3119],"declarations":[{"constant":false,"id":3119,"mutability":"mutable","name":"result","nameLocation":"13873:6:18","nodeType":"VariableDeclaration","scope":3196,"src":"13865:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3121,"initialValue":{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:18"},{"id":3193,"nodeType":"UncheckedBlock","src":"13893:533:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"13921:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3136,"nodeType":"IfStatement","src":"13917:98:18","trueBody":{"id":3135,"nodeType":"Block","src":"13939:76:18","statements":[{"expression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"13957:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3130,"nodeType":"ExpressionStatement","src":"13957:13:18"},{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"13988:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3134,"nodeType":"ExpressionStatement","src":"13988:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"14032:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3151,"nodeType":"IfStatement","src":"14028:95:18","trueBody":{"id":3150,"nodeType":"Block","src":"14049:74:18","statements":[{"expression":{"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"14067:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3145,"nodeType":"ExpressionStatement","src":"14067:12:18"},{"expression":{"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"14097:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3149,"nodeType":"ExpressionStatement","src":"14097:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"14140:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3166,"nodeType":"IfStatement","src":"14136:95:18","trueBody":{"id":3165,"nodeType":"Block","src":"14157:74:18","statements":[{"expression":{"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"14175:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3160,"nodeType":"ExpressionStatement","src":"14175:12:18"},{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"14205:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3164,"nodeType":"ExpressionStatement","src":"14205:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"14248:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3181,"nodeType":"IfStatement","src":"14244:95:18","trueBody":{"id":3180,"nodeType":"Block","src":"14265:74:18","statements":[{"expression":{"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"14283:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3175,"nodeType":"ExpressionStatement","src":"14283:12:18"},{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"14313:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3179,"nodeType":"ExpressionStatement","src":"14313:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"14356:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3192,"nodeType":"IfStatement","src":"14352:64:18","trueBody":{"id":3191,"nodeType":"Block","src":"14372:44:18","statements":[{"expression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"14390:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3190,"nodeType":"ExpressionStatement","src":"14390:11:18"}]}}]},{"expression":{"id":3194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"14442:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3117,"id":3195,"nodeType":"Return","src":"14435:13:18"}]},"documentation":{"id":3111,"nodeType":"StructuredDocumentation","src":"13541:246:18","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3197,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:18","nodeType":"FunctionDefinition","parameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"value","nameLocation":"13816:5:18","nodeType":"VariableDeclaration","scope":3197,"src":"13808:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:18"},"returnParameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3197,"src":"13846:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:18"},"scope":3255,"src":"13792:663:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3234,"nodeType":"Block","src":"14692:177:18","statements":[{"id":3233,"nodeType":"UncheckedBlock","src":"14702:161:18","statements":[{"assignments":[3209],"declarations":[{"constant":false,"id":3209,"mutability":"mutable","name":"result","nameLocation":"14734:6:18","nodeType":"VariableDeclaration","scope":3233,"src":"14726:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3213,"initialValue":{"arguments":[{"id":3211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"14750:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3210,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3197,3235],"referencedDeclaration":3197,"src":"14743:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"14777:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3216,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"14804:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}],"id":3215,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"14787:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2212_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"14823:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"14838:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:18","trueExpression":{"hexValue":"31","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3207,"id":3232,"nodeType":"Return","src":"14770:82:18"}]}]},"documentation":{"id":3198,"nodeType":"StructuredDocumentation","src":"14461:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3235,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:18","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3200,"mutability":"mutable","name":"value","nameLocation":"14634:5:18","nodeType":"VariableDeclaration","scope":3235,"src":"14626:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:18","nodeType":"VariableDeclaration","scope":3235,"src":"14641:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"},"typeName":{"id":3202,"nodeType":"UserDefinedTypeName","pathNode":{"id":3201,"name":"Rounding","nameLocations":["14641:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2212,"src":"14641:8:18"},"referencedDeclaration":2212,"src":"14641:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:18"},"returnParameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3235,"src":"14683:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:18"},"scope":3255,"src":"14610:259:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3253,"nodeType":"Block","src":"15067:48:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3246,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"15090:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}],"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3244,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:18","typeDescriptions":{}}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3243,"id":3252,"nodeType":"Return","src":"15077:31:18"}]},"documentation":{"id":3236,"nodeType":"StructuredDocumentation","src":"14875:113:18","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3254,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:18","nodeType":"FunctionDefinition","parameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:18","nodeType":"VariableDeclaration","scope":3254,"src":"15019:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"},"typeName":{"id":3238,"nodeType":"UserDefinedTypeName","pathNode":{"id":3237,"name":"Rounding","nameLocations":["15019:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2212,"src":"15019:8:18"},"referencedDeclaration":2212,"src":"15019:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:18"},"returnParameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3254,"src":"15061:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3241,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:18"},"scope":3255,"src":"14993:122:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3256,"src":"203:14914:18","usedErrors":[2207],"usedEvents":[]}],"src":"103:15015:18"},"id":18},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3360]},"id":3361,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3257,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3258,"nodeType":"StructuredDocumentation","src":"135:80:19","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3360,"linearizedBaseContracts":[3360],"name":"SignedMath","nameLocation":"224:10:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3275,"nodeType":"Block","src":"376:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3268,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"393:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3269,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"397:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3272,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"405:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:19","trueExpression":{"id":3271,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"401:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3267,"id":3274,"nodeType":"Return","src":"386:20:19"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"241:66:19","text":" @dev Returns the largest of two signed numbers."},"id":3276,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:19","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"a","nameLocation":"332:1:19","nodeType":"VariableDeclaration","scope":3276,"src":"325:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3260,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"b","nameLocation":"342:1:19","nodeType":"VariableDeclaration","scope":3276,"src":"335:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3262,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:19"},"returnParameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3276,"src":"368:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3265,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:19"},"scope":3360,"src":"312:101:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3293,"nodeType":"Block","src":"555:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"572:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3287,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"576:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3290,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"584:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:19","trueExpression":{"id":3289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"580:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3285,"id":3292,"nodeType":"Return","src":"565:20:19"}]},"documentation":{"id":3277,"nodeType":"StructuredDocumentation","src":"419:67:19","text":" @dev Returns the smallest of two signed numbers."},"id":3294,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:19","nodeType":"FunctionDefinition","parameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"a","nameLocation":"511:1:19","nodeType":"VariableDeclaration","scope":3294,"src":"504:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3278,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"b","nameLocation":"521:1:19","nodeType":"VariableDeclaration","scope":3294,"src":"514:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3280,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:19"},"returnParameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3294,"src":"547:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3283,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:19"},"scope":3360,"src":"491:101:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3337,"nodeType":"Block","src":"797:162:19","statements":[{"assignments":[3305],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"x","nameLocation":"866:1:19","nodeType":"VariableDeclaration","scope":3337,"src":"859:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3304,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3318,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"871:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3307,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"875:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"882:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3311,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"886:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"911:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3324,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"931:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:19","typeDescriptions":{}}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3320,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:19","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"945:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"949:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3303,"id":3336,"nodeType":"Return","src":"904:48:19"}]},"documentation":{"id":3295,"nodeType":"StructuredDocumentation","src":"598:126:19","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3338,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:19","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"a","nameLocation":"753:1:19","nodeType":"VariableDeclaration","scope":3338,"src":"746:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3296,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"b","nameLocation":"763:1:19","nodeType":"VariableDeclaration","scope":3338,"src":"756:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3298,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:19"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3338,"src":"789:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3301,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:19"},"scope":3360,"src":"729:230:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3358,"nodeType":"Block","src":"1103:158:19","statements":[{"id":3357,"nodeType":"UncheckedBlock","src":"1113:142:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3348,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"1228:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:19","subExpression":{"id":3352,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"1242:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:19","trueExpression":{"id":3351,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"1237:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:19","typeDescriptions":{}}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3345,"id":3356,"nodeType":"Return","src":"1213:31:19"}]}]},"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"965:78:19","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:19","nodeType":"FunctionDefinition","parameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"n","nameLocation":"1068:1:19","nodeType":"VariableDeclaration","scope":3359,"src":"1061:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3340,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:19"},"returnParameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3359,"src":"1094:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:19"},"scope":3360,"src":"1048:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3361,"src":"216:1047:19","usedErrors":[],"usedEvents":[]}],"src":"109:1155:19"},"id":19},"contracts/callback/TokenCallbackHandler.sol":{"ast":{"absolutePath":"contracts/callback/TokenCallbackHandler.sol","exportedSymbols":{"IERC1155Receiver":[1006],"IERC165":[2201],"IERC721Receiver":[1024],"TokenCallbackHandler":[3480]},"id":3481,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3362,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":3363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3481,"sourceUnit":2202,"src":"106:65:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":3364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3481,"sourceUnit":1025,"src":"245:66:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","id":3365,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3481,"sourceUnit":1007,"src":"313:68:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3367,"name":"IERC721Receiver","nameLocations":["631:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"631:15:20"},"id":3368,"nodeType":"InheritanceSpecifier","src":"631:15:20"},{"baseName":{"id":3369,"name":"IERC1155Receiver","nameLocations":["648:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"648:16:20"},"id":3370,"nodeType":"InheritanceSpecifier","src":"648:16:20"}],"canonicalName":"TokenCallbackHandler","contractDependencies":[],"contractKind":"contract","documentation":{"id":3366,"nodeType":"StructuredDocumentation","src":"385:120:20","text":" Token callback handler.\n   Handles supported tokens' callbacks, allowing account receiving these tokens."},"fullyImplemented":true,"id":3480,"linearizedBaseContracts":[3480,1006,2201,1024],"name":"TokenCallbackHandler","nameLocation":"607:20:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3385,"nodeType":"Block","src":"873:8:20","statements":[]},"functionSelector":"0023de29","id":3386,"implemented":true,"kind":"function","modifiers":[],"name":"tokensReceived","nameLocation":"681:14:20","nodeType":"FunctionDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"706:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3371,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"724:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3373,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"742:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3375,"name":"address","nodeType":"ElementaryTypeName","src":"742:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"760:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"760:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"778:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3379,"name":"bytes","nodeType":"ElementaryTypeName","src":"778:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"803:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3381,"name":"bytes","nodeType":"ElementaryTypeName","src":"803:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"695:164:20"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[],"src":"873:0:20"},"scope":3480,"src":"672:209:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1023],"body":{"id":3404,"nodeType":"Block","src":"1041:67:20","statements":[{"expression":{"expression":{"expression":{"id":3400,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"1059:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1024_$","typeString":"type(contract IERC721Receiver)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1075:16:20","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1023,"src":"1059:32:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1092:8:20","memberName":"selector","nodeType":"MemberAccess","src":"1059:41:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3399,"id":3403,"nodeType":"Return","src":"1052:48:20"}]},"functionSelector":"150b7a02","id":3405,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"898:16:20","nodeType":"FunctionDefinition","overrides":{"id":3396,"nodeType":"OverrideSpecifier","overrides":[],"src":"1015:8:20"},"parameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3405,"src":"925:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3387,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3405,"src":"943:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3389,"name":"address","nodeType":"ElementaryTypeName","src":"943:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3405,"src":"961:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3405,"src":"979:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3393,"name":"bytes","nodeType":"ElementaryTypeName","src":"979:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"914:86:20"},"returnParameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3405,"src":"1033:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3397,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1033:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1032:8:20"},"scope":3480,"src":"889:219:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[987],"body":{"id":3425,"nodeType":"Block","src":"1287:69:20","statements":[{"expression":{"expression":{"expression":{"id":3421,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1305:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1006_$","typeString":"type(contract IERC1155Receiver)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1322:17:20","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":987,"src":"1305:34:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1340:8:20","memberName":"selector","nodeType":"MemberAccess","src":"1305:43:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3420,"id":3424,"nodeType":"Return","src":"1298:50:20"}]},"functionSelector":"f23a6e61","id":3426,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1125:17:20","nodeType":"FunctionDefinition","overrides":{"id":3417,"nodeType":"OverrideSpecifier","overrides":[],"src":"1261:8:20"},"parameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3426,"src":"1153:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3406,"name":"address","nodeType":"ElementaryTypeName","src":"1153:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3426,"src":"1171:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3408,"name":"address","nodeType":"ElementaryTypeName","src":"1171:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3426,"src":"1189:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1189:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3426,"src":"1207:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3426,"src":"1225:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3414,"name":"bytes","nodeType":"ElementaryTypeName","src":"1225:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1142:104:20"},"returnParameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3426,"src":"1279:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3418,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1279:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1278:8:20"},"scope":3480,"src":"1116:240:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1005],"body":{"id":3448,"nodeType":"Block","src":"1562:74:20","statements":[{"expression":{"expression":{"expression":{"id":3444,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1580:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1006_$","typeString":"type(contract IERC1155Receiver)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1597:22:20","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1005,"src":"1580:39:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1620:8:20","memberName":"selector","nodeType":"MemberAccess","src":"1580:48:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3443,"id":3447,"nodeType":"Return","src":"1573:55:20"}]},"functionSelector":"bc197c81","id":3449,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"1373:22:20","nodeType":"FunctionDefinition","overrides":{"id":3440,"nodeType":"OverrideSpecifier","overrides":[],"src":"1536:8:20"},"parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"1406:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3427,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"1424:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3429,"name":"address","nodeType":"ElementaryTypeName","src":"1424:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"1442:18:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1442:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3432,"nodeType":"ArrayTypeName","src":"1442:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"1471:18:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"1471:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3435,"nodeType":"ArrayTypeName","src":"1471:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"1500:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3437,"name":"bytes","nodeType":"ElementaryTypeName","src":"1500:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1395:126:20"},"returnParameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"1554:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3441,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:8:20"},"scope":3480,"src":"1364:272:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[2200],"body":{"id":3478,"nodeType":"Block","src":"1737:210:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"1768:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3459,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"1788:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1024_$","typeString":"type(contract IERC721Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1024_$","typeString":"type(contract IERC721Receiver)"}],"id":3458,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1783:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1783:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Receiver_$1024","typeString":"type(contract IERC721Receiver)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1805:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"1783:33:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1768:48:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3463,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"1833:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3465,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1853:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1006_$","typeString":"type(contract IERC1155Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1006_$","typeString":"type(contract IERC1155Receiver)"}],"id":3464,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1848:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Receiver_$1006","typeString":"type(contract IERC1155Receiver)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1871:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"1848:34:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1833:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1768:114:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3470,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"1899:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3472,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"1919:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2201_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2201_$","typeString":"type(contract IERC165)"}],"id":3471,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1914:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2201","typeString":"type(contract IERC165)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1928:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"1914:25:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1899:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1768:171:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3456,"id":3477,"nodeType":"Return","src":"1748:191:20"}]},"functionSelector":"01ffc9a7","id":3479,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1653:17:20","nodeType":"FunctionDefinition","overrides":{"id":3453,"nodeType":"OverrideSpecifier","overrides":[],"src":"1713:8:20"},"parameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"interfaceId","nameLocation":"1678:11:20","nodeType":"VariableDeclaration","scope":3479,"src":"1671:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3450,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1671:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1670:20:20"},"returnParameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3479,"src":"1731:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3454,"name":"bool","nodeType":"ElementaryTypeName","src":"1731:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1730:6:20"},"scope":3480,"src":"1644:303:20","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":3481,"src":"598:1352:20","usedErrors":[],"usedEvents":[]}],"src":"37:1913:20"},"id":20},"contracts/core/BaseAccount.sol":{"ast":{"absolutePath":"contracts/core/BaseAccount.sol","exportedSymbols":{"BaseAccount":[3624],"IAccount":[4287],"IAggregator":[4321],"IEntryPoint":[4475],"INonceManager":[4494],"IStakeManager":[4633],"UserOperation":[4659],"UserOperationLib":[4270],"ValidationData":[3859],"_intersectTimeRange":[4005],"_packValidationData":[4042,4080],"_parseValidationData":[3919],"calldataKeccak":[4090]},"id":3625,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3482,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:21"},{"absolutePath":"contracts/interfaces/IAccount.sol","file":"../interfaces/IAccount.sol","id":3483,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3625,"sourceUnit":4288,"src":"151:36:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":3484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3625,"sourceUnit":4476,"src":"189:39:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":3485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3625,"sourceUnit":4091,"src":"230:23:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/UserOperationLib.sol","file":"./UserOperationLib.sol","id":3486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3625,"sourceUnit":4271,"src":"255:32:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3488,"name":"IAccount","nameLocations":["562:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4287,"src":"562:8:21"},"id":3489,"nodeType":"InheritanceSpecifier","src":"562:8:21"}],"canonicalName":"BaseAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"291:236:21","text":" Basic account implementation.\n This contract provides the basic logic for implementing the IAccount interface - validateUserOp\n Specific account implementation should inherit it and provide the account-specific logic."},"fullyImplemented":false,"id":3624,"linearizedBaseContracts":[3624,4287],"name":"BaseAccount","nameLocation":"547:11:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3493,"libraryName":{"id":3490,"name":"UserOperationLib","nameLocations":["584:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":4270,"src":"584:16:21"},"nodeType":"UsingForDirective","src":"578:41:21","typeName":{"id":3492,"nodeType":"UserDefinedTypeName","pathNode":{"id":3491,"name":"UserOperation","nameLocations":["605:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"605:13:21"},"referencedDeclaration":4659,"src":"605:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}}},{"constant":true,"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"627:136:21","text":" Return value in case of signature failure, with no time-range.\n Equivalent to _packValidationData(true,0,0)."},"id":3497,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"795:21:21","nodeType":"VariableDeclaration","scope":3624,"src":"769:51:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"819:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"body":{"id":3513,"nodeType":"Block","src":"1073:65:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":3508,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1121:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_BaseAccount_$3624","typeString":"contract BaseAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseAccount_$3624","typeString":"contract BaseAccount"}],"id":3507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1113:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"1113:7:21","typeDescriptions":{}}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1113:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1128:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3503,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"1091:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4475_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1091:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1104:8:21","memberName":"getNonce","nodeType":"MemberAccess","referencedDeclaration":4487,"src":"1091:21:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$","typeString":"function (address,uint192) view external returns (uint256)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1091:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3502,"id":3512,"nodeType":"Return","src":"1084:46:21"}]},"documentation":{"id":3498,"nodeType":"StructuredDocumentation","src":"829:180:21","text":" Return the account nonce.\n This method returns the next sequential nonce.\n For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"},"functionSelector":"d087d288","id":3514,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"1024:8:21","nodeType":"FunctionDefinition","parameters":{"id":3499,"nodeType":"ParameterList","parameters":[],"src":"1032:2:21"},"returnParameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3514,"src":"1064:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1063:9:21"},"scope":3624,"src":"1015:123:21","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":3515,"nodeType":"StructuredDocumentation","src":"1146:140:21","text":" Return the entryPoint used by this account.\n Subclass should return the current entryPoint used by this account."},"functionSelector":"b0d691fe","id":3521,"implemented":false,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1301:10:21","nodeType":"FunctionDefinition","parameters":{"id":3516,"nodeType":"ParameterList","parameters":[],"src":"1311:2:21"},"returnParameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3521,"src":"1343:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"},"typeName":{"id":3518,"nodeType":"UserDefinedTypeName","pathNode":{"id":3517,"name":"IEntryPoint","nameLocations":["1343:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4475,"src":"1343:11:21"},"referencedDeclaration":4475,"src":"1343:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1342:13:21"},"scope":3624,"src":"1292:64:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[4286],"body":{"id":3554,"nodeType":"Block","src":"2045:191:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3535,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"2056:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3537,"nodeType":"ExpressionStatement","src":"2056:24:21"},{"expression":{"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3538,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"2091:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3540,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"2127:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":3541,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"2135:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3539,"name":"_validateSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"2108:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$4659_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32) returns (uint256)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2108:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2091:55:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3544,"nodeType":"ExpressionStatement","src":"2091:55:21"},{"expression":{"arguments":[{"expression":{"id":3546,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"2172:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2179:5:21","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"2172:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3545,"name":"_validateNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"2157:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3549,"nodeType":"ExpressionStatement","src":"2157:28:21"},{"expression":{"arguments":[{"id":3551,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"2208:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3550,"name":"_payPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2196:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2196:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3553,"nodeType":"ExpressionStatement","src":"2196:32:21"}]},"documentation":{"id":3522,"nodeType":"StructuredDocumentation","src":"1364:478:21","text":" Validate user's signature and nonce.\n Subclass doesn't need to override this method. Instead,\n it should override the specific internal validation methods.\n @param userOp              - The user operation to validate.\n @param userOpHash          - The hash of the user operation.\n @param missingAccountFunds - The amount of funds missing from the account\n                              to pay for the user operation."},"functionSelector":"3a871cdd","id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"1857:14:21","nodeType":"FunctionDefinition","overrides":{"id":3531,"nodeType":"OverrideSpecifier","overrides":[],"src":"2003:8:21"},"parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"userOp","nameLocation":"1905:6:21","nodeType":"VariableDeclaration","scope":3555,"src":"1882:29:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3524,"nodeType":"UserDefinedTypeName","pathNode":{"id":3523,"name":"UserOperation","nameLocations":["1882:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"1882:13:21"},"referencedDeclaration":4659,"src":"1882:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"userOpHash","nameLocation":"1930:10:21","nodeType":"VariableDeclaration","scope":3555,"src":"1922:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3529,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"1959:19:21","nodeType":"VariableDeclaration","scope":3555,"src":"1951:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1951:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:114:21"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"validationData","nameLocation":"2029:14:21","nodeType":"VariableDeclaration","scope":3555,"src":"2021:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2021:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2020:24:21"},"scope":3624,"src":"1848:388:21","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":3571,"nodeType":"Block","src":"2378:132:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2411:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2415:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2411:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3564,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"2433:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4475_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2433:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}],"id":3563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2425:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3562,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:21","typeDescriptions":{}}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2425:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2411:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2461:30:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""},"value":"account: not from EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""}],"id":3559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2389:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2389:113:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3570,"nodeType":"ExpressionStatement","src":"2389:113:21"}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"2244:72:21","text":" Ensure the request comes from the known entrypoint."},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"2331:22:21","nodeType":"FunctionDefinition","parameters":{"id":3557,"nodeType":"ParameterList","parameters":[],"src":"2353:2:21"},"returnParameters":{"id":3558,"nodeType":"ParameterList","parameters":[],"src":"2378:0:21"},"scope":3624,"src":"2322:188:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"2518:1109:21","text":" Validate the signature is valid for this message.\n @param userOp          - Validate the userOp.signature field.\n @param userOpHash      - Convenient field: the hash of the request, to check the signature against.\n                          (also hashes the entrypoint and chain id)\n @return validationData - Signature and time-range of this operation.\n                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                              otherwise, an address of an \"authorizer\" contract.\n                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          If the account doesn't use time-range, it is enough to return\n                          SIG_VALIDATION_FAILED value (1) for signature failure.\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"id":3583,"implemented":false,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"3642:18:21","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"userOp","nameLocation":"3694:6:21","nodeType":"VariableDeclaration","scope":3583,"src":"3671:29:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3575,"nodeType":"UserDefinedTypeName","pathNode":{"id":3574,"name":"UserOperation","nameLocations":["3671:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"3671:13:21"},"referencedDeclaration":4659,"src":"3671:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"userOpHash","nameLocation":"3719:10:21","nodeType":"VariableDeclaration","scope":3583,"src":"3711:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3711:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3660:76:21"},"returnParameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"validationData","nameLocation":"3771:14:21","nodeType":"VariableDeclaration","scope":3583,"src":"3763:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3763:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3762:24:21"},"scope":3624,"src":"3633:154:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3589,"nodeType":"Block","src":"4517:8:21","statements":[]},"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"3795:655:21","text":" Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"},"id":3590,"implemented":true,"kind":"function","modifiers":[],"name":"_validateNonce","nameLocation":"4465:14:21","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"nonce","nameLocation":"4488:5:21","nodeType":"VariableDeclaration","scope":3590,"src":"4480:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"4480:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4479:15:21"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[],"src":"4517:0:21"},"scope":3624,"src":"4456:69:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3622,"nodeType":"Block","src":"5178:324:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3596,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5193:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5216:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5193:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3621,"nodeType":"IfStatement","src":"5189:306:21","trueBody":{"id":3620,"nodeType":"Block","src":"5219:276:21","statements":[{"assignments":[3600,null],"declarations":[{"constant":false,"id":3600,"mutability":"mutable","name":"success","nameLocation":"5240:7:21","nodeType":"VariableDeclaration","scope":3620,"src":"5235:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3599,"name":"bool","nodeType":"ElementaryTypeName","src":"5235:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3616,"initialValue":{"arguments":[{"hexValue":"","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5379:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3603,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5261:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5265:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5261:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5253:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3601,"name":"address","nodeType":"ElementaryTypeName","src":"5253:8:21","stateMutability":"payable","typeDescriptions":{}}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5253:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5273:4:21","memberName":"call","nodeType":"MemberAccess","src":"5253:24:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":3607,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5303:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5351:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"5351:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5346:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5346:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5360:3:21","memberName":"max","nodeType":"MemberAccess","src":"5346:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5253:125:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5253:129:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5234:148:21"},{"expression":{"components":[{"id":3617,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"5398:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5397:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3619,"nodeType":"ExpressionStatement","src":"5397:9:21"}]}}]},"documentation":{"id":3591,"nodeType":"StructuredDocumentation","src":"4533:572:21","text":" Sends to the entrypoint (msg.sender) the missing funds for this transaction.\n SubClass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again).\n @param missingAccountFunds - The minimum value this method should send the entrypoint.\n                              This value MAY be zero, in case there is enough deposit,\n                              or the userOp has a paymaster."},"id":3623,"implemented":true,"kind":"function","modifiers":[],"name":"_payPrefund","nameLocation":"5120:11:21","nodeType":"FunctionDefinition","parameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"5140:19:21","nodeType":"VariableDeclaration","scope":3623,"src":"5132:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"5132:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5131:29:21"},"returnParameters":{"id":3595,"nodeType":"ParameterList","parameters":[],"src":"5178:0:21"},"scope":3624,"src":"5111:391:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3625,"src":"529:4976:21","usedErrors":[],"usedEvents":[]}],"src":"37:5468:21"},"id":21},"contracts/core/BasePaymaster.sol":{"ast":{"absolutePath":"contracts/core/BasePaymaster.sol","exportedSymbols":{"BasePaymaster":[3849],"Context":[1299],"IAggregator":[4321],"IEntryPoint":[4475],"INonceManager":[4494],"IPaymaster":[4529],"IStakeManager":[4633],"Ownable":[147],"UserOperation":[4659],"ValidationData":[3859],"_intersectTimeRange":[4005],"_packValidationData":[4042,4080],"_parseValidationData":[3919],"calldataKeccak":[4090]},"id":3850,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3626,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:22"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3627,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3850,"sourceUnit":148,"src":"104:52:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","id":3628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3850,"sourceUnit":4530,"src":"158:38:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":3629,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3850,"sourceUnit":4476,"src":"198:39:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":3630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3850,"sourceUnit":4091,"src":"239:23:22","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3632,"name":"IPaymaster","nameLocations":["459:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":4529,"src":"459:10:22"},"id":3633,"nodeType":"InheritanceSpecifier","src":"459:10:22"},{"baseName":{"id":3634,"name":"Ownable","nameLocations":["471:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"471:7:22"},"id":3635,"nodeType":"InheritanceSpecifier","src":"471:7:22"}],"canonicalName":"BasePaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":3631,"nodeType":"StructuredDocumentation","src":"266:156:22","text":" Helper class for creating a paymaster.\n provides helper methods for staking.\n Validates that the postOp is called only by the entryPoint."},"fullyImplemented":false,"id":3849,"linearizedBaseContracts":[3849,147,1299,4529],"name":"BasePaymaster","nameLocation":"442:13:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b0d691fe","id":3638,"mutability":"immutable","name":"entryPoint","nameLocation":"515:10:22","nodeType":"VariableDeclaration","scope":3849,"src":"486:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"},"typeName":{"id":3637,"nodeType":"UserDefinedTypeName","pathNode":{"id":3636,"name":"IEntryPoint","nameLocations":["486:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":4475,"src":"486:11:22"},"referencedDeclaration":4475,"src":"486:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"visibility":"public"},{"body":{"id":3652,"nodeType":"Block","src":"590:43:22","statements":[{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3648,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"601:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3649,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"614:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"src":"601:24:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":3651,"nodeType":"ExpressionStatement","src":"601:24:22"}]},"id":3653,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":3644,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"579:2:22","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"582:6:22","memberName":"origin","nodeType":"MemberAccess","src":"579:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3646,"kind":"baseConstructorSpecifier","modifierName":{"id":3643,"name":"Ownable","nameLocations":["571:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"571:7:22"},"nodeType":"ModifierInvocation","src":"571:18:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3641,"mutability":"mutable","name":"_entryPoint","nameLocation":"558:11:22","nodeType":"VariableDeclaration","scope":3653,"src":"546:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"},"typeName":{"id":3640,"nodeType":"UserDefinedTypeName","pathNode":{"id":3639,"name":"IEntryPoint","nameLocations":["546:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":4475,"src":"546:11:22"},"referencedDeclaration":4475,"src":"546:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"545:25:22"},"returnParameters":{"id":3647,"nodeType":"ParameterList","parameters":[],"src":"590:0:22"},"scope":3849,"src":"534:99:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4517],"body":{"id":3678,"nodeType":"Block","src":"881:114:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3669,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"892:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"892:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3671,"nodeType":"ExpressionStatement","src":"892:24:22"},{"expression":{"arguments":[{"id":3673,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"959:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":3674,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"967:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3675,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"979:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3672,"name":"_validatePaymasterUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"934:24:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$4659_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":3668,"id":3677,"nodeType":"Return","src":"927:60:22"}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"641:26:22","text":"@inheritdoc IPaymaster"},"functionSelector":"f465c77e","id":3679,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"682:23:22","nodeType":"FunctionDefinition","overrides":{"id":3663,"nodeType":"OverrideSpecifier","overrides":[],"src":"817:8:22"},"parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"userOp","nameLocation":"739:6:22","nodeType":"VariableDeclaration","scope":3679,"src":"716:29:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3656,"nodeType":"UserDefinedTypeName","pathNode":{"id":3655,"name":"UserOperation","nameLocations":["716:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"716:13:22"},"referencedDeclaration":4659,"src":"716:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"userOpHash","nameLocation":"764:10:22","nodeType":"VariableDeclaration","scope":3679,"src":"756:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"756:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"maxCost","nameLocation":"793:7:22","nodeType":"VariableDeclaration","scope":3679,"src":"785:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"785:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"705:102:22"},"returnParameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"mutability":"mutable","name":"context","nameLocation":"848:7:22","nodeType":"VariableDeclaration","scope":3679,"src":"835:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3664,"name":"bytes","nodeType":"ElementaryTypeName","src":"835:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3667,"mutability":"mutable","name":"validationData","nameLocation":"865:14:22","nodeType":"VariableDeclaration","scope":3679,"src":"857:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"834:46:22"},"scope":3849,"src":"673:322:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3680,"nodeType":"StructuredDocumentation","src":"1003:223:22","text":" Validate a user operation.\n @param userOp     - The user operation.\n @param userOpHash - The hash of the user operation.\n @param maxCost    - The maximum cost of the user operation."},"id":3694,"implemented":false,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"1241:24:22","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"userOp","nameLocation":"1299:6:22","nodeType":"VariableDeclaration","scope":3694,"src":"1276:29:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":3682,"nodeType":"UserDefinedTypeName","pathNode":{"id":3681,"name":"UserOperation","nameLocations":["1276:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"1276:13:22"},"referencedDeclaration":4659,"src":"1276:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":3685,"mutability":"mutable","name":"userOpHash","nameLocation":"1324:10:22","nodeType":"VariableDeclaration","scope":3694,"src":"1316:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1316:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3687,"mutability":"mutable","name":"maxCost","nameLocation":"1353:7:22","nodeType":"VariableDeclaration","scope":3694,"src":"1345:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1265:102:22"},"returnParameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"context","nameLocation":"1407:7:22","nodeType":"VariableDeclaration","scope":3694,"src":"1394:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3689,"name":"bytes","nodeType":"ElementaryTypeName","src":"1394:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3692,"mutability":"mutable","name":"validationData","nameLocation":"1424:14:22","nodeType":"VariableDeclaration","scope":3694,"src":"1416:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1416:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1393:46:22"},"scope":3849,"src":"1232:208:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[4528],"body":{"id":3715,"nodeType":"Block","src":"1612:91:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3706,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"1623:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3708,"nodeType":"ExpressionStatement","src":"1623:24:22"},{"expression":{"arguments":[{"id":3710,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"1666:4:22","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4502","typeString":"enum IPaymaster.PostOpMode"}},{"id":3711,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"1672:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3712,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"1681:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$4502","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3709,"name":"_postOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"1658:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_PostOpMode_$4502_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3714,"nodeType":"ExpressionStatement","src":"1658:37:22"}]},"documentation":{"id":3695,"nodeType":"StructuredDocumentation","src":"1448:26:22","text":"@inheritdoc IPaymaster"},"functionSelector":"a9a23409","id":3716,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"1489:6:22","nodeType":"FunctionDefinition","overrides":{"id":3704,"nodeType":"OverrideSpecifier","overrides":[],"src":"1603:8:22"},"parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"mode","nameLocation":"1517:4:22","nodeType":"VariableDeclaration","scope":3716,"src":"1506:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4502","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":3697,"nodeType":"UserDefinedTypeName","pathNode":{"id":3696,"name":"PostOpMode","nameLocations":["1506:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":4502,"src":"1506:10:22"},"referencedDeclaration":4502,"src":"1506:10:22","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4502","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"context","nameLocation":"1547:7:22","nodeType":"VariableDeclaration","scope":3716,"src":"1532:22:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3699,"name":"bytes","nodeType":"ElementaryTypeName","src":"1532:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"actualGasCost","nameLocation":"1573:13:22","nodeType":"VariableDeclaration","scope":3716,"src":"1565:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"1565:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:98:22"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[],"src":"1612:0:22"},"scope":3849,"src":"1480:223:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3736,"nodeType":"Block","src":"2711:192:22","statements":[{"expression":{"components":[{"id":3727,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"2723:4:22","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4502","typeString":"enum IPaymaster.PostOpMode"}},{"id":3728,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"2729:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3729,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"2738:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2722:30:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_PostOpMode_$4502_$_t_bytes_calldata_ptr_$_t_uint256_$","typeString":"tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":3731,"nodeType":"ExpressionStatement","src":"2722:30:22"},{"expression":{"arguments":[{"hexValue":"6d757374206f76657272696465","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2879:15:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""},"value":"must override"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""}],"id":3732,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2872:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2872:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3735,"nodeType":"ExpressionStatement","src":"2872:23:22"}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"1711:862:22","text":" Post-operation handler.\n (verified to be called only through the entryPoint)\n @dev If subclass returns a non-empty context from validatePaymasterUserOp,\n      it must also implement this method.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call)."},"id":3737,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"2588:7:22","nodeType":"FunctionDefinition","parameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"mode","nameLocation":"2617:4:22","nodeType":"VariableDeclaration","scope":3737,"src":"2606:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4502","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":3719,"nodeType":"UserDefinedTypeName","pathNode":{"id":3718,"name":"PostOpMode","nameLocations":["2606:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":4502,"src":"2606:10:22"},"referencedDeclaration":4502,"src":"2606:10:22","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4502","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"context","nameLocation":"2647:7:22","nodeType":"VariableDeclaration","scope":3737,"src":"2632:22:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3721,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3724,"mutability":"mutable","name":"actualGasCost","nameLocation":"2673:13:22","nodeType":"VariableDeclaration","scope":3737,"src":"2665:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2595:98:22"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[],"src":"2711:0:22"},"scope":3849,"src":"2579:324:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3753,"nodeType":"Block","src":"3043:72:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":3749,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3101:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$3849","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$3849","typeString":"contract BasePaymaster"}],"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3093:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3747,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:22","typeDescriptions":{}}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3741,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"3054:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3065:9:22","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":4608,"src":"3054:20:22","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3082:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3086:5:22","memberName":"value","nodeType":"MemberAccess","src":"3082:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3054:38:22","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3752,"nodeType":"ExpressionStatement","src":"3054:53:22"}]},"documentation":{"id":3738,"nodeType":"StructuredDocumentation","src":"2911:92:22","text":" Add a deposit for this paymaster, used for paying for transaction fees."},"functionSelector":"d0e30db0","id":3754,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3018:7:22","nodeType":"FunctionDefinition","parameters":{"id":3739,"nodeType":"ParameterList","parameters":[],"src":"3025:2:22"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[],"src":"3043:0:22"},"scope":3849,"src":"3009:106:22","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3771,"nodeType":"Block","src":"3398:65:22","statements":[{"expression":{"arguments":[{"id":3767,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"3431:15:22","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3768,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"3448:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3764,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"3409:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3420:10:22","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"3409:21:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3409:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3770,"nodeType":"ExpressionStatement","src":"3409:46:22"}]},"documentation":{"id":3755,"nodeType":"StructuredDocumentation","src":"3123:158:22","text":" Withdraw value from the deposit.\n @param withdrawAddress - Target to send to.\n @param amount          - Amount to withdraw."},"functionSelector":"205c2878","id":3772,"implemented":true,"kind":"function","modifiers":[{"id":3762,"kind":"modifierInvocation","modifierName":{"id":3761,"name":"onlyOwner","nameLocations":["3388:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3388:9:22"},"nodeType":"ModifierInvocation","src":"3388:9:22"}],"name":"withdrawTo","nameLocation":"3296:10:22","nodeType":"FunctionDefinition","parameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3333:15:22","nodeType":"VariableDeclaration","scope":3772,"src":"3317:31:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3756,"name":"address","nodeType":"ElementaryTypeName","src":"3317:15:22","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3759,"mutability":"mutable","name":"amount","nameLocation":"3367:6:22","nodeType":"VariableDeclaration","scope":3772,"src":"3359:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"3359:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3306:74:22"},"returnParameters":{"id":3763,"nodeType":"ParameterList","parameters":[],"src":"3398:0:22"},"scope":3849,"src":"3287:176:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3789,"nodeType":"Block","src":"3764:73:22","statements":[{"expression":{"arguments":[{"id":3786,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"3813:15:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3780,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"3775:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3786:8:22","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":4614,"src":"3775:19:22","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3783,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3802:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3806:5:22","memberName":"value","nodeType":"MemberAccess","src":"3802:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3775:37:22","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3775:54:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3788,"nodeType":"ExpressionStatement","src":"3775:54:22"}]},"documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"3471:218:22","text":" Add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased."},"functionSelector":"0396cb60","id":3790,"implemented":true,"kind":"function","modifiers":[{"id":3778,"kind":"modifierInvocation","modifierName":{"id":3777,"name":"onlyOwner","nameLocations":["3754:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3754:9:22"},"nodeType":"ModifierInvocation","src":"3754:9:22"}],"name":"addStake","nameLocation":"3704:8:22","nodeType":"FunctionDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"3720:15:22","nodeType":"VariableDeclaration","scope":3790,"src":"3713:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3774,"name":"uint32","nodeType":"ElementaryTypeName","src":"3713:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3712:24:22"},"returnParameters":{"id":3779,"nodeType":"ParameterList","parameters":[],"src":"3764:0:22"},"scope":3849,"src":"3695:142:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3804,"nodeType":"Block","src":"3977:61:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":3800,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4024:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$3849","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$3849","typeString":"contract BasePaymaster"}],"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4016:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3798,"name":"address","nodeType":"ElementaryTypeName","src":"4016:7:22","typeDescriptions":{}}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3796,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"3995:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4006:9:22","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":4602,"src":"3995:20:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3995:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3795,"id":3803,"nodeType":"Return","src":"3988:42:22"}]},"documentation":{"id":3791,"nodeType":"StructuredDocumentation","src":"3845:74:22","text":" Return current paymaster's deposit on the entryPoint."},"functionSelector":"c399ec88","id":3805,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"3934:10:22","nodeType":"FunctionDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[],"src":"3944:2:22"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3805,"src":"3968:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3967:9:22"},"scope":3849,"src":"3925:113:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3816,"nodeType":"Block","src":"4245:43:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3811,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"4256:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4267:11:22","memberName":"unlockStake","nodeType":"MemberAccess","referencedDeclaration":4618,"src":"4256:22:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4256:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3815,"nodeType":"ExpressionStatement","src":"4256:24:22"}]},"documentation":{"id":3806,"nodeType":"StructuredDocumentation","src":"4046:151:22","text":" Unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"},"functionSelector":"bb9fe6bf","id":3817,"implemented":true,"kind":"function","modifiers":[{"id":3809,"kind":"modifierInvocation","modifierName":{"id":3808,"name":"onlyOwner","nameLocations":["4235:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4235:9:22"},"nodeType":"ModifierInvocation","src":"4235:9:22"}],"name":"unlockStake","nameLocation":"4212:11:22","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[],"src":"4223:2:22"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[],"src":"4245:0:22"},"scope":3849,"src":"4203:85:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3831,"nodeType":"Block","src":"4591:60:22","statements":[{"expression":{"arguments":[{"id":3828,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"4627:15:22","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":3825,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"4602:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4613:13:22","memberName":"withdrawStake","nodeType":"MemberAccess","referencedDeclaration":4624,"src":"4602:24:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable) external"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3830,"nodeType":"ExpressionStatement","src":"4602:41:22"}]},"documentation":{"id":3818,"nodeType":"StructuredDocumentation","src":"4296:214:22","text":" Withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":3832,"implemented":true,"kind":"function","modifiers":[{"id":3823,"kind":"modifierInvocation","modifierName":{"id":3822,"name":"onlyOwner","nameLocations":["4581:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4581:9:22"},"nodeType":"ModifierInvocation","src":"4581:9:22"}],"name":"withdrawStake","nameLocation":"4525:13:22","nodeType":"FunctionDefinition","parameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4555:15:22","nodeType":"VariableDeclaration","scope":3832,"src":"4539:31:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3819,"name":"address","nodeType":"ElementaryTypeName","src":"4539:15:22","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"4538:33:22"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[],"src":"4591:0:22"},"scope":3849,"src":"4516:135:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3847,"nodeType":"Block","src":"4786:86:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3837,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4805:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4809:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4805:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3841,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"4827:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}],"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4819:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3839,"name":"address","nodeType":"ElementaryTypeName","src":"4819:7:22","typeDescriptions":{}}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4819:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4805:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4840:23:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""},"value":"Sender not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""}],"id":3836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4797:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4797:67:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3846,"nodeType":"ExpressionStatement","src":"4797:67:22"}]},"documentation":{"id":3833,"nodeType":"StructuredDocumentation","src":"4659:70:22","text":" Validate the call is made from a valid entrypoint"},"id":3848,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"4744:22:22","nodeType":"FunctionDefinition","parameters":{"id":3834,"nodeType":"ParameterList","parameters":[],"src":"4766:2:22"},"returnParameters":{"id":3835,"nodeType":"ParameterList","parameters":[],"src":"4786:0:22"},"scope":3849,"src":"4735:137:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3850,"src":"424:4451:22","usedErrors":[13,18],"usedEvents":[24]}],"src":"37:4838:22"},"id":22},"contracts/core/Helpers.sol":{"ast":{"absolutePath":"contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[3859],"_intersectTimeRange":[4005],"_packValidationData":[4042,4080],"_parseValidationData":[3919],"calldataKeccak":[4090]},"id":4091,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3851,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:23"},{"canonicalName":"ValidationData","documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"109:649:23","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, with is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validaUntil - This UserOp is valid only up to this timestamp."},"id":3859,"members":[{"constant":false,"id":3854,"mutability":"mutable","name":"aggregator","nameLocation":"797:10:23","nodeType":"VariableDeclaration","scope":3859,"src":"789:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3853,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"validAfter","nameLocation":"821:10:23","nodeType":"VariableDeclaration","scope":3859,"src":"814:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3855,"name":"uint48","nodeType":"ElementaryTypeName","src":"814:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"validUntil","nameLocation":"845:10:23","nodeType":"VariableDeclaration","scope":3859,"src":"838:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3857,"name":"uint48","nodeType":"ElementaryTypeName","src":"838:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"767:14:23","nodeType":"StructDefinition","scope":4091,"src":"760:99:23","visibility":"public"},{"body":{"id":3918,"nodeType":"Block","src":"1131:322:23","statements":[{"assignments":[3869],"declarations":[{"constant":false,"id":3869,"mutability":"mutable","name":"aggregator","nameLocation":"1146:10:23","nodeType":"VariableDeclaration","scope":3918,"src":"1138:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3868,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3877,"initialValue":{"arguments":[{"arguments":[{"id":3874,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"1175:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1167:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3872,"name":"uint160","nodeType":"ElementaryTypeName","src":"1167:7:23","typeDescriptions":{}}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1159:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3870,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:23","typeDescriptions":{}}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1138:53:23"},{"assignments":[3879],"declarations":[{"constant":false,"id":3879,"mutability":"mutable","name":"validUntil","nameLocation":"1205:10:23","nodeType":"VariableDeclaration","scope":3918,"src":"1198:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3878,"name":"uint48","nodeType":"ElementaryTypeName","src":"1198:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3886,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"1225:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1225:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1218:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3880,"name":"uint48","nodeType":"ElementaryTypeName","src":"1218:6:23","typeDescriptions":{}}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1218:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1198:49:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"1258:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1272:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1258:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3899,"nodeType":"IfStatement","src":"1254:69:23","trueBody":{"id":3898,"nodeType":"Block","src":"1275:48:23","statements":[{"expression":{"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3890,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"1286:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":3893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1304:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3892,"name":"uint48","nodeType":"ElementaryTypeName","src":"1304:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3891,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1299:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1299:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1312:3:23","memberName":"max","nodeType":"MemberAccess","src":"1299:16:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1286:29:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3897,"nodeType":"ExpressionStatement","src":"1286:29:23"}]}},{"assignments":[3901],"declarations":[{"constant":false,"id":3901,"mutability":"mutable","name":"validAfter","nameLocation":"1336:10:23","nodeType":"VariableDeclaration","scope":3918,"src":"1329:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3900,"name":"uint48","nodeType":"ElementaryTypeName","src":"1329:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3911,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"1356:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":3907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1375:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1380:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1375:8:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":3908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1374:10:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1356:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1349:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3902,"name":"uint48","nodeType":"ElementaryTypeName","src":"1349:6:23","typeDescriptions":{}}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1329:56:23"},{"expression":{"arguments":[{"id":3913,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"1414:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3914,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"1426:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3915,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"1438:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3912,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"1399:14:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$3859_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:50:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":3867,"id":3917,"nodeType":"Return","src":"1392:57:23"}]},"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"863:165:23","text":" Extract sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data."},"id":3919,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1039:20:23","nodeType":"FunctionDefinition","parameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"validationData","nameLocation":"1071:14:23","nodeType":"VariableDeclaration","scope":3919,"src":"1066:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint","nodeType":"ElementaryTypeName","src":"1066:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1059:29:23"},"returnParameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"data","nameLocation":"1125:4:23","nodeType":"VariableDeclaration","scope":3919,"src":"1103:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3865,"nodeType":"UserDefinedTypeName","pathNode":{"id":3864,"name":"ValidationData","nameLocations":["1103:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"1103:14:23"},"referencedDeclaration":3859,"src":"1103:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1102:28:23"},"scope":4091,"src":"1030:423:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4004,"nodeType":"Block","src":"1809:795:23","statements":[{"assignments":[3932],"declarations":[{"constant":false,"id":3932,"mutability":"mutable","name":"accountValidationData","nameLocation":"1838:21:23","nodeType":"VariableDeclaration","scope":4004,"src":"1816:43:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3931,"nodeType":"UserDefinedTypeName","pathNode":{"id":3930,"name":"ValidationData","nameLocations":["1816:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"1816:14:23"},"referencedDeclaration":3859,"src":"1816:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":3936,"initialValue":{"arguments":[{"id":3934,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"1893:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3933,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"1862:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$3859_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1816:98:23"},{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"pmValidationData","nameLocation":"1943:16:23","nodeType":"VariableDeclaration","scope":4004,"src":"1921:38:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3938,"nodeType":"UserDefinedTypeName","pathNode":{"id":3937,"name":"ValidationData","nameLocations":["1921:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"1921:14:23"},"referencedDeclaration":3859,"src":"1921:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":3943,"initialValue":{"arguments":[{"id":3941,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"1993:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3940,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"1962:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$3859_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1921:102:23"},{"assignments":[3945],"declarations":[{"constant":false,"id":3945,"mutability":"mutable","name":"aggregator","nameLocation":"2038:10:23","nodeType":"VariableDeclaration","scope":4004,"src":"2030:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3944,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3948,"initialValue":{"expression":{"id":3946,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"2051:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"id":3947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2073:10:23","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3854,"src":"2051:32:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2030:53:23"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"2094:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2116:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2108:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3950,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:23","typeDescriptions":{}}},"id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2108:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2094:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3961,"nodeType":"IfStatement","src":"2090:89:23","trueBody":{"id":3960,"nodeType":"Block","src":"2120:59:23","statements":[{"expression":{"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3955,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"2131:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3956,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"2144:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"id":3957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2161:10:23","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3854,"src":"2144:27:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2131:40:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3959,"nodeType":"ExpressionStatement","src":"2131:40:23"}]}},{"assignments":[3963],"declarations":[{"constant":false,"id":3963,"mutability":"mutable","name":"validAfter","nameLocation":"2192:10:23","nodeType":"VariableDeclaration","scope":4004,"src":"2185:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3962,"name":"uint48","nodeType":"ElementaryTypeName","src":"2185:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3966,"initialValue":{"expression":{"id":3964,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"2205:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"id":3965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2227:10:23","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"2205:32:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2185:52:23"},{"assignments":[3968],"declarations":[{"constant":false,"id":3968,"mutability":"mutable","name":"validUntil","nameLocation":"2251:10:23","nodeType":"VariableDeclaration","scope":4004,"src":"2244:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3967,"name":"uint48","nodeType":"ElementaryTypeName","src":"2244:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3971,"initialValue":{"expression":{"id":3969,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"2264:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"id":3970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2286:10:23","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"2264:32:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2244:52:23"},{"assignments":[3973],"declarations":[{"constant":false,"id":3973,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2310:12:23","nodeType":"VariableDeclaration","scope":4004,"src":"2303:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3972,"name":"uint48","nodeType":"ElementaryTypeName","src":"2303:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3976,"initialValue":{"expression":{"id":3974,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"2325:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"id":3975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2342:10:23","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"2325:27:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2303:49:23"},{"assignments":[3978],"declarations":[{"constant":false,"id":3978,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2366:12:23","nodeType":"VariableDeclaration","scope":4004,"src":"2359:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3977,"name":"uint48","nodeType":"ElementaryTypeName","src":"2359:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3981,"initialValue":{"expression":{"id":3979,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"2381:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"id":3980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:10:23","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"2381:27:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2359:49:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"2421:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3983,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"2434:12:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2421:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3989,"nodeType":"IfStatement","src":"2417:56:23","trueBody":{"expression":{"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3985,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"2448:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3986,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"2461:12:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2448:25:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3988,"nodeType":"ExpressionStatement","src":"2448:25:23"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"2484:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3991,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"2497:12:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2484:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3997,"nodeType":"IfStatement","src":"2480:56:23","trueBody":{"expression":{"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3993,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"2511:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3994,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"2524:12:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2511:25:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3996,"nodeType":"ExpressionStatement","src":"2511:25:23"}},{"expression":{"arguments":[{"id":3999,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"2565:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4000,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"2577:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":4001,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"2589:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3998,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"2550:14:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$3859_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:50:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":3929,"id":4003,"nodeType":"Return","src":"2543:57:23"}]},"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"1457:214:23","text":" Intersect account and paymaster ranges.\n @param validationData          - The packed validation data of the account.\n @param paymasterValidationData - The packed validation data of the paymaster."},"id":4005,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1682:19:23","nodeType":"FunctionDefinition","parameters":{"id":3925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"validationData","nameLocation":"1716:14:23","nodeType":"VariableDeclaration","scope":4005,"src":"1708:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1745:23:23","nodeType":"VariableDeclaration","scope":4005,"src":"1737:31:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1701:70:23"},"returnParameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4005,"src":"1786:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3927,"nodeType":"UserDefinedTypeName","pathNode":{"id":3926,"name":"ValidationData","nameLocations":["1786:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"1786:14:23"},"referencedDeclaration":3859,"src":"1786:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1785:23:23"},"scope":4091,"src":"1673:931:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4041,"nodeType":"Block","src":"2808:148:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4016,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"2839:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"id":4017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2844:10:23","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3854,"src":"2839:15:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2831:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4014,"name":"uint160","nodeType":"ElementaryTypeName","src":"2831:7:23","typeDescriptions":{}}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4021,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"2876:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"id":4022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2881:10:23","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"2876:15:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2868:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:23","typeDescriptions":{}}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2868:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2896:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2868:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2867:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:69:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4030,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"2921:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData memory"}},"id":4031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2926:10:23","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"2921:15:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2913:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2913:7:23","typeDescriptions":{}}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2942:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2942:8:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":4036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2941:10:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2913:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2912:40:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:121:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4013,"id":4040,"nodeType":"Return","src":"2815:137:23"}]},"documentation":{"id":4006,"nodeType":"StructuredDocumentation","src":"2608:110:23","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack."},"id":4042,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2729:19:23","nodeType":"FunctionDefinition","parameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"data","nameLocation":"2777:4:23","nodeType":"VariableDeclaration","scope":4042,"src":"2755:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":4008,"nodeType":"UserDefinedTypeName","pathNode":{"id":4007,"name":"ValidationData","nameLocations":["2755:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"2755:14:23"},"referencedDeclaration":3859,"src":"2755:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3859_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2748:36:23"},"returnParameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4042,"src":"2799:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"2799:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2798:9:23"},"scope":4091,"src":"2720:236:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4079,"nodeType":"Block","src":"3411:133:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":4054,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"3435:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3451:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3435:17:23","trueExpression":{"hexValue":"31","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3447:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3434:19:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4061,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"3474:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":4060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3466:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:23","typeDescriptions":{}}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3466:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3489:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3466:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3465:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:59:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4069,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"3514:10:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":4068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3506:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3506:7:23","typeDescriptions":{}}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3506:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":4073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3530:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3536:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3530:8:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":4074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3529:10:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3506:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3505:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:106:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4053,"id":4078,"nodeType":"Return","src":"3418:122:23"}]},"documentation":{"id":4043,"nodeType":"StructuredDocumentation","src":"2960:325:23","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n @param validAfter - First timestamp this UserOperation is valid."},"id":4080,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"3296:19:23","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4045,"mutability":"mutable","name":"sigFailed","nameLocation":"3327:9:23","nodeType":"VariableDeclaration","scope":4080,"src":"3322:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4044,"name":"bool","nodeType":"ElementaryTypeName","src":"3322:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4047,"mutability":"mutable","name":"validUntil","nameLocation":"3350:10:23","nodeType":"VariableDeclaration","scope":4080,"src":"3343:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4046,"name":"uint48","nodeType":"ElementaryTypeName","src":"3343:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":4049,"mutability":"mutable","name":"validAfter","nameLocation":"3374:10:23","nodeType":"VariableDeclaration","scope":4080,"src":"3367:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4048,"name":"uint48","nodeType":"ElementaryTypeName","src":"3367:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3315:72:23"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4080,"src":"3402:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3401:9:23"},"scope":4091,"src":"3287:257:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4089,"nodeType":"Block","src":"3805:200:23","statements":[{"AST":{"nodeType":"YulBlock","src":"3825:173:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3840:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3857:4:23","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3851:5:23"},"nodeType":"YulFunctionCall","src":"3851:11:23"},"variables":[{"name":"mem","nodeType":"YulTypedName","src":"3844:3:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3876:22:23","value":{"name":"data.length","nodeType":"YulIdentifier","src":"3887:11:23"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3880:3:23","type":""}]},{"expression":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3925:3:23"},{"name":"data.offset","nodeType":"YulIdentifier","src":"3930:11:23"},{"name":"len","nodeType":"YulIdentifier","src":"3943:3:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3912:12:23"},"nodeType":"YulFunctionCall","src":"3912:35:23"},"nodeType":"YulExpressionStatement","src":"3912:35:23"},{"nodeType":"YulAssignment","src":"3961:26:23","value":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3978:3:23"},{"name":"len","nodeType":"YulIdentifier","src":"3983:3:23"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3968:9:23"},"nodeType":"YulFunctionCall","src":"3968:19:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3961:3:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4083,"isOffset":false,"isSlot":false,"src":"3887:11:23","suffix":"length","valueSize":1},{"declaration":4083,"isOffset":true,"isSlot":false,"src":"3930:11:23","suffix":"offset","valueSize":1},{"declaration":4086,"isOffset":false,"isSlot":false,"src":"3961:3:23","valueSize":1}],"id":4088,"nodeType":"InlineAssembly","src":"3816:182:23"}]},"documentation":{"id":4081,"nodeType":"StructuredDocumentation","src":"3548:179:23","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":4090,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3742:14:23","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"data","nameLocation":"3772:4:23","nodeType":"VariableDeclaration","scope":4090,"src":"3757:19:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4082,"name":"bytes","nodeType":"ElementaryTypeName","src":"3757:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3756:21:23"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"ret","nameLocation":"3800:3:23","nodeType":"VariableDeclaration","scope":4090,"src":"3792:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3792:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3791:13:23"},"scope":4091,"src":"3733:272:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"37:3968:23"},"id":23},"contracts/core/UserOperationLib.sol":{"ast":{"absolutePath":"contracts/core/UserOperationLib.sol","exportedSymbols":{"UserOperation":[4659],"UserOperationLib":[4270],"calldataKeccak":[4090]},"id":4271,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4092,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:24"},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":4094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4271,"sourceUnit":4091,"src":"109:45:24","symbolAliases":[{"foreign":{"id":4093,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"117:14:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"../interfaces/UserOperation.sol","id":4095,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4271,"sourceUnit":4660,"src":"156:41:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":4096,"nodeType":"StructuredDocumentation","src":"201:79:24","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":4270,"linearizedBaseContracts":[4270],"name":"UserOperationLib","nameLocation":"290:16:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":4117,"nodeType":"Block","src":"524:228:24","statements":[{"assignments":[4106],"declarations":[{"constant":false,"id":4106,"mutability":"mutable","name":"data","nameLocation":"543:4:24","nodeType":"VariableDeclaration","scope":4117,"src":"535:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4105,"name":"address","nodeType":"ElementaryTypeName","src":"535:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4107,"nodeType":"VariableDeclarationStatement","src":"535:12:24"},{"AST":{"nodeType":"YulBlock","src":"651:54:24","statements":[{"nodeType":"YulAssignment","src":"666:28:24","value":{"arguments":[{"name":"userOp","nodeType":"YulIdentifier","src":"687:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"674:12:24"},"nodeType":"YulFunctionCall","src":"674:20:24"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"666:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4106,"isOffset":false,"isSlot":false,"src":"666:4:24","valueSize":1},{"declaration":4100,"isOffset":false,"isSlot":false,"src":"687:6:24","valueSize":1}],"id":4108,"nodeType":"InlineAssembly","src":"642:63:24"},{"expression":{"arguments":[{"arguments":[{"id":4113,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"738:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"730:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4111,"name":"uint160","nodeType":"ElementaryTypeName","src":"730:7:24","typeDescriptions":{}}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"730:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"722:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4109,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:24","typeDescriptions":{}}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"722:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4104,"id":4116,"nodeType":"Return","src":"715:29:24"}]},"documentation":{"id":4097,"nodeType":"StructuredDocumentation","src":"314:106:24","text":" Get sender from user operation data.\n @param userOp - The user operation data."},"id":4118,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"435:9:24","nodeType":"FunctionDefinition","parameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"userOp","nameLocation":"478:6:24","nodeType":"VariableDeclaration","scope":4118,"src":"455:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4099,"nodeType":"UserDefinedTypeName","pathNode":{"id":4098,"name":"UserOperation","nameLocations":["455:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"455:13:24"},"referencedDeclaration":4659,"src":"455:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"444:47:24"},"returnParameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4118,"src":"515:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4102,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"514:9:24"},"scope":4270,"src":"426:326:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4153,"nodeType":"Block","src":"1061:437:24","statements":[{"id":4152,"nodeType":"UncheckedBlock","src":"1072:419:24","statements":[{"assignments":[4128],"declarations":[{"constant":false,"id":4128,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1105:12:24","nodeType":"VariableDeclaration","scope":4152,"src":"1097:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4131,"initialValue":{"expression":{"id":4129,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"1120:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1127:12:24","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":4652,"src":"1120:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1097:42:24"},{"assignments":[4133],"declarations":[{"constant":false,"id":4133,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1162:20:24","nodeType":"VariableDeclaration","scope":4152,"src":"1154:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4136,"initialValue":{"expression":{"id":4134,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"1185:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1192:20:24","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":4654,"src":"1185:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1154:58:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"1231:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4138,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"1247:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1231:36:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4143,"nodeType":"IfStatement","src":"1227:176:24","trueBody":{"id":4142,"nodeType":"Block","src":"1269:134:24","statements":[{"expression":{"id":4140,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"1375:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4126,"id":4141,"nodeType":"Return","src":"1368:19:24"}]}},{"expression":{"arguments":[{"id":4145,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"1428:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"1442:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4147,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1465:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1471:7:24","memberName":"basefee","nodeType":"MemberAccess","src":"1465:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1442:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4144,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"1424:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1424:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4126,"id":4151,"nodeType":"Return","src":"1417:62:24"}]}]},"documentation":{"id":4119,"nodeType":"StructuredDocumentation","src":"760:198:24","text":" Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."},"id":4154,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"973:8:24","nodeType":"FunctionDefinition","parameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"userOp","nameLocation":"1015:6:24","nodeType":"VariableDeclaration","scope":4154,"src":"992:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4121,"nodeType":"UserDefinedTypeName","pathNode":{"id":4120,"name":"UserOperation","nameLocations":["992:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"992:13:24"},"referencedDeclaration":4659,"src":"992:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"981:47:24"},"returnParameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4154,"src":"1052:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1051:9:24"},"scope":4270,"src":"964:534:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4234,"nodeType":"Block","src":"1736:875:24","statements":[{"assignments":[4164],"declarations":[{"constant":false,"id":4164,"mutability":"mutable","name":"sender","nameLocation":"1755:6:24","nodeType":"VariableDeclaration","scope":4234,"src":"1747:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4163,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4168,"initialValue":{"arguments":[{"id":4166,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"1774:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":4165,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"1764:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$4659_calldata_ptr_$returns$_t_address_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1747:34:24"},{"assignments":[4170],"declarations":[{"constant":false,"id":4170,"mutability":"mutable","name":"nonce","nameLocation":"1800:5:24","nodeType":"VariableDeclaration","scope":4234,"src":"1792:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1792:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4173,"initialValue":{"expression":{"id":4171,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"1808:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1815:5:24","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"1808:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1792:28:24"},{"assignments":[4175],"declarations":[{"constant":false,"id":4175,"mutability":"mutable","name":"hashInitCode","nameLocation":"1839:12:24","nodeType":"VariableDeclaration","scope":4234,"src":"1831:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1831:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4180,"initialValue":{"arguments":[{"expression":{"id":4177,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"1869:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1876:8:24","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":4642,"src":"1869:15:24","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4176,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"1854:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1854:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1831:54:24"},{"assignments":[4182],"declarations":[{"constant":false,"id":4182,"mutability":"mutable","name":"hashCallData","nameLocation":"1904:12:24","nodeType":"VariableDeclaration","scope":4234,"src":"1896:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1896:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4187,"initialValue":{"arguments":[{"expression":{"id":4184,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"1934:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1941:8:24","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":4644,"src":"1934:15:24","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4183,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"1919:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1919:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1896:54:24"},{"assignments":[4189],"declarations":[{"constant":false,"id":4189,"mutability":"mutable","name":"callGasLimit","nameLocation":"1969:12:24","nodeType":"VariableDeclaration","scope":4234,"src":"1961:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4192,"initialValue":{"expression":{"id":4190,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"1984:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1991:12:24","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":4646,"src":"1984:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1961:42:24"},{"assignments":[4194],"declarations":[{"constant":false,"id":4194,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"2022:20:24","nodeType":"VariableDeclaration","scope":4234,"src":"2014:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4197,"initialValue":{"expression":{"id":4195,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"2045:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2052:20:24","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"2045:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2014:58:24"},{"assignments":[4199],"declarations":[{"constant":false,"id":4199,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2091:18:24","nodeType":"VariableDeclaration","scope":4234,"src":"2083:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4202,"initialValue":{"expression":{"id":4200,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"2112:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2119:18:24","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"2112:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2083:54:24"},{"assignments":[4204],"declarations":[{"constant":false,"id":4204,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2156:12:24","nodeType":"VariableDeclaration","scope":4234,"src":"2148:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"2148:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4207,"initialValue":{"expression":{"id":4205,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"2171:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2178:12:24","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":4652,"src":"2171:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2148:42:24"},{"assignments":[4209],"declarations":[{"constant":false,"id":4209,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2209:20:24","nodeType":"VariableDeclaration","scope":4234,"src":"2201:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4212,"initialValue":{"expression":{"id":4210,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"2232:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:20:24","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":4654,"src":"2232:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2201:58:24"},{"assignments":[4214],"declarations":[{"constant":false,"id":4214,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"2278:20:24","nodeType":"VariableDeclaration","scope":4234,"src":"2270:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2270:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4219,"initialValue":{"arguments":[{"expression":{"id":4216,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"2316:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2323:16:24","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":4656,"src":"2316:23:24","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4215,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"2301:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2301:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2270:70:24"},{"expression":{"arguments":[{"id":4222,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"2385:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4223,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"2393:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4224,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"2413:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4225,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"2427:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4226,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"2454:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4227,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"2468:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4228,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"2490:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4229,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"2523:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4230,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"2537:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4231,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"2572:20:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4220,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2360:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2364:6:24","memberName":"encode","nodeType":"MemberAccess","src":"2360:10:24","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2360:243:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4162,"id":4233,"nodeType":"Return","src":"2353:250:24"}]},"documentation":{"id":4155,"nodeType":"StructuredDocumentation","src":"1506:122:24","text":" Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data."},"id":4235,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"1643:4:24","nodeType":"FunctionDefinition","parameters":{"id":4159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4158,"mutability":"mutable","name":"userOp","nameLocation":"1681:6:24","nodeType":"VariableDeclaration","scope":4235,"src":"1658:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4157,"nodeType":"UserDefinedTypeName","pathNode":{"id":4156,"name":"UserOperation","nameLocations":["1658:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"1658:13:24"},"referencedDeclaration":4659,"src":"1658:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1647:47:24"},"returnParameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"ret","nameLocation":"1731:3:24","nodeType":"VariableDeclaration","scope":4235,"src":"1718:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4160,"name":"bytes","nodeType":"ElementaryTypeName","src":"1718:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1717:18:24"},"scope":4270,"src":"1634:977:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4250,"nodeType":"Block","src":"2817:49:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":4246,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"2850:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":4245,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"2845:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$4659_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2845:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4244,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2835:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2835:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4243,"id":4249,"nodeType":"Return","src":"2828:30:24"}]},"documentation":{"id":4236,"nodeType":"StructuredDocumentation","src":"2619:99:24","text":" Hash the user operation data.\n @param userOp - The user operation data."},"id":4251,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"2733:4:24","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4239,"mutability":"mutable","name":"userOp","nameLocation":"2771:6:24","nodeType":"VariableDeclaration","scope":4251,"src":"2748:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4238,"nodeType":"UserDefinedTypeName","pathNode":{"id":4237,"name":"UserOperation","nameLocations":["2748:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"2748:13:24"},"referencedDeclaration":4659,"src":"2748:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2737:47:24"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4251,"src":"2808:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2808:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2807:9:24"},"scope":4270,"src":"2724:142:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4268,"nodeType":"Block","src":"3062:39:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"3080:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4262,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"3084:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3080:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4265,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"3092:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3080:13:24","trueExpression":{"id":4264,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"3088:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4260,"id":4267,"nodeType":"Return","src":"3073:20:24"}]},"documentation":{"id":4252,"nodeType":"StructuredDocumentation","src":"2874:115:24","text":" The minimum of two numbers.\n @param a - First number.\n @param b - Second number."},"id":4269,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3004:3:24","nodeType":"FunctionDefinition","parameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"a","nameLocation":"3016:1:24","nodeType":"VariableDeclaration","scope":4269,"src":"3008:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"3008:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"b","nameLocation":"3027:1:24","nodeType":"VariableDeclaration","scope":4269,"src":"3019:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3007:22:24"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4269,"src":"3053:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:9:24"},"scope":4270,"src":"2995:106:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4271,"src":"282:2822:24","usedErrors":[],"usedEvents":[]}],"src":"37:3067:24"},"id":24},"contracts/interfaces/IAccount.sol":{"ast":{"absolutePath":"contracts/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[4287],"UserOperation":[4659]},"id":4288,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4272,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:25"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":4273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4288,"sourceUnit":4660,"src":"65:29:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4287,"linearizedBaseContracts":[4287],"name":"IAccount","nameLocation":"108:8:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4274,"nodeType":"StructuredDocumentation","src":"124:2316:25","text":" Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp              - The operation that is about to be executed.\n @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\n                              This is the minimum amount to transfer to the sender(entryPoint) to be\n                              able to make the call. The excess is left as a deposit in the entrypoint\n                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\n                              In case there is a paymaster in the request (or the current deposit is high\n                              enough), this value will be zero.\n @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\n                              `_unpackValidationData` to encode and decode.\n                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                 otherwise, an address of an \"authorizer\" contract.\n                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"\n                              <6-byte> validAfter - First timestamp this operation is valid\n                                                    If an account doesn't use time-range, it is enough to\n                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\n                              Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"3a871cdd","id":4286,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"2455:14:25","nodeType":"FunctionDefinition","parameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"userOp","nameLocation":"2503:6:25","nodeType":"VariableDeclaration","scope":4286,"src":"2480:29:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4276,"nodeType":"UserDefinedTypeName","pathNode":{"id":4275,"name":"UserOperation","nameLocations":["2480:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"2480:13:25"},"referencedDeclaration":4659,"src":"2480:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":4279,"mutability":"mutable","name":"userOpHash","nameLocation":"2528:10:25","nodeType":"VariableDeclaration","scope":4286,"src":"2520:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2520:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4281,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2557:19:25","nodeType":"VariableDeclaration","scope":4286,"src":"2549:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"2549:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:114:25"},"returnParameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"validationData","nameLocation":"2610:14:25","nodeType":"VariableDeclaration","scope":4286,"src":"2602:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2601:24:25"},"scope":4287,"src":"2446:180:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4288,"src":"98:2531:25","usedErrors":[],"usedEvents":[]}],"src":"37:2594:25"},"id":25},"contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[4321],"UserOperation":[4659]},"id":4322,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4289,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:26"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":4290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4322,"sourceUnit":4660,"src":"65:29:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":4291,"nodeType":"StructuredDocumentation","src":"98:45:26","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":4321,"linearizedBaseContracts":[4321],"name":"IAggregator","nameLocation":"155:11:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4292,"nodeType":"StructuredDocumentation","src":"174:274:26","text":" Validate aggregated signature.\n Revert if the aggregated signature does not match the given list of operations.\n @param userOps   - Array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"e3563a4f","id":4301,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"463:18:26","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"userOps","nameLocation":"517:7:26","nodeType":"VariableDeclaration","scope":4301,"src":"492:32:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$4659_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":4294,"nodeType":"UserDefinedTypeName","pathNode":{"id":4293,"name":"UserOperation","nameLocations":["492:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"492:13:26"},"referencedDeclaration":4659,"src":"492:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"id":4295,"nodeType":"ArrayTypeName","src":"492:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$4659_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":4298,"mutability":"mutable","name":"signature","nameLocation":"550:9:26","nodeType":"VariableDeclaration","scope":4301,"src":"535:24:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4297,"name":"bytes","nodeType":"ElementaryTypeName","src":"535:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"481:85:26"},"returnParameters":{"id":4300,"nodeType":"ParameterList","parameters":[],"src":"580:0:26"},"scope":4321,"src":"454:127:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"589:616:26","text":" Validate signature of a single userOp.\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"64c530cd","id":4310,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1220:23:26","nodeType":"FunctionDefinition","parameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"userOp","nameLocation":"1277:6:26","nodeType":"VariableDeclaration","scope":4310,"src":"1254:29:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4304,"nodeType":"UserDefinedTypeName","pathNode":{"id":4303,"name":"UserOperation","nameLocations":["1254:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"1254:13:26"},"referencedDeclaration":4659,"src":"1254:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1243:47:26"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1327:12:26","nodeType":"VariableDeclaration","scope":4310,"src":"1314:25:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4307,"name":"bytes","nodeType":"ElementaryTypeName","src":"1314:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1313:27:26"},"scope":4321,"src":"1211:130:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4311,"nodeType":"StructuredDocumentation","src":"1349:393:26","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation.\n @param userOps              - Array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"275e2d79","id":4320,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1757:19:26","nodeType":"FunctionDefinition","parameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"userOps","nameLocation":"1812:7:26","nodeType":"VariableDeclaration","scope":4320,"src":"1787:32:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$4659_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":4313,"nodeType":"UserDefinedTypeName","pathNode":{"id":4312,"name":"UserOperation","nameLocations":["1787:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"1787:13:26"},"referencedDeclaration":4659,"src":"1787:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"id":4314,"nodeType":"ArrayTypeName","src":"1787:15:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$4659_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1776:50:26"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1863:19:26","nodeType":"VariableDeclaration","scope":4320,"src":"1850:32:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4317,"name":"bytes","nodeType":"ElementaryTypeName","src":"1850:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1849:34:26"},"scope":4321,"src":"1748:136:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4322,"src":"145:1742:26","usedErrors":[],"usedEvents":[]}],"src":"37:1852:26"},"id":26},"contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[4321],"IEntryPoint":[4475],"INonceManager":[4494],"IStakeManager":[4633],"UserOperation":[4659]},"id":4476,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4323,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"168:24:27"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":4324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4476,"sourceUnit":4660,"src":"322:29:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":4325,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4476,"sourceUnit":4634,"src":"353:29:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":4326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4476,"sourceUnit":4322,"src":"384:27:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":4327,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4476,"sourceUnit":4495,"src":"413:29:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4328,"name":"IStakeManager","nameLocations":["471:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":4633,"src":"471:13:27"},"id":4329,"nodeType":"InheritanceSpecifier","src":"471:13:27"},{"baseName":{"id":4330,"name":"INonceManager","nameLocations":["486:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":4494,"src":"486:13:27"},"id":4331,"nodeType":"InheritanceSpecifier","src":"486:13:27"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4475,"linearizedBaseContracts":[4475,4494,4633],"name":"IEntryPoint","nameLocation":"456:11:27","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":4347,"name":"UserOperationEvent","nameLocation":"1277:18:27","nodeType":"EventDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1322:10:27","nodeType":"VariableDeclaration","scope":4347,"src":"1306:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1306:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4335,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1359:6:27","nodeType":"VariableDeclaration","scope":4347,"src":"1343:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4334,"name":"address","nodeType":"ElementaryTypeName","src":"1343:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4337,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1392:9:27","nodeType":"VariableDeclaration","scope":4347,"src":"1376:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4336,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4339,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1420:5:27","nodeType":"VariableDeclaration","scope":4347,"src":"1412:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4341,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1441:7:27","nodeType":"VariableDeclaration","scope":4347,"src":"1436:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4340,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4343,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1467:13:27","nodeType":"VariableDeclaration","scope":4347,"src":"1459:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4345,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1499:13:27","nodeType":"VariableDeclaration","scope":4347,"src":"1491:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1295:224:27"},"src":"1271:249:27"},{"anonymous":false,"documentation":{"id":4348,"nodeType":"StructuredDocumentation","src":"1528:355:27","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":4358,"name":"AccountDeployed","nameLocation":"1895:15:27","nodeType":"EventDefinition","parameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1937:10:27","nodeType":"VariableDeclaration","scope":4358,"src":"1921:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1921:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4352,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1974:6:27","nodeType":"VariableDeclaration","scope":4358,"src":"1958:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4351,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4354,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1999:7:27","nodeType":"VariableDeclaration","scope":4358,"src":"1991:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4353,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4356,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"2025:9:27","nodeType":"VariableDeclaration","scope":4358,"src":"2017:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4355,"name":"address","nodeType":"ElementaryTypeName","src":"2017:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1910:131:27"},"src":"1889:153:27"},{"anonymous":false,"documentation":{"id":4359,"nodeType":"StructuredDocumentation","src":"2050:367:27","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":4369,"name":"UserOperationRevertReason","nameLocation":"2429:25:27","nodeType":"EventDefinition","parameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2481:10:27","nodeType":"VariableDeclaration","scope":4369,"src":"2465:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2465:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4363,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2518:6:27","nodeType":"VariableDeclaration","scope":4369,"src":"2502:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4362,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4365,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2543:5:27","nodeType":"VariableDeclaration","scope":4369,"src":"2535:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4367,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2565:12:27","nodeType":"VariableDeclaration","scope":4369,"src":"2559:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4366,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2454:130:27"},"src":"2423:162:27"},{"anonymous":false,"documentation":{"id":4370,"nodeType":"StructuredDocumentation","src":"2593:382:27","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":4380,"name":"PostOpRevertReason","nameLocation":"2987:18:27","nodeType":"EventDefinition","parameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3032:10:27","nodeType":"VariableDeclaration","scope":4380,"src":"3016:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3016:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4374,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3069:6:27","nodeType":"VariableDeclaration","scope":4380,"src":"3053:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4373,"name":"address","nodeType":"ElementaryTypeName","src":"3053:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4376,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3094:5:27","nodeType":"VariableDeclaration","scope":4380,"src":"3086:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4378,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3116:12:27","nodeType":"VariableDeclaration","scope":4380,"src":"3110:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4377,"name":"bytes","nodeType":"ElementaryTypeName","src":"3110:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3005:130:27"},"src":"2981:155:27"},{"anonymous":false,"documentation":{"id":4381,"nodeType":"StructuredDocumentation","src":"3144:161:27","text":" An event emitted by handleOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":4383,"name":"BeforeExecution","nameLocation":"3317:15:27","nodeType":"EventDefinition","parameters":{"id":4382,"nodeType":"ParameterList","parameters":[],"src":"3332:2:27"},"src":"3311:24:27"},{"anonymous":false,"documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"3343:190:27","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":4388,"name":"SignatureAggregatorChanged","nameLocation":"3545:26:27","nodeType":"EventDefinition","parameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3588:10:27","nodeType":"VariableDeclaration","scope":4388,"src":"3572:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4385,"name":"address","nodeType":"ElementaryTypeName","src":"3572:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3571:28:27"},"src":"3539:61:27"},{"documentation":{"id":4389,"nodeType":"StructuredDocumentation","src":"3608:785:27","text":" A custom revert error of handleOps, to identify the offending op.\n Should be caught in off-chain handleOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":4395,"name":"FailedOp","nameLocation":"4405:8:27","nodeType":"ErrorDefinition","parameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"opIndex","nameLocation":"4422:7:27","nodeType":"VariableDeclaration","scope":4395,"src":"4414:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"4414:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4393,"mutability":"mutable","name":"reason","nameLocation":"4438:6:27","nodeType":"VariableDeclaration","scope":4395,"src":"4431:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4392,"name":"string","nodeType":"ElementaryTypeName","src":"4431:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4413:32:27"},"src":"4399:47:27"},{"errorSelector":"ad7954bc","id":4399,"name":"PostOpReverted","nameLocation":"4460:14:27","nodeType":"ErrorDefinition","parameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"returnData","nameLocation":"4481:10:27","nodeType":"VariableDeclaration","scope":4399,"src":"4475:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4396,"name":"bytes","nodeType":"ElementaryTypeName","src":"4475:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4474:18:27"},"src":"4454:39:27"},{"documentation":{"id":4400,"nodeType":"StructuredDocumentation","src":"4501:193:27","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":4404,"name":"SignatureValidationFailed","nameLocation":"4706:25:27","nodeType":"ErrorDefinition","parameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"aggregator","nameLocation":"4740:10:27","nodeType":"VariableDeclaration","scope":4404,"src":"4732:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4401,"name":"address","nodeType":"ElementaryTypeName","src":"4732:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4731:20:27"},"src":"4700:52:27"},{"errorSelector":"6ca7b806","id":4408,"name":"SenderAddressResult","nameLocation":"4808:19:27","nodeType":"ErrorDefinition","parameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"mutability":"mutable","name":"sender","nameLocation":"4836:6:27","nodeType":"VariableDeclaration","scope":4408,"src":"4828:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4405,"name":"address","nodeType":"ElementaryTypeName","src":"4828:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4827:16:27"},"src":"4802:42:27"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":4418,"members":[{"constant":false,"id":4412,"mutability":"mutable","name":"userOps","nameLocation":"4948:7:27","nodeType":"VariableDeclaration","scope":4418,"src":"4932:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$4659_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":4410,"nodeType":"UserDefinedTypeName","pathNode":{"id":4409,"name":"UserOperation","nameLocations":["4932:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"4932:13:27"},"referencedDeclaration":4659,"src":"4932:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"id":4411,"nodeType":"ArrayTypeName","src":"4932:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$4659_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":4415,"mutability":"mutable","name":"aggregator","nameLocation":"5009:10:27","nodeType":"VariableDeclaration","scope":4418,"src":"4997:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$4321","typeString":"contract IAggregator"},"typeName":{"id":4414,"nodeType":"UserDefinedTypeName","pathNode":{"id":4413,"name":"IAggregator","nameLocations":["4997:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":4321,"src":"4997:11:27"},"referencedDeclaration":4321,"src":"4997:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$4321","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":4417,"mutability":"mutable","name":"signature","nameLocation":"5069:9:27","nodeType":"VariableDeclaration","scope":4418,"src":"5063:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4416,"name":"bytes","nodeType":"ElementaryTypeName","src":"5063:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"4900:20:27","nodeType":"StructDefinition","scope":4475,"src":"4893:193:27","visibility":"public"},{"documentation":{"id":4419,"nodeType":"StructuredDocumentation","src":"5094:390:27","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"1fad948c","id":4428,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5499:9:27","nodeType":"FunctionDefinition","parameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"ops","nameLocation":"5544:3:27","nodeType":"VariableDeclaration","scope":4428,"src":"5519:28:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$4659_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":4421,"nodeType":"UserDefinedTypeName","pathNode":{"id":4420,"name":"UserOperation","nameLocations":["5519:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"5519:13:27"},"referencedDeclaration":4659,"src":"5519:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"id":4422,"nodeType":"ArrayTypeName","src":"5519:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$4659_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":4425,"mutability":"mutable","name":"beneficiary","nameLocation":"5574:11:27","nodeType":"VariableDeclaration","scope":4428,"src":"5558:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4424,"name":"address","nodeType":"ElementaryTypeName","src":"5558:15:27","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5508:84:27"},"returnParameters":{"id":4427,"nodeType":"ParameterList","parameters":[],"src":"5601:0:27"},"scope":4475,"src":"5490:112:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4429,"nodeType":"StructuredDocumentation","src":"5610:264:27","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"4b1d7cf5","id":4438,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"5889:19:27","nodeType":"FunctionDefinition","parameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"5951:16:27","nodeType":"VariableDeclaration","scope":4438,"src":"5919:48:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$4418_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":4431,"nodeType":"UserDefinedTypeName","pathNode":{"id":4430,"name":"UserOpsPerAggregator","nameLocations":["5919:20:27"],"nodeType":"IdentifierPath","referencedDeclaration":4418,"src":"5919:20:27"},"referencedDeclaration":4418,"src":"5919:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$4418_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":4432,"nodeType":"ArrayTypeName","src":"5919:22:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$4418_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":4435,"mutability":"mutable","name":"beneficiary","nameLocation":"5994:11:27","nodeType":"VariableDeclaration","scope":4438,"src":"5978:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4434,"name":"address","nodeType":"ElementaryTypeName","src":"5978:15:27","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5908:104:27"},"returnParameters":{"id":4437,"nodeType":"ParameterList","parameters":[],"src":"6021:0:27"},"scope":4475,"src":"5880:142:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4439,"nodeType":"StructuredDocumentation","src":"6030:275:27","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n @param userOp - The user operation to generate the request ID for."},"functionSelector":"a6193531","id":4447,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6320:13:27","nodeType":"FunctionDefinition","parameters":{"id":4443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"userOp","nameLocation":"6367:6:27","nodeType":"VariableDeclaration","scope":4447,"src":"6344:29:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4441,"nodeType":"UserDefinedTypeName","pathNode":{"id":4440,"name":"UserOperation","nameLocations":["6344:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"6344:13:27"},"referencedDeclaration":4659,"src":"6344:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6333:47:27"},"returnParameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4447,"src":"6404:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6404:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6403:9:27"},"scope":4475,"src":"6311:102:27","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":4448,"nodeType":"StructuredDocumentation","src":"6421:641:27","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\n @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\n @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":4461,"members":[{"constant":false,"id":4450,"mutability":"mutable","name":"preOpGas","nameLocation":"7105:8:27","nodeType":"VariableDeclaration","scope":4461,"src":"7097:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"7097:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4452,"mutability":"mutable","name":"prefund","nameLocation":"7132:7:27","nodeType":"VariableDeclaration","scope":4461,"src":"7124:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"sigFailed","nameLocation":"7155:9:27","nodeType":"VariableDeclaration","scope":4461,"src":"7150:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4453,"name":"bool","nodeType":"ElementaryTypeName","src":"7150:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4456,"mutability":"mutable","name":"validAfter","nameLocation":"7182:10:27","nodeType":"VariableDeclaration","scope":4461,"src":"7175:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4455,"name":"uint48","nodeType":"ElementaryTypeName","src":"7175:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":4458,"mutability":"mutable","name":"validUntil","nameLocation":"7210:10:27","nodeType":"VariableDeclaration","scope":4461,"src":"7203:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4457,"name":"uint48","nodeType":"ElementaryTypeName","src":"7203:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":4460,"mutability":"mutable","name":"paymasterContext","nameLocation":"7237:16:27","nodeType":"VariableDeclaration","scope":4461,"src":"7231:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4459,"name":"bytes","nodeType":"ElementaryTypeName","src":"7231:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7075:10:27","nodeType":"StructDefinition","scope":4475,"src":"7068:193:27","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":4462,"nodeType":"StructuredDocumentation","src":"7269:127:27","text":" Returned aggregated signature info:\n The aggregator returned by the account, and its current stake."},"id":4468,"members":[{"constant":false,"id":4464,"mutability":"mutable","name":"aggregator","nameLocation":"7448:10:27","nodeType":"VariableDeclaration","scope":4468,"src":"7440:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4463,"name":"address","nodeType":"ElementaryTypeName","src":"7440:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"stakeInfo","nameLocation":"7479:9:27","nodeType":"VariableDeclaration","scope":4468,"src":"7469:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4585_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":4466,"nodeType":"UserDefinedTypeName","pathNode":{"id":4465,"name":"StakeInfo","nameLocations":["7469:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":4585,"src":"7469:9:27"},"referencedDeclaration":4585,"src":"7469:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4585_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7409:19:27","nodeType":"StructDefinition","scope":4475,"src":"7402:94:27","visibility":"public"},{"documentation":{"id":4469,"nodeType":"StructuredDocumentation","src":"7504:343:27","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":4474,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"7862:16:27","nodeType":"FunctionDefinition","parameters":{"id":4472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4471,"mutability":"mutable","name":"initCode","nameLocation":"7892:8:27","nodeType":"VariableDeclaration","scope":4474,"src":"7879:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4470,"name":"bytes","nodeType":"ElementaryTypeName","src":"7879:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7878:23:27"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[],"src":"7910:0:27"},"scope":4475,"src":"7853:58:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4476,"src":"446:7470:27","usedErrors":[4395,4399,4404,4408],"usedEvents":[4347,4358,4369,4380,4383,4388,4538,4546,4554,4560,4568]}],"src":"168:7750:27"},"id":27},"contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[4494]},"id":4495,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4477,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4494,"linearizedBaseContracts":[4494],"name":"INonceManager","nameLocation":"75:13:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4478,"nodeType":"StructuredDocumentation","src":"98:424:28","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":4487,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"537:8:28","nodeType":"FunctionDefinition","parameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"sender","nameLocation":"554:6:28","nodeType":"VariableDeclaration","scope":4487,"src":"546:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4479,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4482,"mutability":"mutable","name":"key","nameLocation":"570:3:28","nodeType":"VariableDeclaration","scope":4487,"src":"562:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4481,"name":"uint192","nodeType":"ElementaryTypeName","src":"562:7:28","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"545:29:28"},"returnParameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"nonce","nameLocation":"611:5:28","nodeType":"VariableDeclaration","scope":4487,"src":"603:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"602:15:28"},"scope":4494,"src":"528:90:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4488,"nodeType":"StructuredDocumentation","src":"626:456:28","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":4493,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1097:14:28","nodeType":"FunctionDefinition","parameters":{"id":4491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4490,"mutability":"mutable","name":"key","nameLocation":"1120:3:28","nodeType":"VariableDeclaration","scope":4493,"src":"1112:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4489,"name":"uint192","nodeType":"ElementaryTypeName","src":"1112:7:28","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1111:13:28"},"returnParameters":{"id":4492,"nodeType":"ParameterList","parameters":[],"src":"1133:0:28"},"scope":4494,"src":"1088:46:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4495,"src":"65:1072:28","usedErrors":[],"usedEvents":[]}],"src":"37:1102:28"},"id":28},"contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[4529],"UserOperation":[4659]},"id":4530,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4496,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:29"},{"absolutePath":"contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":4497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4530,"sourceUnit":4660,"src":"65:29:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":4498,"nodeType":"StructuredDocumentation","src":"98:219:29","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":4529,"linearizedBaseContracts":[4529],"name":"IPaymaster","nameLocation":"329:10:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":4502,"members":[{"id":4499,"name":"opSucceeded","nameLocation":"405:11:29","nodeType":"EnumValue","src":"405:11:29"},{"id":4500,"name":"opReverted","nameLocation":"483:10:29","nodeType":"EnumValue","src":"483:10:29"},{"id":4501,"name":"postOpReverted","nameLocation":"654:14:29","nodeType":"EnumValue","src":"654:14:29"}],"name":"PostOpMode","nameLocation":"352:10:29","nodeType":"EnumDefinition","src":"347:328:29"},{"documentation":{"id":4503,"nodeType":"StructuredDocumentation","src":"683:1458:29","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                                    otherwise, an address of an \"authorizer\" contract.\n                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"f465c77e","id":4517,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2156:23:29","nodeType":"FunctionDefinition","parameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4506,"mutability":"mutable","name":"userOp","nameLocation":"2213:6:29","nodeType":"VariableDeclaration","scope":4517,"src":"2190:29:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4505,"nodeType":"UserDefinedTypeName","pathNode":{"id":4504,"name":"UserOperation","nameLocations":["2190:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"2190:13:29"},"referencedDeclaration":4659,"src":"2190:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":4508,"mutability":"mutable","name":"userOpHash","nameLocation":"2238:10:29","nodeType":"VariableDeclaration","scope":4517,"src":"2230:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2230:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4510,"mutability":"mutable","name":"maxCost","nameLocation":"2267:7:29","nodeType":"VariableDeclaration","scope":4517,"src":"2259:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"2259:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2179:102:29"},"returnParameters":{"id":4516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4513,"mutability":"mutable","name":"context","nameLocation":"2313:7:29","nodeType":"VariableDeclaration","scope":4517,"src":"2300:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4512,"name":"bytes","nodeType":"ElementaryTypeName","src":"2300:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4515,"mutability":"mutable","name":"validationData","nameLocation":"2330:14:29","nodeType":"VariableDeclaration","scope":4517,"src":"2322:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4514,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2299:46:29"},"scope":4529,"src":"2147:199:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4518,"nodeType":"StructuredDocumentation","src":"2354:716:29","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call)."},"functionSelector":"a9a23409","id":4528,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3085:6:29","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"mutability":"mutable","name":"mode","nameLocation":"3113:4:29","nodeType":"VariableDeclaration","scope":4528,"src":"3102:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4502","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":4520,"nodeType":"UserDefinedTypeName","pathNode":{"id":4519,"name":"PostOpMode","nameLocations":["3102:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":4502,"src":"3102:10:29"},"referencedDeclaration":4502,"src":"3102:10:29","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4502","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":4523,"mutability":"mutable","name":"context","nameLocation":"3143:7:29","nodeType":"VariableDeclaration","scope":4528,"src":"3128:22:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4522,"name":"bytes","nodeType":"ElementaryTypeName","src":"3128:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4525,"mutability":"mutable","name":"actualGasCost","nameLocation":"3169:13:29","nodeType":"VariableDeclaration","scope":4528,"src":"3161:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"3161:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3091:98:29"},"returnParameters":{"id":4527,"nodeType":"ParameterList","parameters":[],"src":"3198:0:29"},"scope":4529,"src":"3076:123:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4530,"src":"319:2883:29","usedErrors":[],"usedEvents":[]}],"src":"37:3167:29"},"id":29},"contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[4633]},"id":4634,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":4531,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"42:24:30"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":4532,"nodeType":"StructuredDocumentation","src":"70:216:30","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":4633,"linearizedBaseContracts":[4633],"name":"IStakeManager","nameLocation":"298:13:30","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":4538,"name":"Deposited","nameLocation":"325:9:30","nodeType":"EventDefinition","parameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4534,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"351:7:30","nodeType":"VariableDeclaration","scope":4538,"src":"335:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4533,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4536,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"368:12:30","nodeType":"VariableDeclaration","scope":4538,"src":"360:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"334:47:30"},"src":"319:63:30"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":4546,"name":"Withdrawn","nameLocation":"396:9:30","nodeType":"EventDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"432:7:30","nodeType":"VariableDeclaration","scope":4546,"src":"416:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4539,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4542,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"458:15:30","nodeType":"VariableDeclaration","scope":4546,"src":"450:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4541,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4544,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"492:6:30","nodeType":"VariableDeclaration","scope":4546,"src":"484:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:100:30"},"src":"390:116:30"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":4554,"name":"StakeLocked","nameLocation":"578:11:30","nodeType":"EventDefinition","parameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"616:7:30","nodeType":"VariableDeclaration","scope":4554,"src":"600:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4547,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4550,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"642:11:30","nodeType":"VariableDeclaration","scope":4554,"src":"634:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4552,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"672:15:30","nodeType":"VariableDeclaration","scope":4554,"src":"664:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"589:105:30"},"src":"572:123:30"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":4560,"name":"StakeUnlocked","nameLocation":"767:13:30","nodeType":"EventDefinition","parameters":{"id":4559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"797:7:30","nodeType":"VariableDeclaration","scope":4560,"src":"781:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4555,"name":"address","nodeType":"ElementaryTypeName","src":"781:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4558,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"814:12:30","nodeType":"VariableDeclaration","scope":4560,"src":"806:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"780:47:30"},"src":"761:67:30"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":4568,"name":"StakeWithdrawn","nameLocation":"842:14:30","nodeType":"EventDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"883:7:30","nodeType":"VariableDeclaration","scope":4568,"src":"867:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4561,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4564,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"909:15:30","nodeType":"VariableDeclaration","scope":4568,"src":"901:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4563,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4566,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"943:6:30","nodeType":"VariableDeclaration","scope":4568,"src":"935:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"856:100:30"},"src":"836:121:30"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":4569,"nodeType":"StructuredDocumentation","src":"965:697:30","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n      and the rest fit into a 2nd cell.\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":4580,"members":[{"constant":false,"id":4571,"mutability":"mutable","name":"deposit","nameLocation":"1706:7:30","nodeType":"VariableDeclaration","scope":4580,"src":"1698:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4570,"name":"uint112","nodeType":"ElementaryTypeName","src":"1698:7:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":4573,"mutability":"mutable","name":"staked","nameLocation":"1729:6:30","nodeType":"VariableDeclaration","scope":4580,"src":"1724:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4572,"name":"bool","nodeType":"ElementaryTypeName","src":"1724:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"stake","nameLocation":"1754:5:30","nodeType":"VariableDeclaration","scope":4580,"src":"1746:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4574,"name":"uint112","nodeType":"ElementaryTypeName","src":"1746:7:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":4577,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1777:15:30","nodeType":"VariableDeclaration","scope":4580,"src":"1770:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4576,"name":"uint32","nodeType":"ElementaryTypeName","src":"1770:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4579,"mutability":"mutable","name":"withdrawTime","nameLocation":"1810:12:30","nodeType":"VariableDeclaration","scope":4580,"src":"1803:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4578,"name":"uint48","nodeType":"ElementaryTypeName","src":"1803:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1675:11:30","nodeType":"StructDefinition","scope":4633,"src":"1668:162:30","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":4585,"members":[{"constant":false,"id":4582,"mutability":"mutable","name":"stake","nameLocation":"1938:5:30","nodeType":"VariableDeclaration","scope":4585,"src":"1930:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4584,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1962:15:30","nodeType":"VariableDeclaration","scope":4585,"src":"1954:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1954:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1909:9:30","nodeType":"StructDefinition","scope":4633,"src":"1902:83:30","visibility":"public"},{"documentation":{"id":4586,"nodeType":"StructuredDocumentation","src":"1993:153:30","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":4594,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2161:14:30","nodeType":"FunctionDefinition","parameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"account","nameLocation":"2194:7:30","nodeType":"VariableDeclaration","scope":4594,"src":"2186:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4587,"name":"address","nodeType":"ElementaryTypeName","src":"2186:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2175:33:30"},"returnParameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4592,"mutability":"mutable","name":"info","nameLocation":"2251:4:30","nodeType":"VariableDeclaration","scope":4594,"src":"2232:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$4580_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":4591,"nodeType":"UserDefinedTypeName","pathNode":{"id":4590,"name":"DepositInfo","nameLocations":["2232:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":4580,"src":"2232:11:30"},"referencedDeclaration":4580,"src":"2232:11:30","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$4580_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2231:25:30"},"scope":4633,"src":"2152:105:30","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4595,"nodeType":"StructuredDocumentation","src":"2265:159:30","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":4602,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2439:9:30","nodeType":"FunctionDefinition","parameters":{"id":4598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"mutability":"mutable","name":"account","nameLocation":"2457:7:30","nodeType":"VariableDeclaration","scope":4602,"src":"2449:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4596,"name":"address","nodeType":"ElementaryTypeName","src":"2449:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2448:17:30"},"returnParameters":{"id":4601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4602,"src":"2489:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2488:9:30"},"scope":4633,"src":"2430:68:30","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"2506:109:30","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":4608,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2630:9:30","nodeType":"FunctionDefinition","parameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"account","nameLocation":"2648:7:30","nodeType":"VariableDeclaration","scope":4608,"src":"2640:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4604,"name":"address","nodeType":"ElementaryTypeName","src":"2640:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2639:17:30"},"returnParameters":{"id":4607,"nodeType":"ParameterList","parameters":[],"src":"2673:0:30"},"scope":4633,"src":"2621:53:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":4609,"nodeType":"StructuredDocumentation","src":"2682:207:30","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":4614,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2904:8:30","nodeType":"FunctionDefinition","parameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2920:16:30","nodeType":"VariableDeclaration","scope":4614,"src":"2913:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4610,"name":"uint32","nodeType":"ElementaryTypeName","src":"2913:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2912:25:30"},"returnParameters":{"id":4613,"nodeType":"ParameterList","parameters":[],"src":"2954:0:30"},"scope":4633,"src":"2895:60:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":4615,"nodeType":"StructuredDocumentation","src":"2963:131:30","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":4618,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3109:11:30","nodeType":"FunctionDefinition","parameters":{"id":4616,"nodeType":"ParameterList","parameters":[],"src":"3120:2:30"},"returnParameters":{"id":4617,"nodeType":"ParameterList","parameters":[],"src":"3131:0:30"},"scope":4633,"src":"3100:32:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4619,"nodeType":"StructuredDocumentation","src":"3140:201:30","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":4624,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3356:13:30","nodeType":"FunctionDefinition","parameters":{"id":4622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3386:15:30","nodeType":"VariableDeclaration","scope":4624,"src":"3370:31:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4620,"name":"address","nodeType":"ElementaryTypeName","src":"3370:15:30","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3369:33:30"},"returnParameters":{"id":4623,"nodeType":"ParameterList","parameters":[],"src":"3411:0:30"},"scope":4633,"src":"3347:65:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4625,"nodeType":"StructuredDocumentation","src":"3420:174:30","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":4632,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3609:10:30","nodeType":"FunctionDefinition","parameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3646:15:30","nodeType":"VariableDeclaration","scope":4632,"src":"3630:31:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4626,"name":"address","nodeType":"ElementaryTypeName","src":"3630:15:30","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4629,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3680:14:30","nodeType":"VariableDeclaration","scope":4632,"src":"3672:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3672:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:82:30"},"returnParameters":{"id":4631,"nodeType":"ParameterList","parameters":[],"src":"3710:0:30"},"scope":4633,"src":"3600:111:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4634,"src":"288:3426:30","usedErrors":[],"usedEvents":[4538,4546,4554,4560,4568]}],"src":"42:3674:30"},"id":30},"contracts/interfaces/UserOperation.sol":{"ast":{"absolutePath":"contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[4659]},"id":4660,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4635,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:31"},{"canonicalName":"UserOperation","documentation":{"id":4636,"nodeType":"StructuredDocumentation","src":"65:1193:31","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor/\n @param callData              - The method call to execute on this account.\n @param callGasLimit          - The gas limit passed to the callData method call.\n @param verificationGasLimit  - Gas used for validateUserOp and validatePaymasterUserOp.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param maxFeePerGas          - Same as EIP-1559 gas parameter.\n @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\n @param paymasterAndData      - If set, this field holds the paymaster address and paymaster-specific data.\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":4659,"members":[{"constant":false,"id":4638,"mutability":"mutable","name":"sender","nameLocation":"1296:6:31","nodeType":"VariableDeclaration","scope":4659,"src":"1288:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4637,"name":"address","nodeType":"ElementaryTypeName","src":"1288:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4640,"mutability":"mutable","name":"nonce","nameLocation":"1317:5:31","nodeType":"VariableDeclaration","scope":4659,"src":"1309:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4642,"mutability":"mutable","name":"initCode","nameLocation":"1335:8:31","nodeType":"VariableDeclaration","scope":4659,"src":"1329:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4641,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4644,"mutability":"mutable","name":"callData","nameLocation":"1356:8:31","nodeType":"VariableDeclaration","scope":4659,"src":"1350:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4643,"name":"bytes","nodeType":"ElementaryTypeName","src":"1350:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4646,"mutability":"mutable","name":"callGasLimit","nameLocation":"1379:12:31","nodeType":"VariableDeclaration","scope":4659,"src":"1371:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4648,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1406:20:31","nodeType":"VariableDeclaration","scope":4659,"src":"1398:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1398:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1441:18:31","nodeType":"VariableDeclaration","scope":4659,"src":"1433:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1474:12:31","nodeType":"VariableDeclaration","scope":4659,"src":"1466:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1466:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4654,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1501:20:31","nodeType":"VariableDeclaration","scope":4659,"src":"1493:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4656,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1534:16:31","nodeType":"VariableDeclaration","scope":4659,"src":"1528:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4655,"name":"bytes","nodeType":"ElementaryTypeName","src":"1528:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4658,"mutability":"mutable","name":"signature","nameLocation":"1563:9:31","nodeType":"VariableDeclaration","scope":4659,"src":"1557:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4657,"name":"bytes","nodeType":"ElementaryTypeName","src":"1557:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1267:13:31","nodeType":"StructDefinition","scope":4660,"src":"1260:316:31","visibility":"public"}],"src":"37:1541:31"},"id":31},"contracts/utils/SimpleAccount.sol":{"ast":{"absolutePath":"contracts/utils/SimpleAccount.sol","exportedSymbols":{"BaseAccount":[3624],"ECDSA":[2115],"ERC1967Utils":[498],"IAccount":[4287],"IAggregator":[4321],"IERC1155Receiver":[1006],"IERC165":[2201],"IERC1822Proxiable":[157],"IERC721Receiver":[1024],"IEntryPoint":[4475],"INonceManager":[4494],"IStakeManager":[4633],"Initializable":[798],"MessageHashUtils":[2189],"SimpleAccount":[5034],"Strings":[1767],"TokenCallbackHandler":[3480],"UUPSUpgradeable":[964],"UserOperation":[4659],"UserOperationLib":[4270],"ValidationData":[3859],"_intersectTimeRange":[4005],"_packValidationData":[4042,4080],"_parseValidationData":[3919],"calldataKeccak":[4090]},"id":5035,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4661,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:32"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":4662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5035,"sourceUnit":2190,"src":"191:73:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":4663,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5035,"sourceUnit":2116,"src":"266:62:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":4664,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5035,"sourceUnit":799,"src":"332:63:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","id":4665,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5035,"sourceUnit":965,"src":"397:65:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/BaseAccount.sol","file":"../core/BaseAccount.sol","id":4666,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5035,"sourceUnit":3625,"src":"466:33:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/callback/TokenCallbackHandler.sol","file":"../callback/TokenCallbackHandler.sol","id":4667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5035,"sourceUnit":3481,"src":"501:46:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4669,"name":"BaseAccount","nameLocations":["761:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":3624,"src":"761:11:32"},"id":4670,"nodeType":"InheritanceSpecifier","src":"761:11:32"},{"baseName":{"id":4671,"name":"TokenCallbackHandler","nameLocations":["774:20:32"],"nodeType":"IdentifierPath","referencedDeclaration":3480,"src":"774:20:32"},"id":4672,"nodeType":"InheritanceSpecifier","src":"774:20:32"},{"baseName":{"id":4673,"name":"UUPSUpgradeable","nameLocations":["796:15:32"],"nodeType":"IdentifierPath","referencedDeclaration":964,"src":"796:15:32"},"id":4674,"nodeType":"InheritanceSpecifier","src":"796:15:32"},{"baseName":{"id":4675,"name":"Initializable","nameLocations":["813:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"813:13:32"},"id":4676,"nodeType":"InheritanceSpecifier","src":"813:13:32"}],"canonicalName":"SimpleAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"551:182:32","text":" minimal account.\n  this is sample minimal account.\n  has execute, eth handling methods\n  has a single signer that can send requests through the entryPoint."},"fullyImplemented":true,"id":5034,"linearizedBaseContracts":[5034,798,964,157,3480,1006,2201,1024,3624,4287],"name":"SimpleAccount","nameLocation":"744:13:32","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4679,"libraryName":{"id":4677,"name":"MessageHashUtils","nameLocations":["842:16:32"],"nodeType":"IdentifierPath","referencedDeclaration":2189,"src":"842:16:32"},"nodeType":"UsingForDirective","src":"836:35:32","typeName":{"id":4678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"863:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":4682,"libraryName":{"id":4680,"name":"ECDSA","nameLocations":["883:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":2115,"src":"883:5:32"},"nodeType":"UsingForDirective","src":"877:24:32","typeName":{"id":4681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"893:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"functionSelector":"8da5cb5b","id":4684,"mutability":"mutable","name":"owner","nameLocation":"924:5:32","nodeType":"VariableDeclaration","scope":5034,"src":"909:20:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4683,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":4687,"mutability":"immutable","name":"_entryPoint","nameLocation":"968:11:32","nodeType":"VariableDeclaration","scope":5034,"src":"938:41:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"},"typeName":{"id":4686,"nodeType":"UserDefinedTypeName","pathNode":{"id":4685,"name":"IEntryPoint","nameLocations":["938:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":4475,"src":"938:11:32"},"referencedDeclaration":4475,"src":"938:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"visibility":"private"},{"anonymous":false,"eventSelector":"47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de","id":4694,"name":"SimpleAccountInitialized","nameLocation":"994:24:32","nodeType":"EventDefinition","parameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"indexed":true,"mutability":"mutable","name":"entryPoint","nameLocation":"1039:10:32","nodeType":"VariableDeclaration","scope":4694,"src":"1019:30:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"},"typeName":{"id":4689,"nodeType":"UserDefinedTypeName","pathNode":{"id":4688,"name":"IEntryPoint","nameLocations":["1019:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":4475,"src":"1019:11:32"},"referencedDeclaration":4475,"src":"1019:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":4692,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1067:5:32","nodeType":"VariableDeclaration","scope":4694,"src":"1051:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4691,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1018:55:32"},"src":"988:86:32"},{"body":{"id":4700,"nodeType":"Block","src":"1103:43:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4696,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"1114:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1114:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4698,"nodeType":"ExpressionStatement","src":"1114:12:32"},{"id":4699,"nodeType":"PlaceholderStatement","src":"1137:1:32"}]},"id":4701,"name":"onlyOwner","nameLocation":"1091:9:32","nodeType":"ModifierDefinition","parameters":{"id":4695,"nodeType":"ParameterList","parameters":[],"src":"1100:2:32"},"src":"1082:64:32","virtual":false,"visibility":"internal"},{"baseFunctions":[3521],"body":{"id":4711,"nodeType":"Block","src":"1260:37:32","statements":[{"expression":{"id":4709,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"1278:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"functionReturnParameters":4708,"id":4710,"nodeType":"Return","src":"1271:18:32"}]},"documentation":{"id":4702,"nodeType":"StructuredDocumentation","src":"1154:27:32","text":"@inheritdoc BaseAccount"},"functionSelector":"b0d691fe","id":4712,"implemented":true,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1196:10:32","nodeType":"FunctionDefinition","overrides":{"id":4704,"nodeType":"OverrideSpecifier","overrides":[],"src":"1229:8:32"},"parameters":{"id":4703,"nodeType":"ParameterList","parameters":[],"src":"1206:2:32"},"returnParameters":{"id":4708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4712,"src":"1247:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"},"typeName":{"id":4706,"nodeType":"UserDefinedTypeName","pathNode":{"id":4705,"name":"IEntryPoint","nameLocations":["1247:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":4475,"src":"1247:11:32"},"referencedDeclaration":4475,"src":"1247:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1246:13:32"},"scope":5034,"src":"1187:110:32","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4715,"nodeType":"Block","src":"1384:2:32","statements":[]},"id":4716,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4713,"nodeType":"ParameterList","parameters":[],"src":"1364:2:32"},"returnParameters":{"id":4714,"nodeType":"ParameterList","parameters":[],"src":"1384:0:32"},"scope":5034,"src":"1357:29:32","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4729,"nodeType":"Block","src":"1432:78:32","statements":[{"expression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4722,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"1443:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4723,"name":"anEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"1457:12:32","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"src":"1443:26:32","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":4725,"nodeType":"ExpressionStatement","src":"1443:26:32"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4726,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"1480:20:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1480:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4728,"nodeType":"ExpressionStatement","src":"1480:22:32"}]},"id":4730,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4719,"mutability":"mutable","name":"anEntryPoint","nameLocation":"1418:12:32","nodeType":"VariableDeclaration","scope":4730,"src":"1406:24:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"},"typeName":{"id":4718,"nodeType":"UserDefinedTypeName","pathNode":{"id":4717,"name":"IEntryPoint","nameLocations":["1406:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":4475,"src":"1406:11:32"},"referencedDeclaration":4475,"src":"1406:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1405:26:32"},"returnParameters":{"id":4721,"nodeType":"ParameterList","parameters":[],"src":"1432:0:32"},"scope":5034,"src":"1394:116:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4749,"nodeType":"Block","src":"1554:200:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4734,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1681:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1685:6:32","memberName":"sender","nodeType":"MemberAccess","src":"1681:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4736,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"1695:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1681:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4738,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1704:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1708:6:32","memberName":"sender","nodeType":"MemberAccess","src":"1704:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4742,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1726:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}],"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1718:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4740,"name":"address","nodeType":"ElementaryTypeName","src":"1718:7:32","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1704:27:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1681:50:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79206f776e6572","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1733:12:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","typeString":"literal_string \"only owner\""},"value":"only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","typeString":"literal_string \"only owner\""}],"id":4733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1673:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:73:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4748,"nodeType":"ExpressionStatement","src":"1673:73:32"}]},"id":4750,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwner","nameLocation":"1527:10:32","nodeType":"FunctionDefinition","parameters":{"id":4731,"nodeType":"ParameterList","parameters":[],"src":"1537:2:32"},"returnParameters":{"id":4732,"nodeType":"ParameterList","parameters":[],"src":"1554:0:32"},"scope":5034,"src":"1518:236:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4769,"nodeType":"Block","src":"1933:85:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4760,"name":"_requireFromEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"1944:29:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4762,"nodeType":"ExpressionStatement","src":"1944:31:32"},{"expression":{"arguments":[{"id":4764,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"1992:4:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"1998:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4766,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"2005:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4763,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"1986:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1986:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4768,"nodeType":"ExpressionStatement","src":"1986:24:32"}]},"documentation":{"id":4751,"nodeType":"StructuredDocumentation","src":"1762:89:32","text":" execute a transaction (called directly from owner, or by entryPoint)"},"functionSelector":"b61d27f6","id":4770,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1866:7:32","nodeType":"FunctionDefinition","parameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"dest","nameLocation":"1882:4:32","nodeType":"VariableDeclaration","scope":4770,"src":"1874:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4752,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4755,"mutability":"mutable","name":"value","nameLocation":"1896:5:32","nodeType":"VariableDeclaration","scope":4770,"src":"1888:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4757,"mutability":"mutable","name":"func","nameLocation":"1918:4:32","nodeType":"VariableDeclaration","scope":4770,"src":"1903:19:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4756,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1873:50:32"},"returnParameters":{"id":4759,"nodeType":"ParameterList","parameters":[],"src":"1933:0:32"},"scope":5034,"src":"1857:161:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4862,"nodeType":"Block","src":"2303:477:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4783,"name":"_requireFromEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"2314:29:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4785,"nodeType":"ExpressionStatement","src":"2314:31:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4787,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"2364:4:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2369:6:32","memberName":"length","nodeType":"MemberAccess","src":"2364:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4789,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"2379:4:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2384:6:32","memberName":"length","nodeType":"MemberAccess","src":"2379:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2364:26:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"2395:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2401:6:32","memberName":"length","nodeType":"MemberAccess","src":"2395:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2411:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2395:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"2416:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2422:6:32","memberName":"length","nodeType":"MemberAccess","src":"2416:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4798,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"2432:4:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2437:6:32","memberName":"length","nodeType":"MemberAccess","src":"2432:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2416:27:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2395:48:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2394:50:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2364:80:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77726f6e67206172726179206c656e67746873","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2446:21:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e","typeString":"literal_string \"wrong array lengths\""},"value":"wrong array lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e","typeString":"literal_string \"wrong array lengths\""}],"id":4786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2356:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:112:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4806,"nodeType":"ExpressionStatement","src":"2356:112:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"2483:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2489:6:32","memberName":"length","nodeType":"MemberAccess","src":"2483:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2499:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2483:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4860,"nodeType":"Block","src":"2637:136:32","statements":[{"body":{"id":4858,"nodeType":"Block","src":"2694:68:32","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4847,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"2719:4:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4849,"indexExpression":{"id":4848,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"2724:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2719:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"2728:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4852,"indexExpression":{"id":4851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"2734:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2728:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4853,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"2738:4:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":4855,"indexExpression":{"id":4854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"2743:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2738:7:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4846,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"2713:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:33:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4857,"nodeType":"ExpressionStatement","src":"2713:33:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"2672:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4840,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"2676:4:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2681:6:32","memberName":"length","nodeType":"MemberAccess","src":"2676:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2672:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4859,"initializationExpression":{"assignments":[4836],"declarations":[{"constant":false,"id":4836,"mutability":"mutable","name":"i","nameLocation":"2665:1:32","nodeType":"VariableDeclaration","scope":4859,"src":"2657:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2657:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4838,"initialValue":{"hexValue":"30","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2657:13:32"},"loopExpression":{"expression":{"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2689:3:32","subExpression":{"id":4843,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"2689:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4845,"nodeType":"ExpressionStatement","src":"2689:3:32"},"nodeType":"ForStatement","src":"2652:110:32"}]},"id":4861,"nodeType":"IfStatement","src":"2479:294:32","trueBody":{"id":4834,"nodeType":"Block","src":"2502:129:32","statements":[{"body":{"id":4832,"nodeType":"Block","src":"2559:61:32","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4823,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"2584:4:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4825,"indexExpression":{"id":4824,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"2589:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2584:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2593:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"baseExpression":{"id":4827,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"2596:4:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":4829,"indexExpression":{"id":4828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"2601:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2596:7:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4822,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"2578:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2578:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4831,"nodeType":"ExpressionStatement","src":"2578:26:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"2537:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4816,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"2541:4:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2546:6:32","memberName":"length","nodeType":"MemberAccess","src":"2541:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2537:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4833,"initializationExpression":{"assignments":[4812],"declarations":[{"constant":false,"id":4812,"mutability":"mutable","name":"i","nameLocation":"2530:1:32","nodeType":"VariableDeclaration","scope":4833,"src":"2522:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2522:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4814,"initialValue":{"hexValue":"30","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2534:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2522:13:32"},"loopExpression":{"expression":{"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2554:3:32","subExpression":{"id":4819,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"2554:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4821,"nodeType":"ExpressionStatement","src":"2554:3:32"},"nodeType":"ForStatement","src":"2517:103:32"}]}}]},"documentation":{"id":4771,"nodeType":"StructuredDocumentation","src":"2026:166:32","text":" execute a sequence of transactions\n @dev to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value"},"functionSelector":"47e1da2a","id":4863,"implemented":true,"kind":"function","modifiers":[],"name":"executeBatch","nameLocation":"2207:12:32","nodeType":"FunctionDefinition","parameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"dest","nameLocation":"2239:4:32","nodeType":"VariableDeclaration","scope":4863,"src":"2220:23:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4772,"name":"address","nodeType":"ElementaryTypeName","src":"2220:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4773,"nodeType":"ArrayTypeName","src":"2220:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4777,"mutability":"mutable","name":"value","nameLocation":"2264:5:32","nodeType":"VariableDeclaration","scope":4863,"src":"2245:24:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2245:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4776,"nodeType":"ArrayTypeName","src":"2245:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4780,"mutability":"mutable","name":"func","nameLocation":"2288:4:32","nodeType":"VariableDeclaration","scope":4863,"src":"2271:21:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4778,"name":"bytes","nodeType":"ElementaryTypeName","src":"2271:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4779,"nodeType":"ArrayTypeName","src":"2271:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2219:74:32"},"returnParameters":{"id":4782,"nodeType":"ParameterList","parameters":[],"src":"2303:0:32"},"scope":5034,"src":"2198:582:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4875,"nodeType":"Block","src":"3135:39:32","statements":[{"expression":{"arguments":[{"id":4872,"name":"anOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"3158:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4871,"name":"_initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"3146:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3146:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4874,"nodeType":"ExpressionStatement","src":"3146:20:32"}]},"documentation":{"id":4864,"nodeType":"StructuredDocumentation","src":"2788:277:32","text":" @dev The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint,\n a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading\n the implementation by calling `upgradeTo()`"},"functionSelector":"c4d66de8","id":4876,"implemented":true,"kind":"function","modifiers":[{"id":4869,"kind":"modifierInvocation","modifierName":{"id":4868,"name":"initializer","nameLocations":["3123:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":652,"src":"3123:11:32"},"nodeType":"ModifierInvocation","src":"3123:11:32"}],"name":"initialize","nameLocation":"3080:10:32","nodeType":"FunctionDefinition","parameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"anOwner","nameLocation":"3099:7:32","nodeType":"VariableDeclaration","scope":4876,"src":"3091:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4865,"name":"address","nodeType":"ElementaryTypeName","src":"3091:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3090:17:32"},"returnParameters":{"id":4870,"nodeType":"ParameterList","parameters":[],"src":"3135:0:32"},"scope":5034,"src":"3071:103:32","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4890,"nodeType":"Block","src":"3237:94:32","statements":[{"expression":{"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4881,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"3248:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4882,"name":"anOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"3256:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3248:15:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4884,"nodeType":"ExpressionStatement","src":"3248:15:32"},{"eventCall":{"arguments":[{"id":4886,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"3304:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},{"id":4887,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"3317:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4885,"name":"SimpleAccountInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"3279:24:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IEntryPoint_$4475_$_t_address_$returns$__$","typeString":"function (contract IEntryPoint,address)"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:44:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4889,"nodeType":"EmitStatement","src":"3274:49:32"}]},"id":4891,"implemented":true,"kind":"function","modifiers":[],"name":"_initialize","nameLocation":"3191:11:32","nodeType":"FunctionDefinition","parameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"anOwner","nameLocation":"3211:7:32","nodeType":"VariableDeclaration","scope":4891,"src":"3203:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4877,"name":"address","nodeType":"ElementaryTypeName","src":"3203:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3202:17:32"},"returnParameters":{"id":4880,"nodeType":"ParameterList","parameters":[],"src":"3237:0:32"},"scope":5034,"src":"3182:149:32","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4911,"nodeType":"Block","src":"3461:122:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4895,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3480:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3484:6:32","memberName":"sender","nodeType":"MemberAccess","src":"3480:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4899,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4712],"referencedDeclaration":4712,"src":"3502:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4475_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3502:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}],"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3494:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4897,"name":"address","nodeType":"ElementaryTypeName","src":"3494:7:32","typeDescriptions":{}}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3494:21:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3480:35:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4903,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3519:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3523:6:32","memberName":"sender","nodeType":"MemberAccess","src":"3519:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4905,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"3533:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3519:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3480:58:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3540:34:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","typeString":"literal_string \"account: not Owner or EntryPoint\""},"value":"account: not Owner or EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","typeString":"literal_string \"account: not Owner or EntryPoint\""}],"id":4894,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3472:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3472:103:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4910,"nodeType":"ExpressionStatement","src":"3472:103:32"}]},"id":4912,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPointOrOwner","nameLocation":"3415:29:32","nodeType":"FunctionDefinition","parameters":{"id":4892,"nodeType":"ParameterList","parameters":[],"src":"3444:2:32"},"returnParameters":{"id":4893,"nodeType":"ParameterList","parameters":[],"src":"3461:0:32"},"scope":5034,"src":"3406:177:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[3583],"body":{"id":4942,"nodeType":"Block","src":"3787:185:32","statements":[{"assignments":[4925],"declarations":[{"constant":false,"id":4925,"mutability":"mutable","name":"hash","nameLocation":"3806:4:32","nodeType":"VariableDeclaration","scope":4942,"src":"3798:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3798:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4929,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4926,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"3813:10:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3824:22:32","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":2130,"src":"3813:33:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3813:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3798:50:32"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"3863:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"expression":{"id":4933,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"3885:6:32","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3892:9:32","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":4658,"src":"3885:16:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4931,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"3872:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3877:7:32","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1871,"src":"3872:12:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3872:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3863:39:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4939,"nodeType":"IfStatement","src":"3859:86:32","trueBody":{"expression":{"id":4937,"name":"SIG_VALIDATION_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"3924:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4923,"id":4938,"nodeType":"Return","src":"3917:28:32"}},{"expression":{"hexValue":"30","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3963:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4923,"id":4941,"nodeType":"Return","src":"3956:8:32"}]},"documentation":{"id":4913,"nodeType":"StructuredDocumentation","src":"3595:44:32","text":"implement template method of BaseAccount"},"id":4943,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"3654:18:32","nodeType":"FunctionDefinition","overrides":{"id":4920,"nodeType":"OverrideSpecifier","overrides":[],"src":"3737:8:32"},"parameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4916,"mutability":"mutable","name":"userOp","nameLocation":"3696:6:32","nodeType":"VariableDeclaration","scope":4943,"src":"3673:29:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":4915,"nodeType":"UserDefinedTypeName","pathNode":{"id":4914,"name":"UserOperation","nameLocations":["3673:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"3673:13:32"},"referencedDeclaration":4659,"src":"3673:13:32","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$4659_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":4918,"mutability":"mutable","name":"userOpHash","nameLocation":"3711:10:32","nodeType":"VariableDeclaration","scope":4943,"src":"3703:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3703:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3672:50:32"},"returnParameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4922,"mutability":"mutable","name":"validationData","nameLocation":"3771:14:32","nodeType":"VariableDeclaration","scope":4943,"src":"3763:22:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4921,"name":"uint256","nodeType":"ElementaryTypeName","src":"3763:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3762:24:32"},"scope":5034,"src":"3645:327:32","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4968,"nodeType":"Block","src":"4054:220:32","statements":[{"assignments":[4953,4955],"declarations":[{"constant":false,"id":4953,"mutability":"mutable","name":"success","nameLocation":"4071:7:32","nodeType":"VariableDeclaration","scope":4968,"src":"4066:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4952,"name":"bool","nodeType":"ElementaryTypeName","src":"4066:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4955,"mutability":"mutable","name":"result","nameLocation":"4093:6:32","nodeType":"VariableDeclaration","scope":4968,"src":"4080:19:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4954,"name":"bytes","nodeType":"ElementaryTypeName","src":"4080:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4962,"initialValue":{"arguments":[{"id":4960,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"4130:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4956,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"4103:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4110:4:32","memberName":"call","nodeType":"MemberAccess","src":"4103:11:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"4123:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4103:26:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:32:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4065:70:32"},{"condition":{"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4150:8:32","subExpression":{"id":4963,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"4151:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4967,"nodeType":"IfStatement","src":"4146:121:32","trueBody":{"id":4966,"nodeType":"Block","src":"4160:107:32","statements":[{"AST":{"nodeType":"YulBlock","src":"4184:72:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4214:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"4222:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:32"},"nodeType":"YulFunctionCall","src":"4210:15:32"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4233:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4227:5:32"},"nodeType":"YulFunctionCall","src":"4227:13:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4203:6:32"},"nodeType":"YulFunctionCall","src":"4203:38:32"},"nodeType":"YulExpressionStatement","src":"4203:38:32"}]},"evmVersion":"paris","externalReferences":[{"declaration":4955,"isOffset":false,"isSlot":false,"src":"4214:6:32","valueSize":1},{"declaration":4955,"isOffset":false,"isSlot":false,"src":"4233:6:32","valueSize":1}],"id":4965,"nodeType":"InlineAssembly","src":"4175:81:32"}]}}]},"id":4969,"implemented":true,"kind":"function","modifiers":[],"name":"_call","nameLocation":"3989:5:32","nodeType":"FunctionDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"target","nameLocation":"4003:6:32","nodeType":"VariableDeclaration","scope":4969,"src":"3995:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4944,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4947,"mutability":"mutable","name":"value","nameLocation":"4019:5:32","nodeType":"VariableDeclaration","scope":4969,"src":"4011:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4946,"name":"uint256","nodeType":"ElementaryTypeName","src":"4011:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4949,"mutability":"mutable","name":"data","nameLocation":"4039:4:32","nodeType":"VariableDeclaration","scope":4969,"src":"4026:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4948,"name":"bytes","nodeType":"ElementaryTypeName","src":"4026:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3994:50:32"},"returnParameters":{"id":4951,"nodeType":"ParameterList","parameters":[],"src":"4054:0:32"},"scope":5034,"src":"3980:294:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4984,"nodeType":"Block","src":"4408:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"id":4980,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4457:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}],"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4449:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4978,"name":"address","nodeType":"ElementaryTypeName","src":"4449:7:32","typeDescriptions":{}}},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4449:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4975,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4712],"referencedDeclaration":4712,"src":"4426:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4475_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4426:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4439:9:32","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":4602,"src":"4426:22:32","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4426:37:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4974,"id":4983,"nodeType":"Return","src":"4419:44:32"}]},"documentation":{"id":4970,"nodeType":"StructuredDocumentation","src":"4282:68:32","text":" check current account deposit in the entryPoint"},"functionSelector":"c399ec88","id":4985,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"4365:10:32","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[],"src":"4375:2:32"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4985,"src":"4399:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4972,"name":"uint256","nodeType":"ElementaryTypeName","src":"4399:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4398:9:32"},"scope":5034,"src":"4356:115:32","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5001,"nodeType":"Block","src":"4596:75:32","statements":[{"expression":{"arguments":[{"arguments":[{"id":4997,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4657:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}],"id":4996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4649:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4995,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:32","typeDescriptions":{}}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4649:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4989,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4712],"referencedDeclaration":4712,"src":"4607:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4475_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4620:9:32","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":4608,"src":"4607:22:32","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":4992,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4638:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4642:5:32","memberName":"value","nodeType":"MemberAccess","src":"4638:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4607:41:32","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:56:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5000,"nodeType":"ExpressionStatement","src":"4607:56:32"}]},"documentation":{"id":4986,"nodeType":"StructuredDocumentation","src":"4479:74:32","text":" deposit more funds for this account in the entryPoint"},"functionSelector":"4a58db19","id":5002,"implemented":true,"kind":"function","modifiers":[],"name":"addDeposit","nameLocation":"4568:10:32","nodeType":"FunctionDefinition","parameters":{"id":4987,"nodeType":"ParameterList","parameters":[],"src":"4578:2:32"},"returnParameters":{"id":4988,"nodeType":"ParameterList","parameters":[],"src":"4596:0:32"},"scope":5034,"src":"4559:112:32","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":5019,"nodeType":"Block","src":"4923:67:32","statements":[{"expression":{"arguments":[{"id":5015,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"4958:15:32","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":5016,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"4975:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5012,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4712],"referencedDeclaration":4712,"src":"4934:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4475_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:10:32","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"4934:23:32","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:48:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5018,"nodeType":"ExpressionStatement","src":"4934:48:32"}]},"documentation":{"id":5003,"nodeType":"StructuredDocumentation","src":"4679:145:32","text":" withdraw value from the account's deposit\n @param withdrawAddress target to send to\n @param amount to withdraw"},"functionSelector":"4d44560d","id":5020,"implemented":true,"kind":"function","modifiers":[{"id":5010,"kind":"modifierInvocation","modifierName":{"id":5009,"name":"onlyOwner","nameLocations":["4913:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":4701,"src":"4913:9:32"},"nodeType":"ModifierInvocation","src":"4913:9:32"}],"name":"withdrawDepositTo","nameLocation":"4839:17:32","nodeType":"FunctionDefinition","parameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5005,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4873:15:32","nodeType":"VariableDeclaration","scope":5020,"src":"4857:31:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5004,"name":"address","nodeType":"ElementaryTypeName","src":"4857:15:32","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":5007,"mutability":"mutable","name":"amount","nameLocation":"4898:6:32","nodeType":"VariableDeclaration","scope":5020,"src":"4890:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4856:49:32"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[],"src":"4923:0:32"},"scope":5034,"src":"4830:160:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[918],"body":{"id":5032,"nodeType":"Block","src":"5075:61:32","statements":[{"expression":{"components":[{"id":5026,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"5087:17:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5086:19:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5028,"nodeType":"ExpressionStatement","src":"5086:19:32"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5029,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"5116:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5031,"nodeType":"ExpressionStatement","src":"5116:12:32"}]},"id":5033,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5007:17:32","nodeType":"FunctionDefinition","overrides":{"id":5024,"nodeType":"OverrideSpecifier","overrides":[],"src":"5066:8:32"},"parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"newImplementation","nameLocation":"5033:17:32","nodeType":"VariableDeclaration","scope":5033,"src":"5025:25:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5021,"name":"address","nodeType":"ElementaryTypeName","src":"5025:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5024:27:32"},"returnParameters":{"id":5025,"nodeType":"ParameterList","parameters":[],"src":"5075:0:32"},"scope":5034,"src":"4998:138:32","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5035,"src":"735:4404:32","usedErrors":[230,243,561,564,821,826,1037,1040,1778,1783,1788],"usedEvents":[209,569,4694]}],"src":"37:5102:32"},"id":32},"contracts/utils/SimpleAccountFactory.sol":{"ast":{"absolutePath":"contracts/utils/SimpleAccountFactory.sol","exportedSymbols":{"BaseAccount":[3624],"Create2":[1402],"ECDSA":[2115],"ERC1967Proxy":[195],"ERC1967Utils":[498],"IAccount":[4287],"IAggregator":[4321],"IERC1155Receiver":[1006],"IERC165":[2201],"IERC1822Proxiable":[157],"IERC721Receiver":[1024],"IEntryPoint":[4475],"INonceManager":[4494],"IStakeManager":[4633],"Initializable":[798],"MessageHashUtils":[2189],"Proxy":[534],"SimpleAccount":[5034],"SimpleAccountFactory":[5198],"Strings":[1767],"TokenCallbackHandler":[3480],"UUPSUpgradeable":[964],"UserOperation":[4659],"UserOperationLib":[4270],"ValidationData":[3859],"_intersectTimeRange":[4005],"_packValidationData":[4042,4080],"_parseValidationData":[3919],"calldataKeccak":[4090]},"id":5199,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":5036,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:33"},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"@openzeppelin/contracts/utils/Create2.sol","id":5037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5199,"sourceUnit":1403,"src":"65:51:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","id":5038,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5199,"sourceUnit":196,"src":"118:64:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/SimpleAccount.sol","file":"./SimpleAccount.sol","id":5039,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5199,"sourceUnit":5035,"src":"186:29:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SimpleAccountFactory","contractDependencies":[195,5034],"contractKind":"contract","documentation":{"id":5040,"nodeType":"StructuredDocumentation","src":"219:393:33","text":" A sample factory contract for SimpleAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."},"fullyImplemented":true,"id":5198,"linearizedBaseContracts":[5198],"name":"SimpleAccountFactory","nameLocation":"623:20:33","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"11464fbe","id":5043,"mutability":"immutable","name":"accountImplementation","nameLocation":"682:21:33","nodeType":"VariableDeclaration","scope":5198,"src":"651:52:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"},"typeName":{"id":5042,"nodeType":"UserDefinedTypeName","pathNode":{"id":5041,"name":"SimpleAccount","nameLocations":["651:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":5034,"src":"651:13:33"},"referencedDeclaration":5034,"src":"651:13:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}},"visibility":"public"},{"body":{"id":5057,"nodeType":"Block","src":"749:73:33","statements":[{"expression":{"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5049,"name":"accountImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"760:21:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5053,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"802:11:33","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}],"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"784:17:33","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_contract$_IEntryPoint_$4475_$returns$_t_contract$_SimpleAccount_$5034_$","typeString":"function (contract IEntryPoint) returns (contract SimpleAccount)"},"typeName":{"id":5051,"nodeType":"UserDefinedTypeName","pathNode":{"id":5050,"name":"SimpleAccount","nameLocations":["788:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":5034,"src":"788:13:33"},"referencedDeclaration":5034,"src":"788:13:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"784:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}},"src":"760:54:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}},"id":5056,"nodeType":"ExpressionStatement","src":"760:54:33"}]},"id":5058,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5046,"mutability":"mutable","name":"_entryPoint","nameLocation":"736:11:33","nodeType":"VariableDeclaration","scope":5058,"src":"724:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"},"typeName":{"id":5045,"nodeType":"UserDefinedTypeName","pathNode":{"id":5044,"name":"IEntryPoint","nameLocations":["724:11:33"],"nodeType":"IdentifierPath","referencedDeclaration":4475,"src":"724:11:33"},"referencedDeclaration":4475,"src":"724:11:33","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4475","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"723:25:33"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[],"src":"749:0:33"},"scope":5198,"src":"712:110:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"functionSelector":"e287a47a","id":5064,"mutability":"mutable","name":"createdAccounts","nameLocation":"950:15:33","nodeType":"VariableDeclaration","scope":5198,"src":"899:66:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"},"typeName":{"id":5063,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5059,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"899:43:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5062,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"916:25:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5061,"name":"address","nodeType":"ElementaryTypeName","src":"933:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"constant":false,"functionSelector":"eb6b2640","id":5070,"mutability":"mutable","name":"checkAddress","nameLocation":"1023:12:33","nodeType":"VariableDeclaration","scope":5198,"src":"972:63:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"},"typeName":{"id":5069,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5065,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"972:43:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5068,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"997:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"989:25:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5067,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"body":{"id":5154,"nodeType":"Block","src":"1510:500:33","statements":[{"assignments":[5082],"declarations":[{"constant":false,"id":5082,"mutability":"mutable","name":"addr","nameLocation":"1529:4:33","nodeType":"VariableDeclaration","scope":5154,"src":"1521:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5081,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5087,"initialValue":{"arguments":[{"id":5084,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"1547:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5085,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"1554:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5083,"name":"getAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"1536:10:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256) view returns (address)"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1521:38:33"},{"expression":{"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5088,"name":"checkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"1570:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":5091,"indexExpression":{"id":5089,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"1583:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1570:19:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":5092,"indexExpression":{"id":5090,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"1590:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1570:25:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5093,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"1598:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1570:32:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5095,"nodeType":"ExpressionStatement","src":"1570:32:33"},{"assignments":[5097],"declarations":[{"constant":false,"id":5097,"mutability":"mutable","name":"codeSize","nameLocation":"1618:8:33","nodeType":"VariableDeclaration","scope":5154,"src":"1613:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5096,"name":"uint","nodeType":"ElementaryTypeName","src":"1613:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5101,"initialValue":{"expression":{"expression":{"id":5098,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"1629:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1634:4:33","memberName":"code","nodeType":"MemberAccess","src":"1629:9:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1639:6:33","memberName":"length","nodeType":"MemberAccess","src":"1629:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1613:32:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"codeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"1660:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1671:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1660:12:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5114,"nodeType":"IfStatement","src":"1656:82:33","trueBody":{"id":5113,"nodeType":"Block","src":"1674:64:33","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"id":5108,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"1719:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1711:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5106,"name":"address","nodeType":"ElementaryTypeName","src":"1711:8:33","stateMutability":"payable","typeDescriptions":{}}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1711:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":5105,"name":"SimpleAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"1697:13:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SimpleAccount_$5034_$","typeString":"type(contract SimpleAccount)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1697:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}}],"id":5111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1696:30:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}},"functionReturnParameters":5080,"id":5112,"nodeType":"Return","src":"1689:37:33"}]}},{"expression":{"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5115,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"1748:3:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":5129,"name":"accountImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"1841:21:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}],"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1833:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5127,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:33","typeDescriptions":{}}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1833:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":5133,"name":"SimpleAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"1897:13:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SimpleAccount_$5034_$","typeString":"type(contract SimpleAccount)"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1911:10:33","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":4876,"src":"1897:24:33","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SimpleAccount.initialize(address)"}},{"components":[{"id":5135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"1924:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1923:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SimpleAccount.initialize(address)"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5131,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1882:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1886:10:33","memberName":"encodeCall","nodeType":"MemberAccess","src":"1882:14:33","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1882:49:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1776:16:33","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$195_$","typeString":"function (address,bytes memory) payable returns (contract ERC1967Proxy)"},"typeName":{"id":5120,"nodeType":"UserDefinedTypeName","pathNode":{"id":5119,"name":"ERC1967Proxy","nameLocations":["1780:12:33"],"nodeType":"IdentifierPath","referencedDeclaration":195,"src":"1780:12:33"},"referencedDeclaration":195,"src":"1780:12:33","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1967Proxy_$195","typeString":"contract ERC1967Proxy"}}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["salt"],"nodeType":"FunctionCallOptions","options":[{"arguments":[{"id":5124,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"1808:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1800:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1800:7:33","typeDescriptions":{}}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1800:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"src":"1776:38:33","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$195_$salt","typeString":"function (address,bytes memory) payable returns (contract ERC1967Proxy)"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:170:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC1967Proxy_$195","typeString":"contract ERC1967Proxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC1967Proxy_$195","typeString":"contract ERC1967Proxy"}],"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1768:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5117,"name":"address","nodeType":"ElementaryTypeName","src":"1768:8:33","stateMutability":"payable","typeDescriptions":{}}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:179:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":5116,"name":"SimpleAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"1754:13:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SimpleAccount_$5034_$","typeString":"type(contract SimpleAccount)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1754:194:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}},"src":"1748:200:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}},"id":5142,"nodeType":"ExpressionStatement","src":"1748:200:33"},{"expression":{"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5143,"name":"createdAccounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"1959:15:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(address => mapping(uint256 => address))"}},"id":5146,"indexExpression":{"id":5144,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"1975:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1959:22:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":5147,"indexExpression":{"id":5145,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"1982:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1959:28:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5150,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"1998:3:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}],"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1990:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5148,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:33","typeDescriptions":{}}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1990:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1959:43:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5153,"nodeType":"ExpressionStatement","src":"1959:43:33"}]},"documentation":{"id":5071,"nodeType":"StructuredDocumentation","src":"1044:374:33","text":" create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"},"functionSelector":"5fbfb9cf","id":5155,"implemented":true,"kind":"function","modifiers":[],"name":"createAccount","nameLocation":"1433:13:33","nodeType":"FunctionDefinition","parameters":{"id":5076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5073,"mutability":"mutable","name":"owner","nameLocation":"1455:5:33","nodeType":"VariableDeclaration","scope":5155,"src":"1447:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5072,"name":"address","nodeType":"ElementaryTypeName","src":"1447:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5075,"mutability":"mutable","name":"salt","nameLocation":"1469:4:33","nodeType":"VariableDeclaration","scope":5155,"src":"1461:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1461:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1446:28:33"},"returnParameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"ret","nameLocation":"1505:3:33","nodeType":"VariableDeclaration","scope":5155,"src":"1491:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"},"typeName":{"id":5078,"nodeType":"UserDefinedTypeName","pathNode":{"id":5077,"name":"SimpleAccount","nameLocations":["1491:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":5034,"src":"1491:13:33"},"referencedDeclaration":5034,"src":"1491:13:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}},"visibility":"internal"}],"src":"1490:19:33"},"scope":5198,"src":"1424:586:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5196,"nodeType":"Block","src":"2218:300:33","statements":[{"expression":{"arguments":[{"arguments":[{"id":5169,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"2263:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2255:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2255:7:33","typeDescriptions":{}}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2255:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"arguments":[{"id":5175,"name":"ERC1967Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2315:12:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Proxy_$195_$","typeString":"type(contract ERC1967Proxy)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_ERC1967Proxy_$195_$","typeString":"type(contract ERC1967Proxy)"}],"id":5174,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2310:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2310:18:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_ERC1967Proxy_$195","typeString":"type(contract ERC1967Proxy)"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2329:12:33","memberName":"creationCode","nodeType":"MemberAccess","src":"2310:31:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"arguments":[{"id":5182,"name":"accountImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"2391:21:33","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$5034","typeString":"contract SimpleAccount"}],"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2383:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5180,"name":"address","nodeType":"ElementaryTypeName","src":"2383:7:33","typeDescriptions":{}}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2383:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":5186,"name":"SimpleAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"2446:13:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SimpleAccount_$5034_$","typeString":"type(contract SimpleAccount)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2460:10:33","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":4876,"src":"2446:24:33","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SimpleAccount.initialize(address)"}},{"components":[{"id":5188,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"2473:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2472:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SimpleAccount.initialize(address)"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5184,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2431:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2435:10:33","memberName":"encodeCall","nodeType":"MemberAccess","src":"2431:14:33","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2431:49:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5178,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2355:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2359:6:33","memberName":"encode","nodeType":"MemberAccess","src":"2355:10:33","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:139:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5172,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2280:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2284:12:33","memberName":"encodePacked","nodeType":"MemberAccess","src":"2280:16:33","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2280:224:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5171,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2270:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:235:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5165,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2232:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$1402_$","typeString":"type(library Create2)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2240:14:33","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"2232:22:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,bytes32) view returns (address)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2232:274:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5164,"id":5195,"nodeType":"Return","src":"2225:281:33"}]},"documentation":{"id":5156,"nodeType":"StructuredDocumentation","src":"2018:116:33","text":" calculate the counterfactual address of this account as it would be returned by createAccount()"},"functionSelector":"8cb84e18","id":5197,"implemented":true,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"2149:10:33","nodeType":"FunctionDefinition","parameters":{"id":5161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"owner","nameLocation":"2168:5:33","nodeType":"VariableDeclaration","scope":5197,"src":"2160:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5157,"name":"address","nodeType":"ElementaryTypeName","src":"2160:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5160,"mutability":"mutable","name":"salt","nameLocation":"2182:4:33","nodeType":"VariableDeclaration","scope":5197,"src":"2174:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2174:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2159:28:33"},"returnParameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5197,"src":"2209:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5162,"name":"address","nodeType":"ElementaryTypeName","src":"2209:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2208:9:33"},"scope":5198,"src":"2140:378:33","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":5199,"src":"614:1909:33","usedErrors":[],"usedEvents":[]}],"src":"37:2487:33"},"id":33},"contracts/utils/VerifyingPaymaster.sol":{"ast":{"absolutePath":"contracts/utils/VerifyingPaymaster.sol","exportedSymbols":{},"id":5200,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[],"src":"4883:0:34"},"id":34}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ERC1967Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"evm":{"bytecode":{"functionDebugData":{"@_182":{"entryPoint":null,"id":182,"parameterSlots":2,"returnSlots":0},"@_checkNonPayable_497":{"entryPoint":542,"id":497,"parameterSlots":0,"returnSlots":0},"@_revert_1276":{"entryPoint":762,"id":1276,"parameterSlots":1,"returnSlots":0},"@_setImplementation_283":{"entryPoint":193,"id":283,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1196":{"entryPoint":404,"id":1196,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_1434":{"entryPoint":603,"id":1434,"parameterSlots":1,"returnSlots":1},"@upgradeToAndCall_317":{"entryPoint":60,"id":317,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_1236":{"entryPoint":613,"id":1236,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":1186,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":1252,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":1298,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1390,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1405,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1068,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":831,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1095,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1432,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1443,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":883,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":851,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1144,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1019,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":972,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":945,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":950,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":846,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":841,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":955,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":901,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5141:35","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:35","statements":[{"nodeType":"YulAssignment","src":"57:19:35","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:35","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:35"},"nodeType":"YulFunctionCall","src":"67:9:35"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:35"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:35","type":""}],"src":"7:75:35"},{"body":{"nodeType":"YulBlock","src":"177:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:35"},"nodeType":"YulFunctionCall","src":"187:12:35"},"nodeType":"YulExpressionStatement","src":"187:12:35"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:35"},{"body":{"nodeType":"YulBlock","src":"300:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:35"},"nodeType":"YulFunctionCall","src":"310:12:35"},"nodeType":"YulExpressionStatement","src":"310:12:35"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:35"},{"body":{"nodeType":"YulBlock","src":"379:81:35","statements":[{"nodeType":"YulAssignment","src":"389:65:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:35","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:35"},"nodeType":"YulFunctionCall","src":"400:54:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:35"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:35","type":""}],"src":"334:126:35"},{"body":{"nodeType":"YulBlock","src":"511:51:35","statements":[{"nodeType":"YulAssignment","src":"521:35:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:35"},"nodeType":"YulFunctionCall","src":"532:24:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:35"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:35","type":""}],"src":"466:96:35"},{"body":{"nodeType":"YulBlock","src":"611:79:35","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:35"},"nodeType":"YulFunctionCall","src":"670:12:35"},"nodeType":"YulExpressionStatement","src":"670:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:35"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:35"},"nodeType":"YulFunctionCall","src":"641:24:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:35"},"nodeType":"YulFunctionCall","src":"631:35:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:35"},"nodeType":"YulFunctionCall","src":"624:43:35"},"nodeType":"YulIf","src":"621:63:35"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:35","type":""}],"src":"568:122:35"},{"body":{"nodeType":"YulBlock","src":"759:80:35","statements":[{"nodeType":"YulAssignment","src":"769:22:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:35"},"nodeType":"YulFunctionCall","src":"778:13:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:35"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:35"},"nodeType":"YulFunctionCall","src":"800:33:35"},"nodeType":"YulExpressionStatement","src":"800:33:35"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:35","type":""}],"src":"696:143:35"},{"body":{"nodeType":"YulBlock","src":"934:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:35"},"nodeType":"YulFunctionCall","src":"944:12:35"},"nodeType":"YulExpressionStatement","src":"944:12:35"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:35"},{"body":{"nodeType":"YulBlock","src":"1057:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:35"},"nodeType":"YulFunctionCall","src":"1067:12:35"},"nodeType":"YulExpressionStatement","src":"1067:12:35"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:35"},{"body":{"nodeType":"YulBlock","src":"1139:54:35","statements":[{"nodeType":"YulAssignment","src":"1149:38:35","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:35","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:35"},"nodeType":"YulFunctionCall","src":"1163:14:35"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:35","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:35"},"nodeType":"YulFunctionCall","src":"1179:7:35"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:35"},"nodeType":"YulFunctionCall","src":"1159:28:35"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:35"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:35","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:35","type":""}],"src":"1091:102:35"},{"body":{"nodeType":"YulBlock","src":"1227:152:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:35","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:35"},"nodeType":"YulFunctionCall","src":"1237:88:35"},"nodeType":"YulExpressionStatement","src":"1237:88:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:35","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:35","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:35"},"nodeType":"YulFunctionCall","src":"1334:15:35"},"nodeType":"YulExpressionStatement","src":"1334:15:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:35","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:35"},"nodeType":"YulFunctionCall","src":"1358:15:35"},"nodeType":"YulExpressionStatement","src":"1358:15:35"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:35"},{"body":{"nodeType":"YulBlock","src":"1428:238:35","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:35","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:35"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:35"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:35"},"nodeType":"YulFunctionCall","src":"1468:27:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:35"},"nodeType":"YulFunctionCall","src":"1456:40:35"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:35"},"nodeType":"YulFunctionCall","src":"1609:18:35"},"nodeType":"YulExpressionStatement","src":"1609:18:35"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:35"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:35"},"nodeType":"YulFunctionCall","src":"1547:34:35"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:35"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:35"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:35"},"nodeType":"YulFunctionCall","src":"1583:22:35"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:35"},"nodeType":"YulFunctionCall","src":"1544:62:35"},"nodeType":"YulIf","src":"1541:88:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:35","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:35"},"nodeType":"YulFunctionCall","src":"1638:22:35"},"nodeType":"YulExpressionStatement","src":"1638:22:35"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:35","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:35","type":""}],"src":"1385:281:35"},{"body":{"nodeType":"YulBlock","src":"1713:88:35","statements":[{"nodeType":"YulAssignment","src":"1723:30:35","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:35"},"nodeType":"YulFunctionCall","src":"1733:20:35"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:35"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:35"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:35"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:35"},"nodeType":"YulFunctionCall","src":"1762:33:35"},"nodeType":"YulExpressionStatement","src":"1762:33:35"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:35","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:35","type":""}],"src":"1672:129:35"},{"body":{"nodeType":"YulBlock","src":"1873:241:35","statements":[{"body":{"nodeType":"YulBlock","src":"1978:22:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1980:16:35"},"nodeType":"YulFunctionCall","src":"1980:18:35"},"nodeType":"YulExpressionStatement","src":"1980:18:35"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1950:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"1958:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1947:2:35"},"nodeType":"YulFunctionCall","src":"1947:30:35"},"nodeType":"YulIf","src":"1944:56:35"},{"nodeType":"YulAssignment","src":"2010:37:35","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2040:6:35"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2018:21:35"},"nodeType":"YulFunctionCall","src":"2018:29:35"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2010:4:35"}]},{"nodeType":"YulAssignment","src":"2084:23:35","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2096:4:35"},{"kind":"number","nodeType":"YulLiteral","src":"2102:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:35"},"nodeType":"YulFunctionCall","src":"2092:15:35"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2084:4:35"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1857:6:35","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1868:4:35","type":""}],"src":"1807:307:35"},{"body":{"nodeType":"YulBlock","src":"2182:184:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2192:10:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2201:1:35","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2196:1:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"2261:63:35","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2286:3:35"},{"name":"i","nodeType":"YulIdentifier","src":"2291:1:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2282:3:35"},"nodeType":"YulFunctionCall","src":"2282:11:35"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2305:3:35"},{"name":"i","nodeType":"YulIdentifier","src":"2310:1:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2301:3:35"},"nodeType":"YulFunctionCall","src":"2301:11:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2295:5:35"},"nodeType":"YulFunctionCall","src":"2295:18:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2275:6:35"},"nodeType":"YulFunctionCall","src":"2275:39:35"},"nodeType":"YulExpressionStatement","src":"2275:39:35"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2222:1:35"},{"name":"length","nodeType":"YulIdentifier","src":"2225:6:35"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2219:2:35"},"nodeType":"YulFunctionCall","src":"2219:13:35"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2233:19:35","statements":[{"nodeType":"YulAssignment","src":"2235:15:35","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2244:1:35"},{"kind":"number","nodeType":"YulLiteral","src":"2247:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2240:3:35"},"nodeType":"YulFunctionCall","src":"2240:10:35"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2235:1:35"}]}]},"pre":{"nodeType":"YulBlock","src":"2215:3:35","statements":[]},"src":"2211:113:35"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2344:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"2349:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2340:3:35"},"nodeType":"YulFunctionCall","src":"2340:16:35"},{"kind":"number","nodeType":"YulLiteral","src":"2358:1:35","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2333:6:35"},"nodeType":"YulFunctionCall","src":"2333:27:35"},"nodeType":"YulExpressionStatement","src":"2333:27:35"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2164:3:35","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2169:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"2174:6:35","type":""}],"src":"2120:246:35"},{"body":{"nodeType":"YulBlock","src":"2466:338:35","statements":[{"nodeType":"YulAssignment","src":"2476:74:35","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2542:6:35"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2501:40:35"},"nodeType":"YulFunctionCall","src":"2501:48:35"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2485:15:35"},"nodeType":"YulFunctionCall","src":"2485:65:35"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2476:5:35"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:35"},{"name":"length","nodeType":"YulIdentifier","src":"2573:6:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2559:6:35"},"nodeType":"YulFunctionCall","src":"2559:21:35"},"nodeType":"YulExpressionStatement","src":"2559:21:35"},{"nodeType":"YulVariableDeclaration","src":"2589:27:35","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2604:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"2611:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2600:3:35"},"nodeType":"YulFunctionCall","src":"2600:16:35"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2593:3:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"2654:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2656:77:35"},"nodeType":"YulFunctionCall","src":"2656:79:35"},"nodeType":"YulExpressionStatement","src":"2656:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2635:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"2640:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2631:3:35"},"nodeType":"YulFunctionCall","src":"2631:16:35"},{"name":"end","nodeType":"YulIdentifier","src":"2649:3:35"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2628:2:35"},"nodeType":"YulFunctionCall","src":"2628:25:35"},"nodeType":"YulIf","src":"2625:112:35"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2781:3:35"},{"name":"dst","nodeType":"YulIdentifier","src":"2786:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"2791:6:35"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2746:34:35"},"nodeType":"YulFunctionCall","src":"2746:52:35"},"nodeType":"YulExpressionStatement","src":"2746:52:35"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2439:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"2444:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"2452:3:35","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2460:5:35","type":""}],"src":"2372:432:35"},{"body":{"nodeType":"YulBlock","src":"2895:281:35","statements":[{"body":{"nodeType":"YulBlock","src":"2944:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2946:77:35"},"nodeType":"YulFunctionCall","src":"2946:79:35"},"nodeType":"YulExpressionStatement","src":"2946:79:35"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2923:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"2931:4:35","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2919:3:35"},"nodeType":"YulFunctionCall","src":"2919:17:35"},{"name":"end","nodeType":"YulIdentifier","src":"2938:3:35"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2915:3:35"},"nodeType":"YulFunctionCall","src":"2915:27:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2908:6:35"},"nodeType":"YulFunctionCall","src":"2908:35:35"},"nodeType":"YulIf","src":"2905:122:35"},{"nodeType":"YulVariableDeclaration","src":"3036:27:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3056:6:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3050:5:35"},"nodeType":"YulFunctionCall","src":"3050:13:35"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3040:6:35","type":""}]},{"nodeType":"YulAssignment","src":"3072:98:35","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3143:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"3151:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3139:3:35"},"nodeType":"YulFunctionCall","src":"3139:17:35"},{"name":"length","nodeType":"YulIdentifier","src":"3158:6:35"},{"name":"end","nodeType":"YulIdentifier","src":"3166:3:35"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3081:57:35"},"nodeType":"YulFunctionCall","src":"3081:89:35"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3072:5:35"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2873:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"2881:3:35","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2889:5:35","type":""}],"src":"2823:353:35"},{"body":{"nodeType":"YulBlock","src":"3285:575:35","statements":[{"body":{"nodeType":"YulBlock","src":"3331:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3333:77:35"},"nodeType":"YulFunctionCall","src":"3333:79:35"},"nodeType":"YulExpressionStatement","src":"3333:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3306:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"3315:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3302:3:35"},"nodeType":"YulFunctionCall","src":"3302:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"3327:2:35","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3298:3:35"},"nodeType":"YulFunctionCall","src":"3298:32:35"},"nodeType":"YulIf","src":"3295:119:35"},{"nodeType":"YulBlock","src":"3424:128:35","statements":[{"nodeType":"YulVariableDeclaration","src":"3439:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"3453:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3443:6:35","type":""}]},{"nodeType":"YulAssignment","src":"3468:74:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3514:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"3525:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3510:3:35"},"nodeType":"YulFunctionCall","src":"3510:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3534:7:35"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3478:31:35"},"nodeType":"YulFunctionCall","src":"3478:64:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3468:6:35"}]}]},{"nodeType":"YulBlock","src":"3562:291:35","statements":[{"nodeType":"YulVariableDeclaration","src":"3577:39:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3601:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"3612:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3597:3:35"},"nodeType":"YulFunctionCall","src":"3597:18:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3591:5:35"},"nodeType":"YulFunctionCall","src":"3591:25:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3581:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"3663:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3665:77:35"},"nodeType":"YulFunctionCall","src":"3665:79:35"},"nodeType":"YulExpressionStatement","src":"3665:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3635:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"3643:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3632:2:35"},"nodeType":"YulFunctionCall","src":"3632:30:35"},"nodeType":"YulIf","src":"3629:117:35"},{"nodeType":"YulAssignment","src":"3760:83:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3815:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"3826:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3811:3:35"},"nodeType":"YulFunctionCall","src":"3811:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3835:7:35"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3770:40:35"},"nodeType":"YulFunctionCall","src":"3770:73:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3760:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3247:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3258:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3270:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3278:6:35","type":""}],"src":"3182:678:35"},{"body":{"nodeType":"YulBlock","src":"3931:53:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3948:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3971:5:35"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3953:17:35"},"nodeType":"YulFunctionCall","src":"3953:24:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3941:6:35"},"nodeType":"YulFunctionCall","src":"3941:37:35"},"nodeType":"YulExpressionStatement","src":"3941:37:35"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3919:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3926:3:35","type":""}],"src":"3866:118:35"},{"body":{"nodeType":"YulBlock","src":"4088:124:35","statements":[{"nodeType":"YulAssignment","src":"4098:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"4121:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:35"},"nodeType":"YulFunctionCall","src":"4106:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4098:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4178:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4191:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"4202:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4187:3:35"},"nodeType":"YulFunctionCall","src":"4187:17:35"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4134:43:35"},"nodeType":"YulFunctionCall","src":"4134:71:35"},"nodeType":"YulExpressionStatement","src":"4134:71:35"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4060:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4072:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4083:4:35","type":""}],"src":"3990:222:35"},{"body":{"nodeType":"YulBlock","src":"4276:40:35","statements":[{"nodeType":"YulAssignment","src":"4287:22:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4303:5:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4297:5:35"},"nodeType":"YulFunctionCall","src":"4297:12:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4287:6:35"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4259:5:35","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4269:6:35","type":""}],"src":"4218:98:35"},{"body":{"nodeType":"YulBlock","src":"4435:34:35","statements":[{"nodeType":"YulAssignment","src":"4445:18:35","value":{"name":"pos","nodeType":"YulIdentifier","src":"4460:3:35"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4445:11:35"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4407:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"4412:6:35","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4423:11:35","type":""}],"src":"4322:147:35"},{"body":{"nodeType":"YulBlock","src":"4583:278:35","statements":[{"nodeType":"YulVariableDeclaration","src":"4593:52:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4639:5:35"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4607:31:35"},"nodeType":"YulFunctionCall","src":"4607:38:35"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4597:6:35","type":""}]},{"nodeType":"YulAssignment","src":"4654:95:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4737:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"4742:6:35"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4661:75:35"},"nodeType":"YulFunctionCall","src":"4661:88:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4654:3:35"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4797:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"4804:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:35"},"nodeType":"YulFunctionCall","src":"4793:16:35"},{"name":"pos","nodeType":"YulIdentifier","src":"4811:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"4816:6:35"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4758:34:35"},"nodeType":"YulFunctionCall","src":"4758:65:35"},"nodeType":"YulExpressionStatement","src":"4758:65:35"},{"nodeType":"YulAssignment","src":"4832:23:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4843:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"4848:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4839:3:35"},"nodeType":"YulFunctionCall","src":"4839:16:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4832:3:35"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4579:3:35","type":""}],"src":"4475:386:35"},{"body":{"nodeType":"YulBlock","src":"5001:137:35","statements":[{"nodeType":"YulAssignment","src":"5012:100:35","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5099:6:35"},{"name":"pos","nodeType":"YulIdentifier","src":"5108:3:35"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5019:79:35"},"nodeType":"YulFunctionCall","src":"5019:93:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5012:3:35"}]},{"nodeType":"YulAssignment","src":"5122:10:35","value":{"name":"pos","nodeType":"YulIdentifier","src":"5129:3:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5122:3:35"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4980:3:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4986:6:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4997:3:35","type":""}],"src":"4867:271:35"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":35,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040516106e53803806106e583398181016040528101906100259190610512565b610035828261003c60201b60201c565b50506105f6565b61004b826100c160201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156100ae576100a8828261019460201b60201c565b506100bd565b6100bc61021e60201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361011d57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610114919061057d565b60405180910390fd5b806101507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61025b60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516101be91906105df565b600060405180830381855af49150503d80600081146101f9576040519150601f19603f3d011682016040523d82523d6000602084013e6101fe565b606091505b509150915061021485838361026560201b60201c565b9250505092915050565b6000341115610259576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826102805761027b826102fa60201b60201c565b6102f2565b600082511480156102a8575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156102ea57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016102e1919061057d565b60405180910390fd5b8190506102f3565b5b9392505050565b60008151111561030d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037e82610353565b9050919050565b61038e81610373565b811461039957600080fd5b50565b6000815190506103ab81610385565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610404826103bb565b810181811067ffffffffffffffff82111715610423576104226103cc565b5b80604052505050565b600061043661033f565b905061044282826103fb565b919050565b600067ffffffffffffffff821115610462576104616103cc565b5b61046b826103bb565b9050602081019050919050565b60005b8381101561049657808201518184015260208101905061047b565b60008484015250505050565b60006104b56104b084610447565b61042c565b9050828152602081018484840111156104d1576104d06103b6565b5b6104dc848285610478565b509392505050565b600082601f8301126104f9576104f86103b1565b5b81516105098482602086016104a2565b91505092915050565b6000806040838503121561052957610528610349565b5b60006105378582860161039c565b925050602083015167ffffffffffffffff8111156105585761055761034e565b5b610564858286016104e4565b9150509250929050565b61057781610373565b82525050565b6000602082019050610592600083018461056e565b92915050565b600081519050919050565b600081905092915050565b60006105b982610598565b6105c381856105a3565b93506105d3818560208601610478565b80840191505092915050565b60006105eb82846105ae565b915081905092915050565b60e1806106046000396000f3fe6080604052600a600c565b005b60186014601a565b6027565b565b60006022604c565b905090565b3660008037600080366000845af43d6000803e80600081146047573d6000f35b3d6000fd5b600060787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60a1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea264697066735822122067da619a0e2ed8891b265d46572c129780831fefc6c4308f0ac16133d3574b1c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6E5 CODESIZE SUB DUP1 PUSH2 0x6E5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x4B DUP3 PUSH2 0xC1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xAE JUMPI PUSH2 0xA8 DUP3 DUP3 PUSH2 0x194 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xBD JUMP JUMPDEST PUSH2 0xBC PUSH2 0x21E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x11D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x150 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x25B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x214 DUP6 DUP4 DUP4 PUSH2 0x265 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x280 JUMPI PUSH2 0x27B DUP3 PUSH2 0x2FA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2A8 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2EA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2F3 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x30D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x373 JUMP JUMPDEST DUP2 EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3AB DUP2 PUSH2 0x385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x404 DUP3 PUSH2 0x3BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x423 JUMPI PUSH2 0x422 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 PUSH2 0x33F JUMP JUMPDEST SWAP1 POP PUSH2 0x442 DUP3 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST PUSH2 0x46B DUP3 PUSH2 0x3BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x496 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x47B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH2 0x4B0 DUP5 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH2 0x4DC DUP5 DUP3 DUP6 PUSH2 0x478 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x509 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x529 JUMPI PUSH2 0x528 PUSH2 0x349 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x537 DUP6 DUP3 DUP7 ADD PUSH2 0x39C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH2 0x564 DUP6 DUP3 DUP7 ADD PUSH2 0x4E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B9 DUP3 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x5C3 DUP2 DUP6 PUSH2 0x5A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x5D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x478 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EB DUP3 DUP5 PUSH2 0x5AE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE1 DUP1 PUSH2 0x604 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x27 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x4C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x47 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x78 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH1 0xA1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xDA619A0E2ED8891B 0x26 0x5D CHAINID JUMPI 0x2C SLT SWAP8 DUP1 DUP4 0x1F 0xEF 0xC6 0xC4 ADDRESS DUP16 EXP 0xC1 PUSH2 0x33D3 JUMPI 0x4B SHR PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"599:1116:2:-:0;;;1080:133;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1154:52;1184:14;1200:5;1154:29;;;:52;;:::i;:::-;1080:133;;599:1116;;2779:335:3;2870:37;2889:17;2870:18;;;:37;;:::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;;;:53;;:::i;:::-;;2960:148;;;3079:18;:16;;;:18;;:::i;:::-;2960:148;2779:335;;:::o;2186:281::-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;;;:47;;:::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:10:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;;;:55;;:::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:3:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;1684:190:13:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;4625:582:10:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;;;:19;;:::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:35;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:307::-;1868:4;1958:18;1950:6;1947:30;1944:56;;;1980:18;;:::i;:::-;1944:56;2018:29;2040:6;2018:29;:::i;:::-;2010:37;;2102:4;2096;2092:15;2084:23;;1807:307;;;:::o;2120:246::-;2201:1;2211:113;2225:6;2222:1;2219:13;2211:113;;;2310:1;2305:3;2301:11;2295:18;2291:1;2286:3;2282:11;2275:39;2247:2;2244:1;2240:10;2235:15;;2211:113;;;2358:1;2349:6;2344:3;2340:16;2333:27;2182:184;2120:246;;;:::o;2372:432::-;2460:5;2485:65;2501:48;2542:6;2501:48;:::i;:::-;2485:65;:::i;:::-;2476:74;;2573:6;2566:5;2559:21;2611:4;2604:5;2600:16;2649:3;2640:6;2635:3;2631:16;2628:25;2625:112;;;2656:79;;:::i;:::-;2625:112;2746:52;2791:6;2786:3;2781;2746:52;:::i;:::-;2466:338;2372:432;;;;;:::o;2823:353::-;2889:5;2938:3;2931:4;2923:6;2919:17;2915:27;2905:122;;2946:79;;:::i;:::-;2905:122;3056:6;3050:13;3081:89;3166:3;3158:6;3151:4;3143:6;3139:17;3081:89;:::i;:::-;3072:98;;2895:281;2823:353;;;;:::o;3182:678::-;3270:6;3278;3327:2;3315:9;3306:7;3302:23;3298:32;3295:119;;;3333:79;;:::i;:::-;3295:119;3453:1;3478:64;3534:7;3525:6;3514:9;3510:22;3478:64;:::i;:::-;3468:74;;3424:128;3612:2;3601:9;3597:18;3591:25;3643:18;3635:6;3632:30;3629:117;;;3665:79;;:::i;:::-;3629:117;3770:73;3835:7;3826:6;3815:9;3811:22;3770:73;:::i;:::-;3760:83;;3562:291;3182:678;;;;;:::o;3866:118::-;3953:24;3971:5;3953:24;:::i;:::-;3948:3;3941:37;3866:118;;:::o;3990:222::-;4083:4;4121:2;4110:9;4106:18;4098:26;;4134:71;4202:1;4191:9;4187:17;4178:6;4134:71;:::i;:::-;3990:222;;;;:::o;4218:98::-;4269:6;4303:5;4297:12;4287:22;;4218:98;;;:::o;4322:147::-;4423:11;4460:3;4445:18;;4322:147;;;;:::o;4475:386::-;4579:3;4607:38;4639:5;4607:38;:::i;:::-;4661:88;4742:6;4737:3;4661:88;:::i;:::-;4654:95;;4758:65;4816:6;4811:3;4804:4;4797:5;4793:16;4758:65;:::i;:::-;4848:6;4843:3;4839:16;4832:23;;4583:278;4475:386;;;;:::o;4867:271::-;4997:3;5019:93;5108:3;5099:6;5019:93;:::i;:::-;5012:100;;5129:3;5122:10;;4867:271;;;;:::o;599:1116:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_533":{"entryPoint":null,"id":533,"parameterSlots":0,"returnSlots":0},"@_delegate_509":{"entryPoint":39,"id":509,"parameterSlots":1,"returnSlots":0},"@_fallback_525":{"entryPoint":12,"id":525,"parameterSlots":0,"returnSlots":0},"@_implementation_194":{"entryPoint":26,"id":194,"parameterSlots":0,"returnSlots":1},"@getAddressSlot_1434":{"entryPoint":161,"id":1434,"parameterSlots":1,"returnSlots":1},"@getImplementation_256":{"entryPoint":76,"id":256,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b60186014601a565b6027565b565b60006022604c565b905090565b3660008037600080366000845af43d6000803e80600081146047573d6000f35b3d6000fd5b600060787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60a1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea264697066735822122067da619a0e2ed8891b265d46572c129780831fefc6c4308f0ac16133d3574b1c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x27 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x4C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x47 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x78 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH1 0xA1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xDA619A0E2ED8891B 0x26 0x5D CHAINID JUMPI 0x2C SLT SWAP8 DUP1 DUP4 0x1F 0xEF 0xC6 0xC4 ADDRESS DUP16 EXP 0xC1 PUSH2 0x33D3 JUMPI 0x4B SHR PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"599:1116:2:-:0;;;2649:11:4;:9;:11::i;:::-;599:1116:2;2323:83:4;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;1581:132:2:-;1648:7;1674:32;:30;:32::i;:::-;1667:39;;1581:132;:::o;949:895:4:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1687:1;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27;1957:138:3;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;1684:190:13:-;1745:21;1854:4;1844:14;;1684:190;;;:::o"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e074f719e6dd8061525fb6502e41420f464173ac22a6f57fed2376a6eabbba7864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 PUSH21 0xF719E6DD8061525FB6502E41420F464173AC22A6F5 PUSH32 0xED2376A6EABBBA7864736F6C6343000814003300000000000000000000000000 ","sourceMap":"449:6273:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e074f719e6dd8061525fb6502e41420f464173ac22a6f57fed2376a6eabbba7864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 PUSH21 0xF719E6DD8061525FB6502E41420F464173AC22A6F5 PUSH32 0xED2376A6EABBBA7864736F6C6343000814003300000000000000000000000000 ","sourceMap":"449:6273:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3ffb56bcb175984a10b1167e2eba560876bfe96a435f5d62ffed8b1bb4ebc4c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7db94af56aa20efb57c3f9003eacd884faad04118967d8e35cdffe07790bbdcd\",\"dweb:/ipfs/QmXtAshRWFjcQ1kL7gpC5CiLUZgJ9uzrZyeHp2Sux9ojPF\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"},{"inputs":[],"name":"Create2FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"Create2InsufficientBalance","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f268a976c09bb0f49808ce4d4bb77bc2c66dd756b14542867f2d2bfa3b6b07b964736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE PUSH9 0xA976C09BB0F49808CE 0x4D 0x4B 0xB7 PUSH28 0xC2C66DD756B14542867F2D2BFA3B6B07B964736F6C63430008140033 ","sourceMap":"495:3877:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f268a976c09bb0f49808ce4d4bb77bc2c66dd756b14542867f2d2bfa3b6b07b964736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE PUSH9 0xA976C09BB0F49808CE 0x4D 0x4B 0xB7 PUSH28 0xC2C66DD756B14542867F2D2BFA3B6B07B964736F6C63430008140033 ","sourceMap":"495:3877:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Create2FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"Create2InsufficientBalance\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}],\"Create2FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"Create2InsufficientBalance(uint256,uint256)\":[{\"details\":\"Not enough balance for performing a CREATE2 deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x2b9807d194b92f1068d868e9587d27037264a9a067c778486f86ae21c61cbd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22d71f40aa38a20cf466d8647452a6e3f746353474f8c8af40f03aa8cae38420\",\"dweb:/ipfs/QmQ752Hz5av7YDK8pFojzb5qgeXQvfsdkdwkHVzaXoYAZR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"contracts/callback/TokenCallbackHandler.sol":{"TokenCallbackHandler":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506107ff806100206000396000f3fe608060405234801561001057600080fd5b50600436106100565760003560e01c806223de291461005b57806301ffc9a714610077578063150b7a02146100a7578063bc197c81146100d7578063f23a6e6114610107575b600080fd5b610075600480360381019061007091906103c1565b610137565b005b610091600480360381019061008c91906104e8565b610141565b60405161009e9190610530565b60405180910390f35b6100c160048036038101906100bc919061054b565b61027b565b6040516100ce91906105e2565b60405180910390f35b6100f160048036038101906100ec9190610653565b610290565b6040516100fe91906105e2565b60405180910390f35b610121600480360381019061011c919061072f565b6102a8565b60405161012e91906105e2565b60405180910390f35b5050505050505050565b60007f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061020c57507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061027457507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600063150b7a0260e01b905095945050505050565b600063bc197c8160e01b905098975050505050505050565b600063f23a6e6160e01b90509695505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f3826102c8565b9050919050565b610303816102e8565b811461030e57600080fd5b50565b600081359050610320816102fa565b92915050565b6000819050919050565b61033981610326565b811461034457600080fd5b50565b60008135905061035681610330565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126103815761038061035c565b5b8235905067ffffffffffffffff81111561039e5761039d610361565b5b6020830191508360018202830111156103ba576103b9610366565b5b9250929050565b60008060008060008060008060c0898b0312156103e1576103e06102be565b5b60006103ef8b828c01610311565b98505060206104008b828c01610311565b97505060406104118b828c01610311565b96505060606104228b828c01610347565b955050608089013567ffffffffffffffff811115610443576104426102c3565b5b61044f8b828c0161036b565b945094505060a089013567ffffffffffffffff811115610472576104716102c3565b5b61047e8b828c0161036b565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6104c581610490565b81146104d057600080fd5b50565b6000813590506104e2816104bc565b92915050565b6000602082840312156104fe576104fd6102be565b5b600061050c848285016104d3565b91505092915050565b60008115159050919050565b61052a81610515565b82525050565b60006020820190506105456000830184610521565b92915050565b600080600080600060808688031215610567576105666102be565b5b600061057588828901610311565b955050602061058688828901610311565b945050604061059788828901610347565b935050606086013567ffffffffffffffff8111156105b8576105b76102c3565b5b6105c48882890161036b565b92509250509295509295909350565b6105dc81610490565b82525050565b60006020820190506105f760008301846105d3565b92915050565b60008083601f8401126106135761061261035c565b5b8235905067ffffffffffffffff8111156106305761062f610361565b5b60208301915083602082028301111561064c5761064b610366565b5b9250929050565b60008060008060008060008060a0898b031215610673576106726102be565b5b60006106818b828c01610311565b98505060206106928b828c01610311565b975050604089013567ffffffffffffffff8111156106b3576106b26102c3565b5b6106bf8b828c016105fd565b9650965050606089013567ffffffffffffffff8111156106e2576106e16102c3565b5b6106ee8b828c016105fd565b9450945050608089013567ffffffffffffffff811115610711576107106102c3565b5b61071d8b828c0161036b565b92509250509295985092959890939650565b60008060008060008060a0878903121561074c5761074b6102be565b5b600061075a89828a01610311565b965050602061076b89828a01610311565b955050604061077c89828a01610347565b945050606061078d89828a01610347565b935050608087013567ffffffffffffffff8111156107ae576107ad6102c3565b5b6107ba89828a0161036b565b9250925050929550929550929556fea2646970667358221220fdf835fa355d719f19362e092181b60fa6d8e525e4d9ca9bea920872a2cefeae64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x54B JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x653 JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x20C JUMPI POP PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3 DUP3 PUSH2 0x2C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x303 DUP2 PUSH2 0x2E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x320 DUP2 PUSH2 0x2FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x339 DUP2 PUSH2 0x326 JUMP JUMPDEST DUP2 EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x356 DUP2 PUSH2 0x330 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x35C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0x361 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x366 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3E1 JUMPI PUSH2 0x3E0 PUSH2 0x2BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EF DUP12 DUP3 DUP13 ADD PUSH2 0x311 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x400 DUP12 DUP3 DUP13 ADD PUSH2 0x311 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x411 DUP12 DUP3 DUP13 ADD PUSH2 0x311 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x422 DUP12 DUP3 DUP13 ADD PUSH2 0x347 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH2 0x442 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x44F DUP12 DUP3 DUP13 ADD PUSH2 0x36B JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x472 JUMPI PUSH2 0x471 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x47E DUP12 DUP3 DUP13 ADD PUSH2 0x36B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C5 DUP2 PUSH2 0x490 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E2 DUP2 PUSH2 0x4BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FE JUMPI PUSH2 0x4FD PUSH2 0x2BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP5 DUP3 DUP6 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52A DUP2 PUSH2 0x515 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x545 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x2BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x575 DUP9 DUP3 DUP10 ADD PUSH2 0x311 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x586 DUP9 DUP3 DUP10 ADD PUSH2 0x311 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x597 DUP9 DUP3 DUP10 ADD PUSH2 0x347 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B8 JUMPI PUSH2 0x5B7 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x5C4 DUP9 DUP3 DUP10 ADD PUSH2 0x36B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x5DC DUP2 PUSH2 0x490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x613 JUMPI PUSH2 0x612 PUSH2 0x35C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x630 JUMPI PUSH2 0x62F PUSH2 0x361 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x64C JUMPI PUSH2 0x64B PUSH2 0x366 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x673 JUMPI PUSH2 0x672 PUSH2 0x2BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x681 DUP12 DUP3 DUP13 ADD PUSH2 0x311 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x692 DUP12 DUP3 DUP13 ADD PUSH2 0x311 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x6BF DUP12 DUP3 DUP13 ADD PUSH2 0x5FD JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E2 JUMPI PUSH2 0x6E1 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x6EE DUP12 DUP3 DUP13 ADD PUSH2 0x5FD JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x711 JUMPI PUSH2 0x710 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x71D DUP12 DUP3 DUP13 ADD PUSH2 0x36B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH2 0x74B PUSH2 0x2BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x75A DUP10 DUP3 DUP11 ADD PUSH2 0x311 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x76B DUP10 DUP3 DUP11 ADD PUSH2 0x311 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x77C DUP10 DUP3 DUP11 ADD PUSH2 0x347 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x78D DUP10 DUP3 DUP11 ADD PUSH2 0x347 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7AE JUMPI PUSH2 0x7AD PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x7BA DUP10 DUP3 DUP11 ADD PUSH2 0x36B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xF8 CALLDATALOAD STATICCALL CALLDATALOAD 0x5D PUSH18 0x9F19362E092181B60FA6D8E525E4D9CA9BEA SWAP3 ADDMOD PUSH19 0xA2CEFEAE64736F6C6343000814003300000000 ","sourceMap":"598:1352:20:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@onERC1155BatchReceived_3449":{"entryPoint":656,"id":3449,"parameterSlots":8,"returnSlots":1},"@onERC1155Received_3426":{"entryPoint":680,"id":3426,"parameterSlots":6,"returnSlots":1},"@onERC721Received_3405":{"entryPoint":635,"id":3405,"parameterSlots":5,"returnSlots":1},"@supportsInterface_3479":{"entryPoint":321,"id":3479,"parameterSlots":1,"returnSlots":1},"@tokensReceived_3386":{"entryPoint":311,"id":3386,"parameterSlots":8,"returnSlots":0},"abi_decode_t_address":{"entryPoint":785,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":1533,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes4":{"entryPoint":1235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":875,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":961,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":1619,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":1355,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr":{"entryPoint":1839,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes4":{"entryPoint":1256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":1313,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":1491,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":1328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":1506,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":744,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1301,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":1168,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":712,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":806,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":865,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":860,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":870,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":707,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":702,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":762,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":1212,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":816,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9372:35","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:35","statements":[{"nodeType":"YulAssignment","src":"57:19:35","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:35","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:35"},"nodeType":"YulFunctionCall","src":"67:9:35"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:35"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:35","type":""}],"src":"7:75:35"},{"body":{"nodeType":"YulBlock","src":"177:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:35"},"nodeType":"YulFunctionCall","src":"187:12:35"},"nodeType":"YulExpressionStatement","src":"187:12:35"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:35"},{"body":{"nodeType":"YulBlock","src":"300:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:35"},"nodeType":"YulFunctionCall","src":"310:12:35"},"nodeType":"YulExpressionStatement","src":"310:12:35"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:35"},{"body":{"nodeType":"YulBlock","src":"379:81:35","statements":[{"nodeType":"YulAssignment","src":"389:65:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:35","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:35"},"nodeType":"YulFunctionCall","src":"400:54:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:35"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:35","type":""}],"src":"334:126:35"},{"body":{"nodeType":"YulBlock","src":"511:51:35","statements":[{"nodeType":"YulAssignment","src":"521:35:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:35"},"nodeType":"YulFunctionCall","src":"532:24:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:35"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:35","type":""}],"src":"466:96:35"},{"body":{"nodeType":"YulBlock","src":"611:79:35","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:35"},"nodeType":"YulFunctionCall","src":"670:12:35"},"nodeType":"YulExpressionStatement","src":"670:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:35"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:35"},"nodeType":"YulFunctionCall","src":"641:24:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:35"},"nodeType":"YulFunctionCall","src":"631:35:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:35"},"nodeType":"YulFunctionCall","src":"624:43:35"},"nodeType":"YulIf","src":"621:63:35"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:35","type":""}],"src":"568:122:35"},{"body":{"nodeType":"YulBlock","src":"748:87:35","statements":[{"nodeType":"YulAssignment","src":"758:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:35"},"nodeType":"YulFunctionCall","src":"767:20:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:35"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:35"},"nodeType":"YulFunctionCall","src":"796:33:35"},"nodeType":"YulExpressionStatement","src":"796:33:35"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:35","type":""}],"src":"696:139:35"},{"body":{"nodeType":"YulBlock","src":"886:32:35","statements":[{"nodeType":"YulAssignment","src":"896:16:35","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:35"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:35","type":""}],"src":"841:77:35"},{"body":{"nodeType":"YulBlock","src":"967:79:35","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:35"},"nodeType":"YulFunctionCall","src":"1026:12:35"},"nodeType":"YulExpressionStatement","src":"1026:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:35"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:35"},"nodeType":"YulFunctionCall","src":"997:24:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:35"},"nodeType":"YulFunctionCall","src":"987:35:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:35"},"nodeType":"YulFunctionCall","src":"980:43:35"},"nodeType":"YulIf","src":"977:63:35"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:35","type":""}],"src":"924:122:35"},{"body":{"nodeType":"YulBlock","src":"1104:87:35","statements":[{"nodeType":"YulAssignment","src":"1114:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:35"},"nodeType":"YulFunctionCall","src":"1123:20:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:35"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:35"},"nodeType":"YulFunctionCall","src":"1152:33:35"},"nodeType":"YulExpressionStatement","src":"1152:33:35"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:35","type":""}],"src":"1052:139:35"},{"body":{"nodeType":"YulBlock","src":"1286:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1303:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1306:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1296:6:35"},"nodeType":"YulFunctionCall","src":"1296:12:35"},"nodeType":"YulExpressionStatement","src":"1296:12:35"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1197:117:35"},{"body":{"nodeType":"YulBlock","src":"1409:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1426:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1429:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1419:6:35"},"nodeType":"YulFunctionCall","src":"1419:12:35"},"nodeType":"YulExpressionStatement","src":"1419:12:35"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1320:117:35"},{"body":{"nodeType":"YulBlock","src":"1532:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1549:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1552:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1542:6:35"},"nodeType":"YulFunctionCall","src":"1542:12:35"},"nodeType":"YulExpressionStatement","src":"1542:12:35"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1443:117:35"},{"body":{"nodeType":"YulBlock","src":"1653:478:35","statements":[{"body":{"nodeType":"YulBlock","src":"1702:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1704:77:35"},"nodeType":"YulFunctionCall","src":"1704:79:35"},"nodeType":"YulExpressionStatement","src":"1704:79:35"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1681:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"1689:4:35","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:35"},"nodeType":"YulFunctionCall","src":"1677:17:35"},{"name":"end","nodeType":"YulIdentifier","src":"1696:3:35"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1673:3:35"},"nodeType":"YulFunctionCall","src":"1673:27:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1666:6:35"},"nodeType":"YulFunctionCall","src":"1666:35:35"},"nodeType":"YulIf","src":"1663:122:35"},{"nodeType":"YulAssignment","src":"1794:30:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1817:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1804:12:35"},"nodeType":"YulFunctionCall","src":"1804:20:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1794:6:35"}]},{"body":{"nodeType":"YulBlock","src":"1867:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1869:77:35"},"nodeType":"YulFunctionCall","src":"1869:79:35"},"nodeType":"YulExpressionStatement","src":"1869:79:35"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1839:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"1847:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1836:2:35"},"nodeType":"YulFunctionCall","src":"1836:30:35"},"nodeType":"YulIf","src":"1833:117:35"},{"nodeType":"YulAssignment","src":"1959:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1975:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"1983:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1971:3:35"},"nodeType":"YulFunctionCall","src":"1971:17:35"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1959:8:35"}]},{"body":{"nodeType":"YulBlock","src":"2042:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2044:77:35"},"nodeType":"YulFunctionCall","src":"2044:79:35"},"nodeType":"YulExpressionStatement","src":"2044:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2007:8:35"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2021:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"2029:4:35","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2017:3:35"},"nodeType":"YulFunctionCall","src":"2017:17:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2003:3:35"},"nodeType":"YulFunctionCall","src":"2003:32:35"},{"name":"end","nodeType":"YulIdentifier","src":"2037:3:35"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2000:2:35"},"nodeType":"YulFunctionCall","src":"2000:41:35"},"nodeType":"YulIf","src":"1997:128:35"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1620:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"1628:3:35","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1636:8:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"1646:6:35","type":""}],"src":"1579:552:35"},{"body":{"nodeType":"YulBlock","src":"2326:1264:35","statements":[{"body":{"nodeType":"YulBlock","src":"2373:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2375:77:35"},"nodeType":"YulFunctionCall","src":"2375:79:35"},"nodeType":"YulExpressionStatement","src":"2375:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2347:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"2356:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2343:3:35"},"nodeType":"YulFunctionCall","src":"2343:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"2368:3:35","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2339:3:35"},"nodeType":"YulFunctionCall","src":"2339:33:35"},"nodeType":"YulIf","src":"2336:120:35"},{"nodeType":"YulBlock","src":"2466:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2481:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2495:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2485:6:35","type":""}]},{"nodeType":"YulAssignment","src":"2510:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2545:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"2556:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2541:3:35"},"nodeType":"YulFunctionCall","src":"2541:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2565:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2520:20:35"},"nodeType":"YulFunctionCall","src":"2520:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2510:6:35"}]}]},{"nodeType":"YulBlock","src":"2593:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2608:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2622:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2612:6:35","type":""}]},{"nodeType":"YulAssignment","src":"2638:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2673:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"2684:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2669:3:35"},"nodeType":"YulFunctionCall","src":"2669:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2693:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2648:20:35"},"nodeType":"YulFunctionCall","src":"2648:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2638:6:35"}]}]},{"nodeType":"YulBlock","src":"2721:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2736:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2750:2:35","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2740:6:35","type":""}]},{"nodeType":"YulAssignment","src":"2766:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2801:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"2812:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2797:3:35"},"nodeType":"YulFunctionCall","src":"2797:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2821:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2776:20:35"},"nodeType":"YulFunctionCall","src":"2776:53:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2766:6:35"}]}]},{"nodeType":"YulBlock","src":"2849:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2864:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2878:2:35","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2868:6:35","type":""}]},{"nodeType":"YulAssignment","src":"2894:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2929:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"2940:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2925:3:35"},"nodeType":"YulFunctionCall","src":"2925:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2949:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2904:20:35"},"nodeType":"YulFunctionCall","src":"2904:53:35"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2894:6:35"}]}]},{"nodeType":"YulBlock","src":"2977:298:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2992:47:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3023:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"3034:3:35","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3019:3:35"},"nodeType":"YulFunctionCall","src":"3019:19:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3006:12:35"},"nodeType":"YulFunctionCall","src":"3006:33:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2996:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"3086:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3088:77:35"},"nodeType":"YulFunctionCall","src":"3088:79:35"},"nodeType":"YulExpressionStatement","src":"3088:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3058:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"3066:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3055:2:35"},"nodeType":"YulFunctionCall","src":"3055:30:35"},"nodeType":"YulIf","src":"3052:117:35"},{"nodeType":"YulAssignment","src":"3183:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3237:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"3248:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:35"},"nodeType":"YulFunctionCall","src":"3233:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3257:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3201:31:35"},"nodeType":"YulFunctionCall","src":"3201:64:35"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3183:6:35"},{"name":"value5","nodeType":"YulIdentifier","src":"3191:6:35"}]}]},{"nodeType":"YulBlock","src":"3285:298:35","statements":[{"nodeType":"YulVariableDeclaration","src":"3300:47:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3331:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"3342:3:35","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3327:3:35"},"nodeType":"YulFunctionCall","src":"3327:19:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3314:12:35"},"nodeType":"YulFunctionCall","src":"3314:33:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3304:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"3394:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3396:77:35"},"nodeType":"YulFunctionCall","src":"3396:79:35"},"nodeType":"YulExpressionStatement","src":"3396:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3366:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"3374:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3363:2:35"},"nodeType":"YulFunctionCall","src":"3363:30:35"},"nodeType":"YulIf","src":"3360:117:35"},{"nodeType":"YulAssignment","src":"3491:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3545:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"3556:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3541:3:35"},"nodeType":"YulFunctionCall","src":"3541:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3565:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3509:31:35"},"nodeType":"YulFunctionCall","src":"3509:64:35"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3491:6:35"},{"name":"value7","nodeType":"YulIdentifier","src":"3499:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2240:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2251:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2263:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2271:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2279:6:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2287:6:35","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2295:6:35","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2303:6:35","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2311:6:35","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2319:6:35","type":""}],"src":"2137:1453:35"},{"body":{"nodeType":"YulBlock","src":"3640:105:35","statements":[{"nodeType":"YulAssignment","src":"3650:89:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3665:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"3672:66:35","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3661:3:35"},"nodeType":"YulFunctionCall","src":"3661:78:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3650:7:35"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3622:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3632:7:35","type":""}],"src":"3596:149:35"},{"body":{"nodeType":"YulBlock","src":"3793:78:35","statements":[{"body":{"nodeType":"YulBlock","src":"3849:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3858:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3861:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3851:6:35"},"nodeType":"YulFunctionCall","src":"3851:12:35"},"nodeType":"YulExpressionStatement","src":"3851:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3816:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3840:5:35"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"3823:16:35"},"nodeType":"YulFunctionCall","src":"3823:23:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3813:2:35"},"nodeType":"YulFunctionCall","src":"3813:34:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3806:6:35"},"nodeType":"YulFunctionCall","src":"3806:42:35"},"nodeType":"YulIf","src":"3803:62:35"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3786:5:35","type":""}],"src":"3751:120:35"},{"body":{"nodeType":"YulBlock","src":"3928:86:35","statements":[{"nodeType":"YulAssignment","src":"3938:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3960:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3947:12:35"},"nodeType":"YulFunctionCall","src":"3947:20:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4002:5:35"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"3976:25:35"},"nodeType":"YulFunctionCall","src":"3976:32:35"},"nodeType":"YulExpressionStatement","src":"3976:32:35"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3906:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"3914:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3922:5:35","type":""}],"src":"3877:137:35"},{"body":{"nodeType":"YulBlock","src":"4085:262:35","statements":[{"body":{"nodeType":"YulBlock","src":"4131:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4133:77:35"},"nodeType":"YulFunctionCall","src":"4133:79:35"},"nodeType":"YulExpressionStatement","src":"4133:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4106:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"4115:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4102:3:35"},"nodeType":"YulFunctionCall","src":"4102:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"4127:2:35","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4098:3:35"},"nodeType":"YulFunctionCall","src":"4098:32:35"},"nodeType":"YulIf","src":"4095:119:35"},{"nodeType":"YulBlock","src":"4224:116:35","statements":[{"nodeType":"YulVariableDeclaration","src":"4239:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"4253:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4243:6:35","type":""}]},{"nodeType":"YulAssignment","src":"4268:62:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4302:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"4313:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4298:3:35"},"nodeType":"YulFunctionCall","src":"4298:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4322:7:35"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"4278:19:35"},"nodeType":"YulFunctionCall","src":"4278:52:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4268:6:35"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4055:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4066:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4078:6:35","type":""}],"src":"4020:327:35"},{"body":{"nodeType":"YulBlock","src":"4395:48:35","statements":[{"nodeType":"YulAssignment","src":"4405:32:35","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4430:5:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4423:6:35"},"nodeType":"YulFunctionCall","src":"4423:13:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4416:6:35"},"nodeType":"YulFunctionCall","src":"4416:21:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4405:7:35"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4377:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4387:7:35","type":""}],"src":"4353:90:35"},{"body":{"nodeType":"YulBlock","src":"4508:50:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4525:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4545:5:35"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4530:14:35"},"nodeType":"YulFunctionCall","src":"4530:21:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4518:6:35"},"nodeType":"YulFunctionCall","src":"4518:34:35"},"nodeType":"YulExpressionStatement","src":"4518:34:35"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4503:3:35","type":""}],"src":"4449:109:35"},{"body":{"nodeType":"YulBlock","src":"4656:118:35","statements":[{"nodeType":"YulAssignment","src":"4666:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4678:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"4689:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4674:3:35"},"nodeType":"YulFunctionCall","src":"4674:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4666:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4740:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4753:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"4764:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4749:3:35"},"nodeType":"YulFunctionCall","src":"4749:17:35"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4702:37:35"},"nodeType":"YulFunctionCall","src":"4702:65:35"},"nodeType":"YulExpressionStatement","src":"4702:65:35"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4628:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4640:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4651:4:35","type":""}],"src":"4564:210:35"},{"body":{"nodeType":"YulBlock","src":"4916:827:35","statements":[{"body":{"nodeType":"YulBlock","src":"4963:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4965:77:35"},"nodeType":"YulFunctionCall","src":"4965:79:35"},"nodeType":"YulExpressionStatement","src":"4965:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4937:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"4946:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4933:3:35"},"nodeType":"YulFunctionCall","src":"4933:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"4958:3:35","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4929:3:35"},"nodeType":"YulFunctionCall","src":"4929:33:35"},"nodeType":"YulIf","src":"4926:120:35"},{"nodeType":"YulBlock","src":"5056:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"5071:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"5085:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5075:6:35","type":""}]},{"nodeType":"YulAssignment","src":"5100:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5135:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"5146:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:35"},"nodeType":"YulFunctionCall","src":"5131:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5155:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5110:20:35"},"nodeType":"YulFunctionCall","src":"5110:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5100:6:35"}]}]},{"nodeType":"YulBlock","src":"5183:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"5198:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"5212:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5202:6:35","type":""}]},{"nodeType":"YulAssignment","src":"5228:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5263:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"5274:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5259:3:35"},"nodeType":"YulFunctionCall","src":"5259:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5283:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5238:20:35"},"nodeType":"YulFunctionCall","src":"5238:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5228:6:35"}]}]},{"nodeType":"YulBlock","src":"5311:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"5326:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"5340:2:35","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5330:6:35","type":""}]},{"nodeType":"YulAssignment","src":"5356:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5391:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"5402:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5387:3:35"},"nodeType":"YulFunctionCall","src":"5387:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5411:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5366:20:35"},"nodeType":"YulFunctionCall","src":"5366:53:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5356:6:35"}]}]},{"nodeType":"YulBlock","src":"5439:297:35","statements":[{"nodeType":"YulVariableDeclaration","src":"5454:46:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5485:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"5496:2:35","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5481:3:35"},"nodeType":"YulFunctionCall","src":"5481:18:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5468:12:35"},"nodeType":"YulFunctionCall","src":"5468:32:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5458:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"5547:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5549:77:35"},"nodeType":"YulFunctionCall","src":"5549:79:35"},"nodeType":"YulExpressionStatement","src":"5549:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5519:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"5527:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5516:2:35"},"nodeType":"YulFunctionCall","src":"5516:30:35"},"nodeType":"YulIf","src":"5513:117:35"},{"nodeType":"YulAssignment","src":"5644:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5698:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"5709:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5694:3:35"},"nodeType":"YulFunctionCall","src":"5694:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5718:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"5662:31:35"},"nodeType":"YulFunctionCall","src":"5662:64:35"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5644:6:35"},{"name":"value4","nodeType":"YulIdentifier","src":"5652:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4854:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4865:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4877:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4885:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4893:6:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4901:6:35","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4909:6:35","type":""}],"src":"4780:963:35"},{"body":{"nodeType":"YulBlock","src":"5812:52:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5829:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5851:5:35"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"5834:16:35"},"nodeType":"YulFunctionCall","src":"5834:23:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5822:6:35"},"nodeType":"YulFunctionCall","src":"5822:36:35"},"nodeType":"YulExpressionStatement","src":"5822:36:35"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5800:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5807:3:35","type":""}],"src":"5749:115:35"},{"body":{"nodeType":"YulBlock","src":"5966:122:35","statements":[{"nodeType":"YulAssignment","src":"5976:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5988:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"5999:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5984:3:35"},"nodeType":"YulFunctionCall","src":"5984:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5976:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6054:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6067:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"6078:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6063:3:35"},"nodeType":"YulFunctionCall","src":"6063:17:35"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"6012:41:35"},"nodeType":"YulFunctionCall","src":"6012:69:35"},"nodeType":"YulExpressionStatement","src":"6012:69:35"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5938:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5950:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5961:4:35","type":""}],"src":"5870:218:35"},{"body":{"nodeType":"YulBlock","src":"6201:478:35","statements":[{"body":{"nodeType":"YulBlock","src":"6250:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6252:77:35"},"nodeType":"YulFunctionCall","src":"6252:79:35"},"nodeType":"YulExpressionStatement","src":"6252:79:35"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6229:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"6237:4:35","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6225:3:35"},"nodeType":"YulFunctionCall","src":"6225:17:35"},{"name":"end","nodeType":"YulIdentifier","src":"6244:3:35"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6221:3:35"},"nodeType":"YulFunctionCall","src":"6221:27:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6214:6:35"},"nodeType":"YulFunctionCall","src":"6214:35:35"},"nodeType":"YulIf","src":"6211:122:35"},{"nodeType":"YulAssignment","src":"6342:30:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6365:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6352:12:35"},"nodeType":"YulFunctionCall","src":"6352:20:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6342:6:35"}]},{"body":{"nodeType":"YulBlock","src":"6415:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6417:77:35"},"nodeType":"YulFunctionCall","src":"6417:79:35"},"nodeType":"YulExpressionStatement","src":"6417:79:35"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6387:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"6395:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6384:2:35"},"nodeType":"YulFunctionCall","src":"6384:30:35"},"nodeType":"YulIf","src":"6381:117:35"},{"nodeType":"YulAssignment","src":"6507:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6523:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"6531:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6519:3:35"},"nodeType":"YulFunctionCall","src":"6519:17:35"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6507:8:35"}]},{"body":{"nodeType":"YulBlock","src":"6590:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6592:77:35"},"nodeType":"YulFunctionCall","src":"6592:79:35"},"nodeType":"YulExpressionStatement","src":"6592:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6555:8:35"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6569:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"6577:4:35","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6565:3:35"},"nodeType":"YulFunctionCall","src":"6565:17:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6551:3:35"},"nodeType":"YulFunctionCall","src":"6551:32:35"},{"name":"end","nodeType":"YulIdentifier","src":"6585:3:35"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6548:2:35"},"nodeType":"YulFunctionCall","src":"6548:41:35"},"nodeType":"YulIf","src":"6545:128:35"}]},"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6168:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"6176:3:35","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6184:8:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"6194:6:35","type":""}],"src":"6111:568:35"},{"body":{"nodeType":"YulBlock","src":"6908:1346:35","statements":[{"body":{"nodeType":"YulBlock","src":"6955:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6957:77:35"},"nodeType":"YulFunctionCall","src":"6957:79:35"},"nodeType":"YulExpressionStatement","src":"6957:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6929:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"6938:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6925:3:35"},"nodeType":"YulFunctionCall","src":"6925:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"6950:3:35","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6921:3:35"},"nodeType":"YulFunctionCall","src":"6921:33:35"},"nodeType":"YulIf","src":"6918:120:35"},{"nodeType":"YulBlock","src":"7048:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"7063:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"7077:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7067:6:35","type":""}]},{"nodeType":"YulAssignment","src":"7092:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7127:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"7138:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7123:3:35"},"nodeType":"YulFunctionCall","src":"7123:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7147:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7102:20:35"},"nodeType":"YulFunctionCall","src":"7102:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7092:6:35"}]}]},{"nodeType":"YulBlock","src":"7175:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"7190:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"7204:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7194:6:35","type":""}]},{"nodeType":"YulAssignment","src":"7220:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7255:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"7266:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7251:3:35"},"nodeType":"YulFunctionCall","src":"7251:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7275:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7230:20:35"},"nodeType":"YulFunctionCall","src":"7230:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7220:6:35"}]}]},{"nodeType":"YulBlock","src":"7303:313:35","statements":[{"nodeType":"YulVariableDeclaration","src":"7318:46:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7349:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"7360:2:35","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7345:3:35"},"nodeType":"YulFunctionCall","src":"7345:18:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7332:12:35"},"nodeType":"YulFunctionCall","src":"7332:32:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7322:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"7411:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7413:77:35"},"nodeType":"YulFunctionCall","src":"7413:79:35"},"nodeType":"YulExpressionStatement","src":"7413:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7383:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"7391:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7380:2:35"},"nodeType":"YulFunctionCall","src":"7380:30:35"},"nodeType":"YulIf","src":"7377:117:35"},{"nodeType":"YulAssignment","src":"7508:98:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7578:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"7589:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7574:3:35"},"nodeType":"YulFunctionCall","src":"7574:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7598:7:35"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7526:47:35"},"nodeType":"YulFunctionCall","src":"7526:80:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7508:6:35"},{"name":"value3","nodeType":"YulIdentifier","src":"7516:6:35"}]}]},{"nodeType":"YulBlock","src":"7626:313:35","statements":[{"nodeType":"YulVariableDeclaration","src":"7641:46:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7672:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"7683:2:35","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7668:3:35"},"nodeType":"YulFunctionCall","src":"7668:18:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7655:12:35"},"nodeType":"YulFunctionCall","src":"7655:32:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7645:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"7734:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7736:77:35"},"nodeType":"YulFunctionCall","src":"7736:79:35"},"nodeType":"YulExpressionStatement","src":"7736:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7706:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"7714:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7703:2:35"},"nodeType":"YulFunctionCall","src":"7703:30:35"},"nodeType":"YulIf","src":"7700:117:35"},{"nodeType":"YulAssignment","src":"7831:98:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7901:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"7912:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:35"},"nodeType":"YulFunctionCall","src":"7897:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7921:7:35"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7849:47:35"},"nodeType":"YulFunctionCall","src":"7849:80:35"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7831:6:35"},{"name":"value5","nodeType":"YulIdentifier","src":"7839:6:35"}]}]},{"nodeType":"YulBlock","src":"7949:298:35","statements":[{"nodeType":"YulVariableDeclaration","src":"7964:47:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7995:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"8006:3:35","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7991:3:35"},"nodeType":"YulFunctionCall","src":"7991:19:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7978:12:35"},"nodeType":"YulFunctionCall","src":"7978:33:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7968:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"8058:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8060:77:35"},"nodeType":"YulFunctionCall","src":"8060:79:35"},"nodeType":"YulExpressionStatement","src":"8060:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8030:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"8038:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8027:2:35"},"nodeType":"YulFunctionCall","src":"8027:30:35"},"nodeType":"YulIf","src":"8024:117:35"},{"nodeType":"YulAssignment","src":"8155:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8209:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"8220:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8205:3:35"},"nodeType":"YulFunctionCall","src":"8205:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8229:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"8173:31:35"},"nodeType":"YulFunctionCall","src":"8173:64:35"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"8155:6:35"},{"name":"value7","nodeType":"YulIdentifier","src":"8163:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6822:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6833:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6845:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6853:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6861:6:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6869:6:35","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6877:6:35","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6885:6:35","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6893:6:35","type":""},{"name":"value7","nodeType":"YulTypedName","src":"6901:6:35","type":""}],"src":"6685:1569:35"},{"body":{"nodeType":"YulBlock","src":"8413:956:35","statements":[{"body":{"nodeType":"YulBlock","src":"8460:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8462:77:35"},"nodeType":"YulFunctionCall","src":"8462:79:35"},"nodeType":"YulExpressionStatement","src":"8462:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8434:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"8443:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8430:3:35"},"nodeType":"YulFunctionCall","src":"8430:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"8455:3:35","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8426:3:35"},"nodeType":"YulFunctionCall","src":"8426:33:35"},"nodeType":"YulIf","src":"8423:120:35"},{"nodeType":"YulBlock","src":"8553:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"8568:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"8582:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8572:6:35","type":""}]},{"nodeType":"YulAssignment","src":"8597:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8632:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"8643:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8628:3:35"},"nodeType":"YulFunctionCall","src":"8628:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8652:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8607:20:35"},"nodeType":"YulFunctionCall","src":"8607:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8597:6:35"}]}]},{"nodeType":"YulBlock","src":"8680:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"8695:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"8709:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8699:6:35","type":""}]},{"nodeType":"YulAssignment","src":"8725:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8760:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"8771:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8756:3:35"},"nodeType":"YulFunctionCall","src":"8756:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8780:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8735:20:35"},"nodeType":"YulFunctionCall","src":"8735:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8725:6:35"}]}]},{"nodeType":"YulBlock","src":"8808:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"8823:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"8837:2:35","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8827:6:35","type":""}]},{"nodeType":"YulAssignment","src":"8853:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8888:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"8899:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8884:3:35"},"nodeType":"YulFunctionCall","src":"8884:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8908:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8863:20:35"},"nodeType":"YulFunctionCall","src":"8863:53:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8853:6:35"}]}]},{"nodeType":"YulBlock","src":"8936:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"8951:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"8965:2:35","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8955:6:35","type":""}]},{"nodeType":"YulAssignment","src":"8981:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9016:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"9027:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9012:3:35"},"nodeType":"YulFunctionCall","src":"9012:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9036:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8991:20:35"},"nodeType":"YulFunctionCall","src":"8991:53:35"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8981:6:35"}]}]},{"nodeType":"YulBlock","src":"9064:298:35","statements":[{"nodeType":"YulVariableDeclaration","src":"9079:47:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9110:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"9121:3:35","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9106:3:35"},"nodeType":"YulFunctionCall","src":"9106:19:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9093:12:35"},"nodeType":"YulFunctionCall","src":"9093:33:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9083:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"9173:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9175:77:35"},"nodeType":"YulFunctionCall","src":"9175:79:35"},"nodeType":"YulExpressionStatement","src":"9175:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9145:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"9153:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9142:2:35"},"nodeType":"YulFunctionCall","src":"9142:30:35"},"nodeType":"YulIf","src":"9139:117:35"},{"nodeType":"YulAssignment","src":"9270:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9324:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"9335:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9320:3:35"},"nodeType":"YulFunctionCall","src":"9320:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9344:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"9288:31:35"},"nodeType":"YulFunctionCall","src":"9288:64:35"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9270:6:35"},{"name":"value5","nodeType":"YulIdentifier","src":"9278:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8343:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8354:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8366:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8374:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8382:6:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8390:6:35","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8398:6:35","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8406:6:35","type":""}],"src":"8260:1109:35"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":35,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100565760003560e01c806223de291461005b57806301ffc9a714610077578063150b7a02146100a7578063bc197c81146100d7578063f23a6e6114610107575b600080fd5b610075600480360381019061007091906103c1565b610137565b005b610091600480360381019061008c91906104e8565b610141565b60405161009e9190610530565b60405180910390f35b6100c160048036038101906100bc919061054b565b61027b565b6040516100ce91906105e2565b60405180910390f35b6100f160048036038101906100ec9190610653565b610290565b6040516100fe91906105e2565b60405180910390f35b610121600480360381019061011c919061072f565b6102a8565b60405161012e91906105e2565b60405180910390f35b5050505050505050565b60007f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061020c57507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061027457507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600063150b7a0260e01b905095945050505050565b600063bc197c8160e01b905098975050505050505050565b600063f23a6e6160e01b90509695505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f3826102c8565b9050919050565b610303816102e8565b811461030e57600080fd5b50565b600081359050610320816102fa565b92915050565b6000819050919050565b61033981610326565b811461034457600080fd5b50565b60008135905061035681610330565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126103815761038061035c565b5b8235905067ffffffffffffffff81111561039e5761039d610361565b5b6020830191508360018202830111156103ba576103b9610366565b5b9250929050565b60008060008060008060008060c0898b0312156103e1576103e06102be565b5b60006103ef8b828c01610311565b98505060206104008b828c01610311565b97505060406104118b828c01610311565b96505060606104228b828c01610347565b955050608089013567ffffffffffffffff811115610443576104426102c3565b5b61044f8b828c0161036b565b945094505060a089013567ffffffffffffffff811115610472576104716102c3565b5b61047e8b828c0161036b565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6104c581610490565b81146104d057600080fd5b50565b6000813590506104e2816104bc565b92915050565b6000602082840312156104fe576104fd6102be565b5b600061050c848285016104d3565b91505092915050565b60008115159050919050565b61052a81610515565b82525050565b60006020820190506105456000830184610521565b92915050565b600080600080600060808688031215610567576105666102be565b5b600061057588828901610311565b955050602061058688828901610311565b945050604061059788828901610347565b935050606086013567ffffffffffffffff8111156105b8576105b76102c3565b5b6105c48882890161036b565b92509250509295509295909350565b6105dc81610490565b82525050565b60006020820190506105f760008301846105d3565b92915050565b60008083601f8401126106135761061261035c565b5b8235905067ffffffffffffffff8111156106305761062f610361565b5b60208301915083602082028301111561064c5761064b610366565b5b9250929050565b60008060008060008060008060a0898b031215610673576106726102be565b5b60006106818b828c01610311565b98505060206106928b828c01610311565b975050604089013567ffffffffffffffff8111156106b3576106b26102c3565b5b6106bf8b828c016105fd565b9650965050606089013567ffffffffffffffff8111156106e2576106e16102c3565b5b6106ee8b828c016105fd565b9450945050608089013567ffffffffffffffff811115610711576107106102c3565b5b61071d8b828c0161036b565b92509250509295985092959890939650565b60008060008060008060a0878903121561074c5761074b6102be565b5b600061075a89828a01610311565b965050602061076b89828a01610311565b955050604061077c89828a01610347565b945050606061078d89828a01610347565b935050608087013567ffffffffffffffff8111156107ae576107ad6102c3565b5b6107ba89828a0161036b565b9250925050929550929550929556fea2646970667358221220fdf835fa355d719f19362e092181b60fa6d8e525e4d9ca9bea920872a2cefeae64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x54B JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x653 JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x20C JUMPI POP PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3 DUP3 PUSH2 0x2C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x303 DUP2 PUSH2 0x2E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x320 DUP2 PUSH2 0x2FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x339 DUP2 PUSH2 0x326 JUMP JUMPDEST DUP2 EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x356 DUP2 PUSH2 0x330 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x35C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0x361 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x366 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3E1 JUMPI PUSH2 0x3E0 PUSH2 0x2BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EF DUP12 DUP3 DUP13 ADD PUSH2 0x311 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x400 DUP12 DUP3 DUP13 ADD PUSH2 0x311 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x411 DUP12 DUP3 DUP13 ADD PUSH2 0x311 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x422 DUP12 DUP3 DUP13 ADD PUSH2 0x347 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH2 0x442 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x44F DUP12 DUP3 DUP13 ADD PUSH2 0x36B JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x472 JUMPI PUSH2 0x471 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x47E DUP12 DUP3 DUP13 ADD PUSH2 0x36B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C5 DUP2 PUSH2 0x490 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E2 DUP2 PUSH2 0x4BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FE JUMPI PUSH2 0x4FD PUSH2 0x2BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP5 DUP3 DUP6 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52A DUP2 PUSH2 0x515 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x545 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x2BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x575 DUP9 DUP3 DUP10 ADD PUSH2 0x311 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x586 DUP9 DUP3 DUP10 ADD PUSH2 0x311 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x597 DUP9 DUP3 DUP10 ADD PUSH2 0x347 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B8 JUMPI PUSH2 0x5B7 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x5C4 DUP9 DUP3 DUP10 ADD PUSH2 0x36B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x5DC DUP2 PUSH2 0x490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x613 JUMPI PUSH2 0x612 PUSH2 0x35C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x630 JUMPI PUSH2 0x62F PUSH2 0x361 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x64C JUMPI PUSH2 0x64B PUSH2 0x366 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x673 JUMPI PUSH2 0x672 PUSH2 0x2BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x681 DUP12 DUP3 DUP13 ADD PUSH2 0x311 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x692 DUP12 DUP3 DUP13 ADD PUSH2 0x311 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x6BF DUP12 DUP3 DUP13 ADD PUSH2 0x5FD JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E2 JUMPI PUSH2 0x6E1 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x6EE DUP12 DUP3 DUP13 ADD PUSH2 0x5FD JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x711 JUMPI PUSH2 0x710 PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x71D DUP12 DUP3 DUP13 ADD PUSH2 0x36B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH2 0x74B PUSH2 0x2BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x75A DUP10 DUP3 DUP11 ADD PUSH2 0x311 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x76B DUP10 DUP3 DUP11 ADD PUSH2 0x311 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x77C DUP10 DUP3 DUP11 ADD PUSH2 0x347 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x78D DUP10 DUP3 DUP11 ADD PUSH2 0x347 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7AE JUMPI PUSH2 0x7AD PUSH2 0x2C3 JUMP JUMPDEST JUMPDEST PUSH2 0x7BA DUP10 DUP3 DUP11 ADD PUSH2 0x36B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xF8 CALLDATALOAD STATICCALL CALLDATALOAD 0x5D PUSH18 0x9F19362E092181B60FA6D8E525E4D9CA9BEA SWAP3 ADDMOD PUSH19 0xA2CEFEAE64736F6C6343000814003300000000 ","sourceMap":"598:1352:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;672:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1644:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;889:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1364:272;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1116:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;672:209;;;;;;;;;:::o;1644:303::-;1731:4;1783:33;1768:48;;;:11;:48;;;;:114;;;;1848:34;1833:49;;;:11;:49;;;;1768:114;:171;;;;1914:25;1899:40;;;:11;:40;;;;1768:171;1748:191;;1644:303;;;:::o;889:219::-;1033:6;1059:41;;;1052:48;;889:219;;;;;;;:::o;1364:272::-;1554:6;1580:48;;;1573:55;;1364:272;;;;;;;;;;:::o;1116:240::-;1279:6;1305:43;;;1298:50;;1116:240;;;;;;;;:::o;88:117:35:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:1453::-;2263:6;2271;2279;2287;2295;2303;2311;2319;2368:3;2356:9;2347:7;2343:23;2339:33;2336:120;;;2375:79;;:::i;:::-;2336:120;2495:1;2520:53;2565:7;2556:6;2545:9;2541:22;2520:53;:::i;:::-;2510:63;;2466:117;2622:2;2648:53;2693:7;2684:6;2673:9;2669:22;2648:53;:::i;:::-;2638:63;;2593:118;2750:2;2776:53;2821:7;2812:6;2801:9;2797:22;2776:53;:::i;:::-;2766:63;;2721:118;2878:2;2904:53;2949:7;2940:6;2929:9;2925:22;2904:53;:::i;:::-;2894:63;;2849:118;3034:3;3023:9;3019:19;3006:33;3066:18;3058:6;3055:30;3052:117;;;3088:79;;:::i;:::-;3052:117;3201:64;3257:7;3248:6;3237:9;3233:22;3201:64;:::i;:::-;3183:82;;;;2977:298;3342:3;3331:9;3327:19;3314:33;3374:18;3366:6;3363:30;3360:117;;;3396:79;;:::i;:::-;3360:117;3509:64;3565:7;3556:6;3545:9;3541:22;3509:64;:::i;:::-;3491:82;;;;3285:298;2137:1453;;;;;;;;;;;:::o;3596:149::-;3632:7;3672:66;3665:5;3661:78;3650:89;;3596:149;;;:::o;3751:120::-;3823:23;3840:5;3823:23;:::i;:::-;3816:5;3813:34;3803:62;;3861:1;3858;3851:12;3803:62;3751:120;:::o;3877:137::-;3922:5;3960:6;3947:20;3938:29;;3976:32;4002:5;3976:32;:::i;:::-;3877:137;;;;:::o;4020:327::-;4078:6;4127:2;4115:9;4106:7;4102:23;4098:32;4095:119;;;4133:79;;:::i;:::-;4095:119;4253:1;4278:52;4322:7;4313:6;4302:9;4298:22;4278:52;:::i;:::-;4268:62;;4224:116;4020:327;;;;:::o;4353:90::-;4387:7;4430:5;4423:13;4416:21;4405:32;;4353:90;;;:::o;4449:109::-;4530:21;4545:5;4530:21;:::i;:::-;4525:3;4518:34;4449:109;;:::o;4564:210::-;4651:4;4689:2;4678:9;4674:18;4666:26;;4702:65;4764:1;4753:9;4749:17;4740:6;4702:65;:::i;:::-;4564:210;;;;:::o;4780:963::-;4877:6;4885;4893;4901;4909;4958:3;4946:9;4937:7;4933:23;4929:33;4926:120;;;4965:79;;:::i;:::-;4926:120;5085:1;5110:53;5155:7;5146:6;5135:9;5131:22;5110:53;:::i;:::-;5100:63;;5056:117;5212:2;5238:53;5283:7;5274:6;5263:9;5259:22;5238:53;:::i;:::-;5228:63;;5183:118;5340:2;5366:53;5411:7;5402:6;5391:9;5387:22;5366:53;:::i;:::-;5356:63;;5311:118;5496:2;5485:9;5481:18;5468:32;5527:18;5519:6;5516:30;5513:117;;;5549:79;;:::i;:::-;5513:117;5662:64;5718:7;5709:6;5698:9;5694:22;5662:64;:::i;:::-;5644:82;;;;5439:297;4780:963;;;;;;;;:::o;5749:115::-;5834:23;5851:5;5834:23;:::i;:::-;5829:3;5822:36;5749:115;;:::o;5870:218::-;5961:4;5999:2;5988:9;5984:18;5976:26;;6012:69;6078:1;6067:9;6063:17;6054:6;6012:69;:::i;:::-;5870:218;;;;:::o;6111:568::-;6184:8;6194:6;6244:3;6237:4;6229:6;6225:17;6221:27;6211:122;;6252:79;;:::i;:::-;6211:122;6365:6;6352:20;6342:30;;6395:18;6387:6;6384:30;6381:117;;;6417:79;;:::i;:::-;6381:117;6531:4;6523:6;6519:17;6507:29;;6585:3;6577:4;6569:6;6565:17;6555:8;6551:32;6548:41;6545:128;;;6592:79;;:::i;:::-;6545:128;6111:568;;;;;:::o;6685:1569::-;6845:6;6853;6861;6869;6877;6885;6893;6901;6950:3;6938:9;6929:7;6925:23;6921:33;6918:120;;;6957:79;;:::i;:::-;6918:120;7077:1;7102:53;7147:7;7138:6;7127:9;7123:22;7102:53;:::i;:::-;7092:63;;7048:117;7204:2;7230:53;7275:7;7266:6;7255:9;7251:22;7230:53;:::i;:::-;7220:63;;7175:118;7360:2;7349:9;7345:18;7332:32;7391:18;7383:6;7380:30;7377:117;;;7413:79;;:::i;:::-;7377:117;7526:80;7598:7;7589:6;7578:9;7574:22;7526:80;:::i;:::-;7508:98;;;;7303:313;7683:2;7672:9;7668:18;7655:32;7714:18;7706:6;7703:30;7700:117;;;7736:79;;:::i;:::-;7700:117;7849:80;7921:7;7912:6;7901:9;7897:22;7849:80;:::i;:::-;7831:98;;;;7626:313;8006:3;7995:9;7991:19;7978:33;8038:18;8030:6;8027:30;8024:117;;;8060:79;;:::i;:::-;8024:117;8173:64;8229:7;8220:6;8209:9;8205:22;8173:64;:::i;:::-;8155:82;;;;7949:298;6685:1569;;;;;;;;;;;:::o;8260:1109::-;8366:6;8374;8382;8390;8398;8406;8455:3;8443:9;8434:7;8430:23;8426:33;8423:120;;;8462:79;;:::i;:::-;8423:120;8582:1;8607:53;8652:7;8643:6;8632:9;8628:22;8607:53;:::i;:::-;8597:63;;8553:117;8709:2;8735:53;8780:7;8771:6;8760:9;8756:22;8735:53;:::i;:::-;8725:63;;8680:118;8837:2;8863:53;8908:7;8899:6;8888:9;8884:22;8863:53;:::i;:::-;8853:63;;8808:118;8965:2;8991:53;9036:7;9027:6;9016:9;9012:22;8991:53;:::i;:::-;8981:63;;8936:118;9121:3;9110:9;9106:19;9093:33;9153:18;9145:6;9142:30;9139:117;;;9175:79;;:::i;:::-;9139:117;9288:64;9344:7;9335:6;9324:9;9320:22;9288:64;:::i;:::-;9270:82;;;;9064:298;8260:1109;;;;;;;;:::o"},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","supportsInterface(bytes4)":"01ffc9a7","tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Token callback handler.   Handles supported tokens' callbacks, allowing account receiving these tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/callback/TokenCallbackHandler.sol\":\"TokenCallbackHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0x1e0a5c9521d8b461ad61da86901083c237e47a0b49f539b755b326fe533cf058\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2550f4aac302b1d50d42c76b276a89f168dca0a1d36360f99d00499408a40e13\",\"dweb:/ipfs/QmQcDvE1RNzaVR3dR2Zn8bjavd9eZrXzjqRZXCrthQ9oLT\"]}},\"version\":1}"}},"contracts/core/BaseAccount.sol":{"BaseAccount":{"abi":[{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"entryPoint()":"b0d691fe","getNonce()":"d087d288","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"missingAccountFunds\":\"- The amount of funds missing from the account                              to pay for the user operation.\",\"userOp\":\"- The user operation to validate.\",\"userOpHash\":\"- The hash of the user operation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. Subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"notice\":\"Basic account implementation. This contract provides the basic logic for implementing the IAccount interface - validateUserOp Specific account implementation should inherit it and provide the account-specific logic.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x15cc56a156d2bd4b60217632bfceb744330e39c3360010439a6582bbf5647fab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fa4eb98339236bfc08e8a1fb692323ffd21c1bebad2a75f35656349f0603f4a1\",\"dweb:/ipfs/QmTr4fZQTLbX5St78PweaCys9k8bMA3rqKh1RKKjmxWdgL\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x341c6c70a05b8f2c7a093e909377c7c93874c0a36c70c55b765f386f1b0fcc01\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29ef1bdfa8a451ded8bb5910cfe8b416deb75574c305326670b19408bc5b3508\",\"dweb:/ipfs/QmcL4BCqJ75cKUQVv9iGRxToQamvYq8UqmfyrRAbAAXv22\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x96b90446f3d8c8b4e3b62329e2b2f66e4c9c910c4fc38486debeb8b278c7fdcc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4db7cb1465ca5e8bebe36e4a2b24fa51ed006f2d894e21d8c21eaa83cba4ff27\",\"dweb:/ipfs/QmYaePQ4ma9T3t7f8cgnVDAoj23iMJ3wCRffVuzETffgqP\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/core/BasePaymaster.sol":{"BasePaymaster":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. Validates that the postOp is called only by the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xbd3189ba19234b7983c343fd70058e21de970feb4bc941c57f14820eb35878a8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d738449768414ab9d4d111113f4641bd0fbc833f9baf74d8ccebe43fe8d7bb\",\"dweb:/ipfs/QmSwpXHUerFzwJFyyLqyGGbzsLTwSimdcMKX5FKksNouEm\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/core/UserOperationLib.sol":{"UserOperationLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b294a995484b643593ffac36b72c900c330384c7c21a97859814bdbd7adca29464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP5 0xA9 SWAP6 BASEFEE 0x4B PUSH5 0x3593FFAC36 0xB7 0x2C SWAP1 0xC CALLER SUB DUP5 0xC7 0xC2 BYTE SWAP8 DUP6 SWAP9 EQ 0xBD 0xBD PUSH27 0xDCA29464736F6C6343000814003300000000000000000000000000 ","sourceMap":"282:2822:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b294a995484b643593ffac36b72c900c330384c7c21a97859814bdbd7adca29464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP5 0xA9 SWAP6 BASEFEE 0x4B PUSH5 0x3593FFAC36 0xB7 0x2C SWAP1 0xC CALLER SUB DUP5 0xC7 0xC2 BYTE SWAP8 DUP6 SWAP9 EQ 0xBD 0xBD PUSH27 0xDCA29464736F6C6343000814003300000000000000000000000000 ","sourceMap":"282:2822:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x341c6c70a05b8f2c7a093e909377c7c93874c0a36c70c55b765f386f1b0fcc01\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29ef1bdfa8a451ded8bb5910cfe8b416deb75574c305326670b19408bc5b3508\",\"dweb:/ipfs/QmcL4BCqJ75cKUQVv9iGRxToQamvYq8UqmfyrRAbAAXv22\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x96b90446f3d8c8b4e3b62329e2b2f66e4c9c910c4fc38486debeb8b278c7fdcc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4db7cb1465ca5e8bebe36e4a2b24fa51ed006f2d894e21d8c21eaa83cba4ff27\",\"dweb:/ipfs/QmYaePQ4ma9T3t7f8cgnVDAoj23iMJ3wCRffVuzETffgqP\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- Array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- Array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"Validate aggregated signature. Revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Validate signature of a single userOp. This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps, to identify the offending op. Should be caught in off-chain handleOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]}},\"version\":1}"}},"contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0xaead461b65c942cb4c85537acca6fe9b22c1014a3d71b1af66c197f9b9c0b634\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79ba0ca9c46bd6b366c13259b08222378d0da5bffa5f0f1ca7c275422c233a0f\",\"dweb:/ipfs/QmYYNuVfy94upxHqNC4yu992tGS8bLFhV3JRwvPKee7Hri\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]}},\"version\":1}"}},"contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]}},\"version\":1}"}},"contracts/utils/SimpleAccount.sol":{"SimpleAccount":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"anEntryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IEntryPoint","name":"entryPoint","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"SimpleAccountInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"addDeposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"func","type":"bytes"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"dest","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"func","type":"bytes[]"}],"name":"executeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"anOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawDepositTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_4730":{"entryPoint":null,"id":4730,"parameterSlots":1,"returnSlots":0},"@_disableInitializers_766":{"entryPoint":181,"id":766,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_797":{"entryPoint":447,"id":797,"parameterSlots":0,"returnSlots":1},"abi_decode_t_contract$_IEntryPoint_$4475_fromMemory":{"entryPoint":590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IEntryPoint_$4475_fromMemory":{"entryPoint":613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":683,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":700,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":524,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IEntryPoint_$4475":{"entryPoint":544,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":492,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":663,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":487,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_contract$_IEntryPoint_$4475":{"entryPoint":564,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1893:35","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:35","statements":[{"nodeType":"YulAssignment","src":"57:19:35","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:35","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:35"},"nodeType":"YulFunctionCall","src":"67:9:35"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:35"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:35","type":""}],"src":"7:75:35"},{"body":{"nodeType":"YulBlock","src":"177:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:35"},"nodeType":"YulFunctionCall","src":"187:12:35"},"nodeType":"YulExpressionStatement","src":"187:12:35"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:35"},{"body":{"nodeType":"YulBlock","src":"300:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:35"},"nodeType":"YulFunctionCall","src":"310:12:35"},"nodeType":"YulExpressionStatement","src":"310:12:35"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:35"},{"body":{"nodeType":"YulBlock","src":"379:81:35","statements":[{"nodeType":"YulAssignment","src":"389:65:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:35","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:35"},"nodeType":"YulFunctionCall","src":"400:54:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:35"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:35","type":""}],"src":"334:126:35"},{"body":{"nodeType":"YulBlock","src":"511:51:35","statements":[{"nodeType":"YulAssignment","src":"521:35:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:35"},"nodeType":"YulFunctionCall","src":"532:24:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:35"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:35","type":""}],"src":"466:96:35"},{"body":{"nodeType":"YulBlock","src":"633:51:35","statements":[{"nodeType":"YulAssignment","src":"643:35:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:35"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"654:17:35"},"nodeType":"YulFunctionCall","src":"654:24:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"643:7:35"}]}]},"name":"cleanup_t_contract$_IEntryPoint_$4475","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"615:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"625:7:35","type":""}],"src":"568:116:35"},{"body":{"nodeType":"YulBlock","src":"753:99:35","statements":[{"body":{"nodeType":"YulBlock","src":"830:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"839:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"842:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"832:6:35"},"nodeType":"YulFunctionCall","src":"832:12:35"},"nodeType":"YulExpressionStatement","src":"832:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"776:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"821:5:35"}],"functionName":{"name":"cleanup_t_contract$_IEntryPoint_$4475","nodeType":"YulIdentifier","src":"783:37:35"},"nodeType":"YulFunctionCall","src":"783:44:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"773:2:35"},"nodeType":"YulFunctionCall","src":"773:55:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"766:6:35"},"nodeType":"YulFunctionCall","src":"766:63:35"},"nodeType":"YulIf","src":"763:83:35"}]},"name":"validator_revert_t_contract$_IEntryPoint_$4475","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"746:5:35","type":""}],"src":"690:162:35"},{"body":{"nodeType":"YulBlock","src":"941:100:35","statements":[{"nodeType":"YulAssignment","src":"951:22:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"966:6:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"960:5:35"},"nodeType":"YulFunctionCall","src":"960:13:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"951:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:35"}],"functionName":{"name":"validator_revert_t_contract$_IEntryPoint_$4475","nodeType":"YulIdentifier","src":"982:46:35"},"nodeType":"YulFunctionCall","src":"982:53:35"},"nodeType":"YulExpressionStatement","src":"982:53:35"}]},"name":"abi_decode_t_contract$_IEntryPoint_$4475_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"919:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"927:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"935:5:35","type":""}],"src":"858:183:35"},{"body":{"nodeType":"YulBlock","src":"1144:294:35","statements":[{"body":{"nodeType":"YulBlock","src":"1190:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1192:77:35"},"nodeType":"YulFunctionCall","src":"1192:79:35"},"nodeType":"YulExpressionStatement","src":"1192:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1165:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1161:3:35"},"nodeType":"YulFunctionCall","src":"1161:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"1186:2:35","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1157:3:35"},"nodeType":"YulFunctionCall","src":"1157:32:35"},"nodeType":"YulIf","src":"1154:119:35"},{"nodeType":"YulBlock","src":"1283:148:35","statements":[{"nodeType":"YulVariableDeclaration","src":"1298:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"1312:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1302:6:35","type":""}]},{"nodeType":"YulAssignment","src":"1327:94:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1393:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"1404:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1389:3:35"},"nodeType":"YulFunctionCall","src":"1389:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1413:7:35"}],"functionName":{"name":"abi_decode_t_contract$_IEntryPoint_$4475_fromMemory","nodeType":"YulIdentifier","src":"1337:51:35"},"nodeType":"YulFunctionCall","src":"1337:84:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1327:6:35"}]}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$4475_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1114:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1125:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1137:6:35","type":""}],"src":"1047:391:35"},{"body":{"nodeType":"YulBlock","src":"1488:57:35","statements":[{"nodeType":"YulAssignment","src":"1498:41:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1513:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"1520:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1509:3:35"},"nodeType":"YulFunctionCall","src":"1509:30:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1498:7:35"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1470:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1480:7:35","type":""}],"src":"1444:101:35"},{"body":{"nodeType":"YulBlock","src":"1614:52:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1631:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1653:5:35"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1636:16:35"},"nodeType":"YulFunctionCall","src":"1636:23:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1624:6:35"},"nodeType":"YulFunctionCall","src":"1624:36:35"},"nodeType":"YulExpressionStatement","src":"1624:36:35"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1602:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1609:3:35","type":""}],"src":"1551:115:35"},{"body":{"nodeType":"YulBlock","src":"1768:122:35","statements":[{"nodeType":"YulAssignment","src":"1778:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1790:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"1801:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1786:3:35"},"nodeType":"YulFunctionCall","src":"1786:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1778:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1856:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1869:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"1880:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:35"},"nodeType":"YulFunctionCall","src":"1865:17:35"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"1814:41:35"},"nodeType":"YulFunctionCall","src":"1814:69:35"},"nodeType":"YulExpressionStatement","src":"1814:69:35"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1740:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1752:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1763:4:35","type":""}],"src":"1672:218:35"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$4475(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$4475(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$4475(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$4475_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$4475(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$4475_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$4475_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":35,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2F49 CODESIZE SUB DUP1 PUSH3 0x2F49 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x6A SWAP2 SWAP1 PUSH3 0x265 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0xAE PUSH3 0xB5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x2D9 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC7 PUSH3 0x1BF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x113 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1BC JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x1B3 SWAP2 SWAP1 PUSH3 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x219 DUP3 PUSH3 0x1EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x22D DUP3 PUSH3 0x20C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23F DUP2 PUSH3 0x220 JUMP JUMPDEST DUP2 EQ PUSH3 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25F DUP2 PUSH3 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x27E JUMPI PUSH3 0x27D PUSH3 0x1E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x28E DUP5 DUP3 DUP6 ADD PUSH3 0x24E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B6 DUP2 PUSH3 0x297 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2C35 PUSH3 0x314 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x98A ADD MSTORE PUSH2 0x141C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x10E6 ADD MSTORE DUP2 DUP2 PUSH2 0x113B ADD MSTORE PUSH2 0x12F6 ADD MSTORE PUSH2 0x2C35 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x401 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x31C JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x47E1DA2A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x47E1DA2A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x270 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x1BB JUMPI PUSH2 0x113 JUMP JUMPDEST CALLDATASIZE PUSH2 0x113 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x242E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x2449 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x25C6 JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x513 JUMPI POP PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x57B JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x5AB DUP5 DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BA DUP5 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x5C3 DUP3 PUSH2 0xE31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0xECD JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0x5FA JUMPI POP PUSH1 0x0 DUP5 DUP5 SWAP1 POP EQ DUP1 PUSH2 0x5F9 JUMPI POP DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ JUMPDEST JUMPDEST PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SUB PUSH2 0x705 JUMPI PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x6FF JUMPI PUSH2 0x6EC DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x692 JUMPI PUSH2 0x691 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x270A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF9A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x6F7 SWAP1 PUSH2 0x279C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x647 JUMP JUMPDEST POP PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7D8 JUMPI PUSH2 0x7C5 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x751 JUMPI PUSH2 0x750 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x76B JUMPI PUSH2 0x76A PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x270A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF9A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7D0 SWAP1 PUSH2 0x279C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x708 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EA PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85F PUSH2 0x101E JUMP JUMPDEST PUSH2 0x867 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP3 SWAP2 SWAP1 PUSH2 0x27F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0x8E8 DUP3 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0x8F2 DUP3 DUP3 PUSH2 0x11D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x900 PUSH2 0x12F4 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9B6 PUSH2 0xECD JUMP JUMPDEST PUSH2 0xA05 DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF9A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2D PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA6 SWAP2 SWAP1 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB5 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB03 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB38 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB46 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBCD JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBD6 DUP7 PUSH2 0x13A3 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xC32 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC44 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35567E1A ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7F SWAP3 SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCE3 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x299C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD5E DUP4 PUSH2 0x1480 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC6 DUP5 DUP1 PUSH2 0x140 ADD SWAP1 PUSH2 0xD74 SWAP2 SWAP1 PUSH2 0x270A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH2 0x14B6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE22 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0xECA JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x40 MLOAD PUSH2 0xE81 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP JUMPDEST POP JUMP JUMPDEST PUSH2 0xED5 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF59 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8F SWAP1 PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1000 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1017 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x10A3 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1191 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1178 PUSH2 0x14E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11D2 PUSH2 0x101E JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x123D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123A SWAP2 SWAP1 PUSH2 0x2B42 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x127E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x12E5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12EF DUP4 DUP4 PUSH2 0x1539 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1379 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x14C6 DUP7 DUP7 PUSH2 0x15AC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x14D6 DUP3 DUP3 PUSH2 0x1608 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1510 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x176C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1542 DUP3 PUSH2 0x1776 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x159F JUMPI PUSH2 0x1599 DUP3 DUP3 PUSH2 0x1843 JUMP JUMPDEST POP PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x15A7 PUSH2 0x18C7 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x15F1 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x15E3 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1904 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x161C JUMPI PUSH2 0x161B PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162E PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1768 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1693 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16A7 JUMPI PUSH2 0x16A6 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16B9 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16FF JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F6 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1712 JUMPI PUSH2 0x1711 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1725 JUMPI PUSH2 0x1724 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1767 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175E SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x17D2 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C9 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x17FF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x176C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x186D SWAP2 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18A8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18BD DUP6 DUP4 DUP4 PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1902 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1944 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1969 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x198B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19DF JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x19EE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1A0D JUMPI PUSH2 0x1A08 DUP3 PUSH2 0x1A87 JUMP JUMPDEST PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1A35 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1A77 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6E SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1A9A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0B DUP3 PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1B DUP2 PUSH2 0x1B00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B38 DUP2 PUSH2 0x1B12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x1B3E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6E DUP2 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1B99 JUMPI PUSH2 0x1B98 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB6 JUMPI PUSH2 0x1BB5 PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1BD2 JUMPI PUSH2 0x1BD1 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C07 DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1C18 DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1C29 DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1C3A DUP12 DUP3 DUP13 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C5B JUMPI PUSH2 0x1C5A PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1C67 DUP12 DUP3 DUP13 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1C96 DUP12 DUP3 DUP13 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDD DUP2 PUSH2 0x1CA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFA DUP2 PUSH2 0x1CD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D24 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D42 DUP2 PUSH2 0x1D2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7E PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D8D DUP9 DUP3 DUP10 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D9E DUP9 DUP3 DUP10 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1DAF DUP9 DUP3 DUP10 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DD0 JUMPI PUSH2 0x1DCF PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1DDC DUP9 DUP3 DUP10 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1DF4 DUP2 PUSH2 0x1CA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E31 JUMPI PUSH2 0x1E30 PUSH2 0x1E15 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4D DUP2 PUSH2 0x1E3A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E6A DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E88 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1EB3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1E5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1ED5 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1EE8 DUP2 PUSH2 0x1B3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F03 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3C JUMPI PUSH2 0x1F3B PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1F58 JUMPI PUSH2 0x1F57 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F92 JUMPI PUSH2 0x1F91 PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1FAE JUMPI PUSH2 0x1FAD PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FCB JUMPI PUSH2 0x1FCA PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FE8 JUMPI PUSH2 0x1FE7 PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2004 JUMPI PUSH2 0x2003 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2028 JUMPI PUSH2 0x2027 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2046 JUMPI PUSH2 0x2045 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2052 DUP10 DUP3 DUP11 ADD PUSH2 0x1F09 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2081 DUP10 DUP3 DUP11 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A3 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x20B0 DUP10 DUP3 DUP11 ADD PUSH2 0x1FB5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CA DUP3 PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20DA DUP2 PUSH2 0x20BF JUMP JUMPDEST DUP2 EQ PUSH2 0x20E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F7 DUP2 PUSH2 0x20D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2114 JUMPI PUSH2 0x2113 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2122 DUP6 DUP3 DUP7 ADD PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2133 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x218B DUP3 PUSH2 0x2142 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21AA JUMPI PUSH2 0x21A9 PUSH2 0x2153 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BD PUSH2 0x1ACC JUMP JUMPDEST SWAP1 POP PUSH2 0x21C9 DUP3 DUP3 PUSH2 0x2182 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21E9 JUMPI PUSH2 0x21E8 PUSH2 0x2153 JUMP JUMPDEST JUMPDEST PUSH2 0x21F2 DUP3 PUSH2 0x2142 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2221 PUSH2 0x221C DUP5 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x21B3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x223D JUMPI PUSH2 0x223C PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH2 0x2248 DUP5 DUP3 DUP6 PUSH2 0x21FF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2265 JUMPI PUSH2 0x2264 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2275 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x220E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2295 JUMPI PUSH2 0x2294 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C4 JUMPI PUSH2 0x22C3 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x22D0 DUP6 DUP3 DUP7 ADD PUSH2 0x2250 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E3 DUP2 PUSH2 0x1E3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22FE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x230D DUP2 PUSH2 0x1B00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2328 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2368 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x234D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x237F DUP3 PUSH2 0x232E JUMP JUMPDEST PUSH2 0x2389 DUP2 DUP6 PUSH2 0x2339 JUMP JUMPDEST SWAP4 POP PUSH2 0x2399 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x234A JUMP JUMPDEST PUSH2 0x23A2 DUP2 PUSH2 0x2142 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C7 DUP2 DUP5 PUSH2 0x2374 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F4 PUSH2 0x23EF PUSH2 0x23EA DUP5 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2406 DUP3 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2418 DUP3 PUSH2 0x23FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2428 DUP2 PUSH2 0x240D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2443 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x241F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2463 JUMPI PUSH2 0x2462 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2471 DUP8 DUP3 DUP9 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2482 DUP8 DUP3 DUP9 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24A3 JUMPI PUSH2 0x24A2 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x24AF DUP8 DUP3 DUP9 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x24DD JUMPI PUSH2 0x24DC PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24EB DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x24FC DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x251D JUMPI PUSH2 0x251C PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2529 DUP12 DUP3 DUP13 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254C JUMPI PUSH2 0x254B PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2558 DUP12 DUP3 DUP13 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x257B JUMPI PUSH2 0x257A PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2587 DUP12 DUP3 DUP13 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25AF JUMPI PUSH2 0x25AE PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25BD DUP5 DUP3 DUP6 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x25E3 JUMPI PUSH2 0x25E2 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F1 DUP10 DUP3 DUP11 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2602 DUP10 DUP3 DUP11 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2613 DUP10 DUP3 DUP11 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2624 DUP10 DUP3 DUP11 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2645 JUMPI PUSH2 0x2644 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2651 DUP10 DUP3 DUP11 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2696 PUSH1 0x13 DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A1 DUP3 PUSH2 0x2660 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26C5 DUP2 PUSH2 0x2689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2727 JUMPI PUSH2 0x2726 PUSH2 0x26FB JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2749 JUMPI PUSH2 0x2748 PUSH2 0x2700 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x2705 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27A7 DUP3 PUSH2 0x1B3E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x276D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27ED DUP2 PUSH2 0x20BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2808 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x27E4 JUMP JUMPDEST PUSH2 0x2815 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EDF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x282B DUP2 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2847 JUMPI PUSH2 0x2846 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2855 DUP5 DUP3 DUP6 ADD PUSH2 0x281C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2897 PUSH2 0x2892 PUSH2 0x288D DUP5 PUSH2 0x285E JUMP JUMPDEST PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x2868 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A7 DUP2 PUSH2 0x287C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2911 PUSH2 0x290C PUSH2 0x2907 DUP5 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x28D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2921 DUP2 PUSH2 0x28F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x293C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x2949 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2918 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2986 PUSH1 0x1C DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x2991 DUP3 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29B5 DUP2 PUSH2 0x2979 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D7 PUSH1 0x0 DUP4 PUSH2 0x29BC JUMP JUMPDEST SWAP2 POP PUSH2 0x29E2 DUP3 PUSH2 0x29C7 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F8 DUP3 PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A38 PUSH1 0x20 DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A43 DUP3 PUSH2 0x2A02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A67 DUP2 PUSH2 0x2A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A84 DUP3 PUSH2 0x2A6E JUMP JUMPDEST PUSH2 0x2A8E DUP2 DUP6 PUSH2 0x29BC JUMP JUMPDEST SWAP4 POP PUSH2 0x2A9E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x234A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB6 DUP3 DUP5 PUSH2 0x2A79 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF7 PUSH1 0xA DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B02 DUP3 PUSH2 0x2AC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B26 DUP2 PUSH2 0x2AEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B3C DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B58 JUMPI PUSH2 0x2B57 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B66 DUP5 DUP3 DUP6 ADD PUSH2 0x2B2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BB4 DUP2 PUSH2 0x2B9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2BCF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x2BDC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2BAB JUMP JUMPDEST PUSH2 0x2BE9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x2BF6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22DA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xAC DUP10 PUSH17 0x61D773491889865F535410986B965F5C2C 0xA7 0xE0 SWAP16 0xD 0x26 0xE6 COINBASE 0xE2 PUSH1 0xC2 PUSH6 0x64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"735:4404:32:-:0;;;1060:4:7;1017:48;;;;;;;;;1394:116:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1457:12;1443:26;;;;;;;;;;1480:22;:20;;;:22;;:::i;:::-;1394:116;735:4404;;7711:422:6;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;88:117:35:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:391::-;1137:6;1186:2;1174:9;1165:7;1161:23;1157:32;1154:119;;;1192:79;;:::i;:::-;1154:119;1312:1;1337:84;1413:7;1404:6;1393:9;1389:22;1337:84;:::i;:::-;1327:94;;1283:148;1047:391;;;;:::o;1444:101::-;1480:7;1520:18;1513:5;1509:30;1498:41;;1444:101;;;:::o;1551:115::-;1636:23;1653:5;1636:23;:::i;:::-;1631:3;1624:36;1551:115;;:::o;1672:218::-;1763:4;1801:2;1790:9;1786:18;1778:26;;1814:69;1880:1;1869:9;1865:17;1856:6;1814:69;:::i;:::-;1672:218;;;;:::o;735:4404:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_818":{"entryPoint":2381,"id":818,"parameterSlots":0,"returnSlots":0},"@_4716":{"entryPoint":null,"id":4716,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_5033":{"entryPoint":4554,"id":5033,"parameterSlots":1,"returnSlots":0},"@_call_4969":{"entryPoint":3994,"id":4969,"parameterSlots":3,"returnSlots":0},"@_checkNonPayable_497":{"entryPoint":6343,"id":497,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_912":{"entryPoint":4852,"id":912,"parameterSlots":0,"returnSlots":0},"@_checkProxy_896":{"entryPoint":4324,"id":896,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_797":{"entryPoint":4987,"id":797,"parameterSlots":0,"returnSlots":1},"@_initialize_4891":{"entryPoint":5027,"id":4891,"parameterSlots":1,"returnSlots":0},"@_onlyOwner_4750":{"entryPoint":4126,"id":4750,"parameterSlots":0,"returnSlots":0},"@_payPrefund_3623":{"entryPoint":3633,"id":3623,"parameterSlots":1,"returnSlots":0},"@_requireFromEntryPointOrOwner_4912":{"entryPoint":3789,"id":4912,"parameterSlots":0,"returnSlots":0},"@_requireFromEntryPoint_3572":{"entryPoint":3291,"id":3572,"parameterSlots":0,"returnSlots":0},"@_revert_1276":{"entryPoint":6791,"id":1276,"parameterSlots":1,"returnSlots":0},"@_setImplementation_283":{"entryPoint":6006,"id":283,"parameterSlots":1,"returnSlots":0},"@_throwError_2114":{"entryPoint":5640,"id":2114,"parameterSlots":2,"returnSlots":0},"@_upgradeToAndCallUUPS_963":{"entryPoint":4565,"id":963,"parameterSlots":2,"returnSlots":0},"@_validateNonce_3590":{"entryPoint":3630,"id":3590,"parameterSlots":1,"returnSlots":0},"@_validateSignature_4943":{"entryPoint":3410,"id":4943,"parameterSlots":2,"returnSlots":1},"@addDeposit_5002":{"entryPoint":2018,"id":5002,"parameterSlots":0,"returnSlots":0},"@entryPoint_4712":{"entryPoint":2438,"id":4712,"parameterSlots":0,"returnSlots":1},"@executeBatch_4863":{"entryPoint":1482,"id":4863,"parameterSlots":6,"returnSlots":0},"@execute_4770":{"entryPoint":2478,"id":4770,"parameterSlots":4,"returnSlots":0},"@functionDelegateCall_1196":{"entryPoint":6211,"id":1196,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_1434":{"entryPoint":5996,"id":1434,"parameterSlots":1,"returnSlots":1},"@getDeposit_4985":{"entryPoint":2595,"id":4985,"parameterSlots":0,"returnSlots":1},"@getImplementation_256":{"entryPoint":5346,"id":256,"parameterSlots":0,"returnSlots":1},"@getNonce_3514":{"entryPoint":3130,"id":3514,"parameterSlots":0,"returnSlots":1},"@initialize_4876":{"entryPoint":2731,"id":4876,"parameterSlots":1,"returnSlots":0},"@onERC1155BatchReceived_3449":{"entryPoint":2571,"id":3449,"parameterSlots":8,"returnSlots":1},"@onERC1155Received_3426":{"entryPoint":3269,"id":3426,"parameterSlots":6,"returnSlots":1},"@onERC721Received_3405":{"entryPoint":1410,"id":3405,"parameterSlots":5,"returnSlots":1},"@owner_4684":{"entryPoint":2345,"id":4684,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_854":{"entryPoint":2294,"id":854,"parameterSlots":0,"returnSlots":1},"@recover_1871":{"entryPoint":5302,"id":1871,"parameterSlots":2,"returnSlots":1},"@supportsInterface_3479":{"entryPoint":1096,"id":3479,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_2130":{"entryPoint":5248,"id":2130,"parameterSlots":1,"returnSlots":1},"@tokensReceived_3386":{"entryPoint":1086,"id":3386,"parameterSlots":8,"returnSlots":0},"@tryRecover_1841":{"entryPoint":5548,"id":1841,"parameterSlots":2,"returnSlots":3},"@tryRecover_2029":{"entryPoint":6404,"id":2029,"parameterSlots":4,"returnSlots":3},"@upgradeToAndCall_317":{"entryPoint":5433,"id":317,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_874":{"entryPoint":2263,"id":874,"parameterSlots":2,"returnSlots":0},"@validateUserOp_3555":{"entryPoint":1431,"id":3555,"parameterSlots":3,"returnSlots":1},"@verifyCallResultFromTarget_1236":{"entryPoint":6648,"id":1236,"parameterSlots":3,"returnSlots":1},"@withdrawDepositTo_5020":{"entryPoint":2135,"id":5020,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8718,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":8424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":7945,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":8117,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":8031,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes32":{"entryPoint":7771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":11053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7403,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":7043,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_UserOperation_$4659_calldata_ptr":{"entryPoint":7706,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":10268,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9625,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":8445,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":7129,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":9405,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":7523,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr":{"entryPoint":9670,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":8830,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":9289,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":8203,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":11074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":7424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_UserOperation_$4659_calldata_ptrt_bytes32t_uint256":{"entryPoint":7792,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":10289,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":10212,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8964,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7481,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8922,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":7659,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IEntryPoint_$4475_to_t_address_fromStack":{"entryPoint":9247,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint192_fromStack":{"entryPoint":10520,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":10398,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9076,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e_to_t_string_memory_ptr_fromStack":{"entryPoint":9865,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21_to_t_string_memory_ptr_fromStack":{"entryPoint":10795,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367_to_t_string_memory_ptr_fromStack":{"entryPoint":10986,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10698,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50_to_t_string_memory_ptr_fromStack":{"entryPoint":10617,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7903,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":11179,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10733,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8979,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":10227,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed":{"entryPoint":10535,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7496,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":8937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":11194,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":7674,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$4475__to_t_address__fromStack_reversed":{"entryPoint":9262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":10413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9900,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10830,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11021,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10652,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7918,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":9994,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":8627,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6860,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8654,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":10862,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9006,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10684,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9017,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6912,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":8383,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7469,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7738,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7336,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":10440,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":10334,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6880,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint192":{"entryPoint":10450,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6974,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":10344,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":11166,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IEntryPoint_$4475_to_t_address":{"entryPoint":9229,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint192":{"entryPoint":10486,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":10364,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":9211,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":9177,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8703,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9034,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":8578,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":9167,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":10140,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10093,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11119,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9932,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8531,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":7033,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7028,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":9984,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":7701,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":9979,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":7038,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":9989,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8509,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6875,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6870,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8514,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e":{"entryPoint":9824,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21":{"entryPoint":10754,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367":{"entryPoint":10945,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":10695,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50":{"entryPoint":10576,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6930,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":8401,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7748,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7380,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6984,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:33130:35","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:35","statements":[{"nodeType":"YulAssignment","src":"57:19:35","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:35","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:35"},"nodeType":"YulFunctionCall","src":"67:9:35"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:35"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:35","type":""}],"src":"7:75:35"},{"body":{"nodeType":"YulBlock","src":"177:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:35"},"nodeType":"YulFunctionCall","src":"187:12:35"},"nodeType":"YulExpressionStatement","src":"187:12:35"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:35"},{"body":{"nodeType":"YulBlock","src":"300:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:35"},"nodeType":"YulFunctionCall","src":"310:12:35"},"nodeType":"YulExpressionStatement","src":"310:12:35"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:35"},{"body":{"nodeType":"YulBlock","src":"379:81:35","statements":[{"nodeType":"YulAssignment","src":"389:65:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:35","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:35"},"nodeType":"YulFunctionCall","src":"400:54:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:35"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:35","type":""}],"src":"334:126:35"},{"body":{"nodeType":"YulBlock","src":"511:51:35","statements":[{"nodeType":"YulAssignment","src":"521:35:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:35"},"nodeType":"YulFunctionCall","src":"532:24:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:35"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:35","type":""}],"src":"466:96:35"},{"body":{"nodeType":"YulBlock","src":"611:79:35","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:35"},"nodeType":"YulFunctionCall","src":"670:12:35"},"nodeType":"YulExpressionStatement","src":"670:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:35"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:35"},"nodeType":"YulFunctionCall","src":"641:24:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:35"},"nodeType":"YulFunctionCall","src":"631:35:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:35"},"nodeType":"YulFunctionCall","src":"624:43:35"},"nodeType":"YulIf","src":"621:63:35"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:35","type":""}],"src":"568:122:35"},{"body":{"nodeType":"YulBlock","src":"748:87:35","statements":[{"nodeType":"YulAssignment","src":"758:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:35"},"nodeType":"YulFunctionCall","src":"767:20:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:35"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:35"},"nodeType":"YulFunctionCall","src":"796:33:35"},"nodeType":"YulExpressionStatement","src":"796:33:35"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:35","type":""}],"src":"696:139:35"},{"body":{"nodeType":"YulBlock","src":"886:32:35","statements":[{"nodeType":"YulAssignment","src":"896:16:35","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:35"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:35","type":""}],"src":"841:77:35"},{"body":{"nodeType":"YulBlock","src":"967:79:35","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:35"},"nodeType":"YulFunctionCall","src":"1026:12:35"},"nodeType":"YulExpressionStatement","src":"1026:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:35"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:35"},"nodeType":"YulFunctionCall","src":"997:24:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:35"},"nodeType":"YulFunctionCall","src":"987:35:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:35"},"nodeType":"YulFunctionCall","src":"980:43:35"},"nodeType":"YulIf","src":"977:63:35"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:35","type":""}],"src":"924:122:35"},{"body":{"nodeType":"YulBlock","src":"1104:87:35","statements":[{"nodeType":"YulAssignment","src":"1114:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:35"},"nodeType":"YulFunctionCall","src":"1123:20:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:35"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:35"},"nodeType":"YulFunctionCall","src":"1152:33:35"},"nodeType":"YulExpressionStatement","src":"1152:33:35"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:35","type":""}],"src":"1052:139:35"},{"body":{"nodeType":"YulBlock","src":"1286:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1303:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1306:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1296:6:35"},"nodeType":"YulFunctionCall","src":"1296:12:35"},"nodeType":"YulExpressionStatement","src":"1296:12:35"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1197:117:35"},{"body":{"nodeType":"YulBlock","src":"1409:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1426:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1429:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1419:6:35"},"nodeType":"YulFunctionCall","src":"1419:12:35"},"nodeType":"YulExpressionStatement","src":"1419:12:35"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1320:117:35"},{"body":{"nodeType":"YulBlock","src":"1532:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1549:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1552:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1542:6:35"},"nodeType":"YulFunctionCall","src":"1542:12:35"},"nodeType":"YulExpressionStatement","src":"1542:12:35"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1443:117:35"},{"body":{"nodeType":"YulBlock","src":"1653:478:35","statements":[{"body":{"nodeType":"YulBlock","src":"1702:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1704:77:35"},"nodeType":"YulFunctionCall","src":"1704:79:35"},"nodeType":"YulExpressionStatement","src":"1704:79:35"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1681:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"1689:4:35","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:35"},"nodeType":"YulFunctionCall","src":"1677:17:35"},{"name":"end","nodeType":"YulIdentifier","src":"1696:3:35"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1673:3:35"},"nodeType":"YulFunctionCall","src":"1673:27:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1666:6:35"},"nodeType":"YulFunctionCall","src":"1666:35:35"},"nodeType":"YulIf","src":"1663:122:35"},{"nodeType":"YulAssignment","src":"1794:30:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1817:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1804:12:35"},"nodeType":"YulFunctionCall","src":"1804:20:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1794:6:35"}]},{"body":{"nodeType":"YulBlock","src":"1867:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1869:77:35"},"nodeType":"YulFunctionCall","src":"1869:79:35"},"nodeType":"YulExpressionStatement","src":"1869:79:35"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1839:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"1847:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1836:2:35"},"nodeType":"YulFunctionCall","src":"1836:30:35"},"nodeType":"YulIf","src":"1833:117:35"},{"nodeType":"YulAssignment","src":"1959:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1975:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"1983:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1971:3:35"},"nodeType":"YulFunctionCall","src":"1971:17:35"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1959:8:35"}]},{"body":{"nodeType":"YulBlock","src":"2042:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2044:77:35"},"nodeType":"YulFunctionCall","src":"2044:79:35"},"nodeType":"YulExpressionStatement","src":"2044:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2007:8:35"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2021:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"2029:4:35","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2017:3:35"},"nodeType":"YulFunctionCall","src":"2017:17:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2003:3:35"},"nodeType":"YulFunctionCall","src":"2003:32:35"},{"name":"end","nodeType":"YulIdentifier","src":"2037:3:35"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2000:2:35"},"nodeType":"YulFunctionCall","src":"2000:41:35"},"nodeType":"YulIf","src":"1997:128:35"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1620:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"1628:3:35","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1636:8:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"1646:6:35","type":""}],"src":"1579:552:35"},{"body":{"nodeType":"YulBlock","src":"2326:1264:35","statements":[{"body":{"nodeType":"YulBlock","src":"2373:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2375:77:35"},"nodeType":"YulFunctionCall","src":"2375:79:35"},"nodeType":"YulExpressionStatement","src":"2375:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2347:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"2356:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2343:3:35"},"nodeType":"YulFunctionCall","src":"2343:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"2368:3:35","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2339:3:35"},"nodeType":"YulFunctionCall","src":"2339:33:35"},"nodeType":"YulIf","src":"2336:120:35"},{"nodeType":"YulBlock","src":"2466:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2481:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2495:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2485:6:35","type":""}]},{"nodeType":"YulAssignment","src":"2510:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2545:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"2556:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2541:3:35"},"nodeType":"YulFunctionCall","src":"2541:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2565:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2520:20:35"},"nodeType":"YulFunctionCall","src":"2520:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2510:6:35"}]}]},{"nodeType":"YulBlock","src":"2593:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2608:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2622:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2612:6:35","type":""}]},{"nodeType":"YulAssignment","src":"2638:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2673:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"2684:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2669:3:35"},"nodeType":"YulFunctionCall","src":"2669:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2693:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2648:20:35"},"nodeType":"YulFunctionCall","src":"2648:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2638:6:35"}]}]},{"nodeType":"YulBlock","src":"2721:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2736:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2750:2:35","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2740:6:35","type":""}]},{"nodeType":"YulAssignment","src":"2766:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2801:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"2812:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2797:3:35"},"nodeType":"YulFunctionCall","src":"2797:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2821:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2776:20:35"},"nodeType":"YulFunctionCall","src":"2776:53:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2766:6:35"}]}]},{"nodeType":"YulBlock","src":"2849:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2864:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2878:2:35","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2868:6:35","type":""}]},{"nodeType":"YulAssignment","src":"2894:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2929:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"2940:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2925:3:35"},"nodeType":"YulFunctionCall","src":"2925:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2949:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2904:20:35"},"nodeType":"YulFunctionCall","src":"2904:53:35"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2894:6:35"}]}]},{"nodeType":"YulBlock","src":"2977:298:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2992:47:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3023:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"3034:3:35","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3019:3:35"},"nodeType":"YulFunctionCall","src":"3019:19:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3006:12:35"},"nodeType":"YulFunctionCall","src":"3006:33:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2996:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"3086:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3088:77:35"},"nodeType":"YulFunctionCall","src":"3088:79:35"},"nodeType":"YulExpressionStatement","src":"3088:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3058:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"3066:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3055:2:35"},"nodeType":"YulFunctionCall","src":"3055:30:35"},"nodeType":"YulIf","src":"3052:117:35"},{"nodeType":"YulAssignment","src":"3183:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3237:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"3248:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:35"},"nodeType":"YulFunctionCall","src":"3233:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3257:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3201:31:35"},"nodeType":"YulFunctionCall","src":"3201:64:35"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3183:6:35"},{"name":"value5","nodeType":"YulIdentifier","src":"3191:6:35"}]}]},{"nodeType":"YulBlock","src":"3285:298:35","statements":[{"nodeType":"YulVariableDeclaration","src":"3300:47:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3331:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"3342:3:35","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3327:3:35"},"nodeType":"YulFunctionCall","src":"3327:19:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3314:12:35"},"nodeType":"YulFunctionCall","src":"3314:33:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3304:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"3394:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3396:77:35"},"nodeType":"YulFunctionCall","src":"3396:79:35"},"nodeType":"YulExpressionStatement","src":"3396:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3366:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"3374:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3363:2:35"},"nodeType":"YulFunctionCall","src":"3363:30:35"},"nodeType":"YulIf","src":"3360:117:35"},{"nodeType":"YulAssignment","src":"3491:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3545:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"3556:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3541:3:35"},"nodeType":"YulFunctionCall","src":"3541:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3565:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3509:31:35"},"nodeType":"YulFunctionCall","src":"3509:64:35"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3491:6:35"},{"name":"value7","nodeType":"YulIdentifier","src":"3499:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2240:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2251:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2263:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2271:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2279:6:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2287:6:35","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2295:6:35","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2303:6:35","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2311:6:35","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2319:6:35","type":""}],"src":"2137:1453:35"},{"body":{"nodeType":"YulBlock","src":"3640:105:35","statements":[{"nodeType":"YulAssignment","src":"3650:89:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3665:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"3672:66:35","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3661:3:35"},"nodeType":"YulFunctionCall","src":"3661:78:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3650:7:35"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3622:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3632:7:35","type":""}],"src":"3596:149:35"},{"body":{"nodeType":"YulBlock","src":"3793:78:35","statements":[{"body":{"nodeType":"YulBlock","src":"3849:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3858:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3861:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3851:6:35"},"nodeType":"YulFunctionCall","src":"3851:12:35"},"nodeType":"YulExpressionStatement","src":"3851:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3816:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3840:5:35"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"3823:16:35"},"nodeType":"YulFunctionCall","src":"3823:23:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3813:2:35"},"nodeType":"YulFunctionCall","src":"3813:34:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3806:6:35"},"nodeType":"YulFunctionCall","src":"3806:42:35"},"nodeType":"YulIf","src":"3803:62:35"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3786:5:35","type":""}],"src":"3751:120:35"},{"body":{"nodeType":"YulBlock","src":"3928:86:35","statements":[{"nodeType":"YulAssignment","src":"3938:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3960:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3947:12:35"},"nodeType":"YulFunctionCall","src":"3947:20:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4002:5:35"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"3976:25:35"},"nodeType":"YulFunctionCall","src":"3976:32:35"},"nodeType":"YulExpressionStatement","src":"3976:32:35"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3906:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"3914:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3922:5:35","type":""}],"src":"3877:137:35"},{"body":{"nodeType":"YulBlock","src":"4085:262:35","statements":[{"body":{"nodeType":"YulBlock","src":"4131:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4133:77:35"},"nodeType":"YulFunctionCall","src":"4133:79:35"},"nodeType":"YulExpressionStatement","src":"4133:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4106:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"4115:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4102:3:35"},"nodeType":"YulFunctionCall","src":"4102:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"4127:2:35","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4098:3:35"},"nodeType":"YulFunctionCall","src":"4098:32:35"},"nodeType":"YulIf","src":"4095:119:35"},{"nodeType":"YulBlock","src":"4224:116:35","statements":[{"nodeType":"YulVariableDeclaration","src":"4239:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"4253:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4243:6:35","type":""}]},{"nodeType":"YulAssignment","src":"4268:62:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4302:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"4313:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4298:3:35"},"nodeType":"YulFunctionCall","src":"4298:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4322:7:35"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"4278:19:35"},"nodeType":"YulFunctionCall","src":"4278:52:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4268:6:35"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4055:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4066:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4078:6:35","type":""}],"src":"4020:327:35"},{"body":{"nodeType":"YulBlock","src":"4395:48:35","statements":[{"nodeType":"YulAssignment","src":"4405:32:35","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4430:5:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4423:6:35"},"nodeType":"YulFunctionCall","src":"4423:13:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4416:6:35"},"nodeType":"YulFunctionCall","src":"4416:21:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4405:7:35"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4377:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4387:7:35","type":""}],"src":"4353:90:35"},{"body":{"nodeType":"YulBlock","src":"4508:50:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4525:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4545:5:35"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4530:14:35"},"nodeType":"YulFunctionCall","src":"4530:21:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4518:6:35"},"nodeType":"YulFunctionCall","src":"4518:34:35"},"nodeType":"YulExpressionStatement","src":"4518:34:35"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4503:3:35","type":""}],"src":"4449:109:35"},{"body":{"nodeType":"YulBlock","src":"4656:118:35","statements":[{"nodeType":"YulAssignment","src":"4666:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4678:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"4689:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4674:3:35"},"nodeType":"YulFunctionCall","src":"4674:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4666:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4740:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4753:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"4764:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4749:3:35"},"nodeType":"YulFunctionCall","src":"4749:17:35"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4702:37:35"},"nodeType":"YulFunctionCall","src":"4702:65:35"},"nodeType":"YulExpressionStatement","src":"4702:65:35"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4628:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4640:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4651:4:35","type":""}],"src":"4564:210:35"},{"body":{"nodeType":"YulBlock","src":"4916:827:35","statements":[{"body":{"nodeType":"YulBlock","src":"4963:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4965:77:35"},"nodeType":"YulFunctionCall","src":"4965:79:35"},"nodeType":"YulExpressionStatement","src":"4965:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4937:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"4946:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4933:3:35"},"nodeType":"YulFunctionCall","src":"4933:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"4958:3:35","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4929:3:35"},"nodeType":"YulFunctionCall","src":"4929:33:35"},"nodeType":"YulIf","src":"4926:120:35"},{"nodeType":"YulBlock","src":"5056:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"5071:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"5085:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5075:6:35","type":""}]},{"nodeType":"YulAssignment","src":"5100:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5135:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"5146:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:35"},"nodeType":"YulFunctionCall","src":"5131:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5155:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5110:20:35"},"nodeType":"YulFunctionCall","src":"5110:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5100:6:35"}]}]},{"nodeType":"YulBlock","src":"5183:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"5198:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"5212:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5202:6:35","type":""}]},{"nodeType":"YulAssignment","src":"5228:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5263:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"5274:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5259:3:35"},"nodeType":"YulFunctionCall","src":"5259:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5283:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5238:20:35"},"nodeType":"YulFunctionCall","src":"5238:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5228:6:35"}]}]},{"nodeType":"YulBlock","src":"5311:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"5326:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"5340:2:35","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5330:6:35","type":""}]},{"nodeType":"YulAssignment","src":"5356:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5391:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"5402:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5387:3:35"},"nodeType":"YulFunctionCall","src":"5387:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5411:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5366:20:35"},"nodeType":"YulFunctionCall","src":"5366:53:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5356:6:35"}]}]},{"nodeType":"YulBlock","src":"5439:297:35","statements":[{"nodeType":"YulVariableDeclaration","src":"5454:46:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5485:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"5496:2:35","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5481:3:35"},"nodeType":"YulFunctionCall","src":"5481:18:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5468:12:35"},"nodeType":"YulFunctionCall","src":"5468:32:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5458:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"5547:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5549:77:35"},"nodeType":"YulFunctionCall","src":"5549:79:35"},"nodeType":"YulExpressionStatement","src":"5549:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5519:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"5527:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5516:2:35"},"nodeType":"YulFunctionCall","src":"5516:30:35"},"nodeType":"YulIf","src":"5513:117:35"},{"nodeType":"YulAssignment","src":"5644:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5698:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"5709:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5694:3:35"},"nodeType":"YulFunctionCall","src":"5694:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5718:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"5662:31:35"},"nodeType":"YulFunctionCall","src":"5662:64:35"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5644:6:35"},{"name":"value4","nodeType":"YulIdentifier","src":"5652:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4854:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4865:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4877:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4885:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4893:6:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4901:6:35","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4909:6:35","type":""}],"src":"4780:963:35"},{"body":{"nodeType":"YulBlock","src":"5812:52:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5829:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5851:5:35"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"5834:16:35"},"nodeType":"YulFunctionCall","src":"5834:23:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5822:6:35"},"nodeType":"YulFunctionCall","src":"5822:36:35"},"nodeType":"YulExpressionStatement","src":"5822:36:35"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5800:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5807:3:35","type":""}],"src":"5749:115:35"},{"body":{"nodeType":"YulBlock","src":"5966:122:35","statements":[{"nodeType":"YulAssignment","src":"5976:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5988:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"5999:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5984:3:35"},"nodeType":"YulFunctionCall","src":"5984:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5976:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6054:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6067:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"6078:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6063:3:35"},"nodeType":"YulFunctionCall","src":"6063:17:35"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"6012:41:35"},"nodeType":"YulFunctionCall","src":"6012:69:35"},"nodeType":"YulExpressionStatement","src":"6012:69:35"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5938:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5950:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5961:4:35","type":""}],"src":"5870:218:35"},{"body":{"nodeType":"YulBlock","src":"6183:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6200:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6203:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6193:6:35"},"nodeType":"YulFunctionCall","src":"6193:12:35"},"nodeType":"YulExpressionStatement","src":"6193:12:35"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"6094:117:35"},{"body":{"nodeType":"YulBlock","src":"6330:153:35","statements":[{"body":{"nodeType":"YulBlock","src":"6370:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"6372:77:35"},"nodeType":"YulFunctionCall","src":"6372:79:35"},"nodeType":"YulExpressionStatement","src":"6372:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"6351:3:35"},{"name":"offset","nodeType":"YulIdentifier","src":"6356:6:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6347:3:35"},"nodeType":"YulFunctionCall","src":"6347:16:35"},{"kind":"number","nodeType":"YulLiteral","src":"6365:3:35","type":"","value":"352"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6343:3:35"},"nodeType":"YulFunctionCall","src":"6343:26:35"},"nodeType":"YulIf","src":"6340:113:35"},{"nodeType":"YulAssignment","src":"6462:15:35","value":{"name":"offset","nodeType":"YulIdentifier","src":"6471:6:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6462:5:35"}]}]},"name":"abi_decode_t_struct$_UserOperation_$4659_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6308:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"6316:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6324:5:35","type":""}],"src":"6245:238:35"},{"body":{"nodeType":"YulBlock","src":"6534:32:35","statements":[{"nodeType":"YulAssignment","src":"6544:16:35","value":{"name":"value","nodeType":"YulIdentifier","src":"6555:5:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6544:7:35"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6516:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6526:7:35","type":""}],"src":"6489:77:35"},{"body":{"nodeType":"YulBlock","src":"6615:79:35","statements":[{"body":{"nodeType":"YulBlock","src":"6672:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6681:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6684:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6674:6:35"},"nodeType":"YulFunctionCall","src":"6674:12:35"},"nodeType":"YulExpressionStatement","src":"6674:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6638:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6663:5:35"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6645:17:35"},"nodeType":"YulFunctionCall","src":"6645:24:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6635:2:35"},"nodeType":"YulFunctionCall","src":"6635:35:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6628:6:35"},"nodeType":"YulFunctionCall","src":"6628:43:35"},"nodeType":"YulIf","src":"6625:63:35"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6608:5:35","type":""}],"src":"6572:122:35"},{"body":{"nodeType":"YulBlock","src":"6752:87:35","statements":[{"nodeType":"YulAssignment","src":"6762:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6784:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6771:12:35"},"nodeType":"YulFunctionCall","src":"6771:20:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6762:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6827:5:35"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"6800:26:35"},"nodeType":"YulFunctionCall","src":"6800:33:35"},"nodeType":"YulExpressionStatement","src":"6800:33:35"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6730:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"6738:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6746:5:35","type":""}],"src":"6700:139:35"},{"body":{"nodeType":"YulBlock","src":"6978:712:35","statements":[{"body":{"nodeType":"YulBlock","src":"7024:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7026:77:35"},"nodeType":"YulFunctionCall","src":"7026:79:35"},"nodeType":"YulExpressionStatement","src":"7026:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6999:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"7008:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6995:3:35"},"nodeType":"YulFunctionCall","src":"6995:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:35","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6991:3:35"},"nodeType":"YulFunctionCall","src":"6991:32:35"},"nodeType":"YulIf","src":"6988:119:35"},{"nodeType":"YulBlock","src":"7117:310:35","statements":[{"nodeType":"YulVariableDeclaration","src":"7132:45:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7163:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"7174:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7159:3:35"},"nodeType":"YulFunctionCall","src":"7159:17:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7146:12:35"},"nodeType":"YulFunctionCall","src":"7146:31:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7136:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"7224:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7226:77:35"},"nodeType":"YulFunctionCall","src":"7226:79:35"},"nodeType":"YulExpressionStatement","src":"7226:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7196:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"7204:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7193:2:35"},"nodeType":"YulFunctionCall","src":"7193:30:35"},"nodeType":"YulIf","src":"7190:117:35"},{"nodeType":"YulAssignment","src":"7321:96:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7389:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"7400:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7385:3:35"},"nodeType":"YulFunctionCall","src":"7385:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7409:7:35"}],"functionName":{"name":"abi_decode_t_struct$_UserOperation_$4659_calldata_ptr","nodeType":"YulIdentifier","src":"7331:53:35"},"nodeType":"YulFunctionCall","src":"7331:86:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7321:6:35"}]}]},{"nodeType":"YulBlock","src":"7437:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"7452:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"7466:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7456:6:35","type":""}]},{"nodeType":"YulAssignment","src":"7482:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7517:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"7528:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7513:3:35"},"nodeType":"YulFunctionCall","src":"7513:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7537:7:35"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7492:20:35"},"nodeType":"YulFunctionCall","src":"7492:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7482:6:35"}]}]},{"nodeType":"YulBlock","src":"7565:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"7580:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"7594:2:35","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7584:6:35","type":""}]},{"nodeType":"YulAssignment","src":"7610:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7645:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"7656:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7641:3:35"},"nodeType":"YulFunctionCall","src":"7641:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7665:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7620:20:35"},"nodeType":"YulFunctionCall","src":"7620:53:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7610:6:35"}]}]}]},"name":"abi_decode_tuple_t_struct$_UserOperation_$4659_calldata_ptrt_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6932:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6943:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6955:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6963:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6971:6:35","type":""}],"src":"6845:845:35"},{"body":{"nodeType":"YulBlock","src":"7761:53:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7778:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7801:5:35"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7783:17:35"},"nodeType":"YulFunctionCall","src":"7783:24:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7771:6:35"},"nodeType":"YulFunctionCall","src":"7771:37:35"},"nodeType":"YulExpressionStatement","src":"7771:37:35"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7749:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7756:3:35","type":""}],"src":"7696:118:35"},{"body":{"nodeType":"YulBlock","src":"7918:124:35","statements":[{"nodeType":"YulAssignment","src":"7928:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7940:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"7951:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7936:3:35"},"nodeType":"YulFunctionCall","src":"7936:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7928:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8008:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8021:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"8032:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8017:3:35"},"nodeType":"YulFunctionCall","src":"8017:17:35"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7964:43:35"},"nodeType":"YulFunctionCall","src":"7964:71:35"},"nodeType":"YulExpressionStatement","src":"7964:71:35"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7890:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7902:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7913:4:35","type":""}],"src":"7820:222:35"},{"body":{"nodeType":"YulBlock","src":"8155:478:35","statements":[{"body":{"nodeType":"YulBlock","src":"8204:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8206:77:35"},"nodeType":"YulFunctionCall","src":"8206:79:35"},"nodeType":"YulExpressionStatement","src":"8206:79:35"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8183:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"8191:4:35","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8179:3:35"},"nodeType":"YulFunctionCall","src":"8179:17:35"},{"name":"end","nodeType":"YulIdentifier","src":"8198:3:35"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8175:3:35"},"nodeType":"YulFunctionCall","src":"8175:27:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8168:6:35"},"nodeType":"YulFunctionCall","src":"8168:35:35"},"nodeType":"YulIf","src":"8165:122:35"},{"nodeType":"YulAssignment","src":"8296:30:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8319:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8306:12:35"},"nodeType":"YulFunctionCall","src":"8306:20:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8296:6:35"}]},{"body":{"nodeType":"YulBlock","src":"8369:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"8371:77:35"},"nodeType":"YulFunctionCall","src":"8371:79:35"},"nodeType":"YulExpressionStatement","src":"8371:79:35"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8341:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"8349:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8338:2:35"},"nodeType":"YulFunctionCall","src":"8338:30:35"},"nodeType":"YulIf","src":"8335:117:35"},{"nodeType":"YulAssignment","src":"8461:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8477:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"8485:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:35"},"nodeType":"YulFunctionCall","src":"8473:17:35"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8461:8:35"}]},{"body":{"nodeType":"YulBlock","src":"8544:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"8546:77:35"},"nodeType":"YulFunctionCall","src":"8546:79:35"},"nodeType":"YulExpressionStatement","src":"8546:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8509:8:35"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8523:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"8531:4:35","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8519:3:35"},"nodeType":"YulFunctionCall","src":"8519:17:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8505:3:35"},"nodeType":"YulFunctionCall","src":"8505:32:35"},{"name":"end","nodeType":"YulIdentifier","src":"8539:3:35"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8502:2:35"},"nodeType":"YulFunctionCall","src":"8502:41:35"},"nodeType":"YulIf","src":"8499:128:35"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8122:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"8130:3:35","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"8138:8:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"8148:6:35","type":""}],"src":"8065:568:35"},{"body":{"nodeType":"YulBlock","src":"8746:478:35","statements":[{"body":{"nodeType":"YulBlock","src":"8795:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8797:77:35"},"nodeType":"YulFunctionCall","src":"8797:79:35"},"nodeType":"YulExpressionStatement","src":"8797:79:35"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8774:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"8782:4:35","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8770:3:35"},"nodeType":"YulFunctionCall","src":"8770:17:35"},{"name":"end","nodeType":"YulIdentifier","src":"8789:3:35"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8766:3:35"},"nodeType":"YulFunctionCall","src":"8766:27:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8759:6:35"},"nodeType":"YulFunctionCall","src":"8759:35:35"},"nodeType":"YulIf","src":"8756:122:35"},{"nodeType":"YulAssignment","src":"8887:30:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8910:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8897:12:35"},"nodeType":"YulFunctionCall","src":"8897:20:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8887:6:35"}]},{"body":{"nodeType":"YulBlock","src":"8960:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"8962:77:35"},"nodeType":"YulFunctionCall","src":"8962:79:35"},"nodeType":"YulExpressionStatement","src":"8962:79:35"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8932:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"8940:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8929:2:35"},"nodeType":"YulFunctionCall","src":"8929:30:35"},"nodeType":"YulIf","src":"8926:117:35"},{"nodeType":"YulAssignment","src":"9052:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9068:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"9076:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9064:3:35"},"nodeType":"YulFunctionCall","src":"9064:17:35"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9052:8:35"}]},{"body":{"nodeType":"YulBlock","src":"9135:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9137:77:35"},"nodeType":"YulFunctionCall","src":"9137:79:35"},"nodeType":"YulExpressionStatement","src":"9137:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9100:8:35"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9114:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"9122:4:35","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9110:3:35"},"nodeType":"YulFunctionCall","src":"9110:17:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9096:3:35"},"nodeType":"YulFunctionCall","src":"9096:32:35"},{"name":"end","nodeType":"YulIdentifier","src":"9130:3:35"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9093:2:35"},"nodeType":"YulFunctionCall","src":"9093:41:35"},"nodeType":"YulIf","src":"9090:128:35"}]},"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8713:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"8721:3:35","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"8729:8:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"8739:6:35","type":""}],"src":"8656:568:35"},{"body":{"nodeType":"YulBlock","src":"9346:478:35","statements":[{"body":{"nodeType":"YulBlock","src":"9395:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9397:77:35"},"nodeType":"YulFunctionCall","src":"9397:79:35"},"nodeType":"YulExpressionStatement","src":"9397:79:35"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9374:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"9382:4:35","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9370:3:35"},"nodeType":"YulFunctionCall","src":"9370:17:35"},{"name":"end","nodeType":"YulIdentifier","src":"9389:3:35"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9366:3:35"},"nodeType":"YulFunctionCall","src":"9366:27:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9359:6:35"},"nodeType":"YulFunctionCall","src":"9359:35:35"},"nodeType":"YulIf","src":"9356:122:35"},{"nodeType":"YulAssignment","src":"9487:30:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9510:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9497:12:35"},"nodeType":"YulFunctionCall","src":"9497:20:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9487:6:35"}]},{"body":{"nodeType":"YulBlock","src":"9560:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"9562:77:35"},"nodeType":"YulFunctionCall","src":"9562:79:35"},"nodeType":"YulExpressionStatement","src":"9562:79:35"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9532:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"9540:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9529:2:35"},"nodeType":"YulFunctionCall","src":"9529:30:35"},"nodeType":"YulIf","src":"9526:117:35"},{"nodeType":"YulAssignment","src":"9652:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9668:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"9676:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9664:3:35"},"nodeType":"YulFunctionCall","src":"9664:17:35"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9652:8:35"}]},{"body":{"nodeType":"YulBlock","src":"9735:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9737:77:35"},"nodeType":"YulFunctionCall","src":"9737:79:35"},"nodeType":"YulExpressionStatement","src":"9737:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9700:8:35"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9714:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"9722:4:35","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9710:3:35"},"nodeType":"YulFunctionCall","src":"9710:17:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9696:3:35"},"nodeType":"YulFunctionCall","src":"9696:32:35"},{"name":"end","nodeType":"YulIdentifier","src":"9730:3:35"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9693:2:35"},"nodeType":"YulFunctionCall","src":"9693:41:35"},"nodeType":"YulIf","src":"9690:128:35"}]},"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9313:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"9321:3:35","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"9329:8:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"9339:6:35","type":""}],"src":"9245:579:35"},{"body":{"nodeType":"YulBlock","src":"10046:1115:35","statements":[{"body":{"nodeType":"YulBlock","src":"10092:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10094:77:35"},"nodeType":"YulFunctionCall","src":"10094:79:35"},"nodeType":"YulExpressionStatement","src":"10094:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10067:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"10076:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10063:3:35"},"nodeType":"YulFunctionCall","src":"10063:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"10088:2:35","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10059:3:35"},"nodeType":"YulFunctionCall","src":"10059:32:35"},"nodeType":"YulIf","src":"10056:119:35"},{"nodeType":"YulBlock","src":"10185:312:35","statements":[{"nodeType":"YulVariableDeclaration","src":"10200:45:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10231:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"10242:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10227:3:35"},"nodeType":"YulFunctionCall","src":"10227:17:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10214:12:35"},"nodeType":"YulFunctionCall","src":"10214:31:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10204:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"10292:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10294:77:35"},"nodeType":"YulFunctionCall","src":"10294:79:35"},"nodeType":"YulExpressionStatement","src":"10294:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10264:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"10272:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10261:2:35"},"nodeType":"YulFunctionCall","src":"10261:30:35"},"nodeType":"YulIf","src":"10258:117:35"},{"nodeType":"YulAssignment","src":"10389:98:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10459:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"10470:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10455:3:35"},"nodeType":"YulFunctionCall","src":"10455:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10479:7:35"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"10407:47:35"},"nodeType":"YulFunctionCall","src":"10407:80:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10389:6:35"},{"name":"value1","nodeType":"YulIdentifier","src":"10397:6:35"}]}]},{"nodeType":"YulBlock","src":"10507:313:35","statements":[{"nodeType":"YulVariableDeclaration","src":"10522:46:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10553:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"10564:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10549:3:35"},"nodeType":"YulFunctionCall","src":"10549:18:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10536:12:35"},"nodeType":"YulFunctionCall","src":"10536:32:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10526:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"10615:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10617:77:35"},"nodeType":"YulFunctionCall","src":"10617:79:35"},"nodeType":"YulExpressionStatement","src":"10617:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10587:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"10595:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10584:2:35"},"nodeType":"YulFunctionCall","src":"10584:30:35"},"nodeType":"YulIf","src":"10581:117:35"},{"nodeType":"YulAssignment","src":"10712:98:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10782:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"10793:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10778:3:35"},"nodeType":"YulFunctionCall","src":"10778:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10802:7:35"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"10730:47:35"},"nodeType":"YulFunctionCall","src":"10730:80:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10712:6:35"},{"name":"value3","nodeType":"YulIdentifier","src":"10720:6:35"}]}]},{"nodeType":"YulBlock","src":"10830:324:35","statements":[{"nodeType":"YulVariableDeclaration","src":"10845:46:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10876:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"10887:2:35","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10872:3:35"},"nodeType":"YulFunctionCall","src":"10872:18:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10859:12:35"},"nodeType":"YulFunctionCall","src":"10859:32:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10849:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"10938:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10940:77:35"},"nodeType":"YulFunctionCall","src":"10940:79:35"},"nodeType":"YulExpressionStatement","src":"10940:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10910:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"10918:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10907:2:35"},"nodeType":"YulFunctionCall","src":"10907:30:35"},"nodeType":"YulIf","src":"10904:117:35"},{"nodeType":"YulAssignment","src":"11035:109:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11116:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"11127:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11112:3:35"},"nodeType":"YulFunctionCall","src":"11112:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11136:7:35"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"11053:58:35"},"nodeType":"YulFunctionCall","src":"11053:91:35"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11035:6:35"},{"name":"value5","nodeType":"YulIdentifier","src":"11043:6:35"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9976:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9987:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9999:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10007:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10015:6:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10023:6:35","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10031:6:35","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10039:6:35","type":""}],"src":"9830:1331:35"},{"body":{"nodeType":"YulBlock","src":"11220:51:35","statements":[{"nodeType":"YulAssignment","src":"11230:35:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11259:5:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"11241:17:35"},"nodeType":"YulFunctionCall","src":"11241:24:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11230:7:35"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11202:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11212:7:35","type":""}],"src":"11167:104:35"},{"body":{"nodeType":"YulBlock","src":"11328:87:35","statements":[{"body":{"nodeType":"YulBlock","src":"11393:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11402:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11405:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11395:6:35"},"nodeType":"YulFunctionCall","src":"11395:12:35"},"nodeType":"YulExpressionStatement","src":"11395:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11351:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11384:5:35"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"11358:25:35"},"nodeType":"YulFunctionCall","src":"11358:32:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11348:2:35"},"nodeType":"YulFunctionCall","src":"11348:43:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11341:6:35"},"nodeType":"YulFunctionCall","src":"11341:51:35"},"nodeType":"YulIf","src":"11338:71:35"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11321:5:35","type":""}],"src":"11277:138:35"},{"body":{"nodeType":"YulBlock","src":"11481:95:35","statements":[{"nodeType":"YulAssignment","src":"11491:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11513:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11500:12:35"},"nodeType":"YulFunctionCall","src":"11500:20:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11491:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11564:5:35"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"11529:34:35"},"nodeType":"YulFunctionCall","src":"11529:41:35"},"nodeType":"YulExpressionStatement","src":"11529:41:35"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11459:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"11467:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11475:5:35","type":""}],"src":"11421:155:35"},{"body":{"nodeType":"YulBlock","src":"11673:399:35","statements":[{"body":{"nodeType":"YulBlock","src":"11719:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11721:77:35"},"nodeType":"YulFunctionCall","src":"11721:79:35"},"nodeType":"YulExpressionStatement","src":"11721:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11694:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"11703:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11690:3:35"},"nodeType":"YulFunctionCall","src":"11690:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"11715:2:35","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11686:3:35"},"nodeType":"YulFunctionCall","src":"11686:32:35"},"nodeType":"YulIf","src":"11683:119:35"},{"nodeType":"YulBlock","src":"11812:125:35","statements":[{"nodeType":"YulVariableDeclaration","src":"11827:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"11841:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11831:6:35","type":""}]},{"nodeType":"YulAssignment","src":"11856:71:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11899:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"11910:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11895:3:35"},"nodeType":"YulFunctionCall","src":"11895:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11919:7:35"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"11866:28:35"},"nodeType":"YulFunctionCall","src":"11866:61:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11856:6:35"}]}]},{"nodeType":"YulBlock","src":"11947:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"11962:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"11976:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11966:6:35","type":""}]},{"nodeType":"YulAssignment","src":"11992:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12027:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"12038:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12023:3:35"},"nodeType":"YulFunctionCall","src":"12023:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12047:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12002:20:35"},"nodeType":"YulFunctionCall","src":"12002:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11992:6:35"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11635:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11646:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11658:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11666:6:35","type":""}],"src":"11582:490:35"},{"body":{"nodeType":"YulBlock","src":"12167:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12184:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12187:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12177:6:35"},"nodeType":"YulFunctionCall","src":"12177:12:35"},"nodeType":"YulExpressionStatement","src":"12177:12:35"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12078:117:35"},{"body":{"nodeType":"YulBlock","src":"12249:54:35","statements":[{"nodeType":"YulAssignment","src":"12259:38:35","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12277:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"12284:2:35","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12273:3:35"},"nodeType":"YulFunctionCall","src":"12273:14:35"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12293:2:35","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12289:3:35"},"nodeType":"YulFunctionCall","src":"12289:7:35"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12269:3:35"},"nodeType":"YulFunctionCall","src":"12269:28:35"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12259:6:35"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12232:5:35","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"12242:6:35","type":""}],"src":"12201:102:35"},{"body":{"nodeType":"YulBlock","src":"12337:152:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12354:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12357:77:35","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12347:6:35"},"nodeType":"YulFunctionCall","src":"12347:88:35"},"nodeType":"YulExpressionStatement","src":"12347:88:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12451:1:35","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12454:4:35","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12444:6:35"},"nodeType":"YulFunctionCall","src":"12444:15:35"},"nodeType":"YulExpressionStatement","src":"12444:15:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12475:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12478:4:35","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12468:6:35"},"nodeType":"YulFunctionCall","src":"12468:15:35"},"nodeType":"YulExpressionStatement","src":"12468:15:35"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"12309:180:35"},{"body":{"nodeType":"YulBlock","src":"12538:238:35","statements":[{"nodeType":"YulVariableDeclaration","src":"12548:58:35","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12570:6:35"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"12600:4:35"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12578:21:35"},"nodeType":"YulFunctionCall","src":"12578:27:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12566:3:35"},"nodeType":"YulFunctionCall","src":"12566:40:35"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"12552:10:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"12717:22:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12719:16:35"},"nodeType":"YulFunctionCall","src":"12719:18:35"},"nodeType":"YulExpressionStatement","src":"12719:18:35"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"12660:10:35"},{"kind":"number","nodeType":"YulLiteral","src":"12672:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12657:2:35"},"nodeType":"YulFunctionCall","src":"12657:34:35"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"12696:10:35"},{"name":"memPtr","nodeType":"YulIdentifier","src":"12708:6:35"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12693:2:35"},"nodeType":"YulFunctionCall","src":"12693:22:35"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12654:2:35"},"nodeType":"YulFunctionCall","src":"12654:62:35"},"nodeType":"YulIf","src":"12651:88:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12755:2:35","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"12759:10:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12748:6:35"},"nodeType":"YulFunctionCall","src":"12748:22:35"},"nodeType":"YulExpressionStatement","src":"12748:22:35"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12524:6:35","type":""},{"name":"size","nodeType":"YulTypedName","src":"12532:4:35","type":""}],"src":"12495:281:35"},{"body":{"nodeType":"YulBlock","src":"12823:88:35","statements":[{"nodeType":"YulAssignment","src":"12833:30:35","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"12843:18:35"},"nodeType":"YulFunctionCall","src":"12843:20:35"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12833:6:35"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12892:6:35"},{"name":"size","nodeType":"YulIdentifier","src":"12900:4:35"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"12872:19:35"},"nodeType":"YulFunctionCall","src":"12872:33:35"},"nodeType":"YulExpressionStatement","src":"12872:33:35"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"12807:4:35","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"12816:6:35","type":""}],"src":"12782:129:35"},{"body":{"nodeType":"YulBlock","src":"12983:241:35","statements":[{"body":{"nodeType":"YulBlock","src":"13088:22:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13090:16:35"},"nodeType":"YulFunctionCall","src":"13090:18:35"},"nodeType":"YulExpressionStatement","src":"13090:18:35"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13060:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"13068:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13057:2:35"},"nodeType":"YulFunctionCall","src":"13057:30:35"},"nodeType":"YulIf","src":"13054:56:35"},{"nodeType":"YulAssignment","src":"13120:37:35","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13150:6:35"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13128:21:35"},"nodeType":"YulFunctionCall","src":"13128:29:35"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13120:4:35"}]},{"nodeType":"YulAssignment","src":"13194:23:35","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13206:4:35"},{"kind":"number","nodeType":"YulLiteral","src":"13212:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13202:3:35"},"nodeType":"YulFunctionCall","src":"13202:15:35"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13194:4:35"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12967:6:35","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12978:4:35","type":""}],"src":"12917:307:35"},{"body":{"nodeType":"YulBlock","src":"13294:82:35","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13317:3:35"},{"name":"src","nodeType":"YulIdentifier","src":"13322:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"13327:6:35"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13304:12:35"},"nodeType":"YulFunctionCall","src":"13304:30:35"},"nodeType":"YulExpressionStatement","src":"13304:30:35"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13354:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"13359:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13350:3:35"},"nodeType":"YulFunctionCall","src":"13350:16:35"},{"kind":"number","nodeType":"YulLiteral","src":"13368:1:35","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13343:6:35"},"nodeType":"YulFunctionCall","src":"13343:27:35"},"nodeType":"YulExpressionStatement","src":"13343:27:35"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13276:3:35","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13281:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"13286:6:35","type":""}],"src":"13230:146:35"},{"body":{"nodeType":"YulBlock","src":"13465:340:35","statements":[{"nodeType":"YulAssignment","src":"13475:74:35","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13541:6:35"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13500:40:35"},"nodeType":"YulFunctionCall","src":"13500:48:35"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13484:15:35"},"nodeType":"YulFunctionCall","src":"13484:65:35"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13475:5:35"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13565:5:35"},{"name":"length","nodeType":"YulIdentifier","src":"13572:6:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13558:6:35"},"nodeType":"YulFunctionCall","src":"13558:21:35"},"nodeType":"YulExpressionStatement","src":"13558:21:35"},{"nodeType":"YulVariableDeclaration","src":"13588:27:35","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13603:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"13610:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13599:3:35"},"nodeType":"YulFunctionCall","src":"13599:16:35"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13592:3:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"13653:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13655:77:35"},"nodeType":"YulFunctionCall","src":"13655:79:35"},"nodeType":"YulExpressionStatement","src":"13655:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13634:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"13639:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13630:3:35"},"nodeType":"YulFunctionCall","src":"13630:16:35"},{"name":"end","nodeType":"YulIdentifier","src":"13648:3:35"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13627:2:35"},"nodeType":"YulFunctionCall","src":"13627:25:35"},"nodeType":"YulIf","src":"13624:112:35"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13782:3:35"},{"name":"dst","nodeType":"YulIdentifier","src":"13787:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"13792:6:35"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13745:36:35"},"nodeType":"YulFunctionCall","src":"13745:54:35"},"nodeType":"YulExpressionStatement","src":"13745:54:35"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13438:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"13443:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"13451:3:35","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13459:5:35","type":""}],"src":"13382:423:35"},{"body":{"nodeType":"YulBlock","src":"13885:277:35","statements":[{"body":{"nodeType":"YulBlock","src":"13934:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13936:77:35"},"nodeType":"YulFunctionCall","src":"13936:79:35"},"nodeType":"YulExpressionStatement","src":"13936:79:35"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13913:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"13921:4:35","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13909:3:35"},"nodeType":"YulFunctionCall","src":"13909:17:35"},{"name":"end","nodeType":"YulIdentifier","src":"13928:3:35"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13905:3:35"},"nodeType":"YulFunctionCall","src":"13905:27:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13898:6:35"},"nodeType":"YulFunctionCall","src":"13898:35:35"},"nodeType":"YulIf","src":"13895:122:35"},{"nodeType":"YulVariableDeclaration","src":"14026:34:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14053:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14040:12:35"},"nodeType":"YulFunctionCall","src":"14040:20:35"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14030:6:35","type":""}]},{"nodeType":"YulAssignment","src":"14069:87:35","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14129:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"14137:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14125:3:35"},"nodeType":"YulFunctionCall","src":"14125:17:35"},{"name":"length","nodeType":"YulIdentifier","src":"14144:6:35"},{"name":"end","nodeType":"YulIdentifier","src":"14152:3:35"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14078:46:35"},"nodeType":"YulFunctionCall","src":"14078:78:35"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14069:5:35"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13863:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"13871:3:35","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13879:5:35","type":""}],"src":"13824:338:35"},{"body":{"nodeType":"YulBlock","src":"14260:560:35","statements":[{"body":{"nodeType":"YulBlock","src":"14306:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14308:77:35"},"nodeType":"YulFunctionCall","src":"14308:79:35"},"nodeType":"YulExpressionStatement","src":"14308:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14281:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"14290:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14277:3:35"},"nodeType":"YulFunctionCall","src":"14277:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"14302:2:35","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14273:3:35"},"nodeType":"YulFunctionCall","src":"14273:32:35"},"nodeType":"YulIf","src":"14270:119:35"},{"nodeType":"YulBlock","src":"14399:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"14414:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"14428:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14418:6:35","type":""}]},{"nodeType":"YulAssignment","src":"14443:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14478:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"14489:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14474:3:35"},"nodeType":"YulFunctionCall","src":"14474:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14498:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14453:20:35"},"nodeType":"YulFunctionCall","src":"14453:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14443:6:35"}]}]},{"nodeType":"YulBlock","src":"14526:287:35","statements":[{"nodeType":"YulVariableDeclaration","src":"14541:46:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14572:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"14583:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14568:3:35"},"nodeType":"YulFunctionCall","src":"14568:18:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14555:12:35"},"nodeType":"YulFunctionCall","src":"14555:32:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14545:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"14634:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14636:77:35"},"nodeType":"YulFunctionCall","src":"14636:79:35"},"nodeType":"YulExpressionStatement","src":"14636:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14606:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"14614:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14603:2:35"},"nodeType":"YulFunctionCall","src":"14603:30:35"},"nodeType":"YulIf","src":"14600:117:35"},{"nodeType":"YulAssignment","src":"14731:72:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14775:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"14786:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14771:3:35"},"nodeType":"YulFunctionCall","src":"14771:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14795:7:35"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14741:29:35"},"nodeType":"YulFunctionCall","src":"14741:62:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14731:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14222:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14233:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14245:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14253:6:35","type":""}],"src":"14168:652:35"},{"body":{"nodeType":"YulBlock","src":"14891:53:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14908:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14931:5:35"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"14913:17:35"},"nodeType":"YulFunctionCall","src":"14913:24:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14901:6:35"},"nodeType":"YulFunctionCall","src":"14901:37:35"},"nodeType":"YulExpressionStatement","src":"14901:37:35"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14879:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14886:3:35","type":""}],"src":"14826:118:35"},{"body":{"nodeType":"YulBlock","src":"15048:124:35","statements":[{"nodeType":"YulAssignment","src":"15058:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15070:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"15081:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15066:3:35"},"nodeType":"YulFunctionCall","src":"15066:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15058:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15138:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15151:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"15162:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15147:3:35"},"nodeType":"YulFunctionCall","src":"15147:17:35"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15094:43:35"},"nodeType":"YulFunctionCall","src":"15094:71:35"},"nodeType":"YulExpressionStatement","src":"15094:71:35"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15020:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15032:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15043:4:35","type":""}],"src":"14950:222:35"},{"body":{"nodeType":"YulBlock","src":"15243:53:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15260:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15283:5:35"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15265:17:35"},"nodeType":"YulFunctionCall","src":"15265:24:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15253:6:35"},"nodeType":"YulFunctionCall","src":"15253:37:35"},"nodeType":"YulExpressionStatement","src":"15253:37:35"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15231:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15238:3:35","type":""}],"src":"15178:118:35"},{"body":{"nodeType":"YulBlock","src":"15400:124:35","statements":[{"nodeType":"YulAssignment","src":"15410:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15422:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"15433:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15418:3:35"},"nodeType":"YulFunctionCall","src":"15418:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15410:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15490:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15503:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"15514:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15499:3:35"},"nodeType":"YulFunctionCall","src":"15499:17:35"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15446:43:35"},"nodeType":"YulFunctionCall","src":"15446:71:35"},"nodeType":"YulExpressionStatement","src":"15446:71:35"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15372:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15384:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15395:4:35","type":""}],"src":"15302:222:35"},{"body":{"nodeType":"YulBlock","src":"15589:40:35","statements":[{"nodeType":"YulAssignment","src":"15600:22:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15616:5:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15610:5:35"},"nodeType":"YulFunctionCall","src":"15610:12:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15600:6:35"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15572:5:35","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15582:6:35","type":""}],"src":"15530:99:35"},{"body":{"nodeType":"YulBlock","src":"15731:73:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15748:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"15753:6:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15741:6:35"},"nodeType":"YulFunctionCall","src":"15741:19:35"},"nodeType":"YulExpressionStatement","src":"15741:19:35"},{"nodeType":"YulAssignment","src":"15769:29:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15788:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"15793:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15784:3:35"},"nodeType":"YulFunctionCall","src":"15784:14:35"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15769:11:35"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15703:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"15708:6:35","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15719:11:35","type":""}],"src":"15635:169:35"},{"body":{"nodeType":"YulBlock","src":"15872:184:35","statements":[{"nodeType":"YulVariableDeclaration","src":"15882:10:35","value":{"kind":"number","nodeType":"YulLiteral","src":"15891:1:35","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15886:1:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"15951:63:35","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15976:3:35"},{"name":"i","nodeType":"YulIdentifier","src":"15981:1:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15972:3:35"},"nodeType":"YulFunctionCall","src":"15972:11:35"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15995:3:35"},{"name":"i","nodeType":"YulIdentifier","src":"16000:1:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15991:3:35"},"nodeType":"YulFunctionCall","src":"15991:11:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15985:5:35"},"nodeType":"YulFunctionCall","src":"15985:18:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15965:6:35"},"nodeType":"YulFunctionCall","src":"15965:39:35"},"nodeType":"YulExpressionStatement","src":"15965:39:35"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15912:1:35"},{"name":"length","nodeType":"YulIdentifier","src":"15915:6:35"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15909:2:35"},"nodeType":"YulFunctionCall","src":"15909:13:35"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15923:19:35","statements":[{"nodeType":"YulAssignment","src":"15925:15:35","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15934:1:35"},{"kind":"number","nodeType":"YulLiteral","src":"15937:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15930:3:35"},"nodeType":"YulFunctionCall","src":"15930:10:35"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15925:1:35"}]}]},"pre":{"nodeType":"YulBlock","src":"15905:3:35","statements":[]},"src":"15901:113:35"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16034:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"16039:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16030:3:35"},"nodeType":"YulFunctionCall","src":"16030:16:35"},{"kind":"number","nodeType":"YulLiteral","src":"16048:1:35","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16023:6:35"},"nodeType":"YulFunctionCall","src":"16023:27:35"},"nodeType":"YulExpressionStatement","src":"16023:27:35"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"15854:3:35","type":""},{"name":"dst","nodeType":"YulTypedName","src":"15859:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"15864:6:35","type":""}],"src":"15810:246:35"},{"body":{"nodeType":"YulBlock","src":"16154:285:35","statements":[{"nodeType":"YulVariableDeclaration","src":"16164:53:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16211:5:35"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16178:32:35"},"nodeType":"YulFunctionCall","src":"16178:39:35"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16168:6:35","type":""}]},{"nodeType":"YulAssignment","src":"16226:78:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16292:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"16297:6:35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16233:58:35"},"nodeType":"YulFunctionCall","src":"16233:71:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16226:3:35"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16352:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"16359:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16348:3:35"},"nodeType":"YulFunctionCall","src":"16348:16:35"},{"name":"pos","nodeType":"YulIdentifier","src":"16366:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"16371:6:35"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16313:34:35"},"nodeType":"YulFunctionCall","src":"16313:65:35"},"nodeType":"YulExpressionStatement","src":"16313:65:35"},{"nodeType":"YulAssignment","src":"16387:46:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16398:3:35"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16425:6:35"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16403:21:35"},"nodeType":"YulFunctionCall","src":"16403:29:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16394:3:35"},"nodeType":"YulFunctionCall","src":"16394:39:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16387:3:35"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16135:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16142:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16150:3:35","type":""}],"src":"16062:377:35"},{"body":{"nodeType":"YulBlock","src":"16563:195:35","statements":[{"nodeType":"YulAssignment","src":"16573:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16585:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"16596:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16581:3:35"},"nodeType":"YulFunctionCall","src":"16581:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16573:4:35"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16620:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"16631:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16616:3:35"},"nodeType":"YulFunctionCall","src":"16616:17:35"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16639:4:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"16645:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16635:3:35"},"nodeType":"YulFunctionCall","src":"16635:20:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16609:6:35"},"nodeType":"YulFunctionCall","src":"16609:47:35"},"nodeType":"YulExpressionStatement","src":"16609:47:35"},{"nodeType":"YulAssignment","src":"16665:86:35","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16737:6:35"},{"name":"tail","nodeType":"YulIdentifier","src":"16746:4:35"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16673:63:35"},"nodeType":"YulFunctionCall","src":"16673:78:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16665:4:35"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16535:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16547:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16558:4:35","type":""}],"src":"16445:313:35"},{"body":{"nodeType":"YulBlock","src":"16796:28:35","statements":[{"nodeType":"YulAssignment","src":"16806:12:35","value":{"name":"value","nodeType":"YulIdentifier","src":"16813:5:35"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16806:3:35"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16782:5:35","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16792:3:35","type":""}],"src":"16764:60:35"},{"body":{"nodeType":"YulBlock","src":"16890:82:35","statements":[{"nodeType":"YulAssignment","src":"16900:66:35","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16958:5:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"16940:17:35"},"nodeType":"YulFunctionCall","src":"16940:24:35"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"16931:8:35"},"nodeType":"YulFunctionCall","src":"16931:34:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"16913:17:35"},"nodeType":"YulFunctionCall","src":"16913:53:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"16900:9:35"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16870:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"16880:9:35","type":""}],"src":"16830:142:35"},{"body":{"nodeType":"YulBlock","src":"17038:66:35","statements":[{"nodeType":"YulAssignment","src":"17048:50:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17092:5:35"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"17061:30:35"},"nodeType":"YulFunctionCall","src":"17061:37:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17048:9:35"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17018:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"17028:9:35","type":""}],"src":"16978:126:35"},{"body":{"nodeType":"YulBlock","src":"17190:66:35","statements":[{"nodeType":"YulAssignment","src":"17200:50:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17244:5:35"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"17213:30:35"},"nodeType":"YulFunctionCall","src":"17213:37:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17200:9:35"}]}]},"name":"convert_t_contract$_IEntryPoint_$4475_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17170:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"17180:9:35","type":""}],"src":"17110:146:35"},{"body":{"nodeType":"YulBlock","src":"17347:86:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17364:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17420:5:35"}],"functionName":{"name":"convert_t_contract$_IEntryPoint_$4475_to_t_address","nodeType":"YulIdentifier","src":"17369:50:35"},"nodeType":"YulFunctionCall","src":"17369:57:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17357:6:35"},"nodeType":"YulFunctionCall","src":"17357:70:35"},"nodeType":"YulExpressionStatement","src":"17357:70:35"}]},"name":"abi_encode_t_contract$_IEntryPoint_$4475_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17335:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17342:3:35","type":""}],"src":"17262:171:35"},{"body":{"nodeType":"YulBlock","src":"17557:144:35","statements":[{"nodeType":"YulAssignment","src":"17567:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17579:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"17590:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17575:3:35"},"nodeType":"YulFunctionCall","src":"17575:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17567:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17667:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17680:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"17691:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17676:3:35"},"nodeType":"YulFunctionCall","src":"17676:17:35"}],"functionName":{"name":"abi_encode_t_contract$_IEntryPoint_$4475_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17603:63:35"},"nodeType":"YulFunctionCall","src":"17603:91:35"},"nodeType":"YulExpressionStatement","src":"17603:91:35"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$4475__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17529:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17541:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17552:4:35","type":""}],"src":"17439:262:35"},{"body":{"nodeType":"YulBlock","src":"17826:698:35","statements":[{"body":{"nodeType":"YulBlock","src":"17872:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17874:77:35"},"nodeType":"YulFunctionCall","src":"17874:79:35"},"nodeType":"YulExpressionStatement","src":"17874:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17847:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"17856:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17843:3:35"},"nodeType":"YulFunctionCall","src":"17843:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"17868:2:35","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17839:3:35"},"nodeType":"YulFunctionCall","src":"17839:32:35"},"nodeType":"YulIf","src":"17836:119:35"},{"nodeType":"YulBlock","src":"17965:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"17980:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"17994:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17984:6:35","type":""}]},{"nodeType":"YulAssignment","src":"18009:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18044:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"18055:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18040:3:35"},"nodeType":"YulFunctionCall","src":"18040:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18064:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18019:20:35"},"nodeType":"YulFunctionCall","src":"18019:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18009:6:35"}]}]},{"nodeType":"YulBlock","src":"18092:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"18107:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"18121:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18111:6:35","type":""}]},{"nodeType":"YulAssignment","src":"18137:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18172:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"18183:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18168:3:35"},"nodeType":"YulFunctionCall","src":"18168:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18192:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18147:20:35"},"nodeType":"YulFunctionCall","src":"18147:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18137:6:35"}]}]},{"nodeType":"YulBlock","src":"18220:297:35","statements":[{"nodeType":"YulVariableDeclaration","src":"18235:46:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18266:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"18277:2:35","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18262:3:35"},"nodeType":"YulFunctionCall","src":"18262:18:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18249:12:35"},"nodeType":"YulFunctionCall","src":"18249:32:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18239:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"18328:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18330:77:35"},"nodeType":"YulFunctionCall","src":"18330:79:35"},"nodeType":"YulExpressionStatement","src":"18330:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18300:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"18308:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18297:2:35"},"nodeType":"YulFunctionCall","src":"18297:30:35"},"nodeType":"YulIf","src":"18294:117:35"},{"nodeType":"YulAssignment","src":"18425:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18479:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"18490:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18475:3:35"},"nodeType":"YulFunctionCall","src":"18475:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18499:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"18443:31:35"},"nodeType":"YulFunctionCall","src":"18443:64:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18425:6:35"},{"name":"value3","nodeType":"YulIdentifier","src":"18433:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17772:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17783:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17795:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17803:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17811:6:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17819:6:35","type":""}],"src":"17707:817:35"},{"body":{"nodeType":"YulBlock","src":"18753:1346:35","statements":[{"body":{"nodeType":"YulBlock","src":"18800:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18802:77:35"},"nodeType":"YulFunctionCall","src":"18802:79:35"},"nodeType":"YulExpressionStatement","src":"18802:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18774:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"18783:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18770:3:35"},"nodeType":"YulFunctionCall","src":"18770:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"18795:3:35","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18766:3:35"},"nodeType":"YulFunctionCall","src":"18766:33:35"},"nodeType":"YulIf","src":"18763:120:35"},{"nodeType":"YulBlock","src":"18893:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"18908:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"18922:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18912:6:35","type":""}]},{"nodeType":"YulAssignment","src":"18937:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18972:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"18983:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18968:3:35"},"nodeType":"YulFunctionCall","src":"18968:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18992:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18947:20:35"},"nodeType":"YulFunctionCall","src":"18947:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18937:6:35"}]}]},{"nodeType":"YulBlock","src":"19020:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"19035:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"19049:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19039:6:35","type":""}]},{"nodeType":"YulAssignment","src":"19065:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19100:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"19111:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19096:3:35"},"nodeType":"YulFunctionCall","src":"19096:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19120:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19075:20:35"},"nodeType":"YulFunctionCall","src":"19075:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19065:6:35"}]}]},{"nodeType":"YulBlock","src":"19148:313:35","statements":[{"nodeType":"YulVariableDeclaration","src":"19163:46:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19194:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"19205:2:35","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19190:3:35"},"nodeType":"YulFunctionCall","src":"19190:18:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19177:12:35"},"nodeType":"YulFunctionCall","src":"19177:32:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19167:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"19256:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19258:77:35"},"nodeType":"YulFunctionCall","src":"19258:79:35"},"nodeType":"YulExpressionStatement","src":"19258:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19228:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"19236:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19225:2:35"},"nodeType":"YulFunctionCall","src":"19225:30:35"},"nodeType":"YulIf","src":"19222:117:35"},{"nodeType":"YulAssignment","src":"19353:98:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19423:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"19434:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19419:3:35"},"nodeType":"YulFunctionCall","src":"19419:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19443:7:35"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"19371:47:35"},"nodeType":"YulFunctionCall","src":"19371:80:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19353:6:35"},{"name":"value3","nodeType":"YulIdentifier","src":"19361:6:35"}]}]},{"nodeType":"YulBlock","src":"19471:313:35","statements":[{"nodeType":"YulVariableDeclaration","src":"19486:46:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19517:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"19528:2:35","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19513:3:35"},"nodeType":"YulFunctionCall","src":"19513:18:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19500:12:35"},"nodeType":"YulFunctionCall","src":"19500:32:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19490:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"19579:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19581:77:35"},"nodeType":"YulFunctionCall","src":"19581:79:35"},"nodeType":"YulExpressionStatement","src":"19581:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19551:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"19559:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19548:2:35"},"nodeType":"YulFunctionCall","src":"19548:30:35"},"nodeType":"YulIf","src":"19545:117:35"},{"nodeType":"YulAssignment","src":"19676:98:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19746:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"19757:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19742:3:35"},"nodeType":"YulFunctionCall","src":"19742:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19766:7:35"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"19694:47:35"},"nodeType":"YulFunctionCall","src":"19694:80:35"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"19676:6:35"},{"name":"value5","nodeType":"YulIdentifier","src":"19684:6:35"}]}]},{"nodeType":"YulBlock","src":"19794:298:35","statements":[{"nodeType":"YulVariableDeclaration","src":"19809:47:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19840:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"19851:3:35","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19836:3:35"},"nodeType":"YulFunctionCall","src":"19836:19:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19823:12:35"},"nodeType":"YulFunctionCall","src":"19823:33:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19813:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"19903:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19905:77:35"},"nodeType":"YulFunctionCall","src":"19905:79:35"},"nodeType":"YulExpressionStatement","src":"19905:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19875:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"19883:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19872:2:35"},"nodeType":"YulFunctionCall","src":"19872:30:35"},"nodeType":"YulIf","src":"19869:117:35"},{"nodeType":"YulAssignment","src":"20000:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20054:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"20065:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20050:3:35"},"nodeType":"YulFunctionCall","src":"20050:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20074:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"20018:31:35"},"nodeType":"YulFunctionCall","src":"20018:64:35"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"20000:6:35"},{"name":"value7","nodeType":"YulIdentifier","src":"20008:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18667:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18678:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18690:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18698:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18706:6:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18714:6:35","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18722:6:35","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18730:6:35","type":""},{"name":"value6","nodeType":"YulTypedName","src":"18738:6:35","type":""},{"name":"value7","nodeType":"YulTypedName","src":"18746:6:35","type":""}],"src":"18530:1569:35"},{"body":{"nodeType":"YulBlock","src":"20171:263:35","statements":[{"body":{"nodeType":"YulBlock","src":"20217:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20219:77:35"},"nodeType":"YulFunctionCall","src":"20219:79:35"},"nodeType":"YulExpressionStatement","src":"20219:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20192:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"20201:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20188:3:35"},"nodeType":"YulFunctionCall","src":"20188:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"20213:2:35","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20184:3:35"},"nodeType":"YulFunctionCall","src":"20184:32:35"},"nodeType":"YulIf","src":"20181:119:35"},{"nodeType":"YulBlock","src":"20310:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"20325:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"20339:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20329:6:35","type":""}]},{"nodeType":"YulAssignment","src":"20354:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20389:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"20400:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20385:3:35"},"nodeType":"YulFunctionCall","src":"20385:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20409:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20364:20:35"},"nodeType":"YulFunctionCall","src":"20364:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20354:6:35"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20141:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20152:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20164:6:35","type":""}],"src":"20105:329:35"},{"body":{"nodeType":"YulBlock","src":"20593:956:35","statements":[{"body":{"nodeType":"YulBlock","src":"20640:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20642:77:35"},"nodeType":"YulFunctionCall","src":"20642:79:35"},"nodeType":"YulExpressionStatement","src":"20642:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20614:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"20623:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20610:3:35"},"nodeType":"YulFunctionCall","src":"20610:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"20635:3:35","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20606:3:35"},"nodeType":"YulFunctionCall","src":"20606:33:35"},"nodeType":"YulIf","src":"20603:120:35"},{"nodeType":"YulBlock","src":"20733:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"20748:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"20762:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20752:6:35","type":""}]},{"nodeType":"YulAssignment","src":"20777:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20812:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"20823:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20808:3:35"},"nodeType":"YulFunctionCall","src":"20808:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20832:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20787:20:35"},"nodeType":"YulFunctionCall","src":"20787:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20777:6:35"}]}]},{"nodeType":"YulBlock","src":"20860:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"20875:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"20889:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20879:6:35","type":""}]},{"nodeType":"YulAssignment","src":"20905:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20940:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"20951:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20936:3:35"},"nodeType":"YulFunctionCall","src":"20936:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20960:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20915:20:35"},"nodeType":"YulFunctionCall","src":"20915:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20905:6:35"}]}]},{"nodeType":"YulBlock","src":"20988:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"21003:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"21017:2:35","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21007:6:35","type":""}]},{"nodeType":"YulAssignment","src":"21033:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21068:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"21079:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21064:3:35"},"nodeType":"YulFunctionCall","src":"21064:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21088:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21043:20:35"},"nodeType":"YulFunctionCall","src":"21043:53:35"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21033:6:35"}]}]},{"nodeType":"YulBlock","src":"21116:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"21131:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"21145:2:35","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21135:6:35","type":""}]},{"nodeType":"YulAssignment","src":"21161:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21196:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"21207:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21192:3:35"},"nodeType":"YulFunctionCall","src":"21192:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21216:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21171:20:35"},"nodeType":"YulFunctionCall","src":"21171:53:35"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"21161:6:35"}]}]},{"nodeType":"YulBlock","src":"21244:298:35","statements":[{"nodeType":"YulVariableDeclaration","src":"21259:47:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21290:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"21301:3:35","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21286:3:35"},"nodeType":"YulFunctionCall","src":"21286:19:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21273:12:35"},"nodeType":"YulFunctionCall","src":"21273:33:35"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21263:6:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"21353:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21355:77:35"},"nodeType":"YulFunctionCall","src":"21355:79:35"},"nodeType":"YulExpressionStatement","src":"21355:79:35"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21325:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"21333:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21322:2:35"},"nodeType":"YulFunctionCall","src":"21322:30:35"},"nodeType":"YulIf","src":"21319:117:35"},{"nodeType":"YulAssignment","src":"21450:82:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21504:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"21515:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21500:3:35"},"nodeType":"YulFunctionCall","src":"21500:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21524:7:35"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"21468:31:35"},"nodeType":"YulFunctionCall","src":"21468:64:35"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"21450:6:35"},{"name":"value5","nodeType":"YulIdentifier","src":"21458:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20523:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20534:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20546:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20554:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20562:6:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20570:6:35","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20578:6:35","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20586:6:35","type":""}],"src":"20440:1109:35"},{"body":{"nodeType":"YulBlock","src":"21661:63:35","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21683:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"21691:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21679:3:35"},"nodeType":"YulFunctionCall","src":"21679:14:35"},{"hexValue":"77726f6e67206172726179206c656e67746873","kind":"string","nodeType":"YulLiteral","src":"21695:21:35","type":"","value":"wrong array lengths"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21672:6:35"},"nodeType":"YulFunctionCall","src":"21672:45:35"},"nodeType":"YulExpressionStatement","src":"21672:45:35"}]},"name":"store_literal_in_memory_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21653:6:35","type":""}],"src":"21555:169:35"},{"body":{"nodeType":"YulBlock","src":"21876:220:35","statements":[{"nodeType":"YulAssignment","src":"21886:74:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21952:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"21957:2:35","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21893:58:35"},"nodeType":"YulFunctionCall","src":"21893:67:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21886:3:35"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22058:3:35"}],"functionName":{"name":"store_literal_in_memory_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e","nodeType":"YulIdentifier","src":"21969:88:35"},"nodeType":"YulFunctionCall","src":"21969:93:35"},"nodeType":"YulExpressionStatement","src":"21969:93:35"},{"nodeType":"YulAssignment","src":"22071:19:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22082:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"22087:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22078:3:35"},"nodeType":"YulFunctionCall","src":"22078:12:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22071:3:35"}]}]},"name":"abi_encode_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21864:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21872:3:35","type":""}],"src":"21730:366:35"},{"body":{"nodeType":"YulBlock","src":"22273:248:35","statements":[{"nodeType":"YulAssignment","src":"22283:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22295:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"22306:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22291:3:35"},"nodeType":"YulFunctionCall","src":"22291:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22283:4:35"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22330:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"22341:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22326:3:35"},"nodeType":"YulFunctionCall","src":"22326:17:35"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22349:4:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"22355:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22345:3:35"},"nodeType":"YulFunctionCall","src":"22345:20:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22319:6:35"},"nodeType":"YulFunctionCall","src":"22319:47:35"},"nodeType":"YulExpressionStatement","src":"22319:47:35"},{"nodeType":"YulAssignment","src":"22375:139:35","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22509:4:35"}],"functionName":{"name":"abi_encode_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22383:124:35"},"nodeType":"YulFunctionCall","src":"22383:131:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22375:4:35"}]}]},"name":"abi_encode_tuple_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22253:9:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22268:4:35","type":""}],"src":"22102:419:35"},{"body":{"nodeType":"YulBlock","src":"22555:152:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22572:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22575:77:35","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22565:6:35"},"nodeType":"YulFunctionCall","src":"22565:88:35"},"nodeType":"YulExpressionStatement","src":"22565:88:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22669:1:35","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22672:4:35","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22662:6:35"},"nodeType":"YulFunctionCall","src":"22662:15:35"},"nodeType":"YulExpressionStatement","src":"22662:15:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22693:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22696:4:35","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22686:6:35"},"nodeType":"YulFunctionCall","src":"22686:15:35"},"nodeType":"YulExpressionStatement","src":"22686:15:35"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22527:180:35"},{"body":{"nodeType":"YulBlock","src":"22802:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22819:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22822:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22812:6:35"},"nodeType":"YulFunctionCall","src":"22812:12:35"},"nodeType":"YulExpressionStatement","src":"22812:12:35"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"22713:117:35"},{"body":{"nodeType":"YulBlock","src":"22925:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22942:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22945:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22935:6:35"},"nodeType":"YulFunctionCall","src":"22935:12:35"},"nodeType":"YulExpressionStatement","src":"22935:12:35"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"22836:117:35"},{"body":{"nodeType":"YulBlock","src":"23048:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23065:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23068:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23058:6:35"},"nodeType":"YulFunctionCall","src":"23058:12:35"},"nodeType":"YulExpressionStatement","src":"23058:12:35"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"22959:117:35"},{"body":{"nodeType":"YulBlock","src":"23172:634:35","statements":[{"nodeType":"YulVariableDeclaration","src":"23182:51:35","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"23221:11:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23208:12:35"},"nodeType":"YulFunctionCall","src":"23208:25:35"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"23186:18:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"23327:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"23329:77:35"},"nodeType":"YulFunctionCall","src":"23329:79:35"},"nodeType":"YulExpressionStatement","src":"23329:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"23256:18:35"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"23284:12:35"},"nodeType":"YulFunctionCall","src":"23284:14:35"},{"name":"base_ref","nodeType":"YulIdentifier","src":"23300:8:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23280:3:35"},"nodeType":"YulFunctionCall","src":"23280:29:35"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23315:4:35","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"23321:1:35","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23311:3:35"},"nodeType":"YulFunctionCall","src":"23311:12:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23276:3:35"},"nodeType":"YulFunctionCall","src":"23276:48:35"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23252:3:35"},"nodeType":"YulFunctionCall","src":"23252:73:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23245:6:35"},"nodeType":"YulFunctionCall","src":"23245:81:35"},"nodeType":"YulIf","src":"23242:168:35"},{"nodeType":"YulAssignment","src":"23419:41:35","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"23431:8:35"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"23441:18:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23427:3:35"},"nodeType":"YulFunctionCall","src":"23427:33:35"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"23419:4:35"}]},{"nodeType":"YulAssignment","src":"23470:28:35","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"23493:4:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23480:12:35"},"nodeType":"YulFunctionCall","src":"23480:18:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23470:6:35"}]},{"body":{"nodeType":"YulBlock","src":"23541:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"23543:77:35"},"nodeType":"YulFunctionCall","src":"23543:79:35"},"nodeType":"YulExpressionStatement","src":"23543:79:35"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23513:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"23521:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23510:2:35"},"nodeType":"YulFunctionCall","src":"23510:30:35"},"nodeType":"YulIf","src":"23507:117:35"},{"nodeType":"YulAssignment","src":"23633:21:35","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"23645:4:35"},{"kind":"number","nodeType":"YulLiteral","src":"23651:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23641:3:35"},"nodeType":"YulFunctionCall","src":"23641:13:35"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"23633:4:35"}]},{"body":{"nodeType":"YulBlock","src":"23716:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"23718:77:35"},"nodeType":"YulFunctionCall","src":"23718:79:35"},"nodeType":"YulExpressionStatement","src":"23718:79:35"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"23670:4:35"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"23680:12:35"},"nodeType":"YulFunctionCall","src":"23680:14:35"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23700:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"23708:4:35","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23696:3:35"},"nodeType":"YulFunctionCall","src":"23696:17:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23676:3:35"},"nodeType":"YulFunctionCall","src":"23676:38:35"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"23666:3:35"},"nodeType":"YulFunctionCall","src":"23666:49:35"},"nodeType":"YulIf","src":"23663:136:35"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"23133:8:35","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"23143:11:35","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"23159:4:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"23165:6:35","type":""}],"src":"23082:724:35"},{"body":{"nodeType":"YulBlock","src":"23840:152:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23857:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23860:77:35","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23850:6:35"},"nodeType":"YulFunctionCall","src":"23850:88:35"},"nodeType":"YulExpressionStatement","src":"23850:88:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23954:1:35","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23957:4:35","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23947:6:35"},"nodeType":"YulFunctionCall","src":"23947:15:35"},"nodeType":"YulExpressionStatement","src":"23947:15:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23978:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23981:4:35","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23971:6:35"},"nodeType":"YulFunctionCall","src":"23971:15:35"},"nodeType":"YulExpressionStatement","src":"23971:15:35"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"23812:180:35"},{"body":{"nodeType":"YulBlock","src":"24041:190:35","statements":[{"nodeType":"YulAssignment","src":"24051:33:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24078:5:35"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24060:17:35"},"nodeType":"YulFunctionCall","src":"24060:24:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24051:5:35"}]},{"body":{"nodeType":"YulBlock","src":"24174:22:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24176:16:35"},"nodeType":"YulFunctionCall","src":"24176:18:35"},"nodeType":"YulExpressionStatement","src":"24176:18:35"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24099:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"24106:66:35","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24096:2:35"},"nodeType":"YulFunctionCall","src":"24096:77:35"},"nodeType":"YulIf","src":"24093:103:35"},{"nodeType":"YulAssignment","src":"24205:20:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24216:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"24223:1:35","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24212:3:35"},"nodeType":"YulFunctionCall","src":"24212:13:35"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24205:3:35"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24027:5:35","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24037:3:35","type":""}],"src":"23998:233:35"},{"body":{"nodeType":"YulBlock","src":"24318:61:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24335:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24366:5:35"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"24340:25:35"},"nodeType":"YulFunctionCall","src":"24340:32:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24328:6:35"},"nodeType":"YulFunctionCall","src":"24328:45:35"},"nodeType":"YulExpressionStatement","src":"24328:45:35"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24306:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24313:3:35","type":""}],"src":"24237:142:35"},{"body":{"nodeType":"YulBlock","src":"24527:222:35","statements":[{"nodeType":"YulAssignment","src":"24537:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24549:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"24560:2:35","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24545:3:35"},"nodeType":"YulFunctionCall","src":"24545:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24537:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24633:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24646:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"24657:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24642:3:35"},"nodeType":"YulFunctionCall","src":"24642:17:35"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"24573:59:35"},"nodeType":"YulFunctionCall","src":"24573:87:35"},"nodeType":"YulExpressionStatement","src":"24573:87:35"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24714:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24727:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"24738:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24723:3:35"},"nodeType":"YulFunctionCall","src":"24723:18:35"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24670:43:35"},"nodeType":"YulFunctionCall","src":"24670:72:35"},"nodeType":"YulExpressionStatement","src":"24670:72:35"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24491:9:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24503:6:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24511:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24522:4:35","type":""}],"src":"24385:364:35"},{"body":{"nodeType":"YulBlock","src":"24818:80:35","statements":[{"nodeType":"YulAssignment","src":"24828:22:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24843:6:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24837:5:35"},"nodeType":"YulFunctionCall","src":"24837:13:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24828:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24886:5:35"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"24859:26:35"},"nodeType":"YulFunctionCall","src":"24859:33:35"},"nodeType":"YulExpressionStatement","src":"24859:33:35"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24796:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"24804:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"24812:5:35","type":""}],"src":"24755:143:35"},{"body":{"nodeType":"YulBlock","src":"24981:274:35","statements":[{"body":{"nodeType":"YulBlock","src":"25027:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25029:77:35"},"nodeType":"YulFunctionCall","src":"25029:79:35"},"nodeType":"YulExpressionStatement","src":"25029:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25002:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"25011:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24998:3:35"},"nodeType":"YulFunctionCall","src":"24998:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"25023:2:35","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24994:3:35"},"nodeType":"YulFunctionCall","src":"24994:32:35"},"nodeType":"YulIf","src":"24991:119:35"},{"nodeType":"YulBlock","src":"25120:128:35","statements":[{"nodeType":"YulVariableDeclaration","src":"25135:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"25149:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25139:6:35","type":""}]},{"nodeType":"YulAssignment","src":"25164:74:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25210:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"25221:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25206:3:35"},"nodeType":"YulFunctionCall","src":"25206:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25230:7:35"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"25174:31:35"},"nodeType":"YulFunctionCall","src":"25174:64:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25164:6:35"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24951:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24962:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24974:6:35","type":""}],"src":"24904:351:35"},{"body":{"nodeType":"YulBlock","src":"25314:32:35","statements":[{"nodeType":"YulAssignment","src":"25324:16:35","value":{"name":"value","nodeType":"YulIdentifier","src":"25335:5:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"25324:7:35"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25296:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"25306:7:35","type":""}],"src":"25261:85:35"},{"body":{"nodeType":"YulBlock","src":"25396:57:35","statements":[{"nodeType":"YulAssignment","src":"25406:41:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25421:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"25428:18:35","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25417:3:35"},"nodeType":"YulFunctionCall","src":"25417:30:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"25406:7:35"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25378:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"25388:7:35","type":""}],"src":"25352:101:35"},{"body":{"nodeType":"YulBlock","src":"25526:89:35","statements":[{"nodeType":"YulAssignment","src":"25536:73:35","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25601:5:35"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"25575:25:35"},"nodeType":"YulFunctionCall","src":"25575:32:35"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"25566:8:35"},"nodeType":"YulFunctionCall","src":"25566:42:35"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"25549:16:35"},"nodeType":"YulFunctionCall","src":"25549:60:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"25536:9:35"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25506:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"25516:9:35","type":""}],"src":"25459:156:35"},{"body":{"nodeType":"YulBlock","src":"25693:73:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25710:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25753:5:35"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulIdentifier","src":"25715:37:35"},"nodeType":"YulFunctionCall","src":"25715:44:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25703:6:35"},"nodeType":"YulFunctionCall","src":"25703:57:35"},"nodeType":"YulExpressionStatement","src":"25703:57:35"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25681:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25688:3:35","type":""}],"src":"25621:145:35"},{"body":{"nodeType":"YulBlock","src":"25877:131:35","statements":[{"nodeType":"YulAssignment","src":"25887:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25899:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"25910:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25895:3:35"},"nodeType":"YulFunctionCall","src":"25895:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25887:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25974:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25987:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"25998:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25983:3:35"},"nodeType":"YulFunctionCall","src":"25983:17:35"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"25923:50:35"},"nodeType":"YulFunctionCall","src":"25923:78:35"},"nodeType":"YulExpressionStatement","src":"25923:78:35"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25849:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25861:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25872:4:35","type":""}],"src":"25772:236:35"},{"body":{"nodeType":"YulBlock","src":"26067:32:35","statements":[{"nodeType":"YulAssignment","src":"26077:16:35","value":{"name":"value","nodeType":"YulIdentifier","src":"26088:5:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26077:7:35"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26049:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26059:7:35","type":""}],"src":"26014:85:35"},{"body":{"nodeType":"YulBlock","src":"26150:89:35","statements":[{"nodeType":"YulAssignment","src":"26160:73:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26175:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"26182:50:35","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26171:3:35"},"nodeType":"YulFunctionCall","src":"26171:62:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26160:7:35"}]}]},"name":"cleanup_t_uint192","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26132:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26142:7:35","type":""}],"src":"26105:134:35"},{"body":{"nodeType":"YulBlock","src":"26313:90:35","statements":[{"nodeType":"YulAssignment","src":"26323:74:35","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26389:5:35"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"26363:25:35"},"nodeType":"YulFunctionCall","src":"26363:32:35"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"26354:8:35"},"nodeType":"YulFunctionCall","src":"26354:42:35"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"26336:17:35"},"nodeType":"YulFunctionCall","src":"26336:61:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"26323:9:35"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint192","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26293:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"26303:9:35","type":""}],"src":"26245:158:35"},{"body":{"nodeType":"YulBlock","src":"26482:74:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26499:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26543:5:35"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint192","nodeType":"YulIdentifier","src":"26504:38:35"},"nodeType":"YulFunctionCall","src":"26504:45:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26492:6:35"},"nodeType":"YulFunctionCall","src":"26492:58:35"},"nodeType":"YulExpressionStatement","src":"26492:58:35"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint192_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26470:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26477:3:35","type":""}],"src":"26409:147:35"},{"body":{"nodeType":"YulBlock","src":"26696:214:35","statements":[{"nodeType":"YulAssignment","src":"26706:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26718:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"26729:2:35","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26714:3:35"},"nodeType":"YulFunctionCall","src":"26714:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26706:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26786:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26799:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"26810:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26795:3:35"},"nodeType":"YulFunctionCall","src":"26795:17:35"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26742:43:35"},"nodeType":"YulFunctionCall","src":"26742:71:35"},"nodeType":"YulExpressionStatement","src":"26742:71:35"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26875:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26888:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"26899:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26884:3:35"},"nodeType":"YulFunctionCall","src":"26884:18:35"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint192_fromStack","nodeType":"YulIdentifier","src":"26823:51:35"},"nodeType":"YulFunctionCall","src":"26823:80:35"},"nodeType":"YulExpressionStatement","src":"26823:80:35"}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26660:9:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26672:6:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26680:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26691:4:35","type":""}],"src":"26562:348:35"},{"body":{"nodeType":"YulBlock","src":"27022:72:35","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27044:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"27052:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27040:3:35"},"nodeType":"YulFunctionCall","src":"27040:14:35"},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","kind":"string","nodeType":"YulLiteral","src":"27056:30:35","type":"","value":"account: not from EntryPoint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27033:6:35"},"nodeType":"YulFunctionCall","src":"27033:54:35"},"nodeType":"YulExpressionStatement","src":"27033:54:35"}]},"name":"store_literal_in_memory_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27014:6:35","type":""}],"src":"26916:178:35"},{"body":{"nodeType":"YulBlock","src":"27246:220:35","statements":[{"nodeType":"YulAssignment","src":"27256:74:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27322:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"27327:2:35","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27263:58:35"},"nodeType":"YulFunctionCall","src":"27263:67:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27256:3:35"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27428:3:35"}],"functionName":{"name":"store_literal_in_memory_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","nodeType":"YulIdentifier","src":"27339:88:35"},"nodeType":"YulFunctionCall","src":"27339:93:35"},"nodeType":"YulExpressionStatement","src":"27339:93:35"},{"nodeType":"YulAssignment","src":"27441:19:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27452:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"27457:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27448:3:35"},"nodeType":"YulFunctionCall","src":"27448:12:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27441:3:35"}]}]},"name":"abi_encode_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27234:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27242:3:35","type":""}],"src":"27100:366:35"},{"body":{"nodeType":"YulBlock","src":"27643:248:35","statements":[{"nodeType":"YulAssignment","src":"27653:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27665:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"27676:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27661:3:35"},"nodeType":"YulFunctionCall","src":"27661:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27653:4:35"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27700:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"27711:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27696:3:35"},"nodeType":"YulFunctionCall","src":"27696:17:35"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27719:4:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"27725:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27715:3:35"},"nodeType":"YulFunctionCall","src":"27715:20:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27689:6:35"},"nodeType":"YulFunctionCall","src":"27689:47:35"},"nodeType":"YulExpressionStatement","src":"27689:47:35"},{"nodeType":"YulAssignment","src":"27745:139:35","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27879:4:35"}],"functionName":{"name":"abi_encode_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27753:124:35"},"nodeType":"YulFunctionCall","src":"27753:131:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27745:4:35"}]}]},"name":"abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27623:9:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27638:4:35","type":""}],"src":"27472:419:35"},{"body":{"nodeType":"YulBlock","src":"28010:34:35","statements":[{"nodeType":"YulAssignment","src":"28020:18:35","value":{"name":"pos","nodeType":"YulIdentifier","src":"28035:3:35"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28020:11:35"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27982:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"27987:6:35","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"27998:11:35","type":""}],"src":"27897:147:35"},{"body":{"nodeType":"YulBlock","src":"28156:8:35","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28148:6:35","type":""}],"src":"28050:114:35"},{"body":{"nodeType":"YulBlock","src":"28333:235:35","statements":[{"nodeType":"YulAssignment","src":"28343:90:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28426:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"28431:1:35","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28350:75:35"},"nodeType":"YulFunctionCall","src":"28350:83:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28343:3:35"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28531:3:35"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"28442:88:35"},"nodeType":"YulFunctionCall","src":"28442:93:35"},"nodeType":"YulExpressionStatement","src":"28442:93:35"},{"nodeType":"YulAssignment","src":"28544:18:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28555:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"28560:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28551:3:35"},"nodeType":"YulFunctionCall","src":"28551:11:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28544:3:35"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28321:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28329:3:35","type":""}],"src":"28170:398:35"},{"body":{"nodeType":"YulBlock","src":"28762:191:35","statements":[{"nodeType":"YulAssignment","src":"28773:154:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28923:3:35"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28780:141:35"},"nodeType":"YulFunctionCall","src":"28780:147:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28773:3:35"}]},{"nodeType":"YulAssignment","src":"28937:10:35","value":{"name":"pos","nodeType":"YulIdentifier","src":"28944:3:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28937:3:35"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28749:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28758:3:35","type":""}],"src":"28574:379:35"},{"body":{"nodeType":"YulBlock","src":"29065:76:35","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29087:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"29095:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29083:3:35"},"nodeType":"YulFunctionCall","src":"29083:14:35"},{"hexValue":"6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74","kind":"string","nodeType":"YulLiteral","src":"29099:34:35","type":"","value":"account: not Owner or EntryPoint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29076:6:35"},"nodeType":"YulFunctionCall","src":"29076:58:35"},"nodeType":"YulExpressionStatement","src":"29076:58:35"}]},"name":"store_literal_in_memory_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29057:6:35","type":""}],"src":"28959:182:35"},{"body":{"nodeType":"YulBlock","src":"29293:220:35","statements":[{"nodeType":"YulAssignment","src":"29303:74:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29369:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"29374:2:35","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29310:58:35"},"nodeType":"YulFunctionCall","src":"29310:67:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29303:3:35"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29475:3:35"}],"functionName":{"name":"store_literal_in_memory_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","nodeType":"YulIdentifier","src":"29386:88:35"},"nodeType":"YulFunctionCall","src":"29386:93:35"},"nodeType":"YulExpressionStatement","src":"29386:93:35"},{"nodeType":"YulAssignment","src":"29488:19:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29499:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"29504:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29495:3:35"},"nodeType":"YulFunctionCall","src":"29495:12:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29488:3:35"}]}]},"name":"abi_encode_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29281:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29289:3:35","type":""}],"src":"29147:366:35"},{"body":{"nodeType":"YulBlock","src":"29690:248:35","statements":[{"nodeType":"YulAssignment","src":"29700:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29712:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"29723:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29708:3:35"},"nodeType":"YulFunctionCall","src":"29708:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29700:4:35"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29747:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"29758:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29743:3:35"},"nodeType":"YulFunctionCall","src":"29743:17:35"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29766:4:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"29772:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29762:3:35"},"nodeType":"YulFunctionCall","src":"29762:20:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29736:6:35"},"nodeType":"YulFunctionCall","src":"29736:47:35"},"nodeType":"YulExpressionStatement","src":"29736:47:35"},{"nodeType":"YulAssignment","src":"29792:139:35","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29926:4:35"}],"functionName":{"name":"abi_encode_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29800:124:35"},"nodeType":"YulFunctionCall","src":"29800:131:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29792:4:35"}]}]},"name":"abi_encode_tuple_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29670:9:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29685:4:35","type":""}],"src":"29519:419:35"},{"body":{"nodeType":"YulBlock","src":"30002:40:35","statements":[{"nodeType":"YulAssignment","src":"30013:22:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30029:5:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30023:5:35"},"nodeType":"YulFunctionCall","src":"30023:12:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"30013:6:35"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29985:5:35","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"29995:6:35","type":""}],"src":"29944:98:35"},{"body":{"nodeType":"YulBlock","src":"30156:278:35","statements":[{"nodeType":"YulVariableDeclaration","src":"30166:52:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30212:5:35"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"30180:31:35"},"nodeType":"YulFunctionCall","src":"30180:38:35"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"30170:6:35","type":""}]},{"nodeType":"YulAssignment","src":"30227:95:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30310:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"30315:6:35"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30234:75:35"},"nodeType":"YulFunctionCall","src":"30234:88:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30227:3:35"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30370:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"30377:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30366:3:35"},"nodeType":"YulFunctionCall","src":"30366:16:35"},{"name":"pos","nodeType":"YulIdentifier","src":"30384:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"30389:6:35"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"30331:34:35"},"nodeType":"YulFunctionCall","src":"30331:65:35"},"nodeType":"YulExpressionStatement","src":"30331:65:35"},{"nodeType":"YulAssignment","src":"30405:23:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30416:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"30421:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30412:3:35"},"nodeType":"YulFunctionCall","src":"30412:16:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30405:3:35"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30137:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30144:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30152:3:35","type":""}],"src":"30048:386:35"},{"body":{"nodeType":"YulBlock","src":"30574:137:35","statements":[{"nodeType":"YulAssignment","src":"30585:100:35","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30672:6:35"},{"name":"pos","nodeType":"YulIdentifier","src":"30681:3:35"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30592:79:35"},"nodeType":"YulFunctionCall","src":"30592:93:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30585:3:35"}]},{"nodeType":"YulAssignment","src":"30695:10:35","value":{"name":"pos","nodeType":"YulIdentifier","src":"30702:3:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30695:3:35"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30553:3:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30559:6:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30570:3:35","type":""}],"src":"30440:271:35"},{"body":{"nodeType":"YulBlock","src":"30823:54:35","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30845:6:35"},{"kind":"number","nodeType":"YulLiteral","src":"30853:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30841:3:35"},"nodeType":"YulFunctionCall","src":"30841:14:35"},{"hexValue":"6f6e6c79206f776e6572","kind":"string","nodeType":"YulLiteral","src":"30857:12:35","type":"","value":"only owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30834:6:35"},"nodeType":"YulFunctionCall","src":"30834:36:35"},"nodeType":"YulExpressionStatement","src":"30834:36:35"}]},"name":"store_literal_in_memory_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30815:6:35","type":""}],"src":"30717:160:35"},{"body":{"nodeType":"YulBlock","src":"31029:220:35","statements":[{"nodeType":"YulAssignment","src":"31039:74:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31105:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"31110:2:35","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31046:58:35"},"nodeType":"YulFunctionCall","src":"31046:67:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31039:3:35"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31211:3:35"}],"functionName":{"name":"store_literal_in_memory_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","nodeType":"YulIdentifier","src":"31122:88:35"},"nodeType":"YulFunctionCall","src":"31122:93:35"},"nodeType":"YulExpressionStatement","src":"31122:93:35"},{"nodeType":"YulAssignment","src":"31224:19:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31235:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"31240:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31231:3:35"},"nodeType":"YulFunctionCall","src":"31231:12:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31224:3:35"}]}]},"name":"abi_encode_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31017:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31025:3:35","type":""}],"src":"30883:366:35"},{"body":{"nodeType":"YulBlock","src":"31426:248:35","statements":[{"nodeType":"YulAssignment","src":"31436:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31448:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"31459:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31444:3:35"},"nodeType":"YulFunctionCall","src":"31444:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31436:4:35"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31483:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"31494:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31479:3:35"},"nodeType":"YulFunctionCall","src":"31479:17:35"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31502:4:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"31508:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31498:3:35"},"nodeType":"YulFunctionCall","src":"31498:20:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31472:6:35"},"nodeType":"YulFunctionCall","src":"31472:47:35"},"nodeType":"YulExpressionStatement","src":"31472:47:35"},{"nodeType":"YulAssignment","src":"31528:139:35","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31662:4:35"}],"functionName":{"name":"abi_encode_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31536:124:35"},"nodeType":"YulFunctionCall","src":"31536:131:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31528:4:35"}]}]},"name":"abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31406:9:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31421:4:35","type":""}],"src":"31255:419:35"},{"body":{"nodeType":"YulBlock","src":"31743:80:35","statements":[{"nodeType":"YulAssignment","src":"31753:22:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31768:6:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31762:5:35"},"nodeType":"YulFunctionCall","src":"31762:13:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31753:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31811:5:35"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"31784:26:35"},"nodeType":"YulFunctionCall","src":"31784:33:35"},"nodeType":"YulExpressionStatement","src":"31784:33:35"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"31721:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"31729:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"31737:5:35","type":""}],"src":"31680:143:35"},{"body":{"nodeType":"YulBlock","src":"31906:274:35","statements":[{"body":{"nodeType":"YulBlock","src":"31952:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"31954:77:35"},"nodeType":"YulFunctionCall","src":"31954:79:35"},"nodeType":"YulExpressionStatement","src":"31954:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31927:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"31936:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31923:3:35"},"nodeType":"YulFunctionCall","src":"31923:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"31948:2:35","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31919:3:35"},"nodeType":"YulFunctionCall","src":"31919:32:35"},"nodeType":"YulIf","src":"31916:119:35"},{"nodeType":"YulBlock","src":"32045:128:35","statements":[{"nodeType":"YulVariableDeclaration","src":"32060:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"32074:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32064:6:35","type":""}]},{"nodeType":"YulAssignment","src":"32089:74:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32135:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"32146:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32131:3:35"},"nodeType":"YulFunctionCall","src":"32131:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32155:7:35"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"32099:31:35"},"nodeType":"YulFunctionCall","src":"32099:64:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"32089:6:35"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31876:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31887:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31899:6:35","type":""}],"src":"31829:351:35"},{"body":{"nodeType":"YulBlock","src":"32214:152:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32231:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32234:77:35","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32224:6:35"},"nodeType":"YulFunctionCall","src":"32224:88:35"},"nodeType":"YulExpressionStatement","src":"32224:88:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32328:1:35","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32331:4:35","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32321:6:35"},"nodeType":"YulFunctionCall","src":"32321:15:35"},"nodeType":"YulExpressionStatement","src":"32321:15:35"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32352:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32355:4:35","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32345:6:35"},"nodeType":"YulFunctionCall","src":"32345:15:35"},"nodeType":"YulExpressionStatement","src":"32345:15:35"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"32186:180:35"},{"body":{"nodeType":"YulBlock","src":"32415:43:35","statements":[{"nodeType":"YulAssignment","src":"32425:27:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32440:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"32447:4:35","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32436:3:35"},"nodeType":"YulFunctionCall","src":"32436:16:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"32425:7:35"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32397:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"32407:7:35","type":""}],"src":"32372:86:35"},{"body":{"nodeType":"YulBlock","src":"32525:51:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32542:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32563:5:35"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"32547:15:35"},"nodeType":"YulFunctionCall","src":"32547:22:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32535:6:35"},"nodeType":"YulFunctionCall","src":"32535:35:35"},"nodeType":"YulExpressionStatement","src":"32535:35:35"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32513:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32520:3:35","type":""}],"src":"32464:112:35"},{"body":{"nodeType":"YulBlock","src":"32760:367:35","statements":[{"nodeType":"YulAssignment","src":"32770:27:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32782:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"32793:3:35","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32778:3:35"},"nodeType":"YulFunctionCall","src":"32778:19:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32770:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32851:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32864:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"32875:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32860:3:35"},"nodeType":"YulFunctionCall","src":"32860:17:35"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32807:43:35"},"nodeType":"YulFunctionCall","src":"32807:71:35"},"nodeType":"YulExpressionStatement","src":"32807:71:35"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32928:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32941:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"32952:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32937:3:35"},"nodeType":"YulFunctionCall","src":"32937:18:35"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"32888:39:35"},"nodeType":"YulFunctionCall","src":"32888:68:35"},"nodeType":"YulExpressionStatement","src":"32888:68:35"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33010:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33023:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"33034:2:35","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33019:3:35"},"nodeType":"YulFunctionCall","src":"33019:18:35"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32966:43:35"},"nodeType":"YulFunctionCall","src":"32966:72:35"},"nodeType":"YulExpressionStatement","src":"32966:72:35"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33092:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33105:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"33116:2:35","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33101:3:35"},"nodeType":"YulFunctionCall","src":"33101:18:35"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"33048:43:35"},"nodeType":"YulFunctionCall","src":"33048:72:35"},"nodeType":"YulExpressionStatement","src":"33048:72:35"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32708:9:35","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32720:6:35","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32728:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32736:6:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32744:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32755:4:35","type":""}],"src":"32582:545:35"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct UserOperation\n    function abi_decode_t_struct$_UserOperation_$4659_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 352) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$4659_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$4659_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$4475_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$4475_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$4475_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$4475__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$4475_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e(memPtr) {\n\n        mstore(add(memPtr, 0), \"wrong array lengths\")\n\n    }\n\n    function abi_encode_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint192(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint192(value) -> converted {\n        converted := cleanup_t_uint192(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint192_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint192(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint192_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50(memPtr) {\n\n        mstore(add(memPtr, 0), \"account: not from EntryPoint\")\n\n    }\n\n    function abi_encode_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21(memPtr) {\n\n        mstore(add(memPtr, 0), \"account: not Owner or EntryPoint\")\n\n    }\n\n    function abi_encode_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367(memPtr) {\n\n        mstore(add(memPtr, 0), \"only owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":35,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"814":[{"length":32,"start":4326},{"length":32,"start":4411},{"length":32,"start":4854}],"4687":[{"length":32,"start":2442},{"length":32,"start":5148}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x401 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x31C JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x47E1DA2A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x47E1DA2A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x270 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x1BB JUMPI PUSH2 0x113 JUMP JUMPDEST CALLDATASIZE PUSH2 0x113 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x242E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x2449 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x25C6 JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x513 JUMPI POP PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x57B JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x5AB DUP5 DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BA DUP5 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x5C3 DUP3 PUSH2 0xE31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0xECD JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0x5FA JUMPI POP PUSH1 0x0 DUP5 DUP5 SWAP1 POP EQ DUP1 PUSH2 0x5F9 JUMPI POP DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ JUMPDEST JUMPDEST PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SUB PUSH2 0x705 JUMPI PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x6FF JUMPI PUSH2 0x6EC DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x692 JUMPI PUSH2 0x691 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x270A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF9A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x6F7 SWAP1 PUSH2 0x279C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x647 JUMP JUMPDEST POP PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7D8 JUMPI PUSH2 0x7C5 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x751 JUMPI PUSH2 0x750 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x76B JUMPI PUSH2 0x76A PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x270A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF9A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7D0 SWAP1 PUSH2 0x279C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x708 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EA PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85F PUSH2 0x101E JUMP JUMPDEST PUSH2 0x867 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP3 SWAP2 SWAP1 PUSH2 0x27F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0x8E8 DUP3 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0x8F2 DUP3 DUP3 PUSH2 0x11D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x900 PUSH2 0x12F4 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9B6 PUSH2 0xECD JUMP JUMPDEST PUSH2 0xA05 DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF9A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2D PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA6 SWAP2 SWAP1 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB5 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB03 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB38 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB46 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBCD JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBD6 DUP7 PUSH2 0x13A3 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xC32 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC44 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35567E1A ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7F SWAP3 SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCE3 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x299C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD5E DUP4 PUSH2 0x1480 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC6 DUP5 DUP1 PUSH2 0x140 ADD SWAP1 PUSH2 0xD74 SWAP2 SWAP1 PUSH2 0x270A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH2 0x14B6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE22 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0xECA JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x40 MLOAD PUSH2 0xE81 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP JUMPDEST POP JUMP JUMPDEST PUSH2 0xED5 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF59 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8F SWAP1 PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1000 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1017 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x10A3 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1191 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1178 PUSH2 0x14E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11D2 PUSH2 0x101E JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x123D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123A SWAP2 SWAP1 PUSH2 0x2B42 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x127E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x12E5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12EF DUP4 DUP4 PUSH2 0x1539 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1379 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x14C6 DUP7 DUP7 PUSH2 0x15AC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x14D6 DUP3 DUP3 PUSH2 0x1608 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1510 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x176C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1542 DUP3 PUSH2 0x1776 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x159F JUMPI PUSH2 0x1599 DUP3 DUP3 PUSH2 0x1843 JUMP JUMPDEST POP PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x15A7 PUSH2 0x18C7 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x15F1 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x15E3 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1904 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x161C JUMPI PUSH2 0x161B PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162E PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1768 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1693 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16A7 JUMPI PUSH2 0x16A6 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16B9 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16FF JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F6 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1712 JUMPI PUSH2 0x1711 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1725 JUMPI PUSH2 0x1724 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1767 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175E SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x17D2 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C9 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x17FF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x176C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x186D SWAP2 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18A8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18BD DUP6 DUP4 DUP4 PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1902 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1944 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1969 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x198B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19DF JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x19EE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1A0D JUMPI PUSH2 0x1A08 DUP3 PUSH2 0x1A87 JUMP JUMPDEST PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1A35 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1A77 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6E SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1A9A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0B DUP3 PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1B DUP2 PUSH2 0x1B00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B38 DUP2 PUSH2 0x1B12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x1B3E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6E DUP2 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1B99 JUMPI PUSH2 0x1B98 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB6 JUMPI PUSH2 0x1BB5 PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1BD2 JUMPI PUSH2 0x1BD1 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C07 DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1C18 DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1C29 DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1C3A DUP12 DUP3 DUP13 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C5B JUMPI PUSH2 0x1C5A PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1C67 DUP12 DUP3 DUP13 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1C96 DUP12 DUP3 DUP13 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDD DUP2 PUSH2 0x1CA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFA DUP2 PUSH2 0x1CD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D24 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D42 DUP2 PUSH2 0x1D2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7E PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D8D DUP9 DUP3 DUP10 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D9E DUP9 DUP3 DUP10 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1DAF DUP9 DUP3 DUP10 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DD0 JUMPI PUSH2 0x1DCF PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1DDC DUP9 DUP3 DUP10 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1DF4 DUP2 PUSH2 0x1CA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E31 JUMPI PUSH2 0x1E30 PUSH2 0x1E15 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4D DUP2 PUSH2 0x1E3A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E6A DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E88 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1EB3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1E5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1ED5 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1EE8 DUP2 PUSH2 0x1B3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F03 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3C JUMPI PUSH2 0x1F3B PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1F58 JUMPI PUSH2 0x1F57 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F92 JUMPI PUSH2 0x1F91 PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1FAE JUMPI PUSH2 0x1FAD PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FCB JUMPI PUSH2 0x1FCA PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FE8 JUMPI PUSH2 0x1FE7 PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2004 JUMPI PUSH2 0x2003 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2028 JUMPI PUSH2 0x2027 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2046 JUMPI PUSH2 0x2045 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2052 DUP10 DUP3 DUP11 ADD PUSH2 0x1F09 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2081 DUP10 DUP3 DUP11 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A3 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x20B0 DUP10 DUP3 DUP11 ADD PUSH2 0x1FB5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CA DUP3 PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20DA DUP2 PUSH2 0x20BF JUMP JUMPDEST DUP2 EQ PUSH2 0x20E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F7 DUP2 PUSH2 0x20D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2114 JUMPI PUSH2 0x2113 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2122 DUP6 DUP3 DUP7 ADD PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2133 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x218B DUP3 PUSH2 0x2142 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21AA JUMPI PUSH2 0x21A9 PUSH2 0x2153 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BD PUSH2 0x1ACC JUMP JUMPDEST SWAP1 POP PUSH2 0x21C9 DUP3 DUP3 PUSH2 0x2182 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21E9 JUMPI PUSH2 0x21E8 PUSH2 0x2153 JUMP JUMPDEST JUMPDEST PUSH2 0x21F2 DUP3 PUSH2 0x2142 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2221 PUSH2 0x221C DUP5 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x21B3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x223D JUMPI PUSH2 0x223C PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH2 0x2248 DUP5 DUP3 DUP6 PUSH2 0x21FF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2265 JUMPI PUSH2 0x2264 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2275 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x220E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2295 JUMPI PUSH2 0x2294 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C4 JUMPI PUSH2 0x22C3 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x22D0 DUP6 DUP3 DUP7 ADD PUSH2 0x2250 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E3 DUP2 PUSH2 0x1E3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22FE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x230D DUP2 PUSH2 0x1B00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2328 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2368 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x234D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x237F DUP3 PUSH2 0x232E JUMP JUMPDEST PUSH2 0x2389 DUP2 DUP6 PUSH2 0x2339 JUMP JUMPDEST SWAP4 POP PUSH2 0x2399 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x234A JUMP JUMPDEST PUSH2 0x23A2 DUP2 PUSH2 0x2142 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C7 DUP2 DUP5 PUSH2 0x2374 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F4 PUSH2 0x23EF PUSH2 0x23EA DUP5 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2406 DUP3 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2418 DUP3 PUSH2 0x23FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2428 DUP2 PUSH2 0x240D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2443 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x241F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2463 JUMPI PUSH2 0x2462 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2471 DUP8 DUP3 DUP9 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2482 DUP8 DUP3 DUP9 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24A3 JUMPI PUSH2 0x24A2 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x24AF DUP8 DUP3 DUP9 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x24DD JUMPI PUSH2 0x24DC PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24EB DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x24FC DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x251D JUMPI PUSH2 0x251C PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2529 DUP12 DUP3 DUP13 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254C JUMPI PUSH2 0x254B PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2558 DUP12 DUP3 DUP13 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x257B JUMPI PUSH2 0x257A PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2587 DUP12 DUP3 DUP13 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25AF JUMPI PUSH2 0x25AE PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25BD DUP5 DUP3 DUP6 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x25E3 JUMPI PUSH2 0x25E2 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F1 DUP10 DUP3 DUP11 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2602 DUP10 DUP3 DUP11 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2613 DUP10 DUP3 DUP11 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2624 DUP10 DUP3 DUP11 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2645 JUMPI PUSH2 0x2644 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2651 DUP10 DUP3 DUP11 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2696 PUSH1 0x13 DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A1 DUP3 PUSH2 0x2660 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26C5 DUP2 PUSH2 0x2689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2727 JUMPI PUSH2 0x2726 PUSH2 0x26FB JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2749 JUMPI PUSH2 0x2748 PUSH2 0x2700 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x2705 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27A7 DUP3 PUSH2 0x1B3E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x276D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27ED DUP2 PUSH2 0x20BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2808 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x27E4 JUMP JUMPDEST PUSH2 0x2815 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EDF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x282B DUP2 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2847 JUMPI PUSH2 0x2846 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2855 DUP5 DUP3 DUP6 ADD PUSH2 0x281C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2897 PUSH2 0x2892 PUSH2 0x288D DUP5 PUSH2 0x285E JUMP JUMPDEST PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x2868 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A7 DUP2 PUSH2 0x287C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2911 PUSH2 0x290C PUSH2 0x2907 DUP5 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x28D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2921 DUP2 PUSH2 0x28F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x293C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x2949 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2918 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2986 PUSH1 0x1C DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x2991 DUP3 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29B5 DUP2 PUSH2 0x2979 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D7 PUSH1 0x0 DUP4 PUSH2 0x29BC JUMP JUMPDEST SWAP2 POP PUSH2 0x29E2 DUP3 PUSH2 0x29C7 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F8 DUP3 PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A38 PUSH1 0x20 DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A43 DUP3 PUSH2 0x2A02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A67 DUP2 PUSH2 0x2A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A84 DUP3 PUSH2 0x2A6E JUMP JUMPDEST PUSH2 0x2A8E DUP2 DUP6 PUSH2 0x29BC JUMP JUMPDEST SWAP4 POP PUSH2 0x2A9E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x234A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB6 DUP3 DUP5 PUSH2 0x2A79 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF7 PUSH1 0xA DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B02 DUP3 PUSH2 0x2AC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B26 DUP2 PUSH2 0x2AEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B3C DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B58 JUMPI PUSH2 0x2B57 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B66 DUP5 DUP3 DUP6 ADD PUSH2 0x2B2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BB4 DUP2 PUSH2 0x2B9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2BCF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x2BDC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2BAB JUMP JUMPDEST PUSH2 0x2BE9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x2BF6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22DA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xAC DUP10 PUSH17 0x61D773491889865F535410986B965F5C2C 0xA7 0xE0 SWAP16 0xD 0x26 0xE6 COINBASE 0xE2 PUSH1 0xC2 PUSH6 0x64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"735:4404:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;672:209:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1644:303;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;889:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1848:388:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2198:582:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4559:112;;;:::i;:::-;;4830:160;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3892:214:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3439:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;909:20:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1708:58:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1187:110:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1857:161;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1364:272:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4356:115:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3071:103;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1015:123:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1116:240:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;672:209;;;;;;;;;:::o;1644:303::-;1731:4;1783:33;1768:48;;;:11;:48;;;;:114;;;;1848:34;1833:49;;;:11;:49;;;;1768:114;:171;;;;1914:25;1899:40;;;:11;:40;;;;1768:171;1748:191;;1644:303;;;:::o;889:219::-;1033:6;1059:41;;;1052:48;;889:219;;;;;;;:::o;1848:388:21:-;2021:22;2056:24;:22;:24::i;:::-;2108:38;2127:6;2135:10;2108:18;:38::i;:::-;2091:55;;2157:28;2172:6;:12;;;2157:14;:28::i;:::-;2196:32;2208:19;2196:11;:32::i;:::-;1848:388;;;;;:::o;2198:582:32:-;2314:31;:29;:31::i;:::-;2379:4;;:11;;2364:4;;:11;;:26;:80;;;;;2411:1;2395:5;;:12;;:17;:48;;;;2432:4;;:11;;2416:5;;:12;;:27;2395:48;2364:80;2356:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2499:1;2483:5;;:12;;:17;2479:294;;2522:9;2517:103;2541:4;;:11;;2537:1;:15;2517:103;;;2578:26;2584:4;;2589:1;2584:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2593:1;2596:4;;2601:1;2596:7;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;2578:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;:26::i;:::-;2554:3;;;;;:::i;:::-;;;;2517:103;;;;2479:294;;;2657:9;2652:110;2676:4;;:11;;2672:1;:15;2652:110;;;2713:33;2719:4;;2724:1;2719:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2728:5;;2734:1;2728:8;;;;;;;:::i;:::-;;;;;;;;2738:4;;2743:1;2738:7;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;2713:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;:33::i;:::-;2689:3;;;;;:::i;:::-;;;;2652:110;;;;2479:294;2198:582;;;;;;:::o;4559:112::-;4607:12;:10;:12::i;:::-;:22;;;4638:9;4657:4;4607:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4559:112::o;4830:160::-;1114:12;:10;:12::i;:::-;4934::::1;:10;:12::i;:::-;:23;;;4958:15;4975:6;4934:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4830:160:::0;;:::o;3892:214:7:-;2542:13;:11;:13::i;:::-;4007:36:::1;4025:17;4007;:36::i;:::-;4053:46;4075:17;4094:4;4053:21;:46::i;:::-;3892:214:::0;;:::o;3439:134::-;3508:7;2813:20;:18;:20::i;:::-;1327:66:3::1;3534:32:7;;3527:39;;3439:134:::0;:::o;909:20:32:-;;;;;;;;;;;;:::o;1708:58:7:-;;;;;;;;;;;;;;;;;;;:::o;1187:110:32:-;1247:11;1278;1271:18;;1187:110;:::o;1857:161::-;1944:31;:29;:31::i;:::-;1986:24;1992:4;1998:5;2005:4;;1986:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;:24::i;:::-;1857:161;;;;:::o;1364:272:20:-;1554:6;1580:48;;;1573:55;;1364:272;;;;;;;;;;:::o;4356:115:32:-;4399:7;4426:12;:10;:12::i;:::-;:22;;;4457:4;4426:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4419:44;;4356:115;:::o;3071:103::-;4158:30:6;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;3146:20:32::1;3158:7;3146:11;:20::i;:::-;5070:14:6::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;3071:103:32;:::o;1015:123:21:-;1064:7;1091:12;:10;:12::i;:::-;:21;;;1121:4;1128:1;1091:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1084:46;;1015:123;:::o;1116:240:20:-;1279:6;1305:43;;;1298:50;;1116:240;;;;;;;;:::o;2322:188:21:-;2433:12;:10;:12::i;:::-;2411:35;;:10;:35;;;2389:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;2322:188::o;3645:327:32:-;3763:22;3798:12;3813:35;:10;:33;:35::i;:::-;3798:50;;3872:30;3885:6;:16;;;;;;;;:::i;:::-;3872:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;:12;;:30;;;;:::i;:::-;3863:39;;:5;;;;;;;;;;:39;;;3859:86;;819:1:21;3917:28:32;;;;;3859:86;3963:1;3956:8;;;3645:327;;;;;:::o;4456:69:21:-;;:::o;5111:391::-;5216:1;5193:19;:24;5189:306;;5235:12;5261:10;5253:24;;5303:19;5346:17;5253:129;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5234:148;;;5219:276;5189:306;5111:391;:::o;3406:177:32:-;3502:12;:10;:12::i;:::-;3480:35;;:10;:35;;;:58;;;;3533:5;;;;;;;;;;3519:19;;:10;:19;;;3480:58;3472:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;3406:177::o;3980:294::-;4066:12;4080:19;4103:6;:11;;4123:5;4130:4;4103:32;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4065:70;;;;4151:7;4146:121;;4233:6;4227:13;4222:2;4214:6;4210:15;4203:38;4146:121;4054:220;;3980:294;;;:::o;1518:236::-;1695:5;;;;;;;;;;1681:19;;:10;:19;;;:50;;;;1726:4;1704:27;;:10;:27;;;1681:50;1673:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1518:236::o;4333:312:7:-;4422:6;4405:23;;4413:4;4405:23;;;:120;;;;4519:6;4483:42;;:32;:30;:32::i;:::-;:42;;;;4405:120;4388:251;;;4599:29;;;;;;;;;;;;;;4388:251;4333:312::o;4998:138:32:-;5116:12;:10;:12::i;:::-;4998:138;:::o;5786:538:7:-;5903:17;5885:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5881:437;;6289:17;6247:60;;;;;;;;;;;:::i;:::-;;;;;;;;5881:437;1327:66:3;5987:32:7;;5979:4;:40;5975:120;;6075:4;6046:34;;;;;;;;;;;:::i;:::-;;;;;;;;5975:120;6108:54;6138:17;6157:4;6108:29;:54::i;:::-;5938:235;5786:538;;:::o;4762:213::-;4845:6;4828:23;;4836:4;4828:23;;;4824:145;;4929:29;;;;;;;;;;;;;;4824:145;4762:213::o;8737:170:6:-;8795:30;8870:21;8860:31;;8737:170;:::o;3182:149:32:-;3256:7;3248:5;;:15;;;;;;;;;;;;;;;;;;3317:5;;;;;;;;;;3279:44;;3304:11;3279:44;;;;;;;;;;;;3182:149;:::o;1222:460:16:-;1298:14;1403:34;1397:4;1390:48;1505:11;1499:4;1492:25;1597:4;1591;1581:21;1571:31;;1222:460;;;:::o;3702:255:15:-;3780:7;3800:17;3819:18;3839:16;3859:27;3870:4;3876:9;3859:10;:27::i;:::-;3799:87;;;;;;3896:28;3908:5;3915:8;3896:11;:28::i;:::-;3941:9;3934:16;;;;;3702:255;;;;:::o;1957:138:3:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;2129:766:15:-;2210:7;2219:12;2233:7;2276:2;2256:9;:16;:22;2252:637;;2294:9;2317;2340:7;2592:4;2581:9;2577:20;2571:27;2566:32;;2641:4;2630:9;2626:20;2620:27;2615:32;;2698:4;2687:9;2683:20;2677:27;2674:1;2669:36;2664:41;;2739:25;2750:4;2756:1;2759;2762;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;2811:1;2815:35;2860:9;:16;2852:25;;2795:83;;;;;;2129:766;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;1684:190:13:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:3:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:10:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:3:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;5140:1530:15:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;4625:582:10:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:35;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:1453::-;2263:6;2271;2279;2287;2295;2303;2311;2319;2368:3;2356:9;2347:7;2343:23;2339:33;2336:120;;;2375:79;;:::i;:::-;2336:120;2495:1;2520:53;2565:7;2556:6;2545:9;2541:22;2520:53;:::i;:::-;2510:63;;2466:117;2622:2;2648:53;2693:7;2684:6;2673:9;2669:22;2648:53;:::i;:::-;2638:63;;2593:118;2750:2;2776:53;2821:7;2812:6;2801:9;2797:22;2776:53;:::i;:::-;2766:63;;2721:118;2878:2;2904:53;2949:7;2940:6;2929:9;2925:22;2904:53;:::i;:::-;2894:63;;2849:118;3034:3;3023:9;3019:19;3006:33;3066:18;3058:6;3055:30;3052:117;;;3088:79;;:::i;:::-;3052:117;3201:64;3257:7;3248:6;3237:9;3233:22;3201:64;:::i;:::-;3183:82;;;;2977:298;3342:3;3331:9;3327:19;3314:33;3374:18;3366:6;3363:30;3360:117;;;3396:79;;:::i;:::-;3360:117;3509:64;3565:7;3556:6;3545:9;3541:22;3509:64;:::i;:::-;3491:82;;;;3285:298;2137:1453;;;;;;;;;;;:::o;3596:149::-;3632:7;3672:66;3665:5;3661:78;3650:89;;3596:149;;;:::o;3751:120::-;3823:23;3840:5;3823:23;:::i;:::-;3816:5;3813:34;3803:62;;3861:1;3858;3851:12;3803:62;3751:120;:::o;3877:137::-;3922:5;3960:6;3947:20;3938:29;;3976:32;4002:5;3976:32;:::i;:::-;3877:137;;;;:::o;4020:327::-;4078:6;4127:2;4115:9;4106:7;4102:23;4098:32;4095:119;;;4133:79;;:::i;:::-;4095:119;4253:1;4278:52;4322:7;4313:6;4302:9;4298:22;4278:52;:::i;:::-;4268:62;;4224:116;4020:327;;;;:::o;4353:90::-;4387:7;4430:5;4423:13;4416:21;4405:32;;4353:90;;;:::o;4449:109::-;4530:21;4545:5;4530:21;:::i;:::-;4525:3;4518:34;4449:109;;:::o;4564:210::-;4651:4;4689:2;4678:9;4674:18;4666:26;;4702:65;4764:1;4753:9;4749:17;4740:6;4702:65;:::i;:::-;4564:210;;;;:::o;4780:963::-;4877:6;4885;4893;4901;4909;4958:3;4946:9;4937:7;4933:23;4929:33;4926:120;;;4965:79;;:::i;:::-;4926:120;5085:1;5110:53;5155:7;5146:6;5135:9;5131:22;5110:53;:::i;:::-;5100:63;;5056:117;5212:2;5238:53;5283:7;5274:6;5263:9;5259:22;5238:53;:::i;:::-;5228:63;;5183:118;5340:2;5366:53;5411:7;5402:6;5391:9;5387:22;5366:53;:::i;:::-;5356:63;;5311:118;5496:2;5485:9;5481:18;5468:32;5527:18;5519:6;5516:30;5513:117;;;5549:79;;:::i;:::-;5513:117;5662:64;5718:7;5709:6;5698:9;5694:22;5662:64;:::i;:::-;5644:82;;;;5439:297;4780:963;;;;;;;;:::o;5749:115::-;5834:23;5851:5;5834:23;:::i;:::-;5829:3;5822:36;5749:115;;:::o;5870:218::-;5961:4;5999:2;5988:9;5984:18;5976:26;;6012:69;6078:1;6067:9;6063:17;6054:6;6012:69;:::i;:::-;5870:218;;;;:::o;6094:117::-;6203:1;6200;6193:12;6245:238;6324:5;6365:3;6356:6;6351:3;6347:16;6343:26;6340:113;;;6372:79;;:::i;:::-;6340:113;6471:6;6462:15;;6245:238;;;;:::o;6489:77::-;6526:7;6555:5;6544:16;;6489:77;;;:::o;6572:122::-;6645:24;6663:5;6645:24;:::i;:::-;6638:5;6635:35;6625:63;;6684:1;6681;6674:12;6625:63;6572:122;:::o;6700:139::-;6746:5;6784:6;6771:20;6762:29;;6800:33;6827:5;6800:33;:::i;:::-;6700:139;;;;:::o;6845:845::-;6955:6;6963;6971;7020:2;7008:9;6999:7;6995:23;6991:32;6988:119;;;7026:79;;:::i;:::-;6988:119;7174:1;7163:9;7159:17;7146:31;7204:18;7196:6;7193:30;7190:117;;;7226:79;;:::i;:::-;7190:117;7331:86;7409:7;7400:6;7389:9;7385:22;7331:86;:::i;:::-;7321:96;;7117:310;7466:2;7492:53;7537:7;7528:6;7517:9;7513:22;7492:53;:::i;:::-;7482:63;;7437:118;7594:2;7620:53;7665:7;7656:6;7645:9;7641:22;7620:53;:::i;:::-;7610:63;;7565:118;6845:845;;;;;:::o;7696:118::-;7783:24;7801:5;7783:24;:::i;:::-;7778:3;7771:37;7696:118;;:::o;7820:222::-;7913:4;7951:2;7940:9;7936:18;7928:26;;7964:71;8032:1;8021:9;8017:17;8008:6;7964:71;:::i;:::-;7820:222;;;;:::o;8065:568::-;8138:8;8148:6;8198:3;8191:4;8183:6;8179:17;8175:27;8165:122;;8206:79;;:::i;:::-;8165:122;8319:6;8306:20;8296:30;;8349:18;8341:6;8338:30;8335:117;;;8371:79;;:::i;:::-;8335:117;8485:4;8477:6;8473:17;8461:29;;8539:3;8531:4;8523:6;8519:17;8509:8;8505:32;8502:41;8499:128;;;8546:79;;:::i;:::-;8499:128;8065:568;;;;;:::o;8656:::-;8729:8;8739:6;8789:3;8782:4;8774:6;8770:17;8766:27;8756:122;;8797:79;;:::i;:::-;8756:122;8910:6;8897:20;8887:30;;8940:18;8932:6;8929:30;8926:117;;;8962:79;;:::i;:::-;8926:117;9076:4;9068:6;9064:17;9052:29;;9130:3;9122:4;9114:6;9110:17;9100:8;9096:32;9093:41;9090:128;;;9137:79;;:::i;:::-;9090:128;8656:568;;;;;:::o;9245:579::-;9329:8;9339:6;9389:3;9382:4;9374:6;9370:17;9366:27;9356:122;;9397:79;;:::i;:::-;9356:122;9510:6;9497:20;9487:30;;9540:18;9532:6;9529:30;9526:117;;;9562:79;;:::i;:::-;9526:117;9676:4;9668:6;9664:17;9652:29;;9730:3;9722:4;9714:6;9710:17;9700:8;9696:32;9693:41;9690:128;;;9737:79;;:::i;:::-;9690:128;9245:579;;;;;:::o;9830:1331::-;9999:6;10007;10015;10023;10031;10039;10088:2;10076:9;10067:7;10063:23;10059:32;10056:119;;;10094:79;;:::i;:::-;10056:119;10242:1;10231:9;10227:17;10214:31;10272:18;10264:6;10261:30;10258:117;;;10294:79;;:::i;:::-;10258:117;10407:80;10479:7;10470:6;10459:9;10455:22;10407:80;:::i;:::-;10389:98;;;;10185:312;10564:2;10553:9;10549:18;10536:32;10595:18;10587:6;10584:30;10581:117;;;10617:79;;:::i;:::-;10581:117;10730:80;10802:7;10793:6;10782:9;10778:22;10730:80;:::i;:::-;10712:98;;;;10507:313;10887:2;10876:9;10872:18;10859:32;10918:18;10910:6;10907:30;10904:117;;;10940:79;;:::i;:::-;10904:117;11053:91;11136:7;11127:6;11116:9;11112:22;11053:91;:::i;:::-;11035:109;;;;10830:324;9830:1331;;;;;;;;:::o;11167:104::-;11212:7;11241:24;11259:5;11241:24;:::i;:::-;11230:35;;11167:104;;;:::o;11277:138::-;11358:32;11384:5;11358:32;:::i;:::-;11351:5;11348:43;11338:71;;11405:1;11402;11395:12;11338:71;11277:138;:::o;11421:155::-;11475:5;11513:6;11500:20;11491:29;;11529:41;11564:5;11529:41;:::i;:::-;11421:155;;;;:::o;11582:490::-;11658:6;11666;11715:2;11703:9;11694:7;11690:23;11686:32;11683:119;;;11721:79;;:::i;:::-;11683:119;11841:1;11866:61;11919:7;11910:6;11899:9;11895:22;11866:61;:::i;:::-;11856:71;;11812:125;11976:2;12002:53;12047:7;12038:6;12027:9;12023:22;12002:53;:::i;:::-;11992:63;;11947:118;11582:490;;;;;:::o;12078:117::-;12187:1;12184;12177:12;12201:102;12242:6;12293:2;12289:7;12284:2;12277:5;12273:14;12269:28;12259:38;;12201:102;;;:::o;12309:180::-;12357:77;12354:1;12347:88;12454:4;12451:1;12444:15;12478:4;12475:1;12468:15;12495:281;12578:27;12600:4;12578:27;:::i;:::-;12570:6;12566:40;12708:6;12696:10;12693:22;12672:18;12660:10;12657:34;12654:62;12651:88;;;12719:18;;:::i;:::-;12651:88;12759:10;12755:2;12748:22;12538:238;12495:281;;:::o;12782:129::-;12816:6;12843:20;;:::i;:::-;12833:30;;12872:33;12900:4;12892:6;12872:33;:::i;:::-;12782:129;;;:::o;12917:307::-;12978:4;13068:18;13060:6;13057:30;13054:56;;;13090:18;;:::i;:::-;13054:56;13128:29;13150:6;13128:29;:::i;:::-;13120:37;;13212:4;13206;13202:15;13194:23;;12917:307;;;:::o;13230:146::-;13327:6;13322:3;13317;13304:30;13368:1;13359:6;13354:3;13350:16;13343:27;13230:146;;;:::o;13382:423::-;13459:5;13484:65;13500:48;13541:6;13500:48;:::i;:::-;13484:65;:::i;:::-;13475:74;;13572:6;13565:5;13558:21;13610:4;13603:5;13599:16;13648:3;13639:6;13634:3;13630:16;13627:25;13624:112;;;13655:79;;:::i;:::-;13624:112;13745:54;13792:6;13787:3;13782;13745:54;:::i;:::-;13465:340;13382:423;;;;;:::o;13824:338::-;13879:5;13928:3;13921:4;13913:6;13909:17;13905:27;13895:122;;13936:79;;:::i;:::-;13895:122;14053:6;14040:20;14078:78;14152:3;14144:6;14137:4;14129:6;14125:17;14078:78;:::i;:::-;14069:87;;13885:277;13824:338;;;;:::o;14168:652::-;14245:6;14253;14302:2;14290:9;14281:7;14277:23;14273:32;14270:119;;;14308:79;;:::i;:::-;14270:119;14428:1;14453:53;14498:7;14489:6;14478:9;14474:22;14453:53;:::i;:::-;14443:63;;14399:117;14583:2;14572:9;14568:18;14555:32;14614:18;14606:6;14603:30;14600:117;;;14636:79;;:::i;:::-;14600:117;14741:62;14795:7;14786:6;14775:9;14771:22;14741:62;:::i;:::-;14731:72;;14526:287;14168:652;;;;;:::o;14826:118::-;14913:24;14931:5;14913:24;:::i;:::-;14908:3;14901:37;14826:118;;:::o;14950:222::-;15043:4;15081:2;15070:9;15066:18;15058:26;;15094:71;15162:1;15151:9;15147:17;15138:6;15094:71;:::i;:::-;14950:222;;;;:::o;15178:118::-;15265:24;15283:5;15265:24;:::i;:::-;15260:3;15253:37;15178:118;;:::o;15302:222::-;15395:4;15433:2;15422:9;15418:18;15410:26;;15446:71;15514:1;15503:9;15499:17;15490:6;15446:71;:::i;:::-;15302:222;;;;:::o;15530:99::-;15582:6;15616:5;15610:12;15600:22;;15530:99;;;:::o;15635:169::-;15719:11;15753:6;15748:3;15741:19;15793:4;15788:3;15784:14;15769:29;;15635:169;;;;:::o;15810:246::-;15891:1;15901:113;15915:6;15912:1;15909:13;15901:113;;;16000:1;15995:3;15991:11;15985:18;15981:1;15976:3;15972:11;15965:39;15937:2;15934:1;15930:10;15925:15;;15901:113;;;16048:1;16039:6;16034:3;16030:16;16023:27;15872:184;15810:246;;;:::o;16062:377::-;16150:3;16178:39;16211:5;16178:39;:::i;:::-;16233:71;16297:6;16292:3;16233:71;:::i;:::-;16226:78;;16313:65;16371:6;16366:3;16359:4;16352:5;16348:16;16313:65;:::i;:::-;16403:29;16425:6;16403:29;:::i;:::-;16398:3;16394:39;16387:46;;16154:285;16062:377;;;;:::o;16445:313::-;16558:4;16596:2;16585:9;16581:18;16573:26;;16645:9;16639:4;16635:20;16631:1;16620:9;16616:17;16609:47;16673:78;16746:4;16737:6;16673:78;:::i;:::-;16665:86;;16445:313;;;;:::o;16764:60::-;16792:3;16813:5;16806:12;;16764:60;;;:::o;16830:142::-;16880:9;16913:53;16931:34;16940:24;16958:5;16940:24;:::i;:::-;16931:34;:::i;:::-;16913:53;:::i;:::-;16900:66;;16830:142;;;:::o;16978:126::-;17028:9;17061:37;17092:5;17061:37;:::i;:::-;17048:50;;16978:126;;;:::o;17110:146::-;17180:9;17213:37;17244:5;17213:37;:::i;:::-;17200:50;;17110:146;;;:::o;17262:171::-;17369:57;17420:5;17369:57;:::i;:::-;17364:3;17357:70;17262:171;;:::o;17439:262::-;17552:4;17590:2;17579:9;17575:18;17567:26;;17603:91;17691:1;17680:9;17676:17;17667:6;17603:91;:::i;:::-;17439:262;;;;:::o;17707:817::-;17795:6;17803;17811;17819;17868:2;17856:9;17847:7;17843:23;17839:32;17836:119;;;17874:79;;:::i;:::-;17836:119;17994:1;18019:53;18064:7;18055:6;18044:9;18040:22;18019:53;:::i;:::-;18009:63;;17965:117;18121:2;18147:53;18192:7;18183:6;18172:9;18168:22;18147:53;:::i;:::-;18137:63;;18092:118;18277:2;18266:9;18262:18;18249:32;18308:18;18300:6;18297:30;18294:117;;;18330:79;;:::i;:::-;18294:117;18443:64;18499:7;18490:6;18479:9;18475:22;18443:64;:::i;:::-;18425:82;;;;18220:297;17707:817;;;;;;;:::o;18530:1569::-;18690:6;18698;18706;18714;18722;18730;18738;18746;18795:3;18783:9;18774:7;18770:23;18766:33;18763:120;;;18802:79;;:::i;:::-;18763:120;18922:1;18947:53;18992:7;18983:6;18972:9;18968:22;18947:53;:::i;:::-;18937:63;;18893:117;19049:2;19075:53;19120:7;19111:6;19100:9;19096:22;19075:53;:::i;:::-;19065:63;;19020:118;19205:2;19194:9;19190:18;19177:32;19236:18;19228:6;19225:30;19222:117;;;19258:79;;:::i;:::-;19222:117;19371:80;19443:7;19434:6;19423:9;19419:22;19371:80;:::i;:::-;19353:98;;;;19148:313;19528:2;19517:9;19513:18;19500:32;19559:18;19551:6;19548:30;19545:117;;;19581:79;;:::i;:::-;19545:117;19694:80;19766:7;19757:6;19746:9;19742:22;19694:80;:::i;:::-;19676:98;;;;19471:313;19851:3;19840:9;19836:19;19823:33;19883:18;19875:6;19872:30;19869:117;;;19905:79;;:::i;:::-;19869:117;20018:64;20074:7;20065:6;20054:9;20050:22;20018:64;:::i;:::-;20000:82;;;;19794:298;18530:1569;;;;;;;;;;;:::o;20105:329::-;20164:6;20213:2;20201:9;20192:7;20188:23;20184:32;20181:119;;;20219:79;;:::i;:::-;20181:119;20339:1;20364:53;20409:7;20400:6;20389:9;20385:22;20364:53;:::i;:::-;20354:63;;20310:117;20105:329;;;;:::o;20440:1109::-;20546:6;20554;20562;20570;20578;20586;20635:3;20623:9;20614:7;20610:23;20606:33;20603:120;;;20642:79;;:::i;:::-;20603:120;20762:1;20787:53;20832:7;20823:6;20812:9;20808:22;20787:53;:::i;:::-;20777:63;;20733:117;20889:2;20915:53;20960:7;20951:6;20940:9;20936:22;20915:53;:::i;:::-;20905:63;;20860:118;21017:2;21043:53;21088:7;21079:6;21068:9;21064:22;21043:53;:::i;:::-;21033:63;;20988:118;21145:2;21171:53;21216:7;21207:6;21196:9;21192:22;21171:53;:::i;:::-;21161:63;;21116:118;21301:3;21290:9;21286:19;21273:33;21333:18;21325:6;21322:30;21319:117;;;21355:79;;:::i;:::-;21319:117;21468:64;21524:7;21515:6;21504:9;21500:22;21468:64;:::i;:::-;21450:82;;;;21244:298;20440:1109;;;;;;;;:::o;21555:169::-;21695:21;21691:1;21683:6;21679:14;21672:45;21555:169;:::o;21730:366::-;21872:3;21893:67;21957:2;21952:3;21893:67;:::i;:::-;21886:74;;21969:93;22058:3;21969:93;:::i;:::-;22087:2;22082:3;22078:12;22071:19;;21730:366;;;:::o;22102:419::-;22268:4;22306:2;22295:9;22291:18;22283:26;;22355:9;22349:4;22345:20;22341:1;22330:9;22326:17;22319:47;22383:131;22509:4;22383:131;:::i;:::-;22375:139;;22102:419;;;:::o;22527:180::-;22575:77;22572:1;22565:88;22672:4;22669:1;22662:15;22696:4;22693:1;22686:15;22713:117;22822:1;22819;22812:12;22836:117;22945:1;22942;22935:12;22959:117;23068:1;23065;23058:12;23082:724;23159:4;23165:6;23221:11;23208:25;23321:1;23315:4;23311:12;23300:8;23284:14;23280:29;23276:48;23256:18;23252:73;23242:168;;23329:79;;:::i;:::-;23242:168;23441:18;23431:8;23427:33;23419:41;;23493:4;23480:18;23470:28;;23521:18;23513:6;23510:30;23507:117;;;23543:79;;:::i;:::-;23507:117;23651:2;23645:4;23641:13;23633:21;;23708:4;23700:6;23696:17;23680:14;23676:38;23670:4;23666:49;23663:136;;;23718:79;;:::i;:::-;23663:136;23172:634;23082:724;;;;;:::o;23812:180::-;23860:77;23857:1;23850:88;23957:4;23954:1;23947:15;23981:4;23978:1;23971:15;23998:233;24037:3;24060:24;24078:5;24060:24;:::i;:::-;24051:33;;24106:66;24099:5;24096:77;24093:103;;24176:18;;:::i;:::-;24093:103;24223:1;24216:5;24212:13;24205:20;;23998:233;;;:::o;24237:142::-;24340:32;24366:5;24340:32;:::i;:::-;24335:3;24328:45;24237:142;;:::o;24385:364::-;24522:4;24560:2;24549:9;24545:18;24537:26;;24573:87;24657:1;24646:9;24642:17;24633:6;24573:87;:::i;:::-;24670:72;24738:2;24727:9;24723:18;24714:6;24670:72;:::i;:::-;24385:364;;;;;:::o;24755:143::-;24812:5;24843:6;24837:13;24828:22;;24859:33;24886:5;24859:33;:::i;:::-;24755:143;;;;:::o;24904:351::-;24974:6;25023:2;25011:9;25002:7;24998:23;24994:32;24991:119;;;25029:79;;:::i;:::-;24991:119;25149:1;25174:64;25230:7;25221:6;25210:9;25206:22;25174:64;:::i;:::-;25164:74;;25120:128;24904:351;;;;:::o;25261:85::-;25306:7;25335:5;25324:16;;25261:85;;;:::o;25352:101::-;25388:7;25428:18;25421:5;25417:30;25406:41;;25352:101;;;:::o;25459:156::-;25516:9;25549:60;25566:42;25575:32;25601:5;25575:32;:::i;:::-;25566:42;:::i;:::-;25549:60;:::i;:::-;25536:73;;25459:156;;;:::o;25621:145::-;25715:44;25753:5;25715:44;:::i;:::-;25710:3;25703:57;25621:145;;:::o;25772:236::-;25872:4;25910:2;25899:9;25895:18;25887:26;;25923:78;25998:1;25987:9;25983:17;25974:6;25923:78;:::i;:::-;25772:236;;;;:::o;26014:85::-;26059:7;26088:5;26077:16;;26014:85;;;:::o;26105:134::-;26142:7;26182:50;26175:5;26171:62;26160:73;;26105:134;;;:::o;26245:158::-;26303:9;26336:61;26354:42;26363:32;26389:5;26363:32;:::i;:::-;26354:42;:::i;:::-;26336:61;:::i;:::-;26323:74;;26245:158;;;:::o;26409:147::-;26504:45;26543:5;26504:45;:::i;:::-;26499:3;26492:58;26409:147;;:::o;26562:348::-;26691:4;26729:2;26718:9;26714:18;26706:26;;26742:71;26810:1;26799:9;26795:17;26786:6;26742:71;:::i;:::-;26823:80;26899:2;26888:9;26884:18;26875:6;26823:80;:::i;:::-;26562:348;;;;;:::o;26916:178::-;27056:30;27052:1;27044:6;27040:14;27033:54;26916:178;:::o;27100:366::-;27242:3;27263:67;27327:2;27322:3;27263:67;:::i;:::-;27256:74;;27339:93;27428:3;27339:93;:::i;:::-;27457:2;27452:3;27448:12;27441:19;;27100:366;;;:::o;27472:419::-;27638:4;27676:2;27665:9;27661:18;27653:26;;27725:9;27719:4;27715:20;27711:1;27700:9;27696:17;27689:47;27753:131;27879:4;27753:131;:::i;:::-;27745:139;;27472:419;;;:::o;27897:147::-;27998:11;28035:3;28020:18;;27897:147;;;;:::o;28050:114::-;;:::o;28170:398::-;28329:3;28350:83;28431:1;28426:3;28350:83;:::i;:::-;28343:90;;28442:93;28531:3;28442:93;:::i;:::-;28560:1;28555:3;28551:11;28544:18;;28170:398;;;:::o;28574:379::-;28758:3;28780:147;28923:3;28780:147;:::i;:::-;28773:154;;28944:3;28937:10;;28574:379;;;:::o;28959:182::-;29099:34;29095:1;29087:6;29083:14;29076:58;28959:182;:::o;29147:366::-;29289:3;29310:67;29374:2;29369:3;29310:67;:::i;:::-;29303:74;;29386:93;29475:3;29386:93;:::i;:::-;29504:2;29499:3;29495:12;29488:19;;29147:366;;;:::o;29519:419::-;29685:4;29723:2;29712:9;29708:18;29700:26;;29772:9;29766:4;29762:20;29758:1;29747:9;29743:17;29736:47;29800:131;29926:4;29800:131;:::i;:::-;29792:139;;29519:419;;;:::o;29944:98::-;29995:6;30029:5;30023:12;30013:22;;29944:98;;;:::o;30048:386::-;30152:3;30180:38;30212:5;30180:38;:::i;:::-;30234:88;30315:6;30310:3;30234:88;:::i;:::-;30227:95;;30331:65;30389:6;30384:3;30377:4;30370:5;30366:16;30331:65;:::i;:::-;30421:6;30416:3;30412:16;30405:23;;30156:278;30048:386;;;;:::o;30440:271::-;30570:3;30592:93;30681:3;30672:6;30592:93;:::i;:::-;30585:100;;30702:3;30695:10;;30440:271;;;;:::o;30717:160::-;30857:12;30853:1;30845:6;30841:14;30834:36;30717:160;:::o;30883:366::-;31025:3;31046:67;31110:2;31105:3;31046:67;:::i;:::-;31039:74;;31122:93;31211:3;31122:93;:::i;:::-;31240:2;31235:3;31231:12;31224:19;;30883:366;;;:::o;31255:419::-;31421:4;31459:2;31448:9;31444:18;31436:26;;31508:9;31502:4;31498:20;31494:1;31483:9;31479:17;31472:47;31536:131;31662:4;31536:131;:::i;:::-;31528:139;;31255:419;;;:::o;31680:143::-;31737:5;31768:6;31762:13;31753:22;;31784:33;31811:5;31784:33;:::i;:::-;31680:143;;;;:::o;31829:351::-;31899:6;31948:2;31936:9;31927:7;31923:23;31919:32;31916:119;;;31954:79;;:::i;:::-;31916:119;32074:1;32099:64;32155:7;32146:6;32135:9;32131:22;32099:64;:::i;:::-;32089:74;;32045:128;31829:351;;;;:::o;32186:180::-;32234:77;32231:1;32224:88;32331:4;32328:1;32321:15;32355:4;32352:1;32345:15;32372:86;32407:7;32447:4;32440:5;32436:16;32425:27;;32372:86;;;:::o;32464:112::-;32547:22;32563:5;32547:22;:::i;:::-;32542:3;32535:35;32464:112;;:::o;32582:545::-;32755:4;32793:3;32782:9;32778:19;32770:27;;32807:71;32875:1;32864:9;32860:17;32851:6;32807:71;:::i;:::-;32888:68;32952:2;32941:9;32937:18;32928:6;32888:68;:::i;:::-;32966:72;33034:2;33023:9;33019:18;33010:6;32966:72;:::i;:::-;33048;33116:2;33105:9;33101:18;33092:6;33048:72;:::i;:::-;32582:545;;;;;;;:::o"},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","addDeposit()":"4a58db19","entryPoint()":"b0d691fe","execute(address,uint256,bytes)":"b61d27f6","executeBatch(address[],uint256[],bytes[])":"47e1da2a","getDeposit()":"c399ec88","getNonce()":"d087d288","initialize(address)":"c4d66de8","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","supportsInterface(bytes4)":"01ffc9a7","tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29","upgradeToAndCall(address,bytes)":"4f1ef286","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd","withdrawDepositTo(address,uint256)":"4d44560d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"anEntryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SimpleAccountInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"anOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"executeBatch(address[],uint256[],bytes[])\":{\"details\":\"to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value\"},\"initialize(address)\":{\"details\":\"The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"missingAccountFunds\":\"- The amount of funds missing from the account                              to pay for the user operation.\",\"userOp\":\"- The user operation to validate.\",\"userOpHash\":\"- The hash of the user operation.\"}},\"withdrawDepositTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDeposit()\":{\"notice\":\"deposit more funds for this account in the entryPoint\"},\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"execute a transaction (called directly from owner, or by entryPoint)\"},\"executeBatch(address[],uint256[],bytes[])\":{\"notice\":\"execute a sequence of transactions\"},\"getDeposit()\":{\"notice\":\"check current account deposit in the entryPoint\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. Subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"},\"withdrawDepositTo(address,uint256)\":{\"notice\":\"withdraw value from the account's deposit\"}},\"notice\":\"minimal account.  this is sample minimal account.  has execute, eth handling methods  has a single signer that can send requests through the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/SimpleAccount.sol\":\"SimpleAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3ffb56bcb175984a10b1167e2eba560876bfe96a435f5d62ffed8b1bb4ebc4c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7db94af56aa20efb57c3f9003eacd884faad04118967d8e35cdffe07790bbdcd\",\"dweb:/ipfs/QmXtAshRWFjcQ1kL7gpC5CiLUZgJ9uzrZyeHp2Sux9ojPF\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0x1e0a5c9521d8b461ad61da86901083c237e47a0b49f539b755b326fe533cf058\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2550f4aac302b1d50d42c76b276a89f168dca0a1d36360f99d00499408a40e13\",\"dweb:/ipfs/QmQcDvE1RNzaVR3dR2Zn8bjavd9eZrXzjqRZXCrthQ9oLT\"]},\"contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x15cc56a156d2bd4b60217632bfceb744330e39c3360010439a6582bbf5647fab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fa4eb98339236bfc08e8a1fb692323ffd21c1bebad2a75f35656349f0603f4a1\",\"dweb:/ipfs/QmTr4fZQTLbX5St78PweaCys9k8bMA3rqKh1RKKjmxWdgL\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x341c6c70a05b8f2c7a093e909377c7c93874c0a36c70c55b765f386f1b0fcc01\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29ef1bdfa8a451ded8bb5910cfe8b416deb75574c305326670b19408bc5b3508\",\"dweb:/ipfs/QmcL4BCqJ75cKUQVv9iGRxToQamvYq8UqmfyrRAbAAXv22\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x96b90446f3d8c8b4e3b62329e2b2f66e4c9c910c4fc38486debeb8b278c7fdcc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4db7cb1465ca5e8bebe36e4a2b24fa51ed006f2d894e21d8c21eaa83cba4ff27\",\"dweb:/ipfs/QmYaePQ4ma9T3t7f8cgnVDAoj23iMJ3wCRffVuzETffgqP\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]},\"contracts/utils/SimpleAccount.sol\":{\"keccak256\":\"0xb1f82ebf86150a68a6d30d72fc4d5ce176d336ce761786282c46cc51b3992817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2e256cb9d3eb6e79417a41696eeb9f1d4338349a01bdadf4893c08f190b753f7\",\"dweb:/ipfs/QmYdaTv8ueQnKJN9zirModkhZajGSHiNboV5JmSMfFzJfP\"]}},\"version\":1}"}},"contracts/utils/SimpleAccountFactory.sol":{"SimpleAccountFactory":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"accountImplementation","outputs":[{"internalType":"contract SimpleAccount","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"checkAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"createAccount","outputs":[{"internalType":"contract SimpleAccount","name":"ret","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"createdAccounts","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_5058":{"entryPoint":null,"id":5058,"parameterSlots":1,"returnSlots":0},"abi_decode_t_contract$_IEntryPoint_$4475_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IEntryPoint_$4475_fromMemory":{"entryPoint":310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IEntryPoint_$4475_to_t_address_fromStack":{"entryPoint":450,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_contract$_IEntryPoint_$4475__to_t_address__fromStack_reversed":{"entryPoint":467,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":221,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IEntryPoint_$4475":{"entryPoint":241,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":189,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IEntryPoint_$4475_to_t_address":{"entryPoint":430,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":410,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":370,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":360,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":184,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_contract$_IEntryPoint_$4475":{"entryPoint":261,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2384:35","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:35","statements":[{"nodeType":"YulAssignment","src":"57:19:35","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:35","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:35"},"nodeType":"YulFunctionCall","src":"67:9:35"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:35"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:35","type":""}],"src":"7:75:35"},{"body":{"nodeType":"YulBlock","src":"177:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:35"},"nodeType":"YulFunctionCall","src":"187:12:35"},"nodeType":"YulExpressionStatement","src":"187:12:35"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:35"},{"body":{"nodeType":"YulBlock","src":"300:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:35"},"nodeType":"YulFunctionCall","src":"310:12:35"},"nodeType":"YulExpressionStatement","src":"310:12:35"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:35"},{"body":{"nodeType":"YulBlock","src":"379:81:35","statements":[{"nodeType":"YulAssignment","src":"389:65:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:35","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:35"},"nodeType":"YulFunctionCall","src":"400:54:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:35"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:35","type":""}],"src":"334:126:35"},{"body":{"nodeType":"YulBlock","src":"511:51:35","statements":[{"nodeType":"YulAssignment","src":"521:35:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:35"},"nodeType":"YulFunctionCall","src":"532:24:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:35"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:35","type":""}],"src":"466:96:35"},{"body":{"nodeType":"YulBlock","src":"633:51:35","statements":[{"nodeType":"YulAssignment","src":"643:35:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:35"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"654:17:35"},"nodeType":"YulFunctionCall","src":"654:24:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"643:7:35"}]}]},"name":"cleanup_t_contract$_IEntryPoint_$4475","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"615:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"625:7:35","type":""}],"src":"568:116:35"},{"body":{"nodeType":"YulBlock","src":"753:99:35","statements":[{"body":{"nodeType":"YulBlock","src":"830:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"839:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"842:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"832:6:35"},"nodeType":"YulFunctionCall","src":"832:12:35"},"nodeType":"YulExpressionStatement","src":"832:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"776:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"821:5:35"}],"functionName":{"name":"cleanup_t_contract$_IEntryPoint_$4475","nodeType":"YulIdentifier","src":"783:37:35"},"nodeType":"YulFunctionCall","src":"783:44:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"773:2:35"},"nodeType":"YulFunctionCall","src":"773:55:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"766:6:35"},"nodeType":"YulFunctionCall","src":"766:63:35"},"nodeType":"YulIf","src":"763:83:35"}]},"name":"validator_revert_t_contract$_IEntryPoint_$4475","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"746:5:35","type":""}],"src":"690:162:35"},{"body":{"nodeType":"YulBlock","src":"941:100:35","statements":[{"nodeType":"YulAssignment","src":"951:22:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"966:6:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"960:5:35"},"nodeType":"YulFunctionCall","src":"960:13:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"951:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:35"}],"functionName":{"name":"validator_revert_t_contract$_IEntryPoint_$4475","nodeType":"YulIdentifier","src":"982:46:35"},"nodeType":"YulFunctionCall","src":"982:53:35"},"nodeType":"YulExpressionStatement","src":"982:53:35"}]},"name":"abi_decode_t_contract$_IEntryPoint_$4475_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"919:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"927:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"935:5:35","type":""}],"src":"858:183:35"},{"body":{"nodeType":"YulBlock","src":"1144:294:35","statements":[{"body":{"nodeType":"YulBlock","src":"1190:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1192:77:35"},"nodeType":"YulFunctionCall","src":"1192:79:35"},"nodeType":"YulExpressionStatement","src":"1192:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1165:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1161:3:35"},"nodeType":"YulFunctionCall","src":"1161:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"1186:2:35","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1157:3:35"},"nodeType":"YulFunctionCall","src":"1157:32:35"},"nodeType":"YulIf","src":"1154:119:35"},{"nodeType":"YulBlock","src":"1283:148:35","statements":[{"nodeType":"YulVariableDeclaration","src":"1298:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"1312:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1302:6:35","type":""}]},{"nodeType":"YulAssignment","src":"1327:94:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1393:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"1404:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1389:3:35"},"nodeType":"YulFunctionCall","src":"1389:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1413:7:35"}],"functionName":{"name":"abi_decode_t_contract$_IEntryPoint_$4475_fromMemory","nodeType":"YulIdentifier","src":"1337:51:35"},"nodeType":"YulFunctionCall","src":"1337:84:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1327:6:35"}]}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$4475_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1114:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1125:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1137:6:35","type":""}],"src":"1047:391:35"},{"body":{"nodeType":"YulBlock","src":"1476:28:35","statements":[{"nodeType":"YulAssignment","src":"1486:12:35","value":{"name":"value","nodeType":"YulIdentifier","src":"1493:5:35"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1486:3:35"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1462:5:35","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1472:3:35","type":""}],"src":"1444:60:35"},{"body":{"nodeType":"YulBlock","src":"1570:82:35","statements":[{"nodeType":"YulAssignment","src":"1580:66:35","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1638:5:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1620:17:35"},"nodeType":"YulFunctionCall","src":"1620:24:35"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1611:8:35"},"nodeType":"YulFunctionCall","src":"1611:34:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1593:17:35"},"nodeType":"YulFunctionCall","src":"1593:53:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1580:9:35"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1550:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1560:9:35","type":""}],"src":"1510:142:35"},{"body":{"nodeType":"YulBlock","src":"1718:66:35","statements":[{"nodeType":"YulAssignment","src":"1728:50:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1772:5:35"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"1741:30:35"},"nodeType":"YulFunctionCall","src":"1741:37:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1728:9:35"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1698:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1708:9:35","type":""}],"src":"1658:126:35"},{"body":{"nodeType":"YulBlock","src":"1870:66:35","statements":[{"nodeType":"YulAssignment","src":"1880:50:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1924:5:35"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"1893:30:35"},"nodeType":"YulFunctionCall","src":"1893:37:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1880:9:35"}]}]},"name":"convert_t_contract$_IEntryPoint_$4475_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1850:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1860:9:35","type":""}],"src":"1790:146:35"},{"body":{"nodeType":"YulBlock","src":"2027:86:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2044:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:35"}],"functionName":{"name":"convert_t_contract$_IEntryPoint_$4475_to_t_address","nodeType":"YulIdentifier","src":"2049:50:35"},"nodeType":"YulFunctionCall","src":"2049:57:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2037:6:35"},"nodeType":"YulFunctionCall","src":"2037:70:35"},"nodeType":"YulExpressionStatement","src":"2037:70:35"}]},"name":"abi_encode_t_contract$_IEntryPoint_$4475_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2015:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2022:3:35","type":""}],"src":"1942:171:35"},{"body":{"nodeType":"YulBlock","src":"2237:144:35","statements":[{"nodeType":"YulAssignment","src":"2247:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2259:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"2270:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2255:3:35"},"nodeType":"YulFunctionCall","src":"2255:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2247:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2347:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2360:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"2371:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2356:3:35"},"nodeType":"YulFunctionCall","src":"2356:17:35"}],"functionName":{"name":"abi_encode_t_contract$_IEntryPoint_$4475_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2283:63:35"},"nodeType":"YulFunctionCall","src":"2283:91:35"},"nodeType":"YulExpressionStatement","src":"2283:91:35"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$4475__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2209:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2221:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2232:4:35","type":""}],"src":"2119:262:35"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$4475(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$4475(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$4475(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$4475_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$4475(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$4475_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$4475_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$4475_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$4475_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$4475_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$4475__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$4475_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":35,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b50604051620040d3380380620040d3833981810160405281019062000037919062000136565b806040516200004690620000aa565b620000529190620001d3565b604051809103906000f0801580156200006f573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620001f0565b612f49806200118a83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ea82620000bd565b9050919050565b6000620000fe82620000dd565b9050919050565b6200011081620000f1565b81146200011c57600080fd5b50565b600081519050620001308162000105565b92915050565b6000602082840312156200014f576200014e620000b8565b5b60006200015f848285016200011f565b91505092915050565b6000819050919050565b6000620001936200018d6200018784620000bd565b62000168565b620000bd565b9050919050565b6000620001a78262000172565b9050919050565b6000620001bb826200019a565b9050919050565b620001cd81620001ae565b82525050565b6000602082019050620001ea6000830184620001c2565b92915050565b608051610f706200021a6000396000818161015f0152818161025801526103d70152610f706000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806311464fbe14620000635780635fbfb9cf14620000855780638cb84e1814620000bb578063e287a47a14620000f1578063eb6b26401462000127575b600080fd5b6200006d6200015d565b6040516200007c919062000606565b60405180910390f35b620000a360048036038101906200009d9190620006a8565b62000181565b604051620000b2919062000606565b60405180910390f35b620000d96004803603810190620000d39190620006a8565b620003a5565b604051620000e8919062000700565b60405180910390f35b6200010f6004803603810190620001099190620006a8565b620004a7565b6040516200011e919062000700565b60405180910390f35b6200014560048036038101906200013f9190620006a8565b620004e9565b60405162000154919062000700565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600080620001908484620003a5565b905080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff163b90506000811115620002525781925050506200039f565b8360001b7f0000000000000000000000000000000000000000000000000000000000000000866040516024016200028a919062000700565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002dd906200056d565b620002ea929190620007b7565b8190604051809103906000f59050801580156200030b573d6000803e3d6000fd5b509250826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b92915050565b60006200049f8260001b60405180602001620003c1906200056d565b6020820181038252601f19601f820116604052507f00000000000000000000000000000000000000000000000000000000000000008660405160240162000409919062000700565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405160200162000461929190620007b7565b604051602081830303815290604052604051602001620004839291906200082d565b604051602081830303815290604052805190602001206200052b565b905092915050565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006200053a83833062000542565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b6106e5806200085683390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620005c6620005c0620005ba846200057b565b6200059b565b6200057b565b9050919050565b6000620005da82620005a5565b9050919050565b6000620005ee82620005cd565b9050919050565b6200060081620005e1565b82525050565b60006020820190506200061d6000830184620005f5565b92915050565b600080fd5b600062000635826200057b565b9050919050565b620006478162000628565b81146200065357600080fd5b50565b60008135905062000667816200063c565b92915050565b6000819050919050565b62000682816200066d565b81146200068e57600080fd5b50565b600081359050620006a28162000677565b92915050565b60008060408385031215620006c257620006c162000623565b5b6000620006d28582860162000656565b9250506020620006e58582860162000691565b9150509250929050565b620006fa8162000628565b82525050565b6000602082019050620007176000830184620006ef565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620007595780820151818401526020810190506200073c565b60008484015250505050565b6000601f19601f8301169050919050565b600062000783826200071d565b6200078f818562000728565b9350620007a181856020860162000739565b620007ac8162000765565b840191505092915050565b6000604082019050620007ce6000830185620006ef565b8181036020830152620007e2818462000776565b90509392505050565b600081905092915050565b600062000803826200071d565b6200080f8185620007eb565b93506200082181856020860162000739565b80840191505092915050565b60006200083b8285620007f6565b9150620008498284620007f6565b9150819050939250505056fe60806040526040516106e53803806106e583398181016040528101906100259190610512565b610035828261003c60201b60201c565b50506105f6565b61004b826100c160201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156100ae576100a8828261019460201b60201c565b506100bd565b6100bc61021e60201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361011d57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610114919061057d565b60405180910390fd5b806101507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61025b60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516101be91906105df565b600060405180830381855af49150503d80600081146101f9576040519150601f19603f3d011682016040523d82523d6000602084013e6101fe565b606091505b509150915061021485838361026560201b60201c565b9250505092915050565b6000341115610259576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826102805761027b826102fa60201b60201c565b6102f2565b600082511480156102a8575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156102ea57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016102e1919061057d565b60405180910390fd5b8190506102f3565b5b9392505050565b60008151111561030d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037e82610353565b9050919050565b61038e81610373565b811461039957600080fd5b50565b6000815190506103ab81610385565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610404826103bb565b810181811067ffffffffffffffff82111715610423576104226103cc565b5b80604052505050565b600061043661033f565b905061044282826103fb565b919050565b600067ffffffffffffffff821115610462576104616103cc565b5b61046b826103bb565b9050602081019050919050565b60005b8381101561049657808201518184015260208101905061047b565b60008484015250505050565b60006104b56104b084610447565b61042c565b9050828152602081018484840111156104d1576104d06103b6565b5b6104dc848285610478565b509392505050565b600082601f8301126104f9576104f86103b1565b5b81516105098482602086016104a2565b91505092915050565b6000806040838503121561052957610528610349565b5b60006105378582860161039c565b925050602083015167ffffffffffffffff8111156105585761055761034e565b5b610564858286016104e4565b9150509250929050565b61057781610373565b82525050565b6000602082019050610592600083018461056e565b92915050565b600081519050919050565b600081905092915050565b60006105b982610598565b6105c381856105a3565b93506105d3818560208601610478565b80840191505092915050565b60006105eb82846105ae565b915081905092915050565b60e1806106046000396000f3fe6080604052600a600c565b005b60186014601a565b6027565b565b60006022604c565b905090565b3660008037600080366000845af43d6000803e80600081146047573d6000f35b3d6000fd5b600060787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60a1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea264697066735822122067da619a0e2ed8891b265d46572c129780831fefc6c4308f0ac16133d3574b1c64736f6c63430008140033a264697066735822122014fbb9e80b5c26918d3450f592ada71880cbf3172e9498399eef6784eb6af43564736f6c6343000814003360c06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b5060405162002f4938038062002f4983398181016040528101906200006a919062000265565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000ae620000b560201b60201c565b50620002d9565b6000620000c7620001bf60201b60201c565b90508060000160089054906101000a900460ff161562000113576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001bc5767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001b39190620002bc565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021982620001ec565b9050919050565b60006200022d826200020c565b9050919050565b6200023f8162000220565b81146200024b57600080fd5b50565b6000815190506200025f8162000234565b92915050565b6000602082840312156200027e576200027d620001e7565b5b60006200028e848285016200024e565b91505092915050565b600067ffffffffffffffff82169050919050565b620002b68162000297565b82525050565b6000602082019050620002d36000830184620002ab565b92915050565b60805160a051612c35620003146000396000818161098a015261141c0152600081816110e60152818161113b01526112f60152612c356000f3fe60806040526004361061010c5760003560e01c80638da5cb5b11610095578063bc197c8111610064578063bc197c8114610345578063c399ec8814610382578063c4d66de8146103ad578063d087d288146103d6578063f23a6e611461040157610113565b80638da5cb5b1461029b578063ad3cb1cc146102c6578063b0d691fe146102f1578063b61d27f61461031c57610113565b806347e1da2a116100dc57806347e1da2a146101f85780634a58db19146102215780634d44560d1461022b5780634f1ef2861461025457806352d1902d1461027057610113565b806223de291461011857806301ffc9a714610141578063150b7a021461017e5780633a871cdd146101bb57610113565b3661011357005b600080fd5b34801561012457600080fd5b5061013f600480360381019061013a9190611bd9565b61043e565b005b34801561014d57600080fd5b5061016860048036038101906101639190611d00565b610448565b6040516101759190611d48565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a09190611d63565b610582565b6040516101b29190611dfa565b60405180910390f35b3480156101c757600080fd5b506101e260048036038101906101dd9190611e70565b610597565b6040516101ef9190611eee565b60405180910390f35b34801561020457600080fd5b5061021f600480360381019061021a919061200b565b6105ca565b005b6102296107e2565b005b34801561023757600080fd5b50610252600480360381019061024d91906120fd565b610857565b005b61026e6004803603810190610269919061227e565b6108d7565b005b34801561027c57600080fd5b506102856108f6565b60405161029291906122e9565b60405180910390f35b3480156102a757600080fd5b506102b0610929565b6040516102bd9190612313565b60405180910390f35b3480156102d257600080fd5b506102db61094d565b6040516102e891906123ad565b60405180910390f35b3480156102fd57600080fd5b50610306610986565b604051610313919061242e565b60405180910390f35b34801561032857600080fd5b50610343600480360381019061033e9190612449565b6109ae565b005b34801561035157600080fd5b5061036c600480360381019061036791906124bd565b610a0b565b6040516103799190611dfa565b60405180910390f35b34801561038e57600080fd5b50610397610a23565b6040516103a49190611eee565b60405180910390f35b3480156103b957600080fd5b506103d460048036038101906103cf9190612599565b610aab565b005b3480156103e257600080fd5b506103eb610c3a565b6040516103f89190611eee565b60405180910390f35b34801561040d57600080fd5b50610428600480360381019061042391906125c6565b610cc5565b6040516104359190611dfa565b60405180910390f35b5050505050505050565b60007f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061051357507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061057b57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600063150b7a0260e01b905095945050505050565b60006105a1610cdb565b6105ab8484610d52565b90506105ba8460200135610e2e565b6105c382610e31565b9392505050565b6105d2610ecd565b81819050868690501480156105fa575060008484905014806105f957508181905084849050145b5b610639576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610630906126ac565b60405180910390fd5b600084849050036107055760005b868690508110156106ff576106ec878783818110610668576106676126cc565b5b905060200201602081019061067d9190612599565b6000858585818110610692576106916126cc565b5b90506020028101906106a4919061270a565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610f9a565b80806106f79061279c565b915050610647565b506107da565b60005b868690508110156107d8576107c5878783818110610729576107286126cc565b5b905060200201602081019061073e9190612599565b868684818110610751576107506126cc565b5b9050602002013585858581811061076b5761076a6126cc565b5b905060200281019061077d919061270a565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610f9a565b80806107d09061279c565b915050610708565b505b505050505050565b6107ea610986565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b81526004016108239190612313565b6000604051808303818588803b15801561083c57600080fd5b505af1158015610850573d6000803e3d6000fd5b5050505050565b61085f61101e565b610867610986565b73ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016108a19291906127f3565b600060405180830381600087803b1580156108bb57600080fd5b505af11580156108cf573d6000803e3d6000fd5b505050505050565b6108df6110e4565b6108e8826111ca565b6108f282826111d5565b5050565b60006109006112f4565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6109b6610ecd565b610a05848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610f9a565b50505050565b600063bc197c8160e01b905098975050505050505050565b6000610a2d610986565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a659190612313565b602060405180830381865afa158015610a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa69190612831565b905090565b6000610ab561137b565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610b035750825b9050600060018367ffffffffffffffff16148015610b38575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b46575080155b15610b7d576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bcd5760018560000160086101000a81548160ff0219169083151502179055505b610bd6866113a3565b8315610c325760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c2991906128ad565b60405180910390a15b505050505050565b6000610c44610986565b73ffffffffffffffffffffffffffffffffffffffff166335567e1a3060006040518363ffffffff1660e01b8152600401610c7f929190612927565b602060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc09190612831565b905090565b600063f23a6e6160e01b90509695505050505050565b610ce3610986565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d479061299c565b60405180910390fd5b565b600080610d5e83611480565b9050610dc684806101400190610d74919061270a565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050826114b690919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e22576001915050610e28565b60009150505b92915050565b50565b60008114610eca5760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90604051610e81906129ed565b600060405180830381858888f193505050503d8060008114610ebf576040519150601f19603f3d011682016040523d82523d6000602084013e610ec4565b606091505b50509050505b50565b610ed5610986565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610f59575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8f90612a4e565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff168484604051610fc39190612aaa565b60006040518083038185875af1925050503d8060008114611000576040519150601f19603f3d011682016040523d82523d6000602084013e611005565b606091505b50915091508161101757805160208201fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806110a357503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6110e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d990612b0d565b60405180910390fd5b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061119157507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111786114e2565b73ffffffffffffffffffffffffffffffffffffffff1614155b156111c8576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6111d261101e565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561123d57506040513d601f19601f8201168201806040525081019061123a9190612b42565b60015b61127e57816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016112759190612313565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146112e557806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016112dc91906122e9565b60405180910390fd5b6112ef8383611539565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611379576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de60405160405180910390a350565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b6000806000806114c686866115ac565b9250925092506114d68282611608565b82935050505092915050565b60006115107f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61176c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61154282611776565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111561159f576115998282611843565b506115a8565b6115a76118c7565b5b5050565b600080600060418451036115f15760008060006020870151925060408701519150606087015160001a90506115e388828585611904565b955095509550505050611601565b60006002855160001b9250925092505b9250925092565b6000600381111561161c5761161b612b6f565b5b82600381111561162f5761162e612b6f565b5b0315611768576001600381111561164957611648612b6f565b5b82600381111561165c5761165b612b6f565b5b03611693576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156116a7576116a6612b6f565b5b8260038111156116ba576116b9612b6f565b5b036116ff578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016116f69190611eee565b60405180910390fd5b60038081111561171257611711612b6f565b5b82600381111561172557611724612b6f565b5b0361176757806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161175e91906122e9565b60405180910390fd5b5b5050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036117d257806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016117c99190612313565b60405180910390fd5b806117ff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61176c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161186d9190612aaa565b600060405180830381855af49150503d80600081146118a8576040519150601f19603f3d011682016040523d82523d6000602084013e6118ad565b606091505b50915091506118bd8583836119f8565b9250505092915050565b6000341115611902576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156119445760006003859250925092506119ee565b6000600188888888604051600081526020016040526040516119699493929190612bba565b6020604051602081039080840390855afa15801561198b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119df57600060016000801b935093509350506119ee565b8060008060001b935093509350505b9450945094915050565b606082611a0d57611a0882611a87565b611a7f565b60008251148015611a35575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15611a7757836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611a6e9190612313565b60405180910390fd5b819050611a80565b5b9392505050565b600081511115611a9a5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b0b82611ae0565b9050919050565b611b1b81611b00565b8114611b2657600080fd5b50565b600081359050611b3881611b12565b92915050565b6000819050919050565b611b5181611b3e565b8114611b5c57600080fd5b50565b600081359050611b6e81611b48565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611b9957611b98611b74565b5b8235905067ffffffffffffffff811115611bb657611bb5611b79565b5b602083019150836001820283011115611bd257611bd1611b7e565b5b9250929050565b60008060008060008060008060c0898b031215611bf957611bf8611ad6565b5b6000611c078b828c01611b29565b9850506020611c188b828c01611b29565b9750506040611c298b828c01611b29565b9650506060611c3a8b828c01611b5f565b955050608089013567ffffffffffffffff811115611c5b57611c5a611adb565b5b611c678b828c01611b83565b945094505060a089013567ffffffffffffffff811115611c8a57611c89611adb565b5b611c968b828c01611b83565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611cdd81611ca8565b8114611ce857600080fd5b50565b600081359050611cfa81611cd4565b92915050565b600060208284031215611d1657611d15611ad6565b5b6000611d2484828501611ceb565b91505092915050565b60008115159050919050565b611d4281611d2d565b82525050565b6000602082019050611d5d6000830184611d39565b92915050565b600080600080600060808688031215611d7f57611d7e611ad6565b5b6000611d8d88828901611b29565b9550506020611d9e88828901611b29565b9450506040611daf88828901611b5f565b935050606086013567ffffffffffffffff811115611dd057611dcf611adb565b5b611ddc88828901611b83565b92509250509295509295909350565b611df481611ca8565b82525050565b6000602082019050611e0f6000830184611deb565b92915050565b600080fd5b60006101608284031215611e3157611e30611e15565b5b81905092915050565b6000819050919050565b611e4d81611e3a565b8114611e5857600080fd5b50565b600081359050611e6a81611e44565b92915050565b600080600060608486031215611e8957611e88611ad6565b5b600084013567ffffffffffffffff811115611ea757611ea6611adb565b5b611eb386828701611e1a565b9350506020611ec486828701611e5b565b9250506040611ed586828701611b5f565b9150509250925092565b611ee881611b3e565b82525050565b6000602082019050611f036000830184611edf565b92915050565b60008083601f840112611f1f57611f1e611b74565b5b8235905067ffffffffffffffff811115611f3c57611f3b611b79565b5b602083019150836020820283011115611f5857611f57611b7e565b5b9250929050565b60008083601f840112611f7557611f74611b74565b5b8235905067ffffffffffffffff811115611f9257611f91611b79565b5b602083019150836020820283011115611fae57611fad611b7e565b5b9250929050565b60008083601f840112611fcb57611fca611b74565b5b8235905067ffffffffffffffff811115611fe857611fe7611b79565b5b60208301915083602082028301111561200457612003611b7e565b5b9250929050565b6000806000806000806060878903121561202857612027611ad6565b5b600087013567ffffffffffffffff81111561204657612045611adb565b5b61205289828a01611f09565b9650965050602087013567ffffffffffffffff81111561207557612074611adb565b5b61208189828a01611f5f565b9450945050604087013567ffffffffffffffff8111156120a4576120a3611adb565b5b6120b089828a01611fb5565b92509250509295509295509295565b60006120ca82611ae0565b9050919050565b6120da816120bf565b81146120e557600080fd5b50565b6000813590506120f7816120d1565b92915050565b6000806040838503121561211457612113611ad6565b5b6000612122858286016120e8565b925050602061213385828601611b5f565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61218b82612142565b810181811067ffffffffffffffff821117156121aa576121a9612153565b5b80604052505050565b60006121bd611acc565b90506121c98282612182565b919050565b600067ffffffffffffffff8211156121e9576121e8612153565b5b6121f282612142565b9050602081019050919050565b82818337600083830152505050565b600061222161221c846121ce565b6121b3565b90508281526020810184848401111561223d5761223c61213d565b5b6122488482856121ff565b509392505050565b600082601f83011261226557612264611b74565b5b813561227584826020860161220e565b91505092915050565b6000806040838503121561229557612294611ad6565b5b60006122a385828601611b29565b925050602083013567ffffffffffffffff8111156122c4576122c3611adb565b5b6122d085828601612250565b9150509250929050565b6122e381611e3a565b82525050565b60006020820190506122fe60008301846122da565b92915050565b61230d81611b00565b82525050565b60006020820190506123286000830184612304565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561236857808201518184015260208101905061234d565b60008484015250505050565b600061237f8261232e565b6123898185612339565b935061239981856020860161234a565b6123a281612142565b840191505092915050565b600060208201905081810360008301526123c78184612374565b905092915050565b6000819050919050565b60006123f46123ef6123ea84611ae0565b6123cf565b611ae0565b9050919050565b6000612406826123d9565b9050919050565b6000612418826123fb565b9050919050565b6124288161240d565b82525050565b6000602082019050612443600083018461241f565b92915050565b6000806000806060858703121561246357612462611ad6565b5b600061247187828801611b29565b945050602061248287828801611b5f565b935050604085013567ffffffffffffffff8111156124a3576124a2611adb565b5b6124af87828801611b83565b925092505092959194509250565b60008060008060008060008060a0898b0312156124dd576124dc611ad6565b5b60006124eb8b828c01611b29565b98505060206124fc8b828c01611b29565b975050604089013567ffffffffffffffff81111561251d5761251c611adb565b5b6125298b828c01611f5f565b9650965050606089013567ffffffffffffffff81111561254c5761254b611adb565b5b6125588b828c01611f5f565b9450945050608089013567ffffffffffffffff81111561257b5761257a611adb565b5b6125878b828c01611b83565b92509250509295985092959890939650565b6000602082840312156125af576125ae611ad6565b5b60006125bd84828501611b29565b91505092915050565b60008060008060008060a087890312156125e3576125e2611ad6565b5b60006125f189828a01611b29565b965050602061260289828a01611b29565b955050604061261389828a01611b5f565b945050606061262489828a01611b5f565b935050608087013567ffffffffffffffff81111561264557612644611adb565b5b61265189828a01611b83565b92509250509295509295509295565b7f77726f6e67206172726179206c656e6774687300000000000000000000000000600082015250565b6000612696601383612339565b91506126a182612660565b602082019050919050565b600060208201905081810360008301526126c581612689565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612727576127266126fb565b5b80840192508235915067ffffffffffffffff82111561274957612748612700565b5b60208301925060018202360383131561276557612764612705565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127a782611b3e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127d9576127d861276d565b5b600182019050919050565b6127ed816120bf565b82525050565b600060408201905061280860008301856127e4565b6128156020830184611edf565b9392505050565b60008151905061282b81611b48565b92915050565b60006020828403121561284757612846611ad6565b5b60006128558482850161281c565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061289761289261288d8461285e565b6123cf565b612868565b9050919050565b6128a78161287c565b82525050565b60006020820190506128c2600083018461289e565b92915050565b6000819050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b600061291161290c612907846128c8565b6123cf565b6128d2565b9050919050565b612921816128f6565b82525050565b600060408201905061293c6000830185612304565b6129496020830184612918565b9392505050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b6000612986601c83612339565b915061299182612950565b602082019050919050565b600060208201905081810360008301526129b581612979565b9050919050565b600081905092915050565b50565b60006129d76000836129bc565b91506129e2826129c7565b600082019050919050565b60006129f8826129ca565b9150819050919050565b7f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74600082015250565b6000612a38602083612339565b9150612a4382612a02565b602082019050919050565b60006020820190508181036000830152612a6781612a2b565b9050919050565b600081519050919050565b6000612a8482612a6e565b612a8e81856129bc565b9350612a9e81856020860161234a565b80840191505092915050565b6000612ab68284612a79565b915081905092915050565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b6000612af7600a83612339565b9150612b0282612ac1565b602082019050919050565b60006020820190508181036000830152612b2681612aea565b9050919050565b600081519050612b3c81611e44565b92915050565b600060208284031215612b5857612b57611ad6565b5b6000612b6684828501612b2d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060ff82169050919050565b612bb481612b9e565b82525050565b6000608082019050612bcf60008301876122da565b612bdc6020830186612bab565b612be960408301856122da565b612bf660608301846122da565b9594505050505056fea2646970667358221220bbac897061d773491889865f535410986b965f5c2ca7e09f0d26e641e260c26564736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x40D3 CODESIZE SUB DUP1 PUSH3 0x40D3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x136 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x46 SWAP1 PUSH3 0xAA JUMP JUMPDEST PUSH3 0x52 SWAP2 SWAP1 PUSH3 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x1F0 JUMP JUMPDEST PUSH2 0x2F49 DUP1 PUSH3 0x118A DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xEA DUP3 PUSH3 0xBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFE DUP3 PUSH3 0xDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x110 DUP2 PUSH3 0xF1 JUMP JUMPDEST DUP2 EQ PUSH3 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x130 DUP2 PUSH3 0x105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x14F JUMPI PUSH3 0x14E PUSH3 0xB8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x15F DUP5 DUP3 DUP6 ADD PUSH3 0x11F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x193 PUSH3 0x18D PUSH3 0x187 DUP5 PUSH3 0xBD JUMP JUMPDEST PUSH3 0x168 JUMP JUMPDEST PUSH3 0xBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A7 DUP3 PUSH3 0x172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BB DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CD DUP2 PUSH3 0x1AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1EA PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xF70 PUSH3 0x21A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x15F ADD MSTORE DUP2 DUP2 PUSH2 0x258 ADD MSTORE PUSH2 0x3D7 ADD MSTORE PUSH2 0xF70 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x5E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11464FBE EQ PUSH3 0x63 JUMPI DUP1 PUSH4 0x5FBFB9CF EQ PUSH3 0x85 JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH3 0xBB JUMPI DUP1 PUSH4 0xE287A47A EQ PUSH3 0xF1 JUMPI DUP1 PUSH4 0xEB6B2640 EQ PUSH3 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x6D PUSH3 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x7C SWAP2 SWAP1 PUSH3 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x9D SWAP2 SWAP1 PUSH3 0x6A8 JUMP JUMPDEST PUSH3 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xB2 SWAP2 SWAP1 PUSH3 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xD3 SWAP2 SWAP1 PUSH3 0x6A8 JUMP JUMPDEST PUSH3 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xE8 SWAP2 SWAP1 PUSH3 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x109 SWAP2 SWAP1 PUSH3 0x6A8 JUMP JUMPDEST PUSH3 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x11E SWAP2 SWAP1 PUSH3 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x13F SWAP2 SWAP1 PUSH3 0x6A8 JUMP JUMPDEST PUSH3 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x154 SWAP2 SWAP1 PUSH3 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x190 DUP5 DUP5 PUSH3 0x3A5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x252 JUMPI DUP2 SWAP3 POP POP POP PUSH3 0x39F JUMP JUMPDEST DUP4 PUSH1 0x0 SHL PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x28A SWAP2 SWAP1 PUSH3 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xC4D66DE8 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH3 0x2DD SWAP1 PUSH3 0x56D JUMP JUMPDEST PUSH3 0x2EA SWAP3 SWAP2 SWAP1 PUSH3 0x7B7 JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH3 0x30B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 POP DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49F DUP3 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x3C1 SWAP1 PUSH3 0x56D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x409 SWAP2 SWAP1 PUSH3 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xC4D66DE8 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x461 SWAP3 SWAP2 SWAP1 PUSH3 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x483 SWAP3 SWAP2 SWAP1 PUSH3 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH3 0x52B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x53A DUP4 DUP4 ADDRESS PUSH3 0x542 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 DUP2 KECCAK256 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6E5 DUP1 PUSH3 0x856 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5C6 PUSH3 0x5C0 PUSH3 0x5BA DUP5 PUSH3 0x57B JUMP JUMPDEST PUSH3 0x59B JUMP JUMPDEST PUSH3 0x57B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5DA DUP3 PUSH3 0x5A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EE DUP3 PUSH3 0x5CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x600 DUP2 PUSH3 0x5E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x61D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x635 DUP3 PUSH3 0x57B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x647 DUP2 PUSH3 0x628 JUMP JUMPDEST DUP2 EQ PUSH3 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x667 DUP2 PUSH3 0x63C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x682 DUP2 PUSH3 0x66D JUMP JUMPDEST DUP2 EQ PUSH3 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x6A2 DUP2 PUSH3 0x677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x6C2 JUMPI PUSH3 0x6C1 PUSH3 0x623 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x6D2 DUP6 DUP3 DUP7 ADD PUSH3 0x656 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x6E5 DUP6 DUP3 DUP7 ADD PUSH3 0x691 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x6FA DUP2 PUSH3 0x628 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x717 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x6EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x759 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x73C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x783 DUP3 PUSH3 0x71D JUMP JUMPDEST PUSH3 0x78F DUP2 DUP6 PUSH3 0x728 JUMP JUMPDEST SWAP4 POP PUSH3 0x7A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x739 JUMP JUMPDEST PUSH3 0x7AC DUP2 PUSH3 0x765 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x7CE PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x6EF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x7E2 DUP2 DUP5 PUSH3 0x776 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x803 DUP3 PUSH3 0x71D JUMP JUMPDEST PUSH3 0x80F DUP2 DUP6 PUSH3 0x7EB JUMP JUMPDEST SWAP4 POP PUSH3 0x821 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x739 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x83B DUP3 DUP6 PUSH3 0x7F6 JUMP JUMPDEST SWAP2 POP PUSH3 0x849 DUP3 DUP5 PUSH3 0x7F6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6E5 CODESIZE SUB DUP1 PUSH2 0x6E5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x4B DUP3 PUSH2 0xC1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xAE JUMPI PUSH2 0xA8 DUP3 DUP3 PUSH2 0x194 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xBD JUMP JUMPDEST PUSH2 0xBC PUSH2 0x21E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x11D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x150 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x25B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x214 DUP6 DUP4 DUP4 PUSH2 0x265 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x280 JUMPI PUSH2 0x27B DUP3 PUSH2 0x2FA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2A8 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2EA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2F3 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x30D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x373 JUMP JUMPDEST DUP2 EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3AB DUP2 PUSH2 0x385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x404 DUP3 PUSH2 0x3BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x423 JUMPI PUSH2 0x422 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 PUSH2 0x33F JUMP JUMPDEST SWAP1 POP PUSH2 0x442 DUP3 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST PUSH2 0x46B DUP3 PUSH2 0x3BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x496 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x47B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH2 0x4B0 DUP5 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH2 0x4DC DUP5 DUP3 DUP6 PUSH2 0x478 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x509 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x529 JUMPI PUSH2 0x528 PUSH2 0x349 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x537 DUP6 DUP3 DUP7 ADD PUSH2 0x39C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH2 0x564 DUP6 DUP3 DUP7 ADD PUSH2 0x4E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B9 DUP3 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x5C3 DUP2 DUP6 PUSH2 0x5A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x5D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x478 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EB DUP3 DUP5 PUSH2 0x5AE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE1 DUP1 PUSH2 0x604 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x27 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x4C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x47 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x78 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH1 0xA1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xDA619A0E2ED8891B 0x26 0x5D CHAINID JUMPI 0x2C SLT SWAP8 DUP1 DUP4 0x1F 0xEF 0xC6 0xC4 ADDRESS DUP16 EXP 0xC1 PUSH2 0x33D3 JUMPI 0x4B SHR PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0xFB 0xB9 0xE8 SIGNEXTEND 0x5C 0x26 SWAP2 DUP14 CALLVALUE POP CREATE2 SWAP3 0xAD 0xA7 XOR DUP1 0xCB RETURN OR 0x2E SWAP5 SWAP9 CODECOPY SWAP15 0xEF PUSH8 0x84EB6AF43564736F PUSH13 0x6343000814003360C060405230 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2F49 CODESIZE SUB DUP1 PUSH3 0x2F49 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x6A SWAP2 SWAP1 PUSH3 0x265 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0xAE PUSH3 0xB5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x2D9 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC7 PUSH3 0x1BF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x113 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1BC JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x1B3 SWAP2 SWAP1 PUSH3 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x219 DUP3 PUSH3 0x1EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x22D DUP3 PUSH3 0x20C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23F DUP2 PUSH3 0x220 JUMP JUMPDEST DUP2 EQ PUSH3 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25F DUP2 PUSH3 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x27E JUMPI PUSH3 0x27D PUSH3 0x1E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x28E DUP5 DUP3 DUP6 ADD PUSH3 0x24E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B6 DUP2 PUSH3 0x297 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2C35 PUSH3 0x314 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x98A ADD MSTORE PUSH2 0x141C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x10E6 ADD MSTORE DUP2 DUP2 PUSH2 0x113B ADD MSTORE PUSH2 0x12F6 ADD MSTORE PUSH2 0x2C35 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x401 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x31C JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x47E1DA2A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x47E1DA2A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x270 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x1BB JUMPI PUSH2 0x113 JUMP JUMPDEST CALLDATASIZE PUSH2 0x113 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x242E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x2449 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x25C6 JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x513 JUMPI POP PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x57B JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x5AB DUP5 DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BA DUP5 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x5C3 DUP3 PUSH2 0xE31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0xECD JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0x5FA JUMPI POP PUSH1 0x0 DUP5 DUP5 SWAP1 POP EQ DUP1 PUSH2 0x5F9 JUMPI POP DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ JUMPDEST JUMPDEST PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SUB PUSH2 0x705 JUMPI PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x6FF JUMPI PUSH2 0x6EC DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x692 JUMPI PUSH2 0x691 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x270A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF9A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x6F7 SWAP1 PUSH2 0x279C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x647 JUMP JUMPDEST POP PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7D8 JUMPI PUSH2 0x7C5 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x751 JUMPI PUSH2 0x750 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x76B JUMPI PUSH2 0x76A PUSH2 0x26CC JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x270A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF9A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7D0 SWAP1 PUSH2 0x279C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x708 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EA PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85F PUSH2 0x101E JUMP JUMPDEST PUSH2 0x867 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x205C2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP3 SWAP2 SWAP1 PUSH2 0x27F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0x8E8 DUP3 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0x8F2 DUP3 DUP3 PUSH2 0x11D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x900 PUSH2 0x12F4 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9B6 PUSH2 0xECD JUMP JUMPDEST PUSH2 0xA05 DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF9A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2D PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA6 SWAP2 SWAP1 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB5 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB03 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB38 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB46 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBCD JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBD6 DUP7 PUSH2 0x13A3 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xC32 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC44 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35567E1A ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7F SWAP3 SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x2831 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCE3 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x299C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD5E DUP4 PUSH2 0x1480 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC6 DUP5 DUP1 PUSH2 0x140 ADD SWAP1 PUSH2 0xD74 SWAP2 SWAP1 PUSH2 0x270A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH2 0x14B6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE22 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0xECA JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x40 MLOAD PUSH2 0xE81 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP JUMPDEST POP JUMP JUMPDEST PUSH2 0xED5 PUSH2 0x986 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF59 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8F SWAP1 PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1000 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1017 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x10A3 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1191 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1178 PUSH2 0x14E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11D2 PUSH2 0x101E JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x123D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123A SWAP2 SWAP1 PUSH2 0x2B42 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x127E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x12E5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12EF DUP4 DUP4 PUSH2 0x1539 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1379 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x14C6 DUP7 DUP7 PUSH2 0x15AC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x14D6 DUP3 DUP3 PUSH2 0x1608 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1510 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x176C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1542 DUP3 PUSH2 0x1776 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x159F JUMPI PUSH2 0x1599 DUP3 DUP3 PUSH2 0x1843 JUMP JUMPDEST POP PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x15A7 PUSH2 0x18C7 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x15F1 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x15E3 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1904 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x161C JUMPI PUSH2 0x161B PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162E PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1768 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1693 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16A7 JUMPI PUSH2 0x16A6 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16B9 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16FF JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F6 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1712 JUMPI PUSH2 0x1711 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1725 JUMPI PUSH2 0x1724 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1767 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175E SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x17D2 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C9 SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x17FF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x176C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x186D SWAP2 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18A8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18BD DUP6 DUP4 DUP4 PUSH2 0x19F8 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1902 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1944 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1969 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x198B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19DF JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x19EE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1A0D JUMPI PUSH2 0x1A08 DUP3 PUSH2 0x1A87 JUMP JUMPDEST PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1A35 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1A77 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6E SWAP2 SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1A9A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0B DUP3 PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1B DUP2 PUSH2 0x1B00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B38 DUP2 PUSH2 0x1B12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x1B3E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6E DUP2 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1B99 JUMPI PUSH2 0x1B98 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB6 JUMPI PUSH2 0x1BB5 PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1BD2 JUMPI PUSH2 0x1BD1 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C07 DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1C18 DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1C29 DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1C3A DUP12 DUP3 DUP13 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C5B JUMPI PUSH2 0x1C5A PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1C67 DUP12 DUP3 DUP13 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1C96 DUP12 DUP3 DUP13 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDD DUP2 PUSH2 0x1CA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFA DUP2 PUSH2 0x1CD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D24 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D42 DUP2 PUSH2 0x1D2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7E PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D8D DUP9 DUP3 DUP10 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D9E DUP9 DUP3 DUP10 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1DAF DUP9 DUP3 DUP10 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DD0 JUMPI PUSH2 0x1DCF PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1DDC DUP9 DUP3 DUP10 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1DF4 DUP2 PUSH2 0x1CA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E31 JUMPI PUSH2 0x1E30 PUSH2 0x1E15 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4D DUP2 PUSH2 0x1E3A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E6A DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E88 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x1EB3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1E5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1ED5 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1EE8 DUP2 PUSH2 0x1B3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F03 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3C JUMPI PUSH2 0x1F3B PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1F58 JUMPI PUSH2 0x1F57 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F92 JUMPI PUSH2 0x1F91 PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1FAE JUMPI PUSH2 0x1FAD PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FCB JUMPI PUSH2 0x1FCA PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FE8 JUMPI PUSH2 0x1FE7 PUSH2 0x1B79 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2004 JUMPI PUSH2 0x2003 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2028 JUMPI PUSH2 0x2027 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2046 JUMPI PUSH2 0x2045 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2052 DUP10 DUP3 DUP11 ADD PUSH2 0x1F09 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2081 DUP10 DUP3 DUP11 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A3 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x20B0 DUP10 DUP3 DUP11 ADD PUSH2 0x1FB5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CA DUP3 PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20DA DUP2 PUSH2 0x20BF JUMP JUMPDEST DUP2 EQ PUSH2 0x20E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F7 DUP2 PUSH2 0x20D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2114 JUMPI PUSH2 0x2113 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2122 DUP6 DUP3 DUP7 ADD PUSH2 0x20E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2133 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x218B DUP3 PUSH2 0x2142 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21AA JUMPI PUSH2 0x21A9 PUSH2 0x2153 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BD PUSH2 0x1ACC JUMP JUMPDEST SWAP1 POP PUSH2 0x21C9 DUP3 DUP3 PUSH2 0x2182 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21E9 JUMPI PUSH2 0x21E8 PUSH2 0x2153 JUMP JUMPDEST JUMPDEST PUSH2 0x21F2 DUP3 PUSH2 0x2142 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2221 PUSH2 0x221C DUP5 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x21B3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x223D JUMPI PUSH2 0x223C PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH2 0x2248 DUP5 DUP3 DUP6 PUSH2 0x21FF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2265 JUMPI PUSH2 0x2264 PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2275 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x220E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2295 JUMPI PUSH2 0x2294 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C4 JUMPI PUSH2 0x22C3 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x22D0 DUP6 DUP3 DUP7 ADD PUSH2 0x2250 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E3 DUP2 PUSH2 0x1E3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22FE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x230D DUP2 PUSH2 0x1B00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2328 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2368 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x234D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x237F DUP3 PUSH2 0x232E JUMP JUMPDEST PUSH2 0x2389 DUP2 DUP6 PUSH2 0x2339 JUMP JUMPDEST SWAP4 POP PUSH2 0x2399 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x234A JUMP JUMPDEST PUSH2 0x23A2 DUP2 PUSH2 0x2142 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C7 DUP2 DUP5 PUSH2 0x2374 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F4 PUSH2 0x23EF PUSH2 0x23EA DUP5 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2406 DUP3 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2418 DUP3 PUSH2 0x23FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2428 DUP2 PUSH2 0x240D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2443 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x241F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2463 JUMPI PUSH2 0x2462 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2471 DUP8 DUP3 DUP9 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2482 DUP8 DUP3 DUP9 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24A3 JUMPI PUSH2 0x24A2 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x24AF DUP8 DUP3 DUP9 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x24DD JUMPI PUSH2 0x24DC PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24EB DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x24FC DUP12 DUP3 DUP13 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x251D JUMPI PUSH2 0x251C PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2529 DUP12 DUP3 DUP13 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254C JUMPI PUSH2 0x254B PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2558 DUP12 DUP3 DUP13 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x257B JUMPI PUSH2 0x257A PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2587 DUP12 DUP3 DUP13 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25AF JUMPI PUSH2 0x25AE PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25BD DUP5 DUP3 DUP6 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x25E3 JUMPI PUSH2 0x25E2 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F1 DUP10 DUP3 DUP11 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2602 DUP10 DUP3 DUP11 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2613 DUP10 DUP3 DUP11 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2624 DUP10 DUP3 DUP11 ADD PUSH2 0x1B5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2645 JUMPI PUSH2 0x2644 PUSH2 0x1ADB JUMP JUMPDEST JUMPDEST PUSH2 0x2651 DUP10 DUP3 DUP11 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2696 PUSH1 0x13 DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A1 DUP3 PUSH2 0x2660 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26C5 DUP2 PUSH2 0x2689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x2727 JUMPI PUSH2 0x2726 PUSH2 0x26FB JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2749 JUMPI PUSH2 0x2748 PUSH2 0x2700 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x2705 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27A7 DUP3 PUSH2 0x1B3E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x276D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27ED DUP2 PUSH2 0x20BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2808 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x27E4 JUMP JUMPDEST PUSH2 0x2815 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EDF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x282B DUP2 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2847 JUMPI PUSH2 0x2846 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2855 DUP5 DUP3 DUP6 ADD PUSH2 0x281C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2897 PUSH2 0x2892 PUSH2 0x288D DUP5 PUSH2 0x285E JUMP JUMPDEST PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x2868 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A7 DUP2 PUSH2 0x287C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2911 PUSH2 0x290C PUSH2 0x2907 DUP5 PUSH2 0x28C8 JUMP JUMPDEST PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x28D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2921 DUP2 PUSH2 0x28F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x293C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x2949 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2918 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2986 PUSH1 0x1C DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x2991 DUP3 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29B5 DUP2 PUSH2 0x2979 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D7 PUSH1 0x0 DUP4 PUSH2 0x29BC JUMP JUMPDEST SWAP2 POP PUSH2 0x29E2 DUP3 PUSH2 0x29C7 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F8 DUP3 PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A38 PUSH1 0x20 DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A43 DUP3 PUSH2 0x2A02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A67 DUP2 PUSH2 0x2A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A84 DUP3 PUSH2 0x2A6E JUMP JUMPDEST PUSH2 0x2A8E DUP2 DUP6 PUSH2 0x29BC JUMP JUMPDEST SWAP4 POP PUSH2 0x2A9E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x234A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB6 DUP3 DUP5 PUSH2 0x2A79 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF7 PUSH1 0xA DUP4 PUSH2 0x2339 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B02 DUP3 PUSH2 0x2AC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B26 DUP2 PUSH2 0x2AEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B3C DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B58 JUMPI PUSH2 0x2B57 PUSH2 0x1AD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B66 DUP5 DUP3 DUP6 ADD PUSH2 0x2B2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BB4 DUP2 PUSH2 0x2B9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2BCF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x2BDC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2BAB JUMP JUMPDEST PUSH2 0x2BE9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x2BF6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22DA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xAC DUP10 PUSH17 0x61D773491889865F535410986B965F5C2C 0xA7 0xE0 SWAP16 0xD 0x26 0xE6 COINBASE 0xE2 PUSH1 0xC2 PUSH6 0x64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"614:1909:33:-:0;;;712:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;802:11;784:30;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;760:54;;;;;;;;;;712:110;614:1909;;;;;;;;;;:::o;88:117:35:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:391::-;1137:6;1186:2;1174:9;1165:7;1161:23;1157:32;1154:119;;;1192:79;;:::i;:::-;1154:119;1312:1;1337:84;1413:7;1404:6;1393:9;1389:22;1337:84;:::i;:::-;1327:94;;1283:148;1047:391;;;;:::o;1444:60::-;1472:3;1493:5;1486:12;;1444:60;;;:::o;1510:142::-;1560:9;1593:53;1611:34;1620:24;1638:5;1620:24;:::i;:::-;1611:34;:::i;:::-;1593:53;:::i;:::-;1580:66;;1510:142;;;:::o;1658:126::-;1708:9;1741:37;1772:5;1741:37;:::i;:::-;1728:50;;1658:126;;;:::o;1790:146::-;1860:9;1893:37;1924:5;1893:37;:::i;:::-;1880:50;;1790:146;;;:::o;1942:171::-;2049:57;2100:5;2049:57;:::i;:::-;2044:3;2037:70;1942:171;;:::o;2119:262::-;2232:4;2270:2;2259:9;2255:18;2247:26;;2283:91;2371:1;2360:9;2356:17;2347:6;2283:91;:::i;:::-;2119:262;;;;:::o;614:1909:33:-;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@accountImplementation_5043":{"entryPoint":349,"id":5043,"parameterSlots":0,"returnSlots":0},"@checkAddress_5070":{"entryPoint":1257,"id":5070,"parameterSlots":0,"returnSlots":0},"@computeAddress_1387":{"entryPoint":1323,"id":1387,"parameterSlots":2,"returnSlots":1},"@computeAddress_1401":{"entryPoint":1346,"id":1401,"parameterSlots":3,"returnSlots":1},"@createAccount_5155":{"entryPoint":385,"id":5155,"parameterSlots":2,"returnSlots":1},"@createdAccounts_5064":{"entryPoint":1191,"id":5064,"parameterSlots":0,"returnSlots":0},"@getAddress_5197":{"entryPoint":933,"id":5197,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1622,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1704,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1775,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":1910,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_SimpleAccount_$5034_to_t_address_payable_fromStack":{"entryPoint":1525,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2093,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1975,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_SimpleAccount_$5034__to_t_address_payable__fromStack_reversed":{"entryPoint":1542,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1821,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":1832,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2027,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1576,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1403,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1645,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_SimpleAccount_$5034_to_t_address_payable":{"entryPoint":1505,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address_payable":{"entryPoint":1485,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":1445,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1849,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1571,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1893,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1596,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1655,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5455:35","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:35","statements":[{"nodeType":"YulAssignment","src":"62:65:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:35","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:35"},"nodeType":"YulFunctionCall","src":"73:54:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:35"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:35","type":""}],"src":"7:126:35"},{"body":{"nodeType":"YulBlock","src":"171:28:35","statements":[{"nodeType":"YulAssignment","src":"181:12:35","value":{"name":"value","nodeType":"YulIdentifier","src":"188:5:35"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"181:3:35"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"157:5:35","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"167:3:35","type":""}],"src":"139:60:35"},{"body":{"nodeType":"YulBlock","src":"265:82:35","statements":[{"nodeType":"YulAssignment","src":"275:66:35","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"333:5:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"315:17:35"},"nodeType":"YulFunctionCall","src":"315:24:35"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"306:8:35"},"nodeType":"YulFunctionCall","src":"306:34:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"288:17:35"},"nodeType":"YulFunctionCall","src":"288:53:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"275:9:35"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"245:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"255:9:35","type":""}],"src":"205:142:35"},{"body":{"nodeType":"YulBlock","src":"421:66:35","statements":[{"nodeType":"YulAssignment","src":"431:50:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"475:5:35"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"444:30:35"},"nodeType":"YulFunctionCall","src":"444:37:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"431:9:35"}]}]},"name":"convert_t_uint160_to_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"401:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"411:9:35","type":""}],"src":"353:134:35"},{"body":{"nodeType":"YulBlock","src":"583:74:35","statements":[{"nodeType":"YulAssignment","src":"593:58:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"645:5:35"}],"functionName":{"name":"convert_t_uint160_to_t_address_payable","nodeType":"YulIdentifier","src":"606:38:35"},"nodeType":"YulFunctionCall","src":"606:45:35"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"593:9:35"}]}]},"name":"convert_t_contract$_SimpleAccount_$5034_to_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"563:5:35","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"573:9:35","type":""}],"src":"493:164:35"},{"body":{"nodeType":"YulBlock","src":"758:96:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"775:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"841:5:35"}],"functionName":{"name":"convert_t_contract$_SimpleAccount_$5034_to_t_address_payable","nodeType":"YulIdentifier","src":"780:60:35"},"nodeType":"YulFunctionCall","src":"780:67:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"768:6:35"},"nodeType":"YulFunctionCall","src":"768:80:35"},"nodeType":"YulExpressionStatement","src":"768:80:35"}]},"name":"abi_encode_t_contract$_SimpleAccount_$5034_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"746:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"753:3:35","type":""}],"src":"663:191:35"},{"body":{"nodeType":"YulBlock","src":"988:154:35","statements":[{"nodeType":"YulAssignment","src":"998:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1010:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"1021:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1006:3:35"},"nodeType":"YulFunctionCall","src":"1006:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"998:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1108:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"1132:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:35"},"nodeType":"YulFunctionCall","src":"1117:17:35"}],"functionName":{"name":"abi_encode_t_contract$_SimpleAccount_$5034_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"1034:73:35"},"nodeType":"YulFunctionCall","src":"1034:101:35"},"nodeType":"YulExpressionStatement","src":"1034:101:35"}]},"name":"abi_encode_tuple_t_contract$_SimpleAccount_$5034__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"960:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"972:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"983:4:35","type":""}],"src":"860:282:35"},{"body":{"nodeType":"YulBlock","src":"1188:35:35","statements":[{"nodeType":"YulAssignment","src":"1198:19:35","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1214:2:35","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1208:5:35"},"nodeType":"YulFunctionCall","src":"1208:9:35"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1198:6:35"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1181:6:35","type":""}],"src":"1148:75:35"},{"body":{"nodeType":"YulBlock","src":"1318:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1338:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1328:6:35"},"nodeType":"YulFunctionCall","src":"1328:12:35"},"nodeType":"YulExpressionStatement","src":"1328:12:35"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1229:117:35"},{"body":{"nodeType":"YulBlock","src":"1441:28:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:35"},"nodeType":"YulFunctionCall","src":"1451:12:35"},"nodeType":"YulExpressionStatement","src":"1451:12:35"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1352:117:35"},{"body":{"nodeType":"YulBlock","src":"1520:51:35","statements":[{"nodeType":"YulAssignment","src":"1530:35:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1559:5:35"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1541:17:35"},"nodeType":"YulFunctionCall","src":"1541:24:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1530:7:35"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1502:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1512:7:35","type":""}],"src":"1475:96:35"},{"body":{"nodeType":"YulBlock","src":"1620:79:35","statements":[{"body":{"nodeType":"YulBlock","src":"1677:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1686:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1689:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1679:6:35"},"nodeType":"YulFunctionCall","src":"1679:12:35"},"nodeType":"YulExpressionStatement","src":"1679:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1643:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1668:5:35"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1650:17:35"},"nodeType":"YulFunctionCall","src":"1650:24:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1640:2:35"},"nodeType":"YulFunctionCall","src":"1640:35:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1633:6:35"},"nodeType":"YulFunctionCall","src":"1633:43:35"},"nodeType":"YulIf","src":"1630:63:35"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1613:5:35","type":""}],"src":"1577:122:35"},{"body":{"nodeType":"YulBlock","src":"1757:87:35","statements":[{"nodeType":"YulAssignment","src":"1767:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1789:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1776:12:35"},"nodeType":"YulFunctionCall","src":"1776:20:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1767:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1832:5:35"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1805:26:35"},"nodeType":"YulFunctionCall","src":"1805:33:35"},"nodeType":"YulExpressionStatement","src":"1805:33:35"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1735:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"1743:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:35","type":""}],"src":"1705:139:35"},{"body":{"nodeType":"YulBlock","src":"1895:32:35","statements":[{"nodeType":"YulAssignment","src":"1905:16:35","value":{"name":"value","nodeType":"YulIdentifier","src":"1916:5:35"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1905:7:35"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1877:5:35","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1887:7:35","type":""}],"src":"1850:77:35"},{"body":{"nodeType":"YulBlock","src":"1976:79:35","statements":[{"body":{"nodeType":"YulBlock","src":"2033:16:35","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2042:1:35","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2045:1:35","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2035:6:35"},"nodeType":"YulFunctionCall","src":"2035:12:35"},"nodeType":"YulExpressionStatement","src":"2035:12:35"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1999:5:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:35"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2006:17:35"},"nodeType":"YulFunctionCall","src":"2006:24:35"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1996:2:35"},"nodeType":"YulFunctionCall","src":"1996:35:35"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1989:6:35"},"nodeType":"YulFunctionCall","src":"1989:43:35"},"nodeType":"YulIf","src":"1986:63:35"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1969:5:35","type":""}],"src":"1933:122:35"},{"body":{"nodeType":"YulBlock","src":"2113:87:35","statements":[{"nodeType":"YulAssignment","src":"2123:29:35","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2145:6:35"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2132:12:35"},"nodeType":"YulFunctionCall","src":"2132:20:35"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2123:5:35"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2188:5:35"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2161:26:35"},"nodeType":"YulFunctionCall","src":"2161:33:35"},"nodeType":"YulExpressionStatement","src":"2161:33:35"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2091:6:35","type":""},{"name":"end","nodeType":"YulTypedName","src":"2099:3:35","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2107:5:35","type":""}],"src":"2061:139:35"},{"body":{"nodeType":"YulBlock","src":"2289:391:35","statements":[{"body":{"nodeType":"YulBlock","src":"2335:83:35","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2337:77:35"},"nodeType":"YulFunctionCall","src":"2337:79:35"},"nodeType":"YulExpressionStatement","src":"2337:79:35"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2310:7:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"2319:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2306:3:35"},"nodeType":"YulFunctionCall","src":"2306:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"2331:2:35","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2302:3:35"},"nodeType":"YulFunctionCall","src":"2302:32:35"},"nodeType":"YulIf","src":"2299:119:35"},{"nodeType":"YulBlock","src":"2428:117:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2443:15:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2457:1:35","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2447:6:35","type":""}]},{"nodeType":"YulAssignment","src":"2472:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2507:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"2518:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2503:3:35"},"nodeType":"YulFunctionCall","src":"2503:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2527:7:35"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2482:20:35"},"nodeType":"YulFunctionCall","src":"2482:53:35"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2472:6:35"}]}]},{"nodeType":"YulBlock","src":"2555:118:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2570:16:35","value":{"kind":"number","nodeType":"YulLiteral","src":"2584:2:35","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2574:6:35","type":""}]},{"nodeType":"YulAssignment","src":"2600:63:35","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2635:9:35"},{"name":"offset","nodeType":"YulIdentifier","src":"2646:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2631:3:35"},"nodeType":"YulFunctionCall","src":"2631:22:35"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2655:7:35"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2610:20:35"},"nodeType":"YulFunctionCall","src":"2610:53:35"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2600:6:35"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2251:9:35","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2262:7:35","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2274:6:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2282:6:35","type":""}],"src":"2206:474:35"},{"body":{"nodeType":"YulBlock","src":"2751:53:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2768:3:35"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2791:5:35"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2773:17:35"},"nodeType":"YulFunctionCall","src":"2773:24:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2761:6:35"},"nodeType":"YulFunctionCall","src":"2761:37:35"},"nodeType":"YulExpressionStatement","src":"2761:37:35"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2739:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2746:3:35","type":""}],"src":"2686:118:35"},{"body":{"nodeType":"YulBlock","src":"2908:124:35","statements":[{"nodeType":"YulAssignment","src":"2918:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2930:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"2941:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2926:3:35"},"nodeType":"YulFunctionCall","src":"2926:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2918:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2998:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3011:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"3022:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3007:3:35"},"nodeType":"YulFunctionCall","src":"3007:17:35"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2954:43:35"},"nodeType":"YulFunctionCall","src":"2954:71:35"},"nodeType":"YulExpressionStatement","src":"2954:71:35"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2880:9:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2892:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2903:4:35","type":""}],"src":"2810:222:35"},{"body":{"nodeType":"YulBlock","src":"3096:40:35","statements":[{"nodeType":"YulAssignment","src":"3107:22:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3123:5:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3117:5:35"},"nodeType":"YulFunctionCall","src":"3117:12:35"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3107:6:35"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3079:5:35","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3089:6:35","type":""}],"src":"3038:98:35"},{"body":{"nodeType":"YulBlock","src":"3237:73:35","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3254:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"3259:6:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3247:6:35"},"nodeType":"YulFunctionCall","src":"3247:19:35"},"nodeType":"YulExpressionStatement","src":"3247:19:35"},{"nodeType":"YulAssignment","src":"3275:29:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3294:3:35"},{"kind":"number","nodeType":"YulLiteral","src":"3299:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3290:3:35"},"nodeType":"YulFunctionCall","src":"3290:14:35"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3275:11:35"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3209:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"3214:6:35","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3225:11:35","type":""}],"src":"3142:168:35"},{"body":{"nodeType":"YulBlock","src":"3378:184:35","statements":[{"nodeType":"YulVariableDeclaration","src":"3388:10:35","value":{"kind":"number","nodeType":"YulLiteral","src":"3397:1:35","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3392:1:35","type":""}]},{"body":{"nodeType":"YulBlock","src":"3457:63:35","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3482:3:35"},{"name":"i","nodeType":"YulIdentifier","src":"3487:1:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3478:3:35"},"nodeType":"YulFunctionCall","src":"3478:11:35"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3501:3:35"},{"name":"i","nodeType":"YulIdentifier","src":"3506:1:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3497:3:35"},"nodeType":"YulFunctionCall","src":"3497:11:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3491:5:35"},"nodeType":"YulFunctionCall","src":"3491:18:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3471:6:35"},"nodeType":"YulFunctionCall","src":"3471:39:35"},"nodeType":"YulExpressionStatement","src":"3471:39:35"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3418:1:35"},{"name":"length","nodeType":"YulIdentifier","src":"3421:6:35"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3415:2:35"},"nodeType":"YulFunctionCall","src":"3415:13:35"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3429:19:35","statements":[{"nodeType":"YulAssignment","src":"3431:15:35","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3440:1:35"},{"kind":"number","nodeType":"YulLiteral","src":"3443:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3436:3:35"},"nodeType":"YulFunctionCall","src":"3436:10:35"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3431:1:35"}]}]},"pre":{"nodeType":"YulBlock","src":"3411:3:35","statements":[]},"src":"3407:113:35"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3540:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"3545:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:35"},"nodeType":"YulFunctionCall","src":"3536:16:35"},{"kind":"number","nodeType":"YulLiteral","src":"3554:1:35","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3529:6:35"},"nodeType":"YulFunctionCall","src":"3529:27:35"},"nodeType":"YulExpressionStatement","src":"3529:27:35"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3360:3:35","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3365:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"3370:6:35","type":""}],"src":"3316:246:35"},{"body":{"nodeType":"YulBlock","src":"3616:54:35","statements":[{"nodeType":"YulAssignment","src":"3626:38:35","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3644:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"3651:2:35","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3640:3:35"},"nodeType":"YulFunctionCall","src":"3640:14:35"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3660:2:35","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3656:3:35"},"nodeType":"YulFunctionCall","src":"3656:7:35"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3636:3:35"},"nodeType":"YulFunctionCall","src":"3636:28:35"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3626:6:35"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3599:5:35","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3609:6:35","type":""}],"src":"3568:102:35"},{"body":{"nodeType":"YulBlock","src":"3766:283:35","statements":[{"nodeType":"YulVariableDeclaration","src":"3776:52:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3822:5:35"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3790:31:35"},"nodeType":"YulFunctionCall","src":"3790:38:35"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3780:6:35","type":""}]},{"nodeType":"YulAssignment","src":"3837:77:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3902:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"3907:6:35"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3844:57:35"},"nodeType":"YulFunctionCall","src":"3844:70:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3837:3:35"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3962:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"3969:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3958:3:35"},"nodeType":"YulFunctionCall","src":"3958:16:35"},{"name":"pos","nodeType":"YulIdentifier","src":"3976:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"3981:6:35"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3923:34:35"},"nodeType":"YulFunctionCall","src":"3923:65:35"},"nodeType":"YulExpressionStatement","src":"3923:65:35"},{"nodeType":"YulAssignment","src":"3997:46:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4008:3:35"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4035:6:35"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4013:21:35"},"nodeType":"YulFunctionCall","src":"4013:29:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4004:3:35"},"nodeType":"YulFunctionCall","src":"4004:39:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3997:3:35"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3747:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3754:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3762:3:35","type":""}],"src":"3676:373:35"},{"body":{"nodeType":"YulBlock","src":"4199:275:35","statements":[{"nodeType":"YulAssignment","src":"4209:26:35","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4221:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"4232:2:35","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4217:3:35"},"nodeType":"YulFunctionCall","src":"4217:18:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4209:4:35"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4289:6:35"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4302:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"4313:1:35","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4298:3:35"},"nodeType":"YulFunctionCall","src":"4298:17:35"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4245:43:35"},"nodeType":"YulFunctionCall","src":"4245:71:35"},"nodeType":"YulExpressionStatement","src":"4245:71:35"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4337:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"4348:2:35","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4333:3:35"},"nodeType":"YulFunctionCall","src":"4333:18:35"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4357:4:35"},{"name":"headStart","nodeType":"YulIdentifier","src":"4363:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4353:3:35"},"nodeType":"YulFunctionCall","src":"4353:20:35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4326:6:35"},"nodeType":"YulFunctionCall","src":"4326:48:35"},"nodeType":"YulExpressionStatement","src":"4326:48:35"},{"nodeType":"YulAssignment","src":"4383:84:35","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4453:6:35"},{"name":"tail","nodeType":"YulIdentifier","src":"4462:4:35"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4391:61:35"},"nodeType":"YulFunctionCall","src":"4391:76:35"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4383:4:35"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4163:9:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4175:6:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4183:6:35","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4194:4:35","type":""}],"src":"4055:419:35"},{"body":{"nodeType":"YulBlock","src":"4593:34:35","statements":[{"nodeType":"YulAssignment","src":"4603:18:35","value":{"name":"pos","nodeType":"YulIdentifier","src":"4618:3:35"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4603:11:35"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4565:3:35","type":""},{"name":"length","nodeType":"YulTypedName","src":"4570:6:35","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4581:11:35","type":""}],"src":"4480:147:35"},{"body":{"nodeType":"YulBlock","src":"4741:278:35","statements":[{"nodeType":"YulVariableDeclaration","src":"4751:52:35","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4797:5:35"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4765:31:35"},"nodeType":"YulFunctionCall","src":"4765:38:35"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4755:6:35","type":""}]},{"nodeType":"YulAssignment","src":"4812:95:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4895:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"4900:6:35"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4819:75:35"},"nodeType":"YulFunctionCall","src":"4819:88:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4812:3:35"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4955:5:35"},{"kind":"number","nodeType":"YulLiteral","src":"4962:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4951:3:35"},"nodeType":"YulFunctionCall","src":"4951:16:35"},{"name":"pos","nodeType":"YulIdentifier","src":"4969:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"4974:6:35"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4916:34:35"},"nodeType":"YulFunctionCall","src":"4916:65:35"},"nodeType":"YulExpressionStatement","src":"4916:65:35"},{"nodeType":"YulAssignment","src":"4990:23:35","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5001:3:35"},{"name":"length","nodeType":"YulIdentifier","src":"5006:6:35"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4997:3:35"},"nodeType":"YulFunctionCall","src":"4997:16:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4990:3:35"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4722:5:35","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4729:3:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4737:3:35","type":""}],"src":"4633:386:35"},{"body":{"nodeType":"YulBlock","src":"5205:247:35","statements":[{"nodeType":"YulAssignment","src":"5216:100:35","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5303:6:35"},{"name":"pos","nodeType":"YulIdentifier","src":"5312:3:35"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5223:79:35"},"nodeType":"YulFunctionCall","src":"5223:93:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5216:3:35"}]},{"nodeType":"YulAssignment","src":"5326:100:35","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5413:6:35"},{"name":"pos","nodeType":"YulIdentifier","src":"5422:3:35"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5333:79:35"},"nodeType":"YulFunctionCall","src":"5333:93:35"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5326:3:35"}]},{"nodeType":"YulAssignment","src":"5436:10:35","value":{"name":"pos","nodeType":"YulIdentifier","src":"5443:3:35"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5436:3:35"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5176:3:35","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5182:6:35","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5190:6:35","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5201:3:35","type":""}],"src":"5025:427:35"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_SimpleAccount_$5034_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_address_payable(value)\n    }\n\n    function abi_encode_t_contract$_SimpleAccount_$5034_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_SimpleAccount_$5034_to_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_contract$_SimpleAccount_$5034__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_SimpleAccount_$5034_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n}\n","id":35,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"5043":[{"length":32,"start":351},{"length":32,"start":600},{"length":32,"start":983}]},"linkReferences":{},"object":"60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806311464fbe14620000635780635fbfb9cf14620000855780638cb84e1814620000bb578063e287a47a14620000f1578063eb6b26401462000127575b600080fd5b6200006d6200015d565b6040516200007c919062000606565b60405180910390f35b620000a360048036038101906200009d9190620006a8565b62000181565b604051620000b2919062000606565b60405180910390f35b620000d96004803603810190620000d39190620006a8565b620003a5565b604051620000e8919062000700565b60405180910390f35b6200010f6004803603810190620001099190620006a8565b620004a7565b6040516200011e919062000700565b60405180910390f35b6200014560048036038101906200013f9190620006a8565b620004e9565b60405162000154919062000700565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600080620001908484620003a5565b905080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff163b90506000811115620002525781925050506200039f565b8360001b7f0000000000000000000000000000000000000000000000000000000000000000866040516024016200028a919062000700565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002dd906200056d565b620002ea929190620007b7565b8190604051809103906000f59050801580156200030b573d6000803e3d6000fd5b509250826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b92915050565b60006200049f8260001b60405180602001620003c1906200056d565b6020820181038252601f19601f820116604052507f00000000000000000000000000000000000000000000000000000000000000008660405160240162000409919062000700565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405160200162000461929190620007b7565b604051602081830303815290604052604051602001620004839291906200082d565b604051602081830303815290604052805190602001206200052b565b905092915050565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006200053a83833062000542565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b6106e5806200085683390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620005c6620005c0620005ba846200057b565b6200059b565b6200057b565b9050919050565b6000620005da82620005a5565b9050919050565b6000620005ee82620005cd565b9050919050565b6200060081620005e1565b82525050565b60006020820190506200061d6000830184620005f5565b92915050565b600080fd5b600062000635826200057b565b9050919050565b620006478162000628565b81146200065357600080fd5b50565b60008135905062000667816200063c565b92915050565b6000819050919050565b62000682816200066d565b81146200068e57600080fd5b50565b600081359050620006a28162000677565b92915050565b60008060408385031215620006c257620006c162000623565b5b6000620006d28582860162000656565b9250506020620006e58582860162000691565b9150509250929050565b620006fa8162000628565b82525050565b6000602082019050620007176000830184620006ef565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620007595780820151818401526020810190506200073c565b60008484015250505050565b6000601f19601f8301169050919050565b600062000783826200071d565b6200078f818562000728565b9350620007a181856020860162000739565b620007ac8162000765565b840191505092915050565b6000604082019050620007ce6000830185620006ef565b8181036020830152620007e2818462000776565b90509392505050565b600081905092915050565b600062000803826200071d565b6200080f8185620007eb565b93506200082181856020860162000739565b80840191505092915050565b60006200083b8285620007f6565b9150620008498284620007f6565b9150819050939250505056fe60806040526040516106e53803806106e583398181016040528101906100259190610512565b610035828261003c60201b60201c565b50506105f6565b61004b826100c160201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156100ae576100a8828261019460201b60201c565b506100bd565b6100bc61021e60201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361011d57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610114919061057d565b60405180910390fd5b806101507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61025b60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516101be91906105df565b600060405180830381855af49150503d80600081146101f9576040519150601f19603f3d011682016040523d82523d6000602084013e6101fe565b606091505b509150915061021485838361026560201b60201c565b9250505092915050565b6000341115610259576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826102805761027b826102fa60201b60201c565b6102f2565b600082511480156102a8575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156102ea57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016102e1919061057d565b60405180910390fd5b8190506102f3565b5b9392505050565b60008151111561030d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037e82610353565b9050919050565b61038e81610373565b811461039957600080fd5b50565b6000815190506103ab81610385565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610404826103bb565b810181811067ffffffffffffffff82111715610423576104226103cc565b5b80604052505050565b600061043661033f565b905061044282826103fb565b919050565b600067ffffffffffffffff821115610462576104616103cc565b5b61046b826103bb565b9050602081019050919050565b60005b8381101561049657808201518184015260208101905061047b565b60008484015250505050565b60006104b56104b084610447565b61042c565b9050828152602081018484840111156104d1576104d06103b6565b5b6104dc848285610478565b509392505050565b600082601f8301126104f9576104f86103b1565b5b81516105098482602086016104a2565b91505092915050565b6000806040838503121561052957610528610349565b5b60006105378582860161039c565b925050602083015167ffffffffffffffff8111156105585761055761034e565b5b610564858286016104e4565b9150509250929050565b61057781610373565b82525050565b6000602082019050610592600083018461056e565b92915050565b600081519050919050565b600081905092915050565b60006105b982610598565b6105c381856105a3565b93506105d3818560208601610478565b80840191505092915050565b60006105eb82846105ae565b915081905092915050565b60e1806106046000396000f3fe6080604052600a600c565b005b60186014601a565b6027565b565b60006022604c565b905090565b3660008037600080366000845af43d6000803e80600081146047573d6000f35b3d6000fd5b600060787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60a1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea264697066735822122067da619a0e2ed8891b265d46572c129780831fefc6c4308f0ac16133d3574b1c64736f6c63430008140033a264697066735822122014fbb9e80b5c26918d3450f592ada71880cbf3172e9498399eef6784eb6af43564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x5E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11464FBE EQ PUSH3 0x63 JUMPI DUP1 PUSH4 0x5FBFB9CF EQ PUSH3 0x85 JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH3 0xBB JUMPI DUP1 PUSH4 0xE287A47A EQ PUSH3 0xF1 JUMPI DUP1 PUSH4 0xEB6B2640 EQ PUSH3 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x6D PUSH3 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x7C SWAP2 SWAP1 PUSH3 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x9D SWAP2 SWAP1 PUSH3 0x6A8 JUMP JUMPDEST PUSH3 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xB2 SWAP2 SWAP1 PUSH3 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xD3 SWAP2 SWAP1 PUSH3 0x6A8 JUMP JUMPDEST PUSH3 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xE8 SWAP2 SWAP1 PUSH3 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x109 SWAP2 SWAP1 PUSH3 0x6A8 JUMP JUMPDEST PUSH3 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x11E SWAP2 SWAP1 PUSH3 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x13F SWAP2 SWAP1 PUSH3 0x6A8 JUMP JUMPDEST PUSH3 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x154 SWAP2 SWAP1 PUSH3 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x190 DUP5 DUP5 PUSH3 0x3A5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x252 JUMPI DUP2 SWAP3 POP POP POP PUSH3 0x39F JUMP JUMPDEST DUP4 PUSH1 0x0 SHL PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x28A SWAP2 SWAP1 PUSH3 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xC4D66DE8 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH3 0x2DD SWAP1 PUSH3 0x56D JUMP JUMPDEST PUSH3 0x2EA SWAP3 SWAP2 SWAP1 PUSH3 0x7B7 JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH3 0x30B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 POP DUP3 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49F DUP3 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x3C1 SWAP1 PUSH3 0x56D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x409 SWAP2 SWAP1 PUSH3 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xC4D66DE8 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x461 SWAP3 SWAP2 SWAP1 PUSH3 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x483 SWAP3 SWAP2 SWAP1 PUSH3 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH3 0x52B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x53A DUP4 DUP4 ADDRESS PUSH3 0x542 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 DUP2 KECCAK256 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6E5 DUP1 PUSH3 0x856 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5C6 PUSH3 0x5C0 PUSH3 0x5BA DUP5 PUSH3 0x57B JUMP JUMPDEST PUSH3 0x59B JUMP JUMPDEST PUSH3 0x57B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5DA DUP3 PUSH3 0x5A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EE DUP3 PUSH3 0x5CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x600 DUP2 PUSH3 0x5E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x61D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x635 DUP3 PUSH3 0x57B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x647 DUP2 PUSH3 0x628 JUMP JUMPDEST DUP2 EQ PUSH3 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x667 DUP2 PUSH3 0x63C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x682 DUP2 PUSH3 0x66D JUMP JUMPDEST DUP2 EQ PUSH3 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x6A2 DUP2 PUSH3 0x677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x6C2 JUMPI PUSH3 0x6C1 PUSH3 0x623 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x6D2 DUP6 DUP3 DUP7 ADD PUSH3 0x656 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x6E5 DUP6 DUP3 DUP7 ADD PUSH3 0x691 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x6FA DUP2 PUSH3 0x628 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x717 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x6EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x759 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x73C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x783 DUP3 PUSH3 0x71D JUMP JUMPDEST PUSH3 0x78F DUP2 DUP6 PUSH3 0x728 JUMP JUMPDEST SWAP4 POP PUSH3 0x7A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x739 JUMP JUMPDEST PUSH3 0x7AC DUP2 PUSH3 0x765 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x7CE PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x6EF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x7E2 DUP2 DUP5 PUSH3 0x776 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x803 DUP3 PUSH3 0x71D JUMP JUMPDEST PUSH3 0x80F DUP2 DUP6 PUSH3 0x7EB JUMP JUMPDEST SWAP4 POP PUSH3 0x821 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x739 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x83B DUP3 DUP6 PUSH3 0x7F6 JUMP JUMPDEST SWAP2 POP PUSH3 0x849 DUP3 DUP5 PUSH3 0x7F6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6E5 CODESIZE SUB DUP1 PUSH2 0x6E5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x4B DUP3 PUSH2 0xC1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xAE JUMPI PUSH2 0xA8 DUP3 DUP3 PUSH2 0x194 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xBD JUMP JUMPDEST PUSH2 0xBC PUSH2 0x21E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x11D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x150 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x25B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x214 DUP6 DUP4 DUP4 PUSH2 0x265 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x280 JUMPI PUSH2 0x27B DUP3 PUSH2 0x2FA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2A8 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2EA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2F3 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x30D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x373 JUMP JUMPDEST DUP2 EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3AB DUP2 PUSH2 0x385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x404 DUP3 PUSH2 0x3BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x423 JUMPI PUSH2 0x422 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 PUSH2 0x33F JUMP JUMPDEST SWAP1 POP PUSH2 0x442 DUP3 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST PUSH2 0x46B DUP3 PUSH2 0x3BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x496 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x47B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH2 0x4B0 DUP5 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH2 0x4DC DUP5 DUP3 DUP6 PUSH2 0x478 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x509 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x529 JUMPI PUSH2 0x528 PUSH2 0x349 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x537 DUP6 DUP3 DUP7 ADD PUSH2 0x39C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH2 0x564 DUP6 DUP3 DUP7 ADD PUSH2 0x4E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B9 DUP3 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x5C3 DUP2 DUP6 PUSH2 0x5A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x5D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x478 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EB DUP3 DUP5 PUSH2 0x5AE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE1 DUP1 PUSH2 0x604 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x27 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x4C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x47 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x78 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH1 0xA1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xDA619A0E2ED8891B 0x26 0x5D CHAINID JUMPI 0x2C SLT SWAP8 DUP1 DUP4 0x1F 0xEF 0xC6 0xC4 ADDRESS DUP16 EXP 0xC1 PUSH2 0x33D3 JUMPI 0x4B SHR PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0xFB 0xB9 0xE8 SIGNEXTEND 0x5C 0x26 SWAP2 DUP14 CALLVALUE POP CREATE2 SWAP3 0xAD 0xA7 XOR DUP1 0xCB RETURN OR 0x2E SWAP5 SWAP9 CODECOPY SWAP15 0xEF PUSH8 0x84EB6AF43564736F PUSH13 0x63430008140033000000000000 ","sourceMap":"614:1909:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;651:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1424:586;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2140:378;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;899:66;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;972:63;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;651:52;;;:::o;1424:586::-;1491:17;1521:12;1536:23;1547:5;1554:4;1536:10;:23::i;:::-;1521:38;;1598:4;1570:12;:19;1583:5;1570:19;;;;;;;;;;;;;;;:25;1590:4;1570:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1613:13;1629:4;:16;;;1613:32;;1671:1;1660:8;:12;1656:82;;;1719:4;1689:37;;;;;;1656:82;1808:4;1800:13;;1841:21;1924:5;1882:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1776:170;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:200;;1998:3;1959:15;:22;1975:5;1959:22;;;;;;;;;;;;;;;:28;1982:4;1959:28;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;1510:500;;1424:586;;;;;:::o;2140:378::-;2209:7;2232:274;2263:4;2255:13;;2310:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2391:21;2473:5;2431:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:139;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2280:224;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2270:235;;;;;;2232:22;:274::i;:::-;2225:281;;2140:378;;;;:::o;899:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;972:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2190:165:12:-;2273:7;2299:49;2314:4;2320:12;2342:4;2299:14;:49::i;:::-;2292:56;;2190:165;;;;:::o;2598:1772::-;2699:12;2806:4;2800:11;4025:12;4018:4;4013:3;4009:14;4002:36;4074:4;4067;4062:3;4058:14;4051:28;4104:8;4099:3;4092:21;4197:4;4192:3;4188:14;4308:4;4301:5;4293:20;4351:2;4344:5;4334:20;4326:28;;2775:1589;;2598:1772;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:35:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:134::-;411:9;444:37;475:5;444:37;:::i;:::-;431:50;;353:134;;;:::o;493:164::-;573:9;606:45;645:5;606:45;:::i;:::-;593:58;;493:164;;;:::o;663:191::-;780:67;841:5;780:67;:::i;:::-;775:3;768:80;663:191;;:::o;860:282::-;983:4;1021:2;1010:9;1006:18;998:26;;1034:101;1132:1;1121:9;1117:17;1108:6;1034:101;:::i;:::-;860:282;;;;:::o;1229:117::-;1338:1;1335;1328:12;1475:96;1512:7;1541:24;1559:5;1541:24;:::i;:::-;1530:35;;1475:96;;;:::o;1577:122::-;1650:24;1668:5;1650:24;:::i;:::-;1643:5;1640:35;1630:63;;1689:1;1686;1679:12;1630:63;1577:122;:::o;1705:139::-;1751:5;1789:6;1776:20;1767:29;;1805:33;1832:5;1805:33;:::i;:::-;1705:139;;;;:::o;1850:77::-;1887:7;1916:5;1905:16;;1850:77;;;:::o;1933:122::-;2006:24;2024:5;2006:24;:::i;:::-;1999:5;1996:35;1986:63;;2045:1;2042;2035:12;1986:63;1933:122;:::o;2061:139::-;2107:5;2145:6;2132:20;2123:29;;2161:33;2188:5;2161:33;:::i;:::-;2061:139;;;;:::o;2206:474::-;2274:6;2282;2331:2;2319:9;2310:7;2306:23;2302:32;2299:119;;;2337:79;;:::i;:::-;2299:119;2457:1;2482:53;2527:7;2518:6;2507:9;2503:22;2482:53;:::i;:::-;2472:63;;2428:117;2584:2;2610:53;2655:7;2646:6;2635:9;2631:22;2610:53;:::i;:::-;2600:63;;2555:118;2206:474;;;;;:::o;2686:118::-;2773:24;2791:5;2773:24;:::i;:::-;2768:3;2761:37;2686:118;;:::o;2810:222::-;2903:4;2941:2;2930:9;2926:18;2918:26;;2954:71;3022:1;3011:9;3007:17;2998:6;2954:71;:::i;:::-;2810:222;;;;:::o;3038:98::-;3089:6;3123:5;3117:12;3107:22;;3038:98;;;:::o;3142:168::-;3225:11;3259:6;3254:3;3247:19;3299:4;3294:3;3290:14;3275:29;;3142:168;;;;:::o;3316:246::-;3397:1;3407:113;3421:6;3418:1;3415:13;3407:113;;;3506:1;3501:3;3497:11;3491:18;3487:1;3482:3;3478:11;3471:39;3443:2;3440:1;3436:10;3431:15;;3407:113;;;3554:1;3545:6;3540:3;3536:16;3529:27;3378:184;3316:246;;;:::o;3568:102::-;3609:6;3660:2;3656:7;3651:2;3644:5;3640:14;3636:28;3626:38;;3568:102;;;:::o;3676:373::-;3762:3;3790:38;3822:5;3790:38;:::i;:::-;3844:70;3907:6;3902:3;3844:70;:::i;:::-;3837:77;;3923:65;3981:6;3976:3;3969:4;3962:5;3958:16;3923:65;:::i;:::-;4013:29;4035:6;4013:29;:::i;:::-;4008:3;4004:39;3997:46;;3766:283;3676:373;;;;:::o;4055:419::-;4194:4;4232:2;4221:9;4217:18;4209:26;;4245:71;4313:1;4302:9;4298:17;4289:6;4245:71;:::i;:::-;4363:9;4357:4;4353:20;4348:2;4337:9;4333:18;4326:48;4391:76;4462:4;4453:6;4391:76;:::i;:::-;4383:84;;4055:419;;;;;:::o;4480:147::-;4581:11;4618:3;4603:18;;4480:147;;;;:::o;4633:386::-;4737:3;4765:38;4797:5;4765:38;:::i;:::-;4819:88;4900:6;4895:3;4819:88;:::i;:::-;4812:95;;4916:65;4974:6;4969:3;4962:4;4955:5;4951:16;4916:65;:::i;:::-;5006:6;5001:3;4997:16;4990:23;;4741:278;4633:386;;;;:::o;5025:427::-;5201:3;5223:93;5312:3;5303:6;5223:93;:::i;:::-;5216:100;;5333:93;5422:3;5413:6;5333:93;:::i;:::-;5326:100;;5443:3;5436:10;;5025:427;;;;;:::o"},"methodIdentifiers":{"accountImplementation()":"11464fbe","checkAddress(address,uint256)":"eb6b2640","createAccount(address,uint256)":"5fbfb9cf","createdAccounts(address,uint256)":"e287a47a","getAddress(address,uint256)":"8cb84e18"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract SimpleAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract SimpleAccount\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"createdAccounts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(address,uint256)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(address,uint256)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for SimpleAccount A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/SimpleAccountFactory.sol\":\"SimpleAccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3ffb56bcb175984a10b1167e2eba560876bfe96a435f5d62ffed8b1bb4ebc4c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7db94af56aa20efb57c3f9003eacd884faad04118967d8e35cdffe07790bbdcd\",\"dweb:/ipfs/QmXtAshRWFjcQ1kL7gpC5CiLUZgJ9uzrZyeHp2Sux9ojPF\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x2b9807d194b92f1068d868e9587d27037264a9a067c778486f86ae21c61cbd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22d71f40aa38a20cf466d8647452a6e3f746353474f8c8af40f03aa8cae38420\",\"dweb:/ipfs/QmQ752Hz5av7YDK8pFojzb5qgeXQvfsdkdwkHVzaXoYAZR\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0x1e0a5c9521d8b461ad61da86901083c237e47a0b49f539b755b326fe533cf058\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2550f4aac302b1d50d42c76b276a89f168dca0a1d36360f99d00499408a40e13\",\"dweb:/ipfs/QmQcDvE1RNzaVR3dR2Zn8bjavd9eZrXzjqRZXCrthQ9oLT\"]},\"contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x15cc56a156d2bd4b60217632bfceb744330e39c3360010439a6582bbf5647fab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fa4eb98339236bfc08e8a1fb692323ffd21c1bebad2a75f35656349f0603f4a1\",\"dweb:/ipfs/QmTr4fZQTLbX5St78PweaCys9k8bMA3rqKh1RKKjmxWdgL\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x637bba8366daaa203798099958b89136e024886de248d301187c41d06125c2de\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://98e04e15271bc25ce5f86e459a8a5582e2c6ba117c1438ed54dcf32d170c964e\",\"dweb:/ipfs/QmReJAUhdCqdEudZ211b4GdjyyYK1QkEb6fsf2m3aXFwPE\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x341c6c70a05b8f2c7a093e909377c7c93874c0a36c70c55b765f386f1b0fcc01\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29ef1bdfa8a451ded8bb5910cfe8b416deb75574c305326670b19408bc5b3508\",\"dweb:/ipfs/QmcL4BCqJ75cKUQVv9iGRxToQamvYq8UqmfyrRAbAAXv22\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x96b90446f3d8c8b4e3b62329e2b2f66e4c9c910c4fc38486debeb8b278c7fdcc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4db7cb1465ca5e8bebe36e4a2b24fa51ed006f2d894e21d8c21eaa83cba4ff27\",\"dweb:/ipfs/QmYaePQ4ma9T3t7f8cgnVDAoj23iMJ3wCRffVuzETffgqP\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x311f1601be0a706fddcc2677df86ca1272aa3102c7263d593622bb83e8a82af4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6af68e5ea7e690b59e00a4e987f95712548a8457e60304aab8faa7f12e4055f\",\"dweb:/ipfs/QmVovCBLNXXGrNm8rziLBEhgXYHyCf7MVZUPBq6Vm5q8hJ\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xa1cbf89e31328d695a0e56053c907cd979d028ea8bd70fbc7132ede24664ca4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e5253f9a66773441e5b44ae7683144b6586ac98dcab18adc207b6b2e411ae980\",\"dweb:/ipfs/QmbNhgcXviiW2hTvVP18K8qB76WjgXPzhDorrSe6B2Cpdi\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xaac170aa38a3adde8ad100930d585a725e1217eee4b0828bab88dc387953bd35\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://30f151f98a643b6461b9ca9c63beb515129dbd3209fcd0339e57a8c138e36566\",\"dweb:/ipfs/QmVEa44qj6CB89kRve2Mkv6Bsx73P89wEywxDg4EbmScW6\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x445c4f12e53bc2dea8f7129ce59d543902844deb62b2f6c28da391ecc314454b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dac721ea730759319623eaa98d4d34899880dbd5f14be580e61488b3a3cb1138\",\"dweb:/ipfs/QmUQfGFahQmPHoWWEp9eaW6gF5TJ8sTFUW78TbdbGtcTez\"]},\"contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xc9efbcdadcc029bba294689df03c24abfc5d4d0653bd807f7647cc31edb7ceba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://21f26c6eb3c6c1d32aa969c8d02dfb20221692aaf74119f3df0f4121442b0806\",\"dweb:/ipfs/QmVn1k5CSsGiVBPNFjPfierPRvffC4njDV1BstBsNJFTDn\"]},\"contracts/utils/SimpleAccount.sol\":{\"keccak256\":\"0xb1f82ebf86150a68a6d30d72fc4d5ce176d336ce761786282c46cc51b3992817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2e256cb9d3eb6e79417a41696eeb9f1d4338349a01bdadf4893c08f190b753f7\",\"dweb:/ipfs/QmYdaTv8ueQnKJN9zirModkhZajGSHiNboV5JmSMfFzJfP\"]},\"contracts/utils/SimpleAccountFactory.sol\":{\"keccak256\":\"0x37461b4dd69ab38ab4996e0c21fc70c9bb251c43f8285cc84658775b72a91b3d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4c13c21f4e69456cd149047cd689d71576bf267a0577464f4408036dffc88ff\",\"dweb:/ipfs/QmNsUZDwzYWY9tPpWSxR6ty3CFwyJpunJ7KXLPZE8vbNAh\"]}},\"version\":1}"}}}}}